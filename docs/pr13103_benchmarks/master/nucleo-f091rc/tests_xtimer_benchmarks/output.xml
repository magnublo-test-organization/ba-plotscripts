<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 10:56:34.765" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:35.322" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:35.331" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:36.430" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:35.321" endtime="20201030 10:56:36.431"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.433" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:36.432" endtime="20201030 10:56:36.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.320" endtime="20201030 10:56:36.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:36.436" endtime="20201030 10:56:36.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.435" endtime="20201030 10:56:36.620"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.633" endtime="20201030 10:56:36.649"></status>
</kw>
<msg timestamp="20201030 10:56:36.650" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD',...</msg>
<status status="PASS" starttime="20201030 10:56:36.631" endtime="20201030 10:56:36.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.652" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD',...</msg>
<status status="PASS" starttime="20201030 10:56:36.651" endtime="20201030 10:56:36.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.655" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:36.653" endtime="20201030 10:56:36.656"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:36.629" endtime="20201030 10:56:36.656"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:36.626" endtime="20201030 10:56:36.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.625" endtime="20201030 10:56:36.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:36.661" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:36.660" endtime="20201030 10:56:36.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.658" endtime="20201030 10:56:36.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.624" endtime="20201030 10:56:36.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.624" endtime="20201030 10:56:36.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.663" endtime="20201030 10:56:36.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.622" endtime="20201030 10:56:36.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.666" endtime="20201030 10:56:36.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.621" endtime="20201030 10:56:36.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:35.317" endtime="20201030 10:56:36.669"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:36.675" endtime="20201030 10:56:36.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.674" endtime="20201030 10:56:36.695"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.708" endtime="20201030 10:56:36.725"></status>
</kw>
<msg timestamp="20201030 10:56:36.725" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:36.707" endtime="20201030 10:56:36.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.728" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:36.726" endtime="20201030 10:56:36.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.731" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:36.729" endtime="20201030 10:56:36.731"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:36.704" endtime="20201030 10:56:36.732"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:36.702" endtime="20201030 10:56:36.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.700" endtime="20201030 10:56:36.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:36.736" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:36.736" endtime="20201030 10:56:36.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.733" endtime="20201030 10:56:36.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.699" endtime="20201030 10:56:36.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.699" endtime="20201030 10:56:36.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.738" endtime="20201030 10:56:36.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.698" endtime="20201030 10:56:36.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.696" endtime="20201030 10:56:36.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.672" endtime="20201030 10:56:36.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.749" endtime="20201030 10:56:36.759"></status>
</kw>
<msg timestamp="20201030 10:56:36.760" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:36.747" endtime="20201030 10:56:36.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.762" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:36.761" endtime="20201030 10:56:36.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:36.763" endtime="20201030 10:56:36.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.744" endtime="20201030 10:56:36.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.742" endtime="20201030 10:56:36.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.770" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 10:56:36.769" endtime="20201030 10:56:36.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.772" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 10:56:36.771" endtime="20201030 10:56:36.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.767" endtime="20201030 10:56:36.773"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:36.669" endtime="20201030 10:56:36.774" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:56:34.875" endtime="20201030 10:56:36.778"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:36.831" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:36.840" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:37.960" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:36.830" endtime="20201030 10:56:37.960"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:37.963" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:37.961" endtime="20201030 10:56:37.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.829" endtime="20201030 10:56:37.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:37.966" endtime="20201030 10:56:38.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:37.965" endtime="20201030 10:56:38.189"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.201" endtime="20201030 10:56:38.217"></status>
</kw>
<msg timestamp="20201030 10:56:38.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD'...</msg>
<status status="PASS" starttime="20201030 10:56:38.199" endtime="20201030 10:56:38.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD'...</msg>
<status status="PASS" starttime="20201030 10:56:38.218" endtime="20201030 10:56:38.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.223" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:38.221" endtime="20201030 10:56:38.223"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:38.197" endtime="20201030 10:56:38.224"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:38.195" endtime="20201030 10:56:38.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.194" endtime="20201030 10:56:38.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:38.228" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:38.228" endtime="20201030 10:56:38.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.225" endtime="20201030 10:56:38.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.193" endtime="20201030 10:56:38.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.192" endtime="20201030 10:56:38.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.230" endtime="20201030 10:56:38.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.191" endtime="20201030 10:56:38.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.233" endtime="20201030 10:56:38.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.190" endtime="20201030 10:56:38.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:36.827" endtime="20201030 10:56:38.235"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:38.242" endtime="20201030 10:56:38.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.239" endtime="20201030 10:56:38.262"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.275" endtime="20201030 10:56:38.292"></status>
</kw>
<msg timestamp="20201030 10:56:38.292" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:38.273" endtime="20201030 10:56:38.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.295" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:38.293" endtime="20201030 10:56:38.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.298" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:38.296" endtime="20201030 10:56:38.298"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:38.270" endtime="20201030 10:56:38.299"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:38.268" endtime="20201030 10:56:38.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.267" endtime="20201030 10:56:38.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:38.303" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:38.303" endtime="20201030 10:56:38.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.301" endtime="20201030 10:56:38.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.266" endtime="20201030 10:56:38.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.265" endtime="20201030 10:56:38.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.305" endtime="20201030 10:56:38.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.264" endtime="20201030 10:56:38.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.263" endtime="20201030 10:56:38.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.238" endtime="20201030 10:56:38.308"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.317" endtime="20201030 10:56:38.328"></status>
</kw>
<msg timestamp="20201030 10:56:38.329" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:38.315" endtime="20201030 10:56:38.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.331" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:38.330" endtime="20201030 10:56:38.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.332" endtime="20201030 10:56:38.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.313" endtime="20201030 10:56:38.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.311" endtime="20201030 10:56:38.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.341" endtime="20201030 10:56:38.644"></status>
</kw>
<msg timestamp="20201030 10:56:38.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065945972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065946458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:38.340" endtime="20201030 10:56:38.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065945972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065946458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:38.649" endtime="20201030 10:56:38.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.657" endtime="20201030 10:56:38.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.337" endtime="20201030 10:56:38.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.335" endtime="20201030 10:56:38.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:38.663" level="INFO">${RESULT} = [{'diff': 4.859999999939912e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.86000000007869e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 10:56:38.660" endtime="20201030 10:56:38.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:38.668" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.73000...</msg>
<status status="PASS" starttime="20201030 10:56:38.665" endtime="20201030 10:56:38.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.672" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:38.671" endtime="20201030 10:56:38.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.675" level="INFO">VALUE: [4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 10:56:38.673" endtime="20201030 10:56:38.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.669" endtime="20201030 10:56:38.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.310" endtime="20201030 10:56:38.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.309" endtime="20201030 10:56:38.677"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.685" endtime="20201030 10:56:38.695"></status>
</kw>
<msg timestamp="20201030 10:56:38.696" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:38.683" endtime="20201030 10:56:38.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:38.698" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:38.697" endtime="20201030 10:56:38.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.699" endtime="20201030 10:56:38.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.681" endtime="20201030 10:56:38.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.679" endtime="20201030 10:56:38.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:38.708" endtime="20201030 10:56:39.013"></status>
</kw>
<msg timestamp="20201030 10:56:39.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066646306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066646778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:38.707" endtime="20201030 10:56:39.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066646306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066646778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:39.018" endtime="20201030 10:56:39.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.027" endtime="20201030 10:56:39.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.704" endtime="20201030 10:56:39.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.702" endtime="20201030 10:56:39.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:39.034" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, ...</msg>
<status status="PASS" starttime="20201030 10:56:39.031" endtime="20201030 10:56:39.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:39.040" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.730...</msg>
<status status="PASS" starttime="20201030 10:56:39.036" endtime="20201030 10:56:39.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.044" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:39.043" endtime="20201030 10:56:39.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.047" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.859999999662357e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999662357e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:39.045" endtime="20201030 10:56:39.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.041" endtime="20201030 10:56:39.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.678" endtime="20201030 10:56:39.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.677" endtime="20201030 10:56:39.048"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.056" endtime="20201030 10:56:39.066"></status>
</kw>
<msg timestamp="20201030 10:56:39.067" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.054" endtime="20201030 10:56:39.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.069" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.068" endtime="20201030 10:56:39.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.070" endtime="20201030 10:56:39.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.052" endtime="20201030 10:56:39.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.050" endtime="20201030 10:56:39.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.079" endtime="20201030 10:56:39.380"></status>
</kw>
<msg timestamp="20201030 10:56:39.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.423557958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.423558444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:39.078" endtime="20201030 10:56:39.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.423557958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.423558444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:39.385" endtime="20201030 10:56:39.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.395" endtime="20201030 10:56:39.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.075" endtime="20201030 10:56:39.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.073" endtime="20201030 10:56:39.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:39.402" level="INFO">${RESULT} = [{'diff': 4.859999999662357e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:56:39.398" endtime="20201030 10:56:39.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:39.407" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999662357e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4....</msg>
<status status="PASS" starttime="20201030 10:56:39.403" endtime="20201030 10:56:39.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.411" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:39.410" endtime="20201030 10:56:39.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.413" level="INFO">VALUE: [4.859999999662357e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.869999999934649e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:39.412" endtime="20201030 10:56:39.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.408" endtime="20201030 10:56:39.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.049" endtime="20201030 10:56:39.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.049" endtime="20201030 10:56:39.415"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.424" endtime="20201030 10:56:39.434"></status>
</kw>
<msg timestamp="20201030 10:56:39.435" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.421" endtime="20201030 10:56:39.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.437" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.436" endtime="20201030 10:56:39.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.438" endtime="20201030 10:56:39.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.419" endtime="20201030 10:56:39.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.417" endtime="20201030 10:56:39.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.447" endtime="20201030 10:56:39.751"></status>
</kw>
<msg timestamp="20201030 10:56:39.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.783865486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.783865972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:39.446" endtime="20201030 10:56:39.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.783865486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.783865972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:39.756" endtime="20201030 10:56:39.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.766" endtime="20201030 10:56:39.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.443" endtime="20201030 10:56:39.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.441" endtime="20201030 10:56:39.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:39.773" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201030 10:56:39.769" endtime="20201030 10:56:39.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:39.778" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:56:39.774" endtime="20201030 10:56:39.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.783" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:39.781" endtime="20201030 10:56:39.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.785" level="INFO">VALUE: [4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:39.784" endtime="20201030 10:56:39.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.779" endtime="20201030 10:56:39.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.416" endtime="20201030 10:56:39.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.415" endtime="20201030 10:56:39.787"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.794" endtime="20201030 10:56:39.805"></status>
</kw>
<msg timestamp="20201030 10:56:39.805" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.793" endtime="20201030 10:56:39.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:39.807" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:39.806" endtime="20201030 10:56:39.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.809" endtime="20201030 10:56:39.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.790" endtime="20201030 10:56:39.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.789" endtime="20201030 10:56:39.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:39.817" endtime="20201030 10:56:40.123"></status>
</kw>
<msg timestamp="20201030 10:56:40.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142434514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142434986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:39.816" endtime="20201030 10:56:40.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142434514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142434986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:40.128" endtime="20201030 10:56:40.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.137" endtime="20201030 10:56:40.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.813" endtime="20201030 10:56:40.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.812" endtime="20201030 10:56:40.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:40.145" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.860000000217468e-07}, ...</msg>
<status status="PASS" starttime="20201030 10:56:40.141" endtime="20201030 10:56:40.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:40.150" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.86...</msg>
<status status="PASS" starttime="20201030 10:56:40.146" endtime="20201030 10:56:40.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.155" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:40.154" endtime="20201030 10:56:40.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.157" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:40.156" endtime="20201030 10:56:40.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.151" endtime="20201030 10:56:40.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.787" endtime="20201030 10:56:40.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:39.787" endtime="20201030 10:56:40.159"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.167" endtime="20201030 10:56:40.177"></status>
</kw>
<msg timestamp="20201030 10:56:40.178" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:40.165" endtime="20201030 10:56:40.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.180" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:40.179" endtime="20201030 10:56:40.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.182" endtime="20201030 10:56:40.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.162" endtime="20201030 10:56:40.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.161" endtime="20201030 10:56:40.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.190" endtime="20201030 10:56:40.482"></status>
</kw>
<msg timestamp="20201030 10:56:40.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.502127875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.502128361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:40.189" endtime="20201030 10:56:40.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.502127875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.502128361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:40.487" endtime="20201030 10:56:40.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.496" endtime="20201030 10:56:40.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.186" endtime="20201030 10:56:40.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.185" endtime="20201030 10:56:40.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:40.504" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}...</msg>
<status status="PASS" starttime="20201030 10:56:40.500" endtime="20201030 10:56:40.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:40.508" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201030 10:56:40.505" endtime="20201030 10:56:40.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.512" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:40.511" endtime="20201030 10:56:40.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.515" level="INFO">VALUE: [4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:56:40.514" endtime="20201030 10:56:40.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.509" endtime="20201030 10:56:40.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.159" endtime="20201030 10:56:40.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.159" endtime="20201030 10:56:40.516"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.525" endtime="20201030 10:56:40.536"></status>
</kw>
<msg timestamp="20201030 10:56:40.536" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:40.523" endtime="20201030 10:56:40.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.539" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:40.537" endtime="20201030 10:56:40.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.540" endtime="20201030 10:56:40.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.520" endtime="20201030 10:56:40.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.518" endtime="20201030 10:56:40.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.548" endtime="20201030 10:56:40.850"></status>
</kw>
<msg timestamp="20201030 10:56:40.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.864817972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.864818458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:40.547" endtime="20201030 10:56:40.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.864817972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.864818458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:40.855" endtime="20201030 10:56:40.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.865" endtime="20201030 10:56:40.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.544" endtime="20201030 10:56:40.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.543" endtime="20201030 10:56:40.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:40.872" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201030 10:56:40.869" endtime="20201030 10:56:40.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:40.878" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 10:56:40.873" endtime="20201030 10:56:40.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.882" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:40.881" endtime="20201030 10:56:40.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.884" level="INFO">VALUE: [4.860000000217468e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07]</msg>
<status status="PASS" starttime="20201030 10:56:40.883" endtime="20201030 10:56:40.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.878" endtime="20201030 10:56:40.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.517" endtime="20201030 10:56:40.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.517" endtime="20201030 10:56:40.886"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.893" endtime="20201030 10:56:40.904"></status>
</kw>
<msg timestamp="20201030 10:56:40.904" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:40.892" endtime="20201030 10:56:40.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:40.907" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:40.905" endtime="20201030 10:56:40.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.908" endtime="20201030 10:56:40.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.889" endtime="20201030 10:56:40.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.888" endtime="20201030 10:56:40.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:40.917" endtime="20201030 10:56:41.215"></status>
</kw>
<msg timestamp="20201030 10:56:41.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.211039819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.211040292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:40.915" endtime="20201030 10:56:41.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.211039819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.211040292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:41.219" endtime="20201030 10:56:41.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.229" endtime="20201030 10:56:41.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.913" endtime="20201030 10:56:41.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.911" endtime="20201030 10:56:41.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:41.236" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 10:56:41.233" endtime="20201030 10:56:41.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:41.242" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.71999...</msg>
<status status="PASS" starttime="20201030 10:56:41.237" endtime="20201030 10:56:41.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.246" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:41.245" endtime="20201030 10:56:41.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.249" level="INFO">VALUE: [4.73000000056345e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07]</msg>
<status status="PASS" starttime="20201030 10:56:41.247" endtime="20201030 10:56:41.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.243" endtime="20201030 10:56:41.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.886" endtime="20201030 10:56:41.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:40.886" endtime="20201030 10:56:41.250"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.258" endtime="20201030 10:56:41.268"></status>
</kw>
<msg timestamp="20201030 10:56:41.268" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:41.256" endtime="20201030 10:56:41.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.271" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:41.269" endtime="20201030 10:56:41.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.272" endtime="20201030 10:56:41.273"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.254" endtime="20201030 10:56:41.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.252" endtime="20201030 10:56:41.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.282" endtime="20201030 10:56:41.596"></status>
</kw>
<msg timestamp="20201030 10:56:41.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.569662111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.569662583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:41.280" endtime="20201030 10:56:41.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.569662111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.569662583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:41.601" endtime="20201030 10:56:41.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.611" endtime="20201030 10:56:41.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.277" endtime="20201030 10:56:41.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.275" endtime="20201030 10:56:41.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:41.618" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 10:56:41.614" endtime="20201030 10:56:41.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:41.622" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4...</msg>
<status status="PASS" starttime="20201030 10:56:41.619" endtime="20201030 10:56:41.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.626" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:41.625" endtime="20201030 10:56:41.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.629" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999996122558e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:56:41.628" endtime="20201030 10:56:41.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.623" endtime="20201030 10:56:41.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.251" endtime="20201030 10:56:41.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.250" endtime="20201030 10:56:41.631"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.639" endtime="20201030 10:56:41.649"></status>
</kw>
<msg timestamp="20201030 10:56:41.650" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:41.637" endtime="20201030 10:56:41.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.652" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:41.651" endtime="20201030 10:56:41.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.653" endtime="20201030 10:56:41.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.635" endtime="20201030 10:56:41.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.633" endtime="20201030 10:56:41.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.662" endtime="20201030 10:56:41.973"></status>
</kw>
<msg timestamp="20201030 10:56:41.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.924180306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.924180778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:41.661" endtime="20201030 10:56:41.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:41.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.924180306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.924180778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:41.978" endtime="20201030 10:56:41.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:41.996" endtime="20201030 10:56:41.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.658" endtime="20201030 10:56:41.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.656" endtime="20201030 10:56:41.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:42.003" level="INFO">${RESULT} = [{'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 10:56:42.000" endtime="20201030 10:56:42.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:42.009" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201030 10:56:42.004" endtime="20201030 10:56:42.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.013" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:42.012" endtime="20201030 10:56:42.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.015" level="INFO">VALUE: [4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:42.014" endtime="20201030 10:56:42.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.009" endtime="20201030 10:56:42.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.632" endtime="20201030 10:56:42.017"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:41.631" endtime="20201030 10:56:42.017"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.024" endtime="20201030 10:56:42.035"></status>
</kw>
<msg timestamp="20201030 10:56:42.036" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.023" endtime="20201030 10:56:42.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.038" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.037" endtime="20201030 10:56:42.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.039" endtime="20201030 10:56:42.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.020" endtime="20201030 10:56:42.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.019" endtime="20201030 10:56:42.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.048" endtime="20201030 10:56:42.363"></status>
</kw>
<msg timestamp="20201030 10:56:42.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.293270931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.293271403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:42.046" endtime="20201030 10:56:42.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.293270931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.293271403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:42.369" endtime="20201030 10:56:42.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.378" endtime="20201030 10:56:42.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.044" endtime="20201030 10:56:42.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.042" endtime="20201030 10:56:42.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:42.385" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201030 10:56:42.382" endtime="20201030 10:56:42.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:42.390" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, ...</msg>
<status status="PASS" starttime="20201030 10:56:42.386" endtime="20201030 10:56:42.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.394" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:42.393" endtime="20201030 10:56:42.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.397" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:42.395" endtime="20201030 10:56:42.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.391" endtime="20201030 10:56:42.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.018" endtime="20201030 10:56:42.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.017" endtime="20201030 10:56:42.398"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.407" endtime="20201030 10:56:42.417"></status>
</kw>
<msg timestamp="20201030 10:56:42.418" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.404" endtime="20201030 10:56:42.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.420" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.419" endtime="20201030 10:56:42.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.421" endtime="20201030 10:56:42.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.402" endtime="20201030 10:56:42.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.400" endtime="20201030 10:56:42.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.430" endtime="20201030 10:56:42.740"></status>
</kw>
<msg timestamp="20201030 10:56:42.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.667979431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.667979917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:42.429" endtime="20201030 10:56:42.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.667979431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.667979917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:42.745" endtime="20201030 10:56:42.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.755" endtime="20201030 10:56:42.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.426" endtime="20201030 10:56:42.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.424" endtime="20201030 10:56:42.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:42.762" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201030 10:56:42.758" endtime="20201030 10:56:42.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:42.767" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.719...</msg>
<status status="PASS" starttime="20201030 10:56:42.763" endtime="20201030 10:56:42.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.771" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:42.770" endtime="20201030 10:56:42.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.774" level="INFO">VALUE: [4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:42.772" endtime="20201030 10:56:42.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.768" endtime="20201030 10:56:42.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.399" endtime="20201030 10:56:42.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.398" endtime="20201030 10:56:42.775"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.783" endtime="20201030 10:56:42.793"></status>
</kw>
<msg timestamp="20201030 10:56:42.794" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.781" endtime="20201030 10:56:42.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:42.796" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:42.795" endtime="20201030 10:56:42.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.797" endtime="20201030 10:56:42.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.779" endtime="20201030 10:56:42.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.777" endtime="20201030 10:56:42.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:42.806" endtime="20201030 10:56:43.123"></status>
</kw>
<msg timestamp="20201030 10:56:43.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.039471319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.039471806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:42.805" endtime="20201030 10:56:43.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.039471319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.039471806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:43.128" endtime="20201030 10:56:43.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.138" endtime="20201030 10:56:43.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.802" endtime="20201030 10:56:43.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.800" endtime="20201030 10:56:43.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:43.145" level="INFO">${RESULT} = [{'diff': 4.870000003265318e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:56:43.142" endtime="20201030 10:56:43.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:43.151" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 10:56:43.146" endtime="20201030 10:56:43.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.155" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:43.154" endtime="20201030 10:56:43.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.157" level="INFO">VALUE: [4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:43.156" endtime="20201030 10:56:43.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.152" endtime="20201030 10:56:43.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.776" endtime="20201030 10:56:43.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:42.776" endtime="20201030 10:56:43.159"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.167" endtime="20201030 10:56:43.178"></status>
</kw>
<msg timestamp="20201030 10:56:43.178" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.165" endtime="20201030 10:56:43.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.181" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.179" endtime="20201030 10:56:43.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.182" endtime="20201030 10:56:43.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.163" endtime="20201030 10:56:43.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.161" endtime="20201030 10:56:43.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.190" endtime="20201030 10:56:43.511"></status>
</kw>
<msg timestamp="20201030 10:56:43.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.404881069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.404881542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:43.189" endtime="20201030 10:56:43.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.404881069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.404881542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:43.516" endtime="20201030 10:56:43.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.526" endtime="20201030 10:56:43.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.186" endtime="20201030 10:56:43.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.185" endtime="20201030 10:56:43.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:43.533" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201030 10:56:43.529" endtime="20201030 10:56:43.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:43.538" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:56:43.534" endtime="20201030 10:56:43.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.542" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:43.541" endtime="20201030 10:56:43.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.544" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:43.543" endtime="20201030 10:56:43.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.538" endtime="20201030 10:56:43.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.160" endtime="20201030 10:56:43.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.159" endtime="20201030 10:56:43.546"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.556" endtime="20201030 10:56:43.566"></status>
</kw>
<msg timestamp="20201030 10:56:43.567" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.554" endtime="20201030 10:56:43.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.569" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.568" endtime="20201030 10:56:43.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.570" endtime="20201030 10:56:43.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.549" endtime="20201030 10:56:43.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.548" endtime="20201030 10:56:43.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.580" endtime="20201030 10:56:43.890"></status>
</kw>
<msg timestamp="20201030 10:56:43.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.776551903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.776552375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:43.578" endtime="20201030 10:56:43.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.776551903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.776552375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:43.895" endtime="20201030 10:56:43.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.905" endtime="20201030 10:56:43.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.575" endtime="20201030 10:56:43.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.573" endtime="20201030 10:56:43.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:43.912" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, ...</msg>
<status status="PASS" starttime="20201030 10:56:43.908" endtime="20201030 10:56:43.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:43.917" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 10:56:43.913" endtime="20201030 10:56:43.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.922" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:43.921" endtime="20201030 10:56:43.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.924" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:43.923" endtime="20201030 10:56:43.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.918" endtime="20201030 10:56:43.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.547" endtime="20201030 10:56:43.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.546" endtime="20201030 10:56:43.926"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.933" endtime="20201030 10:56:43.944"></status>
</kw>
<msg timestamp="20201030 10:56:43.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.932" endtime="20201030 10:56:43.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:43.946" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:43.945" endtime="20201030 10:56:43.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.947" endtime="20201030 10:56:43.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.929" endtime="20201030 10:56:43.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.928" endtime="20201030 10:56:43.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:43.957" endtime="20201030 10:56:44.275"></status>
</kw>
<msg timestamp="20201030 10:56:44.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.156031403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.156031889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:43.955" endtime="20201030 10:56:44.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.156031403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.156031889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:44.280" endtime="20201030 10:56:44.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.290" endtime="20201030 10:56:44.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.952" endtime="20201030 10:56:44.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.951" endtime="20201030 10:56:44.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:44.297" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:56:44.294" endtime="20201030 10:56:44.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:44.303" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4...</msg>
<status status="PASS" starttime="20201030 10:56:44.298" endtime="20201030 10:56:44.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.307" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:44.306" endtime="20201030 10:56:44.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.309" level="INFO">VALUE: [4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:44.308" endtime="20201030 10:56:44.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.303" endtime="20201030 10:56:44.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.927" endtime="20201030 10:56:44.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:43.926" endtime="20201030 10:56:44.311"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.318" endtime="20201030 10:56:44.330"></status>
</kw>
<msg timestamp="20201030 10:56:44.330" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.317" endtime="20201030 10:56:44.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.333" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.331" endtime="20201030 10:56:44.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.334" endtime="20201030 10:56:44.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.314" endtime="20201030 10:56:44.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.313" endtime="20201030 10:56:44.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.343" endtime="20201030 10:56:44.655"></status>
</kw>
<msg timestamp="20201030 10:56:44.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.524399472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.524399958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:44.342" endtime="20201030 10:56:44.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.524399472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.524399958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:44.660" endtime="20201030 10:56:44.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.670" endtime="20201030 10:56:44.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.339" endtime="20201030 10:56:44.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.337" endtime="20201030 10:56:44.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:44.677" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}...</msg>
<status status="PASS" starttime="20201030 10:56:44.673" endtime="20201030 10:56:44.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:44.681" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201030 10:56:44.678" endtime="20201030 10:56:44.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.685" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:44.684" endtime="20201030 10:56:44.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.688" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:44.687" endtime="20201030 10:56:44.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.682" endtime="20201030 10:56:44.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.311" endtime="20201030 10:56:44.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.311" endtime="20201030 10:56:44.689"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.698" endtime="20201030 10:56:44.708"></status>
</kw>
<msg timestamp="20201030 10:56:44.708" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.696" endtime="20201030 10:56:44.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:44.711" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:44.709" endtime="20201030 10:56:44.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.712" endtime="20201030 10:56:44.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.693" endtime="20201030 10:56:44.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.691" endtime="20201030 10:56:44.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:44.721" endtime="20201030 10:56:45.037"></status>
</kw>
<msg timestamp="20201030 10:56:45.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.898479097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.898479569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:44.719" endtime="20201030 10:56:45.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.898479097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.898479569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:45.042" endtime="20201030 10:56:45.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.052" endtime="20201030 10:56:45.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.717" endtime="20201030 10:56:45.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.715" endtime="20201030 10:56:45.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:45.059" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999991681666e-07}...</msg>
<status status="PASS" starttime="20201030 10:56:45.055" endtime="20201030 10:56:45.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:45.064" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201030 10:56:45.060" endtime="20201030 10:56:45.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.068" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:45.067" endtime="20201030 10:56:45.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.071" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:45.069" endtime="20201030 10:56:45.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.065" endtime="20201030 10:56:45.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.690" endtime="20201030 10:56:45.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:44.690" endtime="20201030 10:56:45.072"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.080" endtime="20201030 10:56:45.090"></status>
</kw>
<msg timestamp="20201030 10:56:45.091" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:45.078" endtime="20201030 10:56:45.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.093" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:45.092" endtime="20201030 10:56:45.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.094" endtime="20201030 10:56:45.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.076" endtime="20201030 10:56:45.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.074" endtime="20201030 10:56:45.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.104" endtime="20201030 10:56:45.428"></status>
</kw>
<msg timestamp="20201030 10:56:45.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.268775347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.268775819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:45.102" endtime="20201030 10:56:45.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.268775347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.268775819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:45.433" endtime="20201030 10:56:45.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.443" endtime="20201030 10:56:45.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.100" endtime="20201030 10:56:45.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.098" endtime="20201030 10:56:45.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:45.450" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:56:45.446" endtime="20201030 10:56:45.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:45.455" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201030 10:56:45.451" endtime="20201030 10:56:45.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.459" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:45.458" endtime="20201030 10:56:45.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.462" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.729999991681666e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:45.461" endtime="20201030 10:56:45.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.456" endtime="20201030 10:56:45.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.073" endtime="20201030 10:56:45.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.073" endtime="20201030 10:56:45.464"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.471" endtime="20201030 10:56:45.482"></status>
</kw>
<msg timestamp="20201030 10:56:45.483" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:45.470" endtime="20201030 10:56:45.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.485" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:45.484" endtime="20201030 10:56:45.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.486" endtime="20201030 10:56:45.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.467" endtime="20201030 10:56:45.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.466" endtime="20201030 10:56:45.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.496" endtime="20201030 10:56:45.805"></status>
</kw>
<msg timestamp="20201030 10:56:45.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.640826736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.640827222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:45.494" endtime="20201030 10:56:45.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.640826736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.640827222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:45.810" endtime="20201030 10:56:45.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.820" endtime="20201030 10:56:45.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.491" endtime="20201030 10:56:45.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.490" endtime="20201030 10:56:45.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:45.827" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201030 10:56:45.823" endtime="20201030 10:56:45.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:45.831" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.730...</msg>
<status status="PASS" starttime="20201030 10:56:45.828" endtime="20201030 10:56:45.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.836" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:45.835" endtime="20201030 10:56:45.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.838" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:45.837" endtime="20201030 10:56:45.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.832" endtime="20201030 10:56:45.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.464" endtime="20201030 10:56:45.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.464" endtime="20201030 10:56:45.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:38.308" endtime="20201030 10:56:45.840"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:38.235" endtime="20201030 10:56:45.842" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:45.853" endtime="20201030 10:56:45.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.850" endtime="20201030 10:56:45.873"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.886" endtime="20201030 10:56:45.902"></status>
</kw>
<msg timestamp="20201030 10:56:45.902" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:45.885" endtime="20201030 10:56:45.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.905" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:45.903" endtime="20201030 10:56:45.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.908" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:45.906" endtime="20201030 10:56:45.908"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:45.882" endtime="20201030 10:56:45.909"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:45.880" endtime="20201030 10:56:45.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.878" endtime="20201030 10:56:45.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:45.913" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:45.913" endtime="20201030 10:56:45.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.910" endtime="20201030 10:56:45.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.877" endtime="20201030 10:56:45.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.877" endtime="20201030 10:56:45.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.915" endtime="20201030 10:56:45.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.875" endtime="20201030 10:56:45.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.873" endtime="20201030 10:56:45.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.849" endtime="20201030 10:56:45.918"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.927" endtime="20201030 10:56:45.940"></status>
</kw>
<msg timestamp="20201030 10:56:45.941" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:45.926" endtime="20201030 10:56:45.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:45.943" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:45.942" endtime="20201030 10:56:45.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.944" endtime="20201030 10:56:45.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.923" endtime="20201030 10:56:45.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.921" endtime="20201030 10:56:45.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:45.953" endtime="20201030 10:56:46.236"></status>
</kw>
<msg timestamp="20201030 10:56:46.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066325403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066327778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:45.952" endtime="20201030 10:56:46.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066325403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066327778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:46.240" endtime="20201030 10:56:46.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.249" endtime="20201030 10:56:46.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.949" endtime="20201030 10:56:46.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.948" endtime="20201030 10:56:46.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:46.255" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.360999999992397e-06}, {'diff': 2.360999999992397e-06}, {'diff': 2.360999999992397e-06}, {'diff': 2.3749999999989058e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:46.252" endtime="20201030 10:56:46.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:46.260" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.360999999992397e-06, 2.360999999992397e-06, 2.3749999999989058e-06, 2.3479999999992396e-06, 2.277999999994451e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 10:56:46.256" endtime="20201030 10:56:46.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.264" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:46.263" endtime="20201030 10:56:46.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.267" level="INFO">VALUE: [2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.360999999992397e-06, 2.360999999992397e-06, 2.3749999999989058e-06, 2.3479999999992396e-06, 2.277999999994451e-06, 2.3610000000062747e-06, 2.3479999999992396e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.332999999993257e-06, 2.3889999999915368e-06, 2.346999999999766e-06, 2.3890000000054146e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3479999999992396e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3890000000054146e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.3619999999918706e-06, 2.360999999992397e-06, 2.332999999993257e-06, 2.3749999999989058e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.3340000000066086e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.332999999993257e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.4029999999980456e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.3620000000057484e-06, 2.387999999992063e-06, 2.346999999999766e-06]</msg>
<status status="PASS" starttime="20201030 10:56:46.265" endtime="20201030 10:56:46.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.260" endtime="20201030 10:56:46.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.920" endtime="20201030 10:56:46.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.919" endtime="20201030 10:56:46.270"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.278" endtime="20201030 10:56:46.290"></status>
</kw>
<msg timestamp="20201030 10:56:46.291" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:46.277" endtime="20201030 10:56:46.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.293" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:46.292" endtime="20201030 10:56:46.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.294" endtime="20201030 10:56:46.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.274" endtime="20201030 10:56:46.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.272" endtime="20201030 10:56:46.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.303" endtime="20201030 10:56:46.610"></status>
</kw>
<msg timestamp="20201030 10:56:46.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066747347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:56:46.301" endtime="20201030 10:56:46.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066747347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:56:46.615" endtime="20201030 10:56:46.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.625" endtime="20201030 10:56:46.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.299" endtime="20201030 10:56:46.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.297" endtime="20201030 10:56:46.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:46.632" level="INFO">${RESULT} = [{'diff': 2.346999999999766e-06}, {'diff': 2.3340000000066086e-06}, {'diff': 2.3610000000062747e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.332999999993257e-06}...</msg>
<status status="PASS" starttime="20201030 10:56:46.629" endtime="20201030 10:56:46.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:46.637" level="INFO">${OVERHEAD} = {'diff': [2.346999999999766e-06, 2.3340000000066086e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.332999999993257e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2....</msg>
<status status="PASS" starttime="20201030 10:56:46.633" endtime="20201030 10:56:46.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.642" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:46.641" endtime="20201030 10:56:46.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.644" level="INFO">VALUE: [2.346999999999766e-06, 2.3340000000066086e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.332999999993257e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.4029999999980456e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.3620000000057484e-06, 2.387999999992063e-06, 2.346999999999766e-06, 2.3610000000062747e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3200000000000998e-06, 2.3749999999989058e-06, 2.3200000000000998e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3889999999915368e-06, 2.3610000000062747e-06, 2.347999999985362e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3470000000136437e-06, 2.347999999985362e-06, 2.3470000000136437e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3200000000000998e-06, 2.3339999999927308e-06, 2.3330000000210127e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3889999999915368e-06, 2.3469999999581326e-06, 2.361999999977993e-06, 2.3339999999927308e-06, 2.3610000000062747e-06, 2.348000000040873e-06, 2.2769999999949775e-06, 2.3469999999581326e-06, 2.3610000000062747e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3050000000357507e-06, 2.347999999985362e-06, 2.3610000000062747e-06, 2.348000000040873e-06, 2.3749999999989058e-06, 2.347999999985362e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3470000000136437e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3330000000210127e-06, 2.402999999984168e-06, 2.3470000000136437e-06]</msg>
<status status="PASS" starttime="20201030 10:56:46.643" endtime="20201030 10:56:46.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.638" endtime="20201030 10:56:46.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.271" endtime="20201030 10:56:46.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.270" endtime="20201030 10:56:46.646"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.653" endtime="20201030 10:56:46.665"></status>
</kw>
<msg timestamp="20201030 10:56:46.666" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:46.652" endtime="20201030 10:56:46.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.668" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:46.667" endtime="20201030 10:56:46.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.669" endtime="20201030 10:56:46.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.649" endtime="20201030 10:56:46.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.648" endtime="20201030 10:56:46.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.678" endtime="20201030 10:56:46.975"></status>
</kw>
<msg timestamp="20201030 10:56:46.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.405881389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.405883694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:46.677" endtime="20201030 10:56:46.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:46.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.405881389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.405883694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:46.980" endtime="20201030 10:56:46.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:46.999" endtime="20201030 10:56:47.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.674" endtime="20201030 10:56:47.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.672" endtime="20201030 10:56:47.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:47.006" level="INFO">${RESULT} = [{'diff': 2.3050000000357507e-06}, {'diff': 2.347999999985362e-06}, {'diff': 2.3610000000062747e-06}, {'diff': 2.348000000040873e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.347999999985362e-06}...</msg>
<status status="PASS" starttime="20201030 10:56:47.002" endtime="20201030 10:56:47.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:47.010" level="INFO">${OVERHEAD} = {'diff': [2.3050000000357507e-06, 2.347999999985362e-06, 2.3610000000062747e-06, 2.348000000040873e-06, 2.3749999999989058e-06, 2.347999999985362e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2...</msg>
<status status="PASS" starttime="20201030 10:56:47.007" endtime="20201030 10:56:47.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.015" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:47.014" endtime="20201030 10:56:47.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.017" level="INFO">VALUE: [2.3050000000357507e-06, 2.347999999985362e-06, 2.3610000000062747e-06, 2.348000000040873e-06, 2.3749999999989058e-06, 2.347999999985362e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3470000000136437e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3330000000210127e-06, 2.402999999984168e-06, 2.3470000000136437e-06, 2.3469999999026214e-06, 2.361000000061786e-06, 2.361000000061786e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.305000000091262e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.2779999999666956e-06, 2.361000000061786e-06, 2.3470000000136437e-06, 2.3470000000136437e-06, 2.361000000061786e-06, 2.3619999999224817e-06, 2.361000000061786e-06, 2.3470000000136437e-06, 2.3609999999507636e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.362000000033504e-06, 2.3189999999173594e-06, 2.3609999999507636e-06, 2.3470000000136437e-06, 2.3470000000136437e-06, 2.3609999999507636e-06, 2.333000000076524e-06, 2.3749999999989058e-06, 2.3470000000136437e-06, 2.333000000076524e-06, 2.361000000061786e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3470000000136437e-06, 2.361000000061786e-06, 2.361000000061786e-06, 2.3470000000136437e-06, 2.3470000000136437e-06, 2.3470000000136437e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.361000000061786e-06, 2.3609999999507636e-06, 2.361000000061786e-06, 2.3749999999989058e-06, 2.348000000096384e-06, 2.402999999984168e-06, 2.347999999985362e-06, 2.3749999999989058e-06]</msg>
<status status="PASS" starttime="20201030 10:56:47.016" endtime="20201030 10:56:47.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.011" endtime="20201030 10:56:47.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.646" endtime="20201030 10:56:47.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:46.646" endtime="20201030 10:56:47.019"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.027" endtime="20201030 10:56:47.039"></status>
</kw>
<msg timestamp="20201030 10:56:47.040" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:47.025" endtime="20201030 10:56:47.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.042" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:47.041" endtime="20201030 10:56:47.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.043" endtime="20201030 10:56:47.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.022" endtime="20201030 10:56:47.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.021" endtime="20201030 10:56:47.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.052" endtime="20201030 10:56:47.356"></status>
</kw>
<msg timestamp="20201030 10:56:47.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.770432111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.770434472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:47.050" endtime="20201030 10:56:47.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.770432111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.770434472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:47.361" endtime="20201030 10:56:47.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.371" endtime="20201030 10:56:47.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.048" endtime="20201030 10:56:47.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.046" endtime="20201030 10:56:47.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:47.378" level="INFO">${RESULT} = [{'diff': 2.361000000061786e-06}, {'diff': 2.3470000000136437e-06}, {'diff': 2.3470000000136437e-06}, {'diff': 2.3470000000136437e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.347999999985362e-06...</msg>
<status status="PASS" starttime="20201030 10:56:47.375" endtime="20201030 10:56:47.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:47.384" level="INFO">${OVERHEAD} = {'diff': [2.361000000061786e-06, 2.3470000000136437e-06, 2.3470000000136437e-06, 2.3470000000136437e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.361000000061786e-06, 2.3609999999507636e-06, 2...</msg>
<status status="PASS" starttime="20201030 10:56:47.379" endtime="20201030 10:56:47.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.388" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:47.387" endtime="20201030 10:56:47.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.390" level="INFO">VALUE: [2.361000000061786e-06, 2.3470000000136437e-06, 2.3470000000136437e-06, 2.3470000000136437e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.361000000061786e-06, 2.3609999999507636e-06, 2.361000000061786e-06, 2.3749999999989058e-06, 2.348000000096384e-06, 2.402999999984168e-06, 2.347999999985362e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.3329999998544793e-06, 2.347000000124666e-06, 2.362000000033504e-06, 2.3329999998544793e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.3469999999026214e-06, 2.347999999985362e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.361000000172808e-06, 2.333000000076524e-06, 2.3339999999372196e-06, 2.347000000124666e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.30600000006298e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.4310000001914744e-06, 2.3879999999643076e-06, 2.3469999999026214e-06, 2.3469999999026214e-06, 2.3879999999643076e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.362000000033504e-06, 2.333000000076524e-06, 2.361000000172808e-06, 2.2920000000148377e-06, 2.347999999985362e-06, 2.389000000047048e-06, 2.3469999999026214e-06, 2.3199999998890775e-06, 2.3879999999643076e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.347999999985362e-06, 2.3609999999507636e-06, 2.30600000006298e-06]</msg>
<status status="PASS" starttime="20201030 10:56:47.389" endtime="20201030 10:56:47.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.384" endtime="20201030 10:56:47.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.019" endtime="20201030 10:56:47.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.019" endtime="20201030 10:56:47.392"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.399" endtime="20201030 10:56:47.411"></status>
</kw>
<msg timestamp="20201030 10:56:47.412" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:47.398" endtime="20201030 10:56:47.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.414" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:47.413" endtime="20201030 10:56:47.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.415" endtime="20201030 10:56:47.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.395" endtime="20201030 10:56:47.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.394" endtime="20201030 10:56:47.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.424" endtime="20201030 10:56:47.729"></status>
</kw>
<msg timestamp="20201030 10:56:47.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.133349694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.133352056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:47.423" endtime="20201030 10:56:47.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.133349694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.133352056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:47.735" endtime="20201030 10:56:47.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.744" endtime="20201030 10:56:47.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.420" endtime="20201030 10:56:47.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.418" endtime="20201030 10:56:47.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:47.751" level="INFO">${RESULT} = [{'diff': 2.362000000033504e-06}, {'diff': 2.333000000076524e-06}, {'diff': 2.361000000172808e-06}, {'diff': 2.2920000000148377e-06}, {'diff': 2.347999999985362e-06}, {'diff': 2.389000000047048e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:56:47.748" endtime="20201030 10:56:47.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:47.757" level="INFO">${OVERHEAD} = {'diff': [2.362000000033504e-06, 2.333000000076524e-06, 2.361000000172808e-06, 2.2920000000148377e-06, 2.347999999985362e-06, 2.389000000047048e-06, 2.3469999999026214e-06, 2.3199999998890775e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 10:56:47.752" endtime="20201030 10:56:47.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.761" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:47.760" endtime="20201030 10:56:47.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.764" level="INFO">VALUE: [2.362000000033504e-06, 2.333000000076524e-06, 2.361000000172808e-06, 2.2920000000148377e-06, 2.347999999985362e-06, 2.389000000047048e-06, 2.3469999999026214e-06, 2.3199999998890775e-06, 2.3879999999643076e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.347999999985362e-06, 2.3609999999507636e-06, 2.30600000006298e-06, 2.347999999985362e-06, 2.3749999999989058e-06, 2.3339999999372196e-06, 2.3339999999372196e-06, 2.347999999985362e-06, 2.3340000001592642e-06, 2.361000000172808e-06, 2.347999999985362e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3190000000283817e-06, 2.3329999998544793e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.3049999999802395e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3469999999026214e-06, 2.3199999998890775e-06, 2.347999999985362e-06, 2.333000000076524e-06, 2.4170000001433323e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.347999999985362e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.333000000076524e-06, 2.3469999999026214e-06, 2.3339999999372196e-06, 2.3340000001592642e-06, 2.3749999999989058e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.3340000001592642e-06, 2.3329999998544793e-06, 2.333000000076524e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.3469999999026214e-06, 2.30600000006298e-06, 2.362000000033504e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.361000000172808e-06, 2.347000000124666e-06, 2.347000000124666e-06]</msg>
<status status="PASS" starttime="20201030 10:56:47.762" endtime="20201030 10:56:47.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.758" endtime="20201030 10:56:47.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.392" endtime="20201030 10:56:47.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.392" endtime="20201030 10:56:47.765"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.773" endtime="20201030 10:56:47.784"></status>
</kw>
<msg timestamp="20201030 10:56:47.784" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:47.771" endtime="20201030 10:56:47.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:47.787" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:47.785" endtime="20201030 10:56:47.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.788" endtime="20201030 10:56:47.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.769" endtime="20201030 10:56:47.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.767" endtime="20201030 10:56:47.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:47.797" endtime="20201030 10:56:48.102"></status>
</kw>
<msg timestamp="20201030 10:56:48.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.496537208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.496539542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:47.795" endtime="20201030 10:56:48.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.496537208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.496539542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:48.107" endtime="20201030 10:56:48.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.117" endtime="20201030 10:56:48.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.793" endtime="20201030 10:56:48.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.791" endtime="20201030 10:56:48.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:48.124" level="INFO">${RESULT} = [{'diff': 2.3340000001592642e-06}, {'diff': 2.3329999998544793e-06}, {'diff': 2.333000000076524e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.347999999985362e-06}, {'diff': 2.3469999999026214e-06...</msg>
<status status="PASS" starttime="20201030 10:56:48.120" endtime="20201030 10:56:48.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:48.129" level="INFO">${OVERHEAD} = {'diff': [2.3340000001592642e-06, 2.3329999998544793e-06, 2.333000000076524e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.3469999999026214e-06, 2.30600000006298e-06, 2.362000000033504e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 10:56:48.125" endtime="20201030 10:56:48.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.133" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:48.132" endtime="20201030 10:56:48.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.135" level="INFO">VALUE: [2.3340000001592642e-06, 2.3329999998544793e-06, 2.333000000076524e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.3469999999026214e-06, 2.30600000006298e-06, 2.362000000033504e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.361000000172808e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.3469999999026214e-06, 2.320000000111122e-06, 2.3469999999026214e-06, 2.347000000124666e-06, 2.3749999999989058e-06, 2.347000000124666e-06, 2.3339999999372196e-06, 2.3480000002074064e-06, 2.3329999998544793e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.347999999985362e-06, 2.347999999985362e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.333000000076524e-06, 2.3879999999643076e-06, 2.416000000060592e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3059999998409353e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3340000001592642e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.361000000172808e-06, 2.3340000001592642e-06, 2.3469999999026214e-06, 2.361000000172808e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3190000000283817e-06, 2.40300000009519e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.361000000172808e-06, 2.3469999999026214e-06, 2.4299999998866895e-06, 2.361000000172808e-06, 2.3469999999026214e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201030 10:56:48.134" endtime="20201030 10:56:48.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.129" endtime="20201030 10:56:48.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.766" endtime="20201030 10:56:48.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:47.765" endtime="20201030 10:56:48.137"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.145" endtime="20201030 10:56:48.157"></status>
</kw>
<msg timestamp="20201030 10:56:48.158" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:48.144" endtime="20201030 10:56:48.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.160" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:48.159" endtime="20201030 10:56:48.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.161" endtime="20201030 10:56:48.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.140" endtime="20201030 10:56:48.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.139" endtime="20201030 10:56:48.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.171" endtime="20201030 10:56:48.475"></status>
</kw>
<msg timestamp="20201030 10:56:48.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.859786417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.859788792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:48.169" endtime="20201030 10:56:48.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.859786417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.859788792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:48.480" endtime="20201030 10:56:48.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.489" endtime="20201030 10:56:48.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.166" endtime="20201030 10:56:48.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.164" endtime="20201030 10:56:48.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:48.496" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3190000000283817e-06}, {'diff': 2.40300000009519e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3469999999026214e-06}, {'diff': 2.4029999998731455e-06...</msg>
<status status="PASS" starttime="20201030 10:56:48.493" endtime="20201030 10:56:48.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:48.501" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3190000000283817e-06, 2.40300000009519e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, ...</msg>
<status status="PASS" starttime="20201030 10:56:48.497" endtime="20201030 10:56:48.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.506" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:48.505" endtime="20201030 10:56:48.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.508" level="INFO">VALUE: [2.3749999999989058e-06, 2.3190000000283817e-06, 2.40300000009519e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.361000000172808e-06, 2.3469999999026214e-06, 2.4299999998866895e-06, 2.361000000172808e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.361000000394853e-06, 2.3059999998409353e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.2920000000148377e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.305000000202284e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.374999999776861e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.3480000002074064e-06, 2.347999999763317e-06, 2.4029999998731455e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3480000002074064e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3330000002985685e-06, 2.347000000124666e-06, 2.3339999999372196e-06, 2.4029999998731455e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3339999999372196e-06, 2.347000000124666e-06, 2.3329999998544793e-06]</msg>
<status status="PASS" starttime="20201030 10:56:48.507" endtime="20201030 10:56:48.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.502" endtime="20201030 10:56:48.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.137" endtime="20201030 10:56:48.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.137" endtime="20201030 10:56:48.510"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.517" endtime="20201030 10:56:48.530"></status>
</kw>
<msg timestamp="20201030 10:56:48.530" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:48.516" endtime="20201030 10:56:48.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.532" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:48.531" endtime="20201030 10:56:48.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.534" endtime="20201030 10:56:48.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.513" endtime="20201030 10:56:48.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.512" endtime="20201030 10:56:48.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.543" endtime="20201030 10:56:48.848"></status>
</kw>
<msg timestamp="20201030 10:56:48.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.222186222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.222188569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:48.541" endtime="20201030 10:56:48.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.222186222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.222188569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:48.853" endtime="20201030 10:56:48.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.863" endtime="20201030 10:56:48.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.538" endtime="20201030 10:56:48.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.537" endtime="20201030 10:56:48.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:48.870" level="INFO">${RESULT} = [{'diff': 2.347000000124666e-06}, {'diff': 2.3339999999372196e-06}, {'diff': 2.4029999998731455e-06}, {'diff': 2.3339999999372196e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-0...</msg>
<status status="PASS" starttime="20201030 10:56:48.866" endtime="20201030 10:56:48.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:48.875" level="INFO">${OVERHEAD} = {'diff': [2.347000000124666e-06, 2.3339999999372196e-06, 2.4029999998731455e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, ...</msg>
<status status="PASS" starttime="20201030 10:56:48.871" endtime="20201030 10:56:48.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.879" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:48.878" endtime="20201030 10:56:48.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.882" level="INFO">VALUE: [2.347000000124666e-06, 2.3339999999372196e-06, 2.4029999998731455e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3339999999372196e-06, 2.347000000124666e-06, 2.3329999998544793e-06, 2.3480000002074064e-06, 2.43099999996943e-06, 2.374999999776861e-06, 2.2909999999320974e-06, 2.416000000060592e-06, 2.43099999996943e-06, 2.361000000394853e-06, 2.4299999998866895e-06, 2.3480000002074064e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.320000000111122e-06, 2.374999999776861e-06, 2.3480000002074064e-06, 2.334000000381309e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.2909999999320974e-06, 2.3329999998544793e-06, 2.346999999680577e-06, 2.347999999763317e-06, 2.374999999776861e-06, 2.347999999763317e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.389000000047048e-06, 2.3059999998409353e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.320000000111122e-06, 2.361000000394853e-06, 2.3190000000283817e-06, 2.361000000394853e-06, 2.3480000002074064e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.361000000394853e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.347999999763317e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.362000000033504e-06]</msg>
<status status="PASS" starttime="20201030 10:56:48.880" endtime="20201030 10:56:48.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.876" endtime="20201030 10:56:48.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.510" endtime="20201030 10:56:48.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.510" endtime="20201030 10:56:48.883"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.891" endtime="20201030 10:56:48.903"></status>
</kw>
<msg timestamp="20201030 10:56:48.903" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:48.890" endtime="20201030 10:56:48.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:48.906" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:48.904" endtime="20201030 10:56:48.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.907" endtime="20201030 10:56:48.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.887" endtime="20201030 10:56:48.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.885" endtime="20201030 10:56:48.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:48.917" endtime="20201030 10:56:49.237"></status>
</kw>
<msg timestamp="20201030 10:56:49.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.584447875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.584450194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:48.915" endtime="20201030 10:56:49.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.584447875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.584450194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:49.242" endtime="20201030 10:56:49.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:49.252" endtime="20201030 10:56:49.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.912" endtime="20201030 10:56:49.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.910" endtime="20201030 10:56:49.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:49.259" level="INFO">${RESULT} = [{'diff': 2.3190000000283817e-06}, {'diff': 2.361000000394853e-06}, {'diff': 2.3480000002074064e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.347000000124666e-06}, {'diff': 2.3609999999507636e-06...</msg>
<status status="PASS" starttime="20201030 10:56:49.256" endtime="20201030 10:56:49.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:49.264" level="INFO">${OVERHEAD} = {'diff': [2.3190000000283817e-06, 2.361000000394853e-06, 2.3480000002074064e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.361000000394853e-06, 2.3330000002985685e-06, 2...</msg>
<status status="PASS" starttime="20201030 10:56:49.260" endtime="20201030 10:56:49.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.268" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:49.267" endtime="20201030 10:56:49.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.270" level="INFO">VALUE: [2.3190000000283817e-06, 2.361000000394853e-06, 2.3480000002074064e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.361000000394853e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.347999999763317e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.4029999998731455e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.361000000394853e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.27800000018874e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.305000000202284e-06, 2.3609999999507636e-06, 2.361000000394853e-06, 2.346999999680577e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3059999998409353e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.346999999680577e-06]</msg>
<status status="PASS" starttime="20201030 10:56:49.269" endtime="20201030 10:56:49.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.265" endtime="20201030 10:56:49.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.884" endtime="20201030 10:56:49.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:48.884" endtime="20201030 10:56:49.272"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:49.281" endtime="20201030 10:56:49.292"></status>
</kw>
<msg timestamp="20201030 10:56:49.293" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:49.279" endtime="20201030 10:56:49.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.295" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:49.294" endtime="20201030 10:56:49.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:49.296" endtime="20201030 10:56:49.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.276" endtime="20201030 10:56:49.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.274" endtime="20201030 10:56:49.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:49.306" endtime="20201030 10:56:49.617"></status>
</kw>
<msg timestamp="20201030 10:56:49.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.947197819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.947200181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:49.304" endtime="20201030 10:56:49.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.947197819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.947200181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:49.622" endtime="20201030 10:56:49.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:49.632" endtime="20201030 10:56:49.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.302" endtime="20201030 10:56:49.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.300" endtime="20201030 10:56:49.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:49.638" level="INFO">${RESULT} = [{'diff': 2.362000000033504e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.347000000124666e-06}, {'diff': 2.3059999998409353e-06}...</msg>
<status status="PASS" starttime="20201030 10:56:49.635" endtime="20201030 10:56:49.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:49.644" level="INFO">${OVERHEAD} = {'diff': [2.362000000033504e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3059999998409353e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2...</msg>
<status status="PASS" starttime="20201030 10:56:49.639" endtime="20201030 10:56:49.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.648" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:49.647" endtime="20201030 10:56:49.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.650" level="INFO">VALUE: [2.362000000033504e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3059999998409353e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.361000000394853e-06, 2.3329999998544793e-06, 2.3059999998409353e-06, 2.361000000394853e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3879999999643076e-06, 2.347000000124666e-06, 2.374999999776861e-06, 2.347999999763317e-06, 2.3329999998544793e-06, 2.3750000002209504e-06, 2.3059999998409353e-06, 2.3609999999507636e-06, 2.2909999999320974e-06, 2.347000000124666e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.362000000033504e-06, 2.334000000381309e-06, 2.347999999763317e-06, 2.374999999776861e-06, 2.3059999998409353e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3339999999372196e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.347000000124666e-06, 2.347999999763317e-06, 2.3480000002074064e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.347999999763317e-06]</msg>
<status status="PASS" starttime="20201030 10:56:49.649" endtime="20201030 10:56:49.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.645" endtime="20201030 10:56:49.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.273" endtime="20201030 10:56:49.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.272" endtime="20201030 10:56:49.652"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:49.660" endtime="20201030 10:56:49.672"></status>
</kw>
<msg timestamp="20201030 10:56:49.672" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:49.658" endtime="20201030 10:56:49.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.675" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:49.673" endtime="20201030 10:56:49.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:49.676" endtime="20201030 10:56:49.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.656" endtime="20201030 10:56:49.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.654" endtime="20201030 10:56:49.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:49.685" endtime="20201030 10:56:49.999"></status>
</kw>
<msg timestamp="20201030 10:56:50.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.327745458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.327747792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:49.684" endtime="20201030 10:56:50.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.327745458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.327747792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:50.004" endtime="20201030 10:56:50.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.014" endtime="20201030 10:56:50.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.681" endtime="20201030 10:56:50.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.679" endtime="20201030 10:56:50.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:50.022" level="INFO">${RESULT} = [{'diff': 2.3339999999372196e-06}, {'diff': 2.347000000124666e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.347000000124666e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3329999998544793e-06}...</msg>
<status status="PASS" starttime="20201030 10:56:50.017" endtime="20201030 10:56:50.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:50.026" level="INFO">${OVERHEAD} = {'diff': [2.3339999999372196e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.347000000124666e-06, 2.347999999763317e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 10:56:50.023" endtime="20201030 10:56:50.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.030" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:50.029" endtime="20201030 10:56:50.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.033" level="INFO">VALUE: [2.3339999999372196e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.347000000124666e-06, 2.347999999763317e-06, 2.3480000002074064e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.361000000394853e-06, 2.4030000003172347e-06, 2.347000000124666e-06, 2.347999999763317e-06, 2.347000000124666e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.3480000002074064e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3480000002074064e-06, 2.3619999995894148e-06, 2.3480000002074064e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3879999999643076e-06, 2.374999999776861e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.2909999999320974e-06, 2.347999999763317e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.4029999998731455e-06, 2.362000000033504e-06, 2.3330000002985685e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201030 10:56:50.032" endtime="20201030 10:56:50.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.027" endtime="20201030 10:56:50.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.653" endtime="20201030 10:56:50.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.652" endtime="20201030 10:56:50.035"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.042" endtime="20201030 10:56:50.054"></status>
</kw>
<msg timestamp="20201030 10:56:50.055" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:50.041" endtime="20201030 10:56:50.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:50.056" endtime="20201030 10:56:50.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.059" endtime="20201030 10:56:50.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.038" endtime="20201030 10:56:50.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.036" endtime="20201030 10:56:50.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.070" endtime="20201030 10:56:50.392"></status>
</kw>
<msg timestamp="20201030 10:56:50.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.69871925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.698721597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:50.069" endtime="20201030 10:56:50.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.69871925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.698721597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:50.397" endtime="20201030 10:56:50.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.407" endtime="20201030 10:56:50.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.064" endtime="20201030 10:56:50.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.062" endtime="20201030 10:56:50.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:50.414" level="INFO">${RESULT} = [{'diff': 2.347000000124666e-06}, {'diff': 2.347000000124666e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.362000000033504e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.347999999763317e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:50.410" endtime="20201030 10:56:50.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:50.418" level="INFO">${OVERHEAD} = {'diff': [2.347000000124666e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2....</msg>
<status status="PASS" starttime="20201030 10:56:50.415" endtime="20201030 10:56:50.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.423" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:50.421" endtime="20201030 10:56:50.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.426" level="INFO">VALUE: [2.347000000124666e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.4029999998731455e-06, 2.362000000033504e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.3330000002985685e-06, 2.362000000033504e-06, 2.3330000002985685e-06, 2.347999999763317e-06, 2.4170000001433323e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3889999996029587e-06, 2.3190000000283817e-06, 2.3330000002985685e-06, 2.346999999680577e-06, 2.334000000381309e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3330000002985685e-06, 2.3889999996029587e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.347999999763317e-06, 2.3470000005687552e-06, 2.3889999996029587e-06, 2.3330000002985685e-06, 2.3470000005687552e-06, 2.3330000002985685e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.4159999991724135e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3330000002985685e-06]</msg>
<status status="PASS" starttime="20201030 10:56:50.424" endtime="20201030 10:56:50.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.419" endtime="20201030 10:56:50.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.035" endtime="20201030 10:56:50.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.035" endtime="20201030 10:56:50.427"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.435" endtime="20201030 10:56:50.447"></status>
</kw>
<msg timestamp="20201030 10:56:50.447" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:50.433" endtime="20201030 10:56:50.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.450" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:50.448" endtime="20201030 10:56:50.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.451" endtime="20201030 10:56:50.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.431" endtime="20201030 10:56:50.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.429" endtime="20201030 10:56:50.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.460" endtime="20201030 10:56:50.766"></status>
</kw>
<msg timestamp="20201030 10:56:50.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.070465458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.070467806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:50.459" endtime="20201030 10:56:50.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.070465458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.070467806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:50.770" endtime="20201030 10:56:50.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.780" endtime="20201030 10:56:50.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.456" endtime="20201030 10:56:50.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.454" endtime="20201030 10:56:50.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:50.787" level="INFO">${RESULT} = [{'diff': 2.347999999763317e-06}, {'diff': 2.3470000005687552e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3330000002985685e-06}, {'diff': 2.3470000005687552e-06}, {'diff': 2.3330000002985685e-0...</msg>
<status status="PASS" starttime="20201030 10:56:50.784" endtime="20201030 10:56:50.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:50.792" level="INFO">${OVERHEAD} = {'diff': [2.347999999763317e-06, 2.3470000005687552e-06, 2.3889999996029587e-06, 2.3330000002985685e-06, 2.3470000005687552e-06, 2.3330000002985685e-06, 2.3470000005687552e-06, 2.3750000002209504e-06,...</msg>
<status status="PASS" starttime="20201030 10:56:50.788" endtime="20201030 10:56:50.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.797" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:50.796" endtime="20201030 10:56:50.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.799" level="INFO">VALUE: [2.347999999763317e-06, 2.3470000005687552e-06, 2.3889999996029587e-06, 2.3330000002985685e-06, 2.3470000005687552e-06, 2.3330000002985685e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.4159999991724135e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3330000002985685e-06, 2.3889999996029587e-06, 2.362000000033504e-06, 2.334000000381309e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.334000000381309e-06, 2.3889999996029587e-06, 2.3470000005687552e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.362000000033504e-06, 2.3889999996029587e-06, 2.3330000002985685e-06, 2.346999999680577e-06, 2.320000000111122e-06, 2.374999999332772e-06, 2.304999999758195e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3060000007291137e-06, 2.389000000491137e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3060000007291137e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.389000000491137e-06, 2.346999999680577e-06, 2.362000000033504e-06, 2.346999999680577e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.431000000413519e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.3480000006514956e-06, 2.347999999763317e-06, 2.3330000002985685e-06, 2.362000000033504e-06, 2.346999999680577e-06, 2.362000000033504e-06, 2.346999999680577e-06, 2.389000000491137e-06, 2.2919999995707485e-06, 2.346999999680577e-06]</msg>
<status status="PASS" starttime="20201030 10:56:50.798" endtime="20201030 10:56:50.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.793" endtime="20201030 10:56:50.800"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.428" endtime="20201030 10:56:50.800"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.427" endtime="20201030 10:56:50.801"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.808" endtime="20201030 10:56:50.820"></status>
</kw>
<msg timestamp="20201030 10:56:50.821" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:50.807" endtime="20201030 10:56:50.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.824" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:50.822" endtime="20201030 10:56:50.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.825" endtime="20201030 10:56:50.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.804" endtime="20201030 10:56:50.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.803" endtime="20201030 10:56:50.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.834" endtime="20201030 10:56:51.149"></status>
</kw>
<msg timestamp="20201030 10:56:51.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.453971875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.453974236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:50.832" endtime="20201030 10:56:51.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.453971875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.453974236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:51.154" endtime="20201030 10:56:51.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.164" endtime="20201030 10:56:51.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.830" endtime="20201030 10:56:51.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.828" endtime="20201030 10:56:51.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:51.171" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.33299999941039e-06}, {'diff': 2.3480000006514956e-06}, {'diff': 2.347999999763317e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:51.167" endtime="20201030 10:56:51.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:51.176" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.3480000006514956e-06, 2.347999999763317e-06, 2.3330000002985685e-06, 2.362000000033504e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 10:56:51.172" endtime="20201030 10:56:51.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.180" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:51.179" endtime="20201030 10:56:51.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.182" level="INFO">VALUE: [2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.3480000006514956e-06, 2.347999999763317e-06, 2.3330000002985685e-06, 2.362000000033504e-06, 2.346999999680577e-06, 2.362000000033504e-06, 2.346999999680577e-06, 2.389000000491137e-06, 2.2919999995707485e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.334000000381309e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.361000000838942e-06, 2.3470000005687552e-06, 2.3889999996029587e-06, 2.27800000018874e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.334000000381309e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3880000004083968e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.374999999332772e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3330000002985685e-06, 2.362000000033504e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.4029999998731455e-06, 2.4170000001433323e-06]</msg>
<status status="PASS" starttime="20201030 10:56:51.181" endtime="20201030 10:56:51.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.176" endtime="20201030 10:56:51.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.801" endtime="20201030 10:56:51.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.801" endtime="20201030 10:56:51.184"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.192" endtime="20201030 10:56:51.204"></status>
</kw>
<msg timestamp="20201030 10:56:51.205" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.190" endtime="20201030 10:56:51.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.207" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.206" endtime="20201030 10:56:51.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.208" endtime="20201030 10:56:51.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.187" endtime="20201030 10:56:51.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.186" endtime="20201030 10:56:51.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.217" endtime="20201030 10:56:51.531"></status>
</kw>
<msg timestamp="20201030 10:56:51.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.817412625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.817415, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:56:51.216" endtime="20201030 10:56:51.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.817412625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.817415, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:56:51.536" endtime="20201030 10:56:51.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.546" endtime="20201030 10:56:51.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.213" endtime="20201030 10:56:51.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.211" endtime="20201030 10:56:51.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:51.553" level="INFO">${RESULT} = [{'diff': 2.374999999332772e-06}, {'diff': 2.3330000002985685e-06}, {'diff': 2.362000000033504e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3750000002209504e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:51.549" endtime="20201030 10:56:51.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:51.558" level="INFO">${OVERHEAD} = {'diff': [2.374999999332772e-06, 2.3330000002985685e-06, 2.362000000033504e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 10:56:51.554" endtime="20201030 10:56:51.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.563" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:51.561" endtime="20201030 10:56:51.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.565" level="INFO">VALUE: [2.374999999332772e-06, 2.3330000002985685e-06, 2.362000000033504e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.4029999998731455e-06, 2.4170000001433323e-06, 2.3470000005687552e-06, 2.33299999941039e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.4020000006785835e-06, 2.346999999680577e-06, 2.347999999763317e-06, 2.3750000002209504e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.374999999332772e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.362000000033504e-06, 2.334000000381309e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.389000000491137e-06, 2.3470000005687552e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.346999999680577e-06, 2.3059999998409353e-06, 2.3480000006514956e-06, 2.3330000002985685e-06, 2.4029999998731455e-06, 2.346999999680577e-06, 2.347999999763317e-06, 2.361000000838942e-06, 2.290999999488008e-06, 2.346999999680577e-06, 2.3050000006463733e-06, 2.346999999680577e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201030 10:56:51.564" endtime="20201030 10:56:51.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.559" endtime="20201030 10:56:51.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.185" endtime="20201030 10:56:51.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.184" endtime="20201030 10:56:51.567"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.575" endtime="20201030 10:56:51.586"></status>
</kw>
<msg timestamp="20201030 10:56:51.587" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.573" endtime="20201030 10:56:51.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.589" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.588" endtime="20201030 10:56:51.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.590" endtime="20201030 10:56:51.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.570" endtime="20201030 10:56:51.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.568" endtime="20201030 10:56:51.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.599" endtime="20201030 10:56:51.916"></status>
</kw>
<msg timestamp="20201030 10:56:51.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.191772458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.191774764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:51.598" endtime="20201030 10:56:51.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.191772458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.191774764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:51.921" endtime="20201030 10:56:51.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.931" endtime="20201030 10:56:51.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.595" endtime="20201030 10:56:51.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.593" endtime="20201030 10:56:51.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:51.937" level="INFO">${RESULT} = [{'diff': 2.3059999998409353e-06}, {'diff': 2.3480000006514956e-06}, {'diff': 2.3330000002985685e-06}, {'diff': 2.4029999998731455e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.347999999763317e-06...</msg>
<status status="PASS" starttime="20201030 10:56:51.934" endtime="20201030 10:56:51.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:51.943" level="INFO">${OVERHEAD} = {'diff': [2.3059999998409353e-06, 2.3480000006514956e-06, 2.3330000002985685e-06, 2.4029999998731455e-06, 2.346999999680577e-06, 2.347999999763317e-06, 2.361000000838942e-06, 2.290999999488008e-06, 2....</msg>
<status status="PASS" starttime="20201030 10:56:51.938" endtime="20201030 10:56:51.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.947" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:51.946" endtime="20201030 10:56:51.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.950" level="INFO">VALUE: [2.3059999998409353e-06, 2.3480000006514956e-06, 2.3330000002985685e-06, 2.4029999998731455e-06, 2.346999999680577e-06, 2.347999999763317e-06, 2.361000000838942e-06, 2.290999999488008e-06, 2.346999999680577e-06, 2.3050000006463733e-06, 2.346999999680577e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.2919999995707485e-06, 2.346999999680577e-06, 2.389000000491137e-06, 2.3190000000283817e-06, 2.320000000111122e-06, 2.27800000018874e-06, 2.4170000001433323e-06, 2.346999999680577e-06, 2.3330000002985685e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3330000002985685e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3330000002985685e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.2910000003761866e-06, 2.361000000838942e-06, 2.3609999999507636e-06, 2.361000000838942e-06, 2.347999999763317e-06, 2.3470000005687552e-06, 2.3480000006514956e-06, 2.3750000002209504e-06, 2.3059999998409353e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.292000000458927e-06, 2.347999999763317e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3879999995202184e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3059999998409353e-06, 2.347999999763317e-06, 2.3750000002209504e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.362000000033504e-06]</msg>
<status status="PASS" starttime="20201030 10:56:51.948" endtime="20201030 10:56:51.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.944" endtime="20201030 10:56:51.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.567" endtime="20201030 10:56:51.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.567" endtime="20201030 10:56:51.951"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.959" endtime="20201030 10:56:51.971"></status>
</kw>
<msg timestamp="20201030 10:56:51.972" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.958" endtime="20201030 10:56:51.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.974" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.973" endtime="20201030 10:56:51.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.975" endtime="20201030 10:56:51.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.955" endtime="20201030 10:56:51.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.953" endtime="20201030 10:56:51.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.984" endtime="20201030 10:56:52.303"></status>
</kw>
<msg timestamp="20201030 10:56:52.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.563826153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.563828528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:51.983" endtime="20201030 10:56:52.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.563826153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.563828528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:52.308" endtime="20201030 10:56:52.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.317" endtime="20201030 10:56:52.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.980" endtime="20201030 10:56:52.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.978" endtime="20201030 10:56:52.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:52.324" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3879999995202184e-06}, {'diff': 2.3330000002985685e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3330000002985685e-0...</msg>
<status status="PASS" starttime="20201030 10:56:52.321" endtime="20201030 10:56:52.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:52.329" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.346999999680577e-06, 2.3879999995202184e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3059999998409353e-06, 2.347999999763317e-06, ...</msg>
<status status="PASS" starttime="20201030 10:56:52.325" endtime="20201030 10:56:52.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.333" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:52.332" endtime="20201030 10:56:52.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.336" level="INFO">VALUE: [2.3750000002209504e-06, 2.346999999680577e-06, 2.3879999995202184e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3059999998409353e-06, 2.347999999763317e-06, 2.3750000002209504e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.4170000001433323e-06, 2.334000000381309e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.347999999763317e-06, 2.403000000761324e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.292000000458927e-06, 2.362000000033504e-06, 2.3190000000283817e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.346999999680577e-06, 2.3199999992229436e-06, 2.2639999999185534e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.431000000413519e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3050000006463733e-06, 2.362000000033504e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201030 10:56:52.334" endtime="20201030 10:56:52.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.330" endtime="20201030 10:56:52.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.952" endtime="20201030 10:56:52.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.952" endtime="20201030 10:56:52.337"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.346" endtime="20201030 10:56:52.359"></status>
</kw>
<msg timestamp="20201030 10:56:52.359" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:52.345" endtime="20201030 10:56:52.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.362" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:52.360" endtime="20201030 10:56:52.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.363" endtime="20201030 10:56:52.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.341" endtime="20201030 10:56:52.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.339" endtime="20201030 10:56:52.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.373" endtime="20201030 10:56:52.681"></status>
</kw>
<msg timestamp="20201030 10:56:52.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.938621167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.938623528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:52.371" endtime="20201030 10:56:52.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.938621167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.938623528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:52.685" endtime="20201030 10:56:52.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.695" endtime="20201030 10:56:52.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.369" endtime="20201030 10:56:52.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.367" endtime="20201030 10:56:52.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:52.702" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.389000000491137e-06...</msg>
<status status="PASS" starttime="20201030 10:56:52.698" endtime="20201030 10:56:52.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:52.707" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.431000000413519e-06, 2.3609999999507636e-06, 2...</msg>
<status status="PASS" starttime="20201030 10:56:52.703" endtime="20201030 10:56:52.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.711" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:52.710" endtime="20201030 10:56:52.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.714" level="INFO">VALUE: [2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.431000000413519e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3050000006463733e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3470000005687552e-06, 2.346999999680577e-06, 2.3339999994931304e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.304999999758195e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.362000000033504e-06, 2.3470000005687552e-06, 2.3480000006514956e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.4170000001433323e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.403000000761324e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.389000000491137e-06, 2.347999999763317e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.416999999255154e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3470000005687552e-06]</msg>
<status status="PASS" starttime="20201030 10:56:52.712" endtime="20201030 10:56:52.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.708" endtime="20201030 10:56:52.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.338" endtime="20201030 10:56:52.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.337" endtime="20201030 10:56:52.716"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.724" endtime="20201030 10:56:52.735"></status>
</kw>
<msg timestamp="20201030 10:56:52.735" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:52.722" endtime="20201030 10:56:52.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.737" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:52.736" endtime="20201030 10:56:52.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.739" endtime="20201030 10:56:52.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.720" endtime="20201030 10:56:52.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.718" endtime="20201030 10:56:52.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.748" endtime="20201030 10:56:53.067"></status>
</kw>
<msg timestamp="20201030 10:56:53.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.315477736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.315480097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:52.746" endtime="20201030 10:56:53.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.315477736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.315480097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:53.071" endtime="20201030 10:56:53.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.081" endtime="20201030 10:56:53.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.744" endtime="20201030 10:56:53.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.742" endtime="20201030 10:56:53.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:53.088" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06...</msg>
<status status="PASS" starttime="20201030 10:56:53.085" endtime="20201030 10:56:53.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:53.094" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2...</msg>
<status status="PASS" starttime="20201030 10:56:53.089" endtime="20201030 10:56:53.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.098" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:53.097" endtime="20201030 10:56:53.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.100" level="INFO">VALUE: [2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.416999999255154e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.346999999680577e-06, 2.4029999998731455e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.416000000060592e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3059999998409353e-06, 2.3609999999507636e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.334000000381309e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.2919999995707485e-06, 2.3470000005687552e-06, 2.374999999332772e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.4170000001433323e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3480000006514956e-06, 2.347999999763317e-06, 2.304999999758195e-06, 2.2919999995707485e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.320000000111122e-06, 2.3470000005687552e-06, 2.4309999995253406e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201030 10:56:53.099" endtime="20201030 10:56:53.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.095" endtime="20201030 10:56:53.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.717" endtime="20201030 10:56:53.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.716" endtime="20201030 10:56:53.102"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.110" endtime="20201030 10:56:53.122"></status>
</kw>
<msg timestamp="20201030 10:56:53.122" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.109" endtime="20201030 10:56:53.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.125" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.123" endtime="20201030 10:56:53.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.126" endtime="20201030 10:56:53.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.106" endtime="20201030 10:56:53.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.104" endtime="20201030 10:56:53.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.136" endtime="20201030 10:56:53.447"></status>
</kw>
<msg timestamp="20201030 10:56:53.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.68275325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.682755611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:53.134" endtime="20201030 10:56:53.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.68275325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.682755611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:53.453" endtime="20201030 10:56:53.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.464" endtime="20201030 10:56:53.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.131" endtime="20201030 10:56:53.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.129" endtime="20201030 10:56:53.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:53.471" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.4029999998731455e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3480000006514956e-06}, {'diff': 2.347999999763317e-0...</msg>
<status status="PASS" starttime="20201030 10:56:53.467" endtime="20201030 10:56:53.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:53.476" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3609999999507636e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3480000006514956e-06, 2.347999999763317e-06, 2.304999999758195e-06, 2.2919999995707485e-06, ...</msg>
<status status="PASS" starttime="20201030 10:56:53.472" endtime="20201030 10:56:53.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.480" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:56:53.479" endtime="20201030 10:56:53.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.486" level="INFO">VALUE: [2.3609999999507636e-06, 2.3609999999507636e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3480000006514956e-06, 2.347999999763317e-06, 2.304999999758195e-06, 2.2919999995707485e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.320000000111122e-06, 2.3470000005687552e-06, 2.4309999995253406e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.264000000806732e-06, 2.3470000005687552e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.374999999332772e-06, 2.346999999680577e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.2910000003761866e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.33299999941039e-06, 2.3470000005687552e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3060000007291137e-06, 2.33299999941039e-06, 2.3339999994931304e-06, 2.3609999999507636e-06, 2.3339999994931304e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.304999999758195e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.2919999995707485e-06, 2.3470000005687552e-06, 2.347999999763317e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201030 10:56:53.481" endtime="20201030 10:56:53.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.477" endtime="20201030 10:56:53.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.103" endtime="20201030 10:56:53.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.103" endtime="20201030 10:56:53.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:45.918" endtime="20201030 10:56:53.488"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:45.846" endtime="20201030 10:56:53.488" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:53.496" endtime="20201030 10:56:53.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.495" endtime="20201030 10:56:53.516"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.529" endtime="20201030 10:56:53.545"></status>
</kw>
<msg timestamp="20201030 10:56:53.545" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.527" endtime="20201030 10:56:53.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.548" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.546" endtime="20201030 10:56:53.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.551" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:53.549" endtime="20201030 10:56:53.551"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:53.525" endtime="20201030 10:56:53.552"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:53.522" endtime="20201030 10:56:53.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.521" endtime="20201030 10:56:53.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:53.557" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:53.556" endtime="20201030 10:56:53.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.554" endtime="20201030 10:56:53.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.520" endtime="20201030 10:56:53.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.520" endtime="20201030 10:56:53.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.558" endtime="20201030 10:56:53.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.518" endtime="20201030 10:56:53.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.517" endtime="20201030 10:56:53.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.493" endtime="20201030 10:56:53.561"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.571" endtime="20201030 10:56:53.590"></status>
</kw>
<msg timestamp="20201030 10:56:53.591" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.570" endtime="20201030 10:56:53.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.594" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.592" endtime="20201030 10:56:53.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.595" endtime="20201030 10:56:53.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.566" endtime="20201030 10:56:53.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.564" endtime="20201030 10:56:53.598"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.600" endtime="20201030 10:56:53.601"></status>
</kw>
<msg timestamp="20201030 10:56:53.602" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:53.598" endtime="20201030 10:56:53.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.606" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:53.605" endtime="20201030 10:56:53.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.608" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:53.607" endtime="20201030 10:56:53.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.603" endtime="20201030 10:56:53.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.613" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:53.611" endtime="20201030 10:56:53.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.615" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:53.614" endtime="20201030 10:56:53.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.609" endtime="20201030 10:56:53.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.622" endtime="20201030 10:56:53.908"></status>
</kw>
<msg timestamp="20201030 10:56:53.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067987472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067995056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:53.620" endtime="20201030 10:56:53.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067987472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067995056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:53.912" endtime="20201030 10:56:53.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.920" endtime="20201030 10:56:53.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.618" endtime="20201030 10:56:53.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.616" endtime="20201030 10:56:53.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:53.927" level="INFO">${RESULT} = [{'diff': 7.58400000000492e-06}, {'diff': 7.568999999998938e-06}, {'diff': 7.624999999997217e-06}, {'diff': 7.639000000003726e-06}, {'diff': 7.652999999996357e-06}, {'diff': 7.5419999999992715e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:56:53.924" endtime="20201030 10:56:53.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:53.932" level="INFO">${OVERHEAD} = {'diff': [7.58400000000492e-06, 7.568999999998938e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.652999999996357e-06, 7.5419999999992715e-06, 7.624999999997217e-06, 7.568999999998938e-06, 7.5689...</msg>
<status status="PASS" starttime="20201030 10:56:53.928" endtime="20201030 10:56:53.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.936" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 10:56:53.935" endtime="20201030 10:56:53.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.939" level="INFO">VALUE: [7.58400000000492e-06, 7.568999999998938e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.652999999996357e-06, 7.5419999999992715e-06, 7.624999999997217e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.639000000003726e-06, 7.624999999997217e-06, 7.597000000011955e-06, 7.5559999999919025e-06, 7.61200000000406e-06, 7.639000000003726e-06, 7.611999999990182e-06, 7.625000000011095e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.611000000004586e-06, 7.639000000003726e-06, 7.638999999989848e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.624999999997217e-06, 7.5969999999980775e-06, 7.5969999999980775e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.624999999997217e-06, 7.568999999998938e-06, 7.639000000003726e-06, 7.639000000003726e-06, 7.5969999999980775e-06, 7.6109999999907085e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.639000000003726e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.639000000003726e-06, 7.653000000010235e-06, 7.624999999997217e-06, 7.624999999997217e-06, 7.694000000002532e-06, 7.680999999995497e-06, 7.624999999997217e-06, 7.625000000011095e-06, 7.569999999998411e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201030 10:56:53.937" endtime="20201030 10:56:53.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.933" endtime="20201030 10:56:53.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.562" endtime="20201030 10:56:53.940"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:53.490" endtime="20201030 10:56:53.941" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:53.949" endtime="20201030 10:56:53.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.948" endtime="20201030 10:56:53.969"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.982" endtime="20201030 10:56:53.998"></status>
</kw>
<msg timestamp="20201030 10:56:53.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.980" endtime="20201030 10:56:53.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.001" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.000" endtime="20201030 10:56:54.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.004" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:54.002" endtime="20201030 10:56:54.005"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:53.978" endtime="20201030 10:56:54.005"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:53.975" endtime="20201030 10:56:54.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.974" endtime="20201030 10:56:54.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:54.011" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:54.010" endtime="20201030 10:56:54.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.007" endtime="20201030 10:56:54.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.973" endtime="20201030 10:56:54.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.973" endtime="20201030 10:56:54.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.012" endtime="20201030 10:56:54.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.971" endtime="20201030 10:56:54.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.970" endtime="20201030 10:56:54.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.946" endtime="20201030 10:56:54.015"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.024" endtime="20201030 10:56:54.123"></status>
</kw>
<msg timestamp="20201030 10:56:54.124" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.023" endtime="20201030 10:56:54.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.126" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.125" endtime="20201030 10:56:54.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.127" endtime="20201030 10:56:54.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.020" endtime="20201030 10:56:54.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.018" endtime="20201030 10:56:54.130"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.132" endtime="20201030 10:56:54.134"></status>
</kw>
<msg timestamp="20201030 10:56:54.134" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:54.131" endtime="20201030 10:56:54.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.138" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:54.137" endtime="20201030 10:56:54.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.140" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:54.139" endtime="20201030 10:56:54.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.135" endtime="20201030 10:56:54.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.145" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:54.144" endtime="20201030 10:56:54.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.147" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:54.146" endtime="20201030 10:56:54.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.142" endtime="20201030 10:56:54.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.154" endtime="20201030 10:56:54.447"></status>
</kw>
<msg timestamp="20201030 10:56:54.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069256375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069312889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:54.153" endtime="20201030 10:56:54.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069256375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069312889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:54.451" endtime="20201030 10:56:54.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.459" endtime="20201030 10:56:54.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.150" endtime="20201030 10:56:54.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.149" endtime="20201030 10:56:54.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:54.466" level="INFO">${RESULT} = [{'diff': 5.65140000000075e-05}, {'diff': 5.6569999999991905e-05}, {'diff': 5.658399999999841e-05}, {'diff': 5.654100000000717e-05}, {'diff': 5.659800000000492e-05}, {'diff': 5.656900000000631e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:56:54.462" endtime="20201030 10:56:54.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:54.470" level="INFO">${OVERHEAD} = {'diff': [5.65140000000075e-05, 5.6569999999991905e-05, 5.658399999999841e-05, 5.654100000000717e-05, 5.659800000000492e-05, 5.656900000000631e-05, 5.662499999999071e-05, 5.661199999999755e-05, 5.6582...</msg>
<status status="PASS" starttime="20201030 10:56:54.467" endtime="20201030 10:56:54.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.475" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 10:56:54.474" endtime="20201030 10:56:54.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.477" level="INFO">VALUE: [5.65140000000075e-05, 5.6569999999991905e-05, 5.658399999999841e-05, 5.654100000000717e-05, 5.659800000000492e-05, 5.656900000000631e-05, 5.662499999999071e-05, 5.661199999999755e-05, 5.658299999999894e-05, 5.659700000000545e-05, 5.659699999999157e-05, 5.657000000000578e-05, 5.659800000000492e-05, 5.663899999999722e-05, 5.659699999999157e-05, 5.659699999999157e-05, 5.662499999999071e-05, 5.659700000000545e-05, 5.662500000000459e-05, 5.658299999999894e-05, 5.661100000001196e-05, 5.658299999999894e-05, 5.6555999999999274e-05, 5.661099999999808e-05, 5.658299999999894e-05, 5.659699999999157e-05, 5.658299999999894e-05, 5.6569999999991905e-05, 5.658399999999841e-05, 5.658299999999894e-05, 5.6555999999999274e-05, 5.657000000000578e-05, 5.6597999999991044e-05, 5.661099999999808e-05, 5.65140000000075e-05, 5.65980000000188e-05, 5.656900000000631e-05, 5.658299999999894e-05, 5.6597999999991044e-05, 5.6597000000019326e-05, 5.659699999999157e-05, 5.6597000000019326e-05, 5.656999999997803e-05, 5.65980000000188e-05, 5.663899999999722e-05, 5.658299999999894e-05, 5.658399999999841e-05, 5.659699999999157e-05, 5.658299999999894e-05, 5.662500000000459e-05]</msg>
<status status="PASS" starttime="20201030 10:56:54.476" endtime="20201030 10:56:54.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.471" endtime="20201030 10:56:54.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.016" endtime="20201030 10:56:54.479"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:53.943" endtime="20201030 10:56:54.480" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:54.488" endtime="20201030 10:56:54.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.486" endtime="20201030 10:56:54.507"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.521" endtime="20201030 10:56:54.537"></status>
</kw>
<msg timestamp="20201030 10:56:54.537" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.520" endtime="20201030 10:56:54.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.540" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.538" endtime="20201030 10:56:54.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.543" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:54.541" endtime="20201030 10:56:54.543"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:54.516" endtime="20201030 10:56:54.544"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:54.514" endtime="20201030 10:56:54.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.513" endtime="20201030 10:56:54.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:54.548" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:54.548" endtime="20201030 10:56:54.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.546" endtime="20201030 10:56:54.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.512" endtime="20201030 10:56:54.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.511" endtime="20201030 10:56:54.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.550" endtime="20201030 10:56:54.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.510" endtime="20201030 10:56:54.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.508" endtime="20201030 10:56:54.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.485" endtime="20201030 10:56:54.553"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.562" endtime="20201030 10:56:54.873"></status>
</kw>
<msg timestamp="20201030 10:56:54.874" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.560" endtime="20201030 10:56:54.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.879" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.876" endtime="20201030 10:56:54.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.882" endtime="20201030 10:56:54.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.558" endtime="20201030 10:56:54.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.555" endtime="20201030 10:56:54.887"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.892" endtime="20201030 10:56:54.895"></status>
</kw>
<msg timestamp="20201030 10:56:54.896" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:54.889" endtime="20201030 10:56:54.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.904" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:54.902" endtime="20201030 10:56:54.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.909" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:54.907" endtime="20201030 10:56:54.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.898" endtime="20201030 10:56:54.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.918" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:54.916" endtime="20201030 10:56:54.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.923" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:54.921" endtime="20201030 10:56:54.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.912" endtime="20201030 10:56:54.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.940" endtime="20201030 10:56:55.233"></status>
</kw>
<msg timestamp="20201030 10:56:55.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071715667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071823181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:54.936" endtime="20201030 10:56:55.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071715667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071823181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:55.237" endtime="20201030 10:56:55.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.245" endtime="20201030 10:56:55.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.929" endtime="20201030 10:56:55.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.926" endtime="20201030 10:56:55.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:55.251" level="INFO">${RESULT} = [{'diff': 0.000107514000000003}, {'diff': 0.00010705499999999479}, {'diff': 0.000107028000000009}, {'diff': 0.00010705500000000867}, {'diff': 0.00010704199999998776}, {'diff': 0.00010704200000000164},...</msg>
<status status="PASS" starttime="20201030 10:56:55.248" endtime="20201030 10:56:55.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:55.255" level="INFO">${OVERHEAD} = {'diff': [0.000107514000000003, 0.00010705499999999479, 0.000107028000000009, 0.00010705500000000867, 0.00010704199999998776, 0.00010704200000000164, 0.00010705599999999427, 0.00010709700000000044, 0....</msg>
<status status="PASS" starttime="20201030 10:56:55.252" endtime="20201030 10:56:55.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.259" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 10:56:55.258" endtime="20201030 10:56:55.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.262" level="INFO">VALUE: [0.000107514000000003, 0.00010705499999999479, 0.000107028000000009, 0.00010705500000000867, 0.00010704199999998776, 0.00010704200000000164, 0.00010705599999999427, 0.00010709700000000044, 0.00010699999999999599, 0.00010709699999998656, 0.00010705599999999427, 0.00010708300000000781, 0.00010704200000000164, 0.00010705499999999479, 0.0001070699999999869, 0.00010704200000000164, 0.0001071249999999857, 0.00010701299999998914, 0.00010705599999999427, 0.00010702700000000953, 0.00010706899999998742, 0.00010706899999998742, 0.00010705499999999479, 0.00010704100000000216, 0.000107028000000009, 0.00010708300000000781, 0.00010704200000000164, 0.00010709700000000044, 0.00010708299999998006, 0.00010701400000001637, 0.00010704200000000164, 0.0001070409999999744, 0.00010705599999999427, 0.00010707000000004241, 0.00010698600000003111, 0.00010704100000002992, 0.00010697199999998297, 0.00010705500000002255, 0.00010704200000000164, 0.00010705599999999427, 0.00010705599999999427, 0.00010705500000002255, 0.00010709700000000044, 0.00010700000000002374, 0.0001070699999999869, 0.0001070409999999744, 0.00010701400000001637, 0.00010712500000004122, 0.00010699999999996823, 0.00010705600000004978]</msg>
<status status="PASS" starttime="20201030 10:56:55.261" endtime="20201030 10:56:55.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.256" endtime="20201030 10:56:55.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.554" endtime="20201030 10:56:55.263"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:54.482" endtime="20201030 10:56:55.264" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:55.272" endtime="20201030 10:56:55.291"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.271" endtime="20201030 10:56:55.292"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.306" endtime="20201030 10:56:55.323"></status>
</kw>
<msg timestamp="20201030 10:56:55.323" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.304" endtime="20201030 10:56:55.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.326" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.324" endtime="20201030 10:56:55.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.329" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:55.327" endtime="20201030 10:56:55.329"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:55.302" endtime="20201030 10:56:55.329"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:55.299" endtime="20201030 10:56:55.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.298" endtime="20201030 10:56:55.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:55.334" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:55.333" endtime="20201030 10:56:55.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.331" endtime="20201030 10:56:55.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.297" endtime="20201030 10:56:55.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.297" endtime="20201030 10:56:55.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.336" endtime="20201030 10:56:55.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.295" endtime="20201030 10:56:55.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.293" endtime="20201030 10:56:55.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.269" endtime="20201030 10:56:55.338"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.348" endtime="20201030 10:56:55.368"></status>
</kw>
<msg timestamp="20201030 10:56:55.369" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.346" endtime="20201030 10:56:55.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.371" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.370" endtime="20201030 10:56:55.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.372" endtime="20201030 10:56:55.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.343" endtime="20201030 10:56:55.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.341" endtime="20201030 10:56:55.375"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.377" endtime="20201030 10:56:55.380"></status>
</kw>
<msg timestamp="20201030 10:56:55.381" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:55.376" endtime="20201030 10:56:55.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.385" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:55.384" endtime="20201030 10:56:55.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.387" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:55.386" endtime="20201030 10:56:55.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.381" endtime="20201030 10:56:55.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.391" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:55.390" endtime="20201030 10:56:55.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.394" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:55.393" endtime="20201030 10:56:55.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.388" endtime="20201030 10:56:55.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.401" endtime="20201030 10:56:55.687"></status>
</kw>
<msg timestamp="20201030 10:56:55.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068347194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068349458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:55.399" endtime="20201030 10:56:55.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068347194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068349458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:55.691" endtime="20201030 10:56:55.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.699" endtime="20201030 10:56:55.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.397" endtime="20201030 10:56:55.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.395" endtime="20201030 10:56:55.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:55.706" level="INFO">${RESULT} = [{'diff': 2.26400000000182e-06}, {'diff': 2.278000000008329e-06}, {'diff': 2.2499999999953113e-06}, {'diff': 2.278000000008329e-06}, {'diff': 2.291999999987082e-06}, {'diff': 2.29200000000096e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:56:55.703" endtime="20201030 10:56:55.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:55.710" level="INFO">${OVERHEAD} = {'diff': [2.26400000000182e-06, 2.278000000008329e-06, 2.2499999999953113e-06, 2.278000000008329e-06, 2.291999999987082e-06, 2.29200000000096e-06, 2.277999999994451e-06, 2.291999999987082e-06, 2.30500...</msg>
<status status="PASS" starttime="20201030 10:56:55.707" endtime="20201030 10:56:55.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.715" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 10:56:55.714" endtime="20201030 10:56:55.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.717" level="INFO">VALUE: [2.26400000000182e-06, 2.278000000008329e-06, 2.2499999999953113e-06, 2.278000000008329e-06, 2.291999999987082e-06, 2.29200000000096e-06, 2.277999999994451e-06, 2.291999999987082e-06, 2.305000000007995e-06, 2.305000000007995e-06, 2.3200000000000998e-06, 2.2630000000023465e-06, 2.3060000000074687e-06, 2.29200000000096e-06, 2.278000000008329e-06, 2.278000000008329e-06, 2.2360000000026803e-06, 2.291999999987082e-06, 2.2770000000088553e-06, 2.3060000000074687e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.278000000008329e-06, 2.278000000008329e-06, 2.2910000000014863e-06, 2.2910000000014863e-06, 2.26400000000182e-06, 2.29200000000096e-06, 2.2499999999953113e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.277999999994451e-06, 2.3060000000074687e-06, 2.29200000000096e-06, 2.332999999993257e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.291999999987082e-06, 2.3049999999941173e-06, 2.29200000000096e-06, 2.2770000000088553e-06, 2.2910000000014863e-06, 2.305999999993591e-06, 2.237000000002154e-06, 2.2910000000014863e-06, 2.346999999999766e-06, 2.305999999993591e-06, 2.3749999999989058e-06, 2.2910000000014863e-06, 2.2770000000088553e-06]</msg>
<status status="PASS" starttime="20201030 10:56:55.716" endtime="20201030 10:56:55.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.711" endtime="20201030 10:56:55.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.339" endtime="20201030 10:56:55.719"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:55.266" endtime="20201030 10:56:55.720" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:55.728" endtime="20201030 10:56:55.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.726" endtime="20201030 10:56:55.748"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.760" endtime="20201030 10:56:55.776"></status>
</kw>
<msg timestamp="20201030 10:56:55.777" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.759" endtime="20201030 10:56:55.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.778" endtime="20201030 10:56:55.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.782" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:55.780" endtime="20201030 10:56:55.783"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:55.756" endtime="20201030 10:56:55.783"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:55.754" endtime="20201030 10:56:55.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.753" endtime="20201030 10:56:55.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:55.788" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:55.787" endtime="20201030 10:56:55.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.785" endtime="20201030 10:56:55.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.752" endtime="20201030 10:56:55.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.751" endtime="20201030 10:56:55.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.789" endtime="20201030 10:56:55.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.750" endtime="20201030 10:56:55.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.748" endtime="20201030 10:56:55.792"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.725" endtime="20201030 10:56:55.792"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.803" endtime="20201030 10:56:55.903"></status>
</kw>
<msg timestamp="20201030 10:56:55.904" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.801" endtime="20201030 10:56:55.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.906" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.905" endtime="20201030 10:56:55.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.907" endtime="20201030 10:56:55.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.798" endtime="20201030 10:56:55.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.795" endtime="20201030 10:56:55.910"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.912" endtime="20201030 10:56:55.914"></status>
</kw>
<msg timestamp="20201030 10:56:55.914" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:55.911" endtime="20201030 10:56:55.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.919" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:55.917" endtime="20201030 10:56:55.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.920" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:55.920" endtime="20201030 10:56:55.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.915" endtime="20201030 10:56:55.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.925" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:55.924" endtime="20201030 10:56:55.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.927" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:55.926" endtime="20201030 10:56:55.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.922" endtime="20201030 10:56:55.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.934" endtime="20201030 10:56:56.227"></status>
</kw>
<msg timestamp="20201030 10:56:56.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069541611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069558208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:55.933" endtime="20201030 10:56:56.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069541611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069558208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:56.231" endtime="20201030 10:56:56.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.239" endtime="20201030 10:56:56.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.930" endtime="20201030 10:56:56.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.929" endtime="20201030 10:56:56.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:56.245" level="INFO">${RESULT} = [{'diff': 1.65969999999932e-05}, {'diff': 1.656899999999406e-05}, {'diff': 1.658300000000057e-05}, {'diff': 1.658300000000057e-05}, {'diff': 1.65969999999932e-05}, {'diff': 1.658300000000057e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:56:56.242" endtime="20201030 10:56:56.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:56.250" level="INFO">${OVERHEAD} = {'diff': [1.65969999999932e-05, 1.656899999999406e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.65969999999932e-05, 1.658300000000057e-05, 1.659700000000708e-05, 1.656900000000794e-05, 1.651400...</msg>
<status status="PASS" starttime="20201030 10:56:56.246" endtime="20201030 10:56:56.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.255" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 10:56:56.254" endtime="20201030 10:56:56.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.257" level="INFO">VALUE: [1.65969999999932e-05, 1.656899999999406e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.65969999999932e-05, 1.658300000000057e-05, 1.659700000000708e-05, 1.656900000000794e-05, 1.6514000000009132e-05, 1.656900000000794e-05, 1.659700000000708e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.659700000000708e-05, 1.6569999999993534e-05, 1.659700000000708e-05, 1.658300000000057e-05, 1.661099999999971e-05, 1.658300000000057e-05, 1.659700000000708e-05, 1.6582999999986692e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.659700000000708e-05, 1.6584000000000043e-05, 1.659700000000708e-05, 1.6584000000000043e-05, 1.65969999999932e-05, 1.658300000000057e-05, 1.6597999999992674e-05, 1.6584000000000043e-05, 1.661099999999971e-05, 1.6513999999995255e-05, 1.658300000000057e-05, 1.6556000000000903e-05, 1.658400000001392e-05, 1.6596999999979323e-05, 1.6583000000014447e-05, 1.656899999999406e-05, 1.6583999999986165e-05, 1.6583000000014447e-05, 1.658400000001392e-05, 1.655500000000143e-05, 1.6598000000006552e-05, 1.6569000000021816e-05, 1.6583000000014447e-05, 1.65410000000088e-05, 1.656899999999406e-05, 1.6583000000014447e-05, 1.6583999999986165e-05]</msg>
<status status="PASS" starttime="20201030 10:56:56.256" endtime="20201030 10:56:56.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.251" endtime="20201030 10:56:56.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.793" endtime="20201030 10:56:56.259"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:55.722" endtime="20201030 10:56:56.259" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:56.268" endtime="20201030 10:56:56.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.266" endtime="20201030 10:56:56.288"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.300" endtime="20201030 10:56:56.316"></status>
</kw>
<msg timestamp="20201030 10:56:56.317" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.299" endtime="20201030 10:56:56.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.319" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.318" endtime="20201030 10:56:56.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.325" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:56.320" endtime="20201030 10:56:56.325"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:56.296" endtime="20201030 10:56:56.326"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:56.294" endtime="20201030 10:56:56.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.293" endtime="20201030 10:56:56.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:56.330" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:56.330" endtime="20201030 10:56:56.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.328" endtime="20201030 10:56:56.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.292" endtime="20201030 10:56:56.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.291" endtime="20201030 10:56:56.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.332" endtime="20201030 10:56:56.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.290" endtime="20201030 10:56:56.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.288" endtime="20201030 10:56:56.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.264" endtime="20201030 10:56:56.335"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.344" endtime="20201030 10:56:56.656"></status>
</kw>
<msg timestamp="20201030 10:56:56.657" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.342" endtime="20201030 10:56:56.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.659" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.658" endtime="20201030 10:56:56.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.660" endtime="20201030 10:56:56.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.340" endtime="20201030 10:56:56.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.338" endtime="20201030 10:56:56.663"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.665" endtime="20201030 10:56:56.667"></status>
</kw>
<msg timestamp="20201030 10:56:56.667" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:56:56.664" endtime="20201030 10:56:56.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.672" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:56:56.671" endtime="20201030 10:56:56.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.674" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:56:56.673" endtime="20201030 10:56:56.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.668" endtime="20201030 10:56:56.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.678" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:56:56.677" endtime="20201030 10:56:56.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.680" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:56:56.679" endtime="20201030 10:56:56.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.675" endtime="20201030 10:56:56.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.687" endtime="20201030 10:56:56.978"></status>
</kw>
<msg timestamp="20201030 10:56:56.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075186444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075217639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:56.686" endtime="20201030 10:56:56.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075186444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075217639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:56.982" endtime="20201030 10:56:56.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.989" endtime="20201030 10:56:56.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.683" endtime="20201030 10:56:56.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.682" endtime="20201030 10:56:56.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:56.997" level="INFO">${RESULT} = [{'diff': 3.119499999999775e-05}, {'diff': 3.115300000000598e-05}, {'diff': 3.112500000000684e-05}, {'diff': 3.116700000001249e-05}, {'diff': 3.116699999999861e-05}, {'diff': 3.116699999999861e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:56:56.994" endtime="20201030 10:56:56.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:57.001" level="INFO">${OVERHEAD} = {'diff': [3.119499999999775e-05, 3.115300000000598e-05, 3.112500000000684e-05, 3.116700000001249e-05, 3.116699999999861e-05, 3.116699999999861e-05, 3.122299999999689e-05, 3.115200000000651e-05, 3.1166...</msg>
<status status="PASS" starttime="20201030 10:56:56.998" endtime="20201030 10:56:57.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.006" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 10:56:57.005" endtime="20201030 10:56:57.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.008" level="INFO">VALUE: [3.119499999999775e-05, 3.115300000000598e-05, 3.112500000000684e-05, 3.116700000001249e-05, 3.116699999999861e-05, 3.116699999999861e-05, 3.122299999999689e-05, 3.115200000000651e-05, 3.116699999999861e-05, 3.115199999997875e-05, 3.1180999999991243e-05, 3.115300000000598e-05, 3.1180999999991243e-05, 3.1152999999978226e-05, 3.116699999999861e-05, 3.1180000000019525e-05, 3.116699999999861e-05, 3.116699999999861e-05, 3.111100000000033e-05, 3.116699999999861e-05, 3.1180999999991243e-05, 3.1152999999978226e-05, 3.120900000000426e-05, 3.1180000000019525e-05, 3.120900000000426e-05, 3.116700000002637e-05, 3.116699999999861e-05, 3.1180000000019525e-05, 3.115300000000598e-05, 3.115300000000598e-05, 3.1166000000026894e-05, 3.112500000002072e-05, 3.115300000000598e-05, 3.1181000000046755e-05, 3.116699999999861e-05, 3.1180000000019525e-05, 3.1180000000019525e-05, 3.116699999999861e-05, 3.1180999999991243e-05, 3.115300000000598e-05, 3.116699999999861e-05, 3.1166000000026894e-05, 3.1179999999964014e-05, 3.115300000000598e-05, 3.1195000000039386e-05, 3.1180000000019525e-05, 3.115300000000598e-05, 3.1180999999991243e-05, 3.116699999999861e-05, 3.1180999999991243e-05]</msg>
<status status="PASS" starttime="20201030 10:56:57.007" endtime="20201030 10:56:57.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.002" endtime="20201030 10:56:57.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.336" endtime="20201030 10:56:57.009"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:56.262" endtime="20201030 10:56:57.010" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:57.018" endtime="20201030 10:56:57.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.017" endtime="20201030 10:56:57.038"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.052" endtime="20201030 10:56:57.067"></status>
</kw>
<msg timestamp="20201030 10:56:57.068" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.050" endtime="20201030 10:56:57.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.070" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.069" endtime="20201030 10:56:57.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.073" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:57.071" endtime="20201030 10:56:57.074"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:57.048" endtime="20201030 10:56:57.074"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:57.044" endtime="20201030 10:56:57.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.043" endtime="20201030 10:56:57.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:57.079" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:57.078" endtime="20201030 10:56:57.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.076" endtime="20201030 10:56:57.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.042" endtime="20201030 10:56:57.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.042" endtime="20201030 10:56:57.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.081" endtime="20201030 10:56:57.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.040" endtime="20201030 10:56:57.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.039" endtime="20201030 10:56:57.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.015" endtime="20201030 10:56:57.083"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.089" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:57.105" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:58.639" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:57.087" endtime="20201030 10:56:58.640"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.642" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:58.641" endtime="20201030 10:56:58.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.084" endtime="20201030 10:56:58.643"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:58.647" endtime="20201030 10:56:58.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.645" endtime="20201030 10:56:58.667"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.676" endtime="20201030 10:56:58.683"></status>
</kw>
<msg timestamp="20201030 10:56:58.684" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.674" endtime="20201030 10:56:58.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.686" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.685" endtime="20201030 10:56:58.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.688" endtime="20201030 10:56:58.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.671" endtime="20201030 10:56:58.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.669" endtime="20201030 10:56:58.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.698" endtime="20201030 10:56:58.993"></status>
</kw>
<msg timestamp="20201030 10:56:58.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018041319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018049125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.697" endtime="20201030 10:56:58.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018041319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018049125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.997" endtime="20201030 10:56:59.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.005" endtime="20201030 10:56:59.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.693" endtime="20201030 10:56:59.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.691" endtime="20201030 10:56:59.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:56:59.012" level="INFO">${PHILIP_RES} = [{'diff': 7.805999999999091e-06}, {'diff': 7.805999999999091e-06}, {'diff': 7.832999999998758e-06}, {'diff': 7.805999999999091e-06}, {'diff': 7.818999999999188e-06}, {'diff': 7.805999999999091e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:56:59.009" endtime="20201030 10:56:59.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:59.016" level="INFO">${RESULT} = {'diff': [7.805999999999091e-06, 7.805999999999091e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.804999999999618e-06, 7.8340000000017e-06, 7.804999...</msg>
<status status="PASS" starttime="20201030 10:56:59.013" endtime="20201030 10:56:59.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.020" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 10:56:59.019" endtime="20201030 10:56:59.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.023" level="INFO">VALUE: [7.805999999999091e-06, 7.805999999999091e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.804999999999618e-06, 7.8340000000017e-06, 7.804999999999618e-06, 7.819999999998661e-06, 7.804999999999618e-06, 7.806000000002561e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.804999999999618e-06, 7.819999999998661e-06, 7.804999999999618e-06, 7.819999999998661e-06, 7.804999999999618e-06, 7.819999999998661e-06, 7.804999999999618e-06, 7.8340000000017e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.804999999999618e-06, 7.777999999999952e-06, 7.804999999999618e-06, 7.819999999998661e-06, 7.804999999999618e-06, 7.791999999999522e-06, 7.805999999999091e-06, 7.805999999999091e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.805999999999091e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.805999999999091e-06, 7.832999999998758e-06, 7.791999999999522e-06, 7.791000000000048e-06, 7.847999999997801e-06, 7.735999999997772e-06]</msg>
<status status="PASS" starttime="20201030 10:56:59.021" endtime="20201030 10:56:59.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.017" endtime="20201030 10:56:59.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.668" endtime="20201030 10:56:59.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.645" endtime="20201030 10:56:59.025"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:59.027" endtime="20201030 10:56:59.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.026" endtime="20201030 10:56:59.047"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.056" endtime="20201030 10:56:59.065"></status>
</kw>
<msg timestamp="20201030 10:56:59.065" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.054" endtime="20201030 10:56:59.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.068" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.066" endtime="20201030 10:56:59.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.069" endtime="20201030 10:56:59.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.052" endtime="20201030 10:56:59.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.049" endtime="20201030 10:56:59.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.078" endtime="20201030 10:56:59.364"></status>
</kw>
<msg timestamp="20201030 10:56:59.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018255736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018270847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.077" endtime="20201030 10:56:59.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018255736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018270847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.368" endtime="20201030 10:56:59.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.376" endtime="20201030 10:56:59.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.074" endtime="20201030 10:56:59.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.072" endtime="20201030 10:56:59.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:56:59.383" level="INFO">${PHILIP_RES} = [{'diff': 1.511099999999821e-05}, {'diff': 1.5193999999999624e-05}, {'diff': 1.5166999999999958e-05}, {'diff': 1.5166999999999958e-05}, {'diff': 1.5166999999999958e-05}, {'diff': 1.5180999999999528e-0...</msg>
<status status="PASS" starttime="20201030 10:56:59.380" endtime="20201030 10:56:59.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:59.388" level="INFO">${RESULT} = {'diff': [1.511099999999821e-05, 1.5193999999999624e-05, 1.5166999999999958e-05, 1.5166999999999958e-05, 1.5166999999999958e-05, 1.5180999999999528e-05, 1.5180000000000055e-05, 1.5180000000000055e-05,...</msg>
<status status="PASS" starttime="20201030 10:56:59.384" endtime="20201030 10:56:59.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.392" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 10:56:59.391" endtime="20201030 10:56:59.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.395" level="INFO">VALUE: [1.511099999999821e-05, 1.5193999999999624e-05, 1.5166999999999958e-05, 1.5166999999999958e-05, 1.5166999999999958e-05, 1.5180999999999528e-05, 1.5180000000000055e-05, 1.5180000000000055e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5221999999998764e-05, 1.5221999999998764e-05, 1.5180999999999528e-05, 1.5180000000000055e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.511099999999821e-05, 1.5166999999999958e-05, 1.5166999999999958e-05, 1.5180000000000055e-05, 1.5166999999999958e-05, 1.5153000000000388e-05, 1.5166000000000485e-05, 1.5180000000000055e-05, 1.5180999999999528e-05, 1.5193999999999624e-05, 1.509699999999864e-05, 1.5153000000000388e-05, 1.5166999999999958e-05, 1.5166000000000485e-05, 1.5193999999999624e-05, 1.5180999999999528e-05, 1.5166000000000485e-05, 1.5180999999999528e-05, 1.5166999999999958e-05, 1.5166000000000485e-05, 1.5166999999999958e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5166999999999958e-05, 1.5152000000000915e-05, 1.5180000000000055e-05, 1.5180000000000055e-05, 1.5180999999999528e-05, 1.5166999999999958e-05, 1.5152000000000915e-05, 1.5166999999999958e-05, 1.5124999999997779e-05, 1.5180000000000055e-05, 1.5166999999999958e-05]</msg>
<status status="PASS" starttime="20201030 10:56:59.393" endtime="20201030 10:56:59.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.389" endtime="20201030 10:56:59.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.048" endtime="20201030 10:56:59.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.025" endtime="20201030 10:56:59.396"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:59.399" endtime="20201030 10:56:59.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.397" endtime="20201030 10:56:59.418"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.426" endtime="20201030 10:56:59.436"></status>
</kw>
<msg timestamp="20201030 10:56:59.436" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.425" endtime="20201030 10:56:59.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.439" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.437" endtime="20201030 10:56:59.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.440" endtime="20201030 10:56:59.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.422" endtime="20201030 10:56:59.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.420" endtime="20201030 10:56:59.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.449" endtime="20201030 10:56:59.734"></status>
</kw>
<msg timestamp="20201030 10:56:59.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017317736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017341236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.447" endtime="20201030 10:56:59.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017317736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017341236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.738" endtime="20201030 10:56:59.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.747" endtime="20201030 10:56:59.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.445" endtime="20201030 10:56:59.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.443" endtime="20201030 10:56:59.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:56:59.753" level="INFO">${PHILIP_RES} = [{'diff': 2.3499999999999216e-05}, {'diff': 2.3541999999997926e-05}, {'diff': 2.3542000000001395e-05}, {'diff': 2.3556000000000965e-05}, {'diff': 2.3541999999997926e-05}, {'diff': 2.3528000000001825e-...</msg>
<status status="PASS" starttime="20201030 10:56:59.750" endtime="20201030 10:56:59.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:59.758" level="INFO">${RESULT} = {'diff': [2.3499999999999216e-05, 2.3541999999997926e-05, 2.3542000000001395e-05, 2.3556000000000965e-05, 2.3541999999997926e-05, 2.3528000000001825e-05, 2.3513999999998786e-05, 2.3569999999997066e-05...</msg>
<status status="PASS" starttime="20201030 10:56:59.754" endtime="20201030 10:56:59.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.763" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 10:56:59.762" endtime="20201030 10:56:59.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.765" level="INFO">VALUE: [2.3499999999999216e-05, 2.3541999999997926e-05, 2.3542000000001395e-05, 2.3556000000000965e-05, 2.3541999999997926e-05, 2.3528000000001825e-05, 2.3513999999998786e-05, 2.3569999999997066e-05, 2.3570000000000535e-05, 2.3570000000000535e-05, 2.3527999999998356e-05, 2.3542000000001395e-05, 2.3570000000000535e-05, 2.3541999999997926e-05, 2.3541999999997926e-05, 2.3542000000001395e-05, 2.3541999999997926e-05, 2.3556000000000965e-05, 2.3542000000001395e-05, 2.3542000000001395e-05, 2.3541999999997926e-05, 2.3514000000002255e-05, 2.354100000000192e-05, 2.3541999999997926e-05, 2.3526999999998882e-05, 2.355500000000149e-05, 2.3526999999998882e-05, 2.3526999999998882e-05, 2.354100000000192e-05, 2.3526999999998882e-05, 2.3554999999998022e-05, 2.354100000000192e-05, 2.3540999999998452e-05, 2.3554999999998022e-05, 2.356900000000106e-05, 2.3513999999998786e-05, 2.3513999999998786e-05, 2.3556000000000965e-05, 2.3556000000000965e-05, 2.3513999999998786e-05, 2.3541999999997926e-05, 2.3528000000001825e-05, 2.3541999999997926e-05, 2.3527999999998356e-05, 2.361099999999977e-05, 2.3542000000001395e-05, 2.3541999999997926e-05, 2.3570000000000535e-05, 2.3542000000001395e-05, 2.3541999999997926e-05]</msg>
<status status="PASS" starttime="20201030 10:56:59.764" endtime="20201030 10:56:59.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.759" endtime="20201030 10:56:59.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.419" endtime="20201030 10:56:59.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.397" endtime="20201030 10:56:59.767"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:59.769" endtime="20201030 10:56:59.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.768" endtime="20201030 10:56:59.789"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.797" endtime="20201030 10:56:59.807"></status>
</kw>
<msg timestamp="20201030 10:56:59.808" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.795" endtime="20201030 10:56:59.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.810" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.809" endtime="20201030 10:56:59.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.811" endtime="20201030 10:56:59.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.793" endtime="20201030 10:56:59.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.791" endtime="20201030 10:56:59.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.820" endtime="20201030 10:57:00.107"></status>
</kw>
<msg timestamp="20201030 10:57:00.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017897611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017930486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.819" endtime="20201030 10:57:00.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017897611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017930486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.111" endtime="20201030 10:57:00.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.119" endtime="20201030 10:57:00.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.816" endtime="20201030 10:57:00.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.815" endtime="20201030 10:57:00.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:00.126" level="INFO">${PHILIP_RES} = [{'diff': 3.2874999999998183e-05}, {'diff': 3.293099999999993e-05}, {'diff': 3.294500000000297e-05}, {'diff': 3.294400000000003e-05}, {'diff': 3.294500000000297e-05}, {'diff': 3.294400000000003e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:00.123" endtime="20201030 10:57:00.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.130" level="INFO">${RESULT} = {'diff': [3.2874999999998183e-05, 3.293099999999993e-05, 3.294500000000297e-05, 3.294400000000003e-05, 3.294500000000297e-05, 3.294400000000003e-05, 3.293099999999993e-05, 3.293000000000046e-05, 3.294...</msg>
<status status="PASS" starttime="20201030 10:57:00.127" endtime="20201030 10:57:00.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.134" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:00.133" endtime="20201030 10:57:00.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.137" level="INFO">VALUE: [3.2874999999998183e-05, 3.293099999999993e-05, 3.294500000000297e-05, 3.294400000000003e-05, 3.294500000000297e-05, 3.294400000000003e-05, 3.293099999999993e-05, 3.293000000000046e-05, 3.29449999999995e-05, 3.293000000000046e-05, 3.294500000000297e-05, 3.294400000000003e-05, 3.293099999999993e-05, 3.294400000000003e-05, 3.294400000000003e-05, 3.293099999999993e-05, 3.298599999999874e-05, 3.295899999999907e-05, 3.298599999999874e-05, 3.293099999999993e-05, 3.293000000000046e-05, 3.293099999999993e-05, 3.299999999999831e-05, 3.29449999999995e-05, 3.299999999999831e-05, 3.293099999999993e-05, 3.2846999999999044e-05, 3.298600000000221e-05, 3.29579999999996e-05, 3.294400000000003e-05, 3.293099999999993e-05, 3.295800000000307e-05, 3.297199999999917e-05, 3.292999999999699e-05, 3.295899999999907e-05, 3.294400000000003e-05, 3.29449999999995e-05, 3.294400000000003e-05, 3.293099999999993e-05, 3.293099999999993e-05, 3.293099999999993e-05, 3.293099999999993e-05, 3.294400000000003e-05, 3.29449999999995e-05, 3.29579999999996e-05, 3.293099999999993e-05, 3.294400000000003e-05, 3.295899999999907e-05, 3.294400000000003e-05, 3.293099999999993e-05]</msg>
<status status="PASS" starttime="20201030 10:57:00.135" endtime="20201030 10:57:00.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.131" endtime="20201030 10:57:00.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.789" endtime="20201030 10:57:00.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.767" endtime="20201030 10:57:00.138"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:00.140" endtime="20201030 10:57:00.160"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.139" endtime="20201030 10:57:00.160"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.169" endtime="20201030 10:57:00.180"></status>
</kw>
<msg timestamp="20201030 10:57:00.180" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.167" endtime="20201030 10:57:00.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.183" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.181" endtime="20201030 10:57:00.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.184" endtime="20201030 10:57:00.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.164" endtime="20201030 10:57:00.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.162" endtime="20201030 10:57:00.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.193" endtime="20201030 10:57:00.478"></status>
</kw>
<msg timestamp="20201030 10:57:00.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018961097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019004361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.192" endtime="20201030 10:57:00.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018961097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019004361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.482" endtime="20201030 10:57:00.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.491" endtime="20201030 10:57:00.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.189" endtime="20201030 10:57:00.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.187" endtime="20201030 10:57:00.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:00.498" level="INFO">${PHILIP_RES} = [{'diff': 4.326400000000119e-05}, {'diff': 4.3389000000001315e-05}, {'diff': 4.3346999999999136e-05}, {'diff': 4.336200000000165e-05}, {'diff': 4.3360999999998706e-05}, {'diff': 4.3361000000002176e-05...</msg>
<status status="PASS" starttime="20201030 10:57:00.495" endtime="20201030 10:57:00.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.502" level="INFO">${RESULT} = {'diff': [4.326400000000119e-05, 4.3389000000001315e-05, 4.3346999999999136e-05, 4.336200000000165e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.334799999999861e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:57:00.499" endtime="20201030 10:57:00.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.506" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:00.505" endtime="20201030 10:57:00.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.509" level="INFO">VALUE: [4.326400000000119e-05, 4.3389000000001315e-05, 4.3346999999999136e-05, 4.336200000000165e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.3291000000000857e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.336199999999818e-05, 4.3375000000001745e-05, 4.3318999999999996e-05, 4.3347000000002606e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.3361000000002176e-05, 4.3374999999998276e-05, 4.3375000000001745e-05, 4.3403000000000885e-05, 4.3360999999998706e-05, 4.3389000000001315e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.334799999999861e-05, 4.3375000000001745e-05, 4.3403000000000885e-05, 4.3332999999999566e-05, 4.3360999999998706e-05, 4.336200000000165e-05, 4.3375000000001745e-05, 4.3374999999998276e-05, 4.3375000000001745e-05, 4.327799999999729e-05, 4.3305000000000426e-05, 4.3361000000002176e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3389000000001315e-05]</msg>
<status status="PASS" starttime="20201030 10:57:00.507" endtime="20201030 10:57:00.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.503" endtime="20201030 10:57:00.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.161" endtime="20201030 10:57:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.138" endtime="20201030 10:57:00.511"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:00.513" endtime="20201030 10:57:00.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.512" endtime="20201030 10:57:00.533"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.542" endtime="20201030 10:57:00.553"></status>
</kw>
<msg timestamp="20201030 10:57:00.553" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.540" endtime="20201030 10:57:00.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.556" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.554" endtime="20201030 10:57:00.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.557" endtime="20201030 10:57:00.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.538" endtime="20201030 10:57:00.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.535" endtime="20201030 10:57:00.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.566" endtime="20201030 10:57:00.851"></status>
</kw>
<msg timestamp="20201030 10:57:00.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018043, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:00.564" endtime="20201030 10:57:00.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018043, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:00.855" endtime="20201030 10:57:00.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.863" endtime="20201030 10:57:00.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.562" endtime="20201030 10:57:00.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.560" endtime="20201030 10:57:00.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:00.869" level="INFO">${PHILIP_RES} = [{'diff': 5.4763999999998814e-05}, {'diff': 5.479200000000142e-05}, {'diff': 5.4791999999997953e-05}, {'diff': 5.479200000000142e-05}, {'diff': 5.480600000000099e-05}, {'diff': 5.480599999999752e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:00.866" endtime="20201030 10:57:00.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.874" level="INFO">${RESULT} = {'diff': [5.4763999999998814e-05, 5.479200000000142e-05, 5.4791999999997953e-05, 5.479200000000142e-05, 5.480600000000099e-05, 5.480599999999752e-05, 5.479200000000142e-05, 5.4791999999997953e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 10:57:00.870" endtime="20201030 10:57:00.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.879" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:00.878" endtime="20201030 10:57:00.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.881" level="INFO">VALUE: [5.4763999999998814e-05, 5.479200000000142e-05, 5.4791999999997953e-05, 5.479200000000142e-05, 5.480600000000099e-05, 5.480599999999752e-05, 5.479200000000142e-05, 5.4791999999997953e-05, 5.479100000000195e-05, 5.477699999999891e-05, 5.480500000000152e-05, 5.480500000000152e-05, 5.480499999999805e-05, 5.479200000000142e-05, 5.4791999999997953e-05, 5.482000000000056e-05, 5.4777999999998384e-05, 5.480600000000099e-05, 5.479200000000142e-05, 5.479200000000142e-05, 5.480600000000099e-05, 5.4791999999997953e-05, 5.481900000000109e-05, 5.481899999999762e-05, 5.479100000000195e-05, 5.477699999999891e-05, 5.479099999999848e-05, 5.4735999999999674e-05, 5.4763999999998814e-05, 5.480500000000152e-05, 5.4791999999997953e-05, 5.479200000000142e-05, 5.4791999999997953e-05, 5.4777999999998384e-05, 5.4763999999998814e-05, 5.482000000000056e-05, 5.479200000000142e-05, 5.4791999999997953e-05, 5.476400000000228e-05, 5.4777999999998384e-05, 5.479099999999848e-05, 5.479099999999848e-05, 5.480500000000152e-05, 5.479100000000195e-05, 5.479099999999848e-05, 5.481900000000109e-05, 5.482000000000056e-05, 5.477800000000185e-05, 5.479200000000142e-05, 5.479200000000142e-05]</msg>
<status status="PASS" starttime="20201030 10:57:00.880" endtime="20201030 10:57:00.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.875" endtime="20201030 10:57:00.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.534" endtime="20201030 10:57:00.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.511" endtime="20201030 10:57:00.883"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:00.885" endtime="20201030 10:57:00.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.884" endtime="20201030 10:57:00.905"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.913" endtime="20201030 10:57:00.925"></status>
</kw>
<msg timestamp="20201030 10:57:00.925" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.912" endtime="20201030 10:57:00.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.928" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.926" endtime="20201030 10:57:00.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.929" endtime="20201030 10:57:00.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.909" endtime="20201030 10:57:00.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.907" endtime="20201030 10:57:00.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.938" endtime="20201030 10:57:01.226"></status>
</kw>
<msg timestamp="20201030 10:57:01.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017896736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017963958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.936" endtime="20201030 10:57:01.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017896736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017963958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.231" endtime="20201030 10:57:01.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.240" endtime="20201030 10:57:01.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.934" endtime="20201030 10:57:01.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.932" endtime="20201030 10:57:01.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:01.250" level="INFO">${PHILIP_RES} = [{'diff': 6.722199999999873e-05}, {'diff': 6.723600000000177e-05}, {'diff': 6.727799999999701e-05}, {'diff': 6.727800000000048e-05}, {'diff': 6.72640000000009e-05}, {'diff': 6.724999999999787e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:01.246" endtime="20201030 10:57:01.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:01.255" level="INFO">${RESULT} = {'diff': [6.722199999999873e-05, 6.723600000000177e-05, 6.727799999999701e-05, 6.727800000000048e-05, 6.72640000000009e-05, 6.724999999999787e-05, 6.727800000000048e-05, 6.727799999999701e-05, 6.72500...</msg>
<status status="PASS" starttime="20201030 10:57:01.251" endtime="20201030 10:57:01.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.259" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:01.258" endtime="20201030 10:57:01.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.261" level="INFO">VALUE: [6.722199999999873e-05, 6.723600000000177e-05, 6.727799999999701e-05, 6.727800000000048e-05, 6.72640000000009e-05, 6.724999999999787e-05, 6.727800000000048e-05, 6.727799999999701e-05, 6.725000000000134e-05, 6.72640000000009e-05, 6.72640000000009e-05, 6.726300000000143e-05, 6.726299999999796e-05, 6.727800000000048e-05, 6.725000000000134e-05, 6.725000000000134e-05, 6.72640000000009e-05, 6.720799999999916e-05, 6.725000000000134e-05, 6.727800000000048e-05, 6.72640000000009e-05, 6.72640000000009e-05, 6.724999999999787e-05, 6.72640000000009e-05, 6.725000000000134e-05, 6.731899999999971e-05, 6.723600000000177e-05, 6.72359999999983e-05, 6.723600000000177e-05, 6.722199999999873e-05, 6.724999999999787e-05, 6.720799999999916e-05, 6.724999999999787e-05, 6.72640000000009e-05, 6.72640000000009e-05, 6.72640000000009e-05, 6.723600000000177e-05, 6.724999999999787e-05, 6.723700000000124e-05, 6.725000000000134e-05, 6.726399999999744e-05, 6.727800000000048e-05, 6.726399999999744e-05, 6.72640000000009e-05, 6.72640000000009e-05, 6.724999999999787e-05, 6.72640000000009e-05, 6.731899999999971e-05, 6.725000000000134e-05, 6.725000000000134e-05]</msg>
<status status="PASS" starttime="20201030 10:57:01.260" endtime="20201030 10:57:01.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.256" endtime="20201030 10:57:01.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.905" endtime="20201030 10:57:01.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.883" endtime="20201030 10:57:01.263"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:01.265" endtime="20201030 10:57:01.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.264" endtime="20201030 10:57:01.286"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.294" endtime="20201030 10:57:01.306"></status>
</kw>
<msg timestamp="20201030 10:57:01.307" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.292" endtime="20201030 10:57:01.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.309" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.308" endtime="20201030 10:57:01.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.310" endtime="20201030 10:57:01.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.289" endtime="20201030 10:57:01.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.288" endtime="20201030 10:57:01.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.322" endtime="20201030 10:57:01.608"></status>
</kw>
<msg timestamp="20201030 10:57:01.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017682292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017762986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.321" endtime="20201030 10:57:01.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017682292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017762986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.612" endtime="20201030 10:57:01.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.620" endtime="20201030 10:57:01.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.318" endtime="20201030 10:57:01.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.317" endtime="20201030 10:57:01.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:01.627" level="INFO">${PHILIP_RES} = [{'diff': 8.069400000000268e-05}, {'diff': 8.073600000000139e-05}, {'diff': 8.073600000000139e-05}, {'diff': 8.073600000000139e-05}, {'diff': 8.072200000000182e-05}, {'diff': 8.07910000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:01.624" endtime="20201030 10:57:01.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:01.631" level="INFO">${RESULT} = {'diff': [8.069400000000268e-05, 8.073600000000139e-05, 8.073600000000139e-05, 8.073600000000139e-05, 8.072200000000182e-05, 8.07910000000002e-05, 8.073600000000139e-05, 8.069399999999921e-05, 8.07219...</msg>
<status status="PASS" starttime="20201030 10:57:01.628" endtime="20201030 10:57:01.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.635" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:01.634" endtime="20201030 10:57:01.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.638" level="INFO">VALUE: [8.069400000000268e-05, 8.073600000000139e-05, 8.073600000000139e-05, 8.073600000000139e-05, 8.072200000000182e-05, 8.07910000000002e-05, 8.073600000000139e-05, 8.069399999999921e-05, 8.072199999999835e-05, 8.07230000000013e-05, 8.073600000000139e-05, 8.075000000000096e-05, 8.073600000000139e-05, 8.072200000000182e-05, 8.07230000000013e-05, 8.073600000000139e-05, 8.072199999999835e-05, 8.070799999999878e-05, 8.073599999999792e-05, 8.072199999999835e-05, 8.069400000000268e-05, 8.075000000000096e-05, 8.075000000000096e-05, 8.073600000000139e-05, 8.080600000000271e-05, 8.073600000000139e-05, 8.072299999999782e-05, 8.073599999999792e-05, 8.073599999999792e-05, 8.073600000000139e-05, 8.073700000000086e-05, 8.072200000000182e-05, 8.067999999999964e-05, 8.073600000000139e-05, 8.073700000000086e-05, 8.072199999999835e-05, 8.073599999999792e-05, 8.073599999999792e-05, 8.07230000000013e-05, 8.076400000000053e-05, 8.069500000000215e-05, 8.068099999999911e-05, 8.075000000000096e-05, 8.075000000000096e-05, 8.074999999999749e-05, 8.072199999999835e-05, 8.074999999999749e-05, 8.073599999999792e-05, 8.073600000000139e-05, 8.075000000000096e-05]</msg>
<status status="PASS" starttime="20201030 10:57:01.636" endtime="20201030 10:57:01.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.632" endtime="20201030 10:57:01.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.286" endtime="20201030 10:57:01.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.263" endtime="20201030 10:57:01.640"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:01.643" endtime="20201030 10:57:01.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.641" endtime="20201030 10:57:01.663"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.671" endtime="20201030 10:57:01.684"></status>
</kw>
<msg timestamp="20201030 10:57:01.685" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.669" endtime="20201030 10:57:01.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.687" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.686" endtime="20201030 10:57:01.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.688" endtime="20201030 10:57:01.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.667" endtime="20201030 10:57:01.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.665" endtime="20201030 10:57:01.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.697" endtime="20201030 10:57:01.982"></status>
</kw>
<msg timestamp="20201030 10:57:01.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017363278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017458472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.696" endtime="20201030 10:57:01.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017363278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017458472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.987" endtime="20201030 10:57:01.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.995" endtime="20201030 10:57:01.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.693" endtime="20201030 10:57:01.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.691" endtime="20201030 10:57:01.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:02.001" level="INFO">${PHILIP_RES} = [{'diff': 9.519399999999983e-05}, {'diff': 9.523699999999802e-05}, {'diff': 9.523600000000201e-05}, {'diff': 9.524999999999811e-05}, {'diff': 9.523599999999854e-05}, {'diff': 9.523600000000201e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:01.998" endtime="20201030 10:57:02.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.006" level="INFO">${RESULT} = {'diff': [9.519399999999983e-05, 9.523699999999802e-05, 9.523600000000201e-05, 9.524999999999811e-05, 9.523599999999854e-05, 9.523600000000201e-05, 9.51669999999967e-05, 9.523599999999854e-05, 9.52360...</msg>
<status status="PASS" starttime="20201030 10:57:02.002" endtime="20201030 10:57:02.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.011" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:02.010" endtime="20201030 10:57:02.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.013" level="INFO">VALUE: [9.519399999999983e-05, 9.523699999999802e-05, 9.523600000000201e-05, 9.524999999999811e-05, 9.523599999999854e-05, 9.523600000000201e-05, 9.51669999999967e-05, 9.523599999999854e-05, 9.523600000000201e-05, 9.522199999999897e-05, 9.524999999999811e-05, 9.522300000000192e-05, 9.525000000000158e-05, 9.522199999999897e-05, 9.522199999999897e-05, 9.523600000000201e-05, 9.524999999999811e-05, 9.526400000000115e-05, 9.522200000000244e-05, 0.0001094020000000015, 9.518099999999974e-05, 9.52079999999994e-05, 9.522300000000192e-05, 9.523599999999854e-05, 9.523599999999854e-05, 9.522200000000244e-05, 9.523599999999854e-05, 9.524999999999811e-05, 9.525000000000158e-05, 9.523599999999854e-05, 9.523599999999854e-05, 9.518099999999974e-05, 9.524999999999811e-05, 9.526399999999768e-05, 9.524999999999811e-05, 9.522300000000192e-05, 9.527800000000072e-05, 9.525000000000158e-05, 9.525000000000158e-05, 9.524999999999811e-05, 9.523599999999854e-05, 9.523600000000201e-05, 9.523599999999854e-05, 9.524999999999811e-05, 9.522200000000244e-05, 9.522299999999845e-05, 9.526399999999768e-05, 9.523600000000201e-05, 9.516700000000017e-05, 9.523599999999854e-05]</msg>
<status status="PASS" starttime="20201030 10:57:02.012" endtime="20201030 10:57:02.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.007" endtime="20201030 10:57:02.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.663" endtime="20201030 10:57:02.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.641" endtime="20201030 10:57:02.015"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:02.017" endtime="20201030 10:57:02.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.016" endtime="20201030 10:57:02.037"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.045" endtime="20201030 10:57:02.059"></status>
</kw>
<msg timestamp="20201030 10:57:02.060" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.044" endtime="20201030 10:57:02.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.062" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.061" endtime="20201030 10:57:02.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.063" endtime="20201030 10:57:02.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.041" endtime="20201030 10:57:02.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.039" endtime="20201030 10:57:02.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.072" endtime="20201030 10:57:02.358"></status>
</kw>
<msg timestamp="20201030 10:57:02.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017766819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017877597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.071" endtime="20201030 10:57:02.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017766819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017877597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.362" endtime="20201030 10:57:02.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.370" endtime="20201030 10:57:02.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.068" endtime="20201030 10:57:02.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.067" endtime="20201030 10:57:02.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:02.378" level="INFO">${PHILIP_RES} = [{'diff': 0.00011077799999999888}, {'diff': 0.00011072300000000007}, {'diff': 0.00011080600000000149}, {'diff': 0.00011074999999999974}, {'diff': 0.00011077800000000235}, {'diff': 0.000110764000000002...</msg>
<status status="PASS" starttime="20201030 10:57:02.375" endtime="20201030 10:57:02.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.382" level="INFO">${RESULT} = {'diff': [0.00011077799999999888, 0.00011072300000000007, 0.00011080600000000149, 0.00011074999999999974, 0.00011077800000000235, 0.00011076400000000278, 0.00011077799999999888, 0.00011074999999999974...</msg>
<status status="PASS" starttime="20201030 10:57:02.379" endtime="20201030 10:57:02.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.386" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:02.385" endtime="20201030 10:57:02.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.388" level="INFO">VALUE: [0.00011077799999999888, 0.00011072300000000007, 0.00011080600000000149, 0.00011074999999999974, 0.00011077800000000235, 0.00011076400000000278, 0.00011077799999999888, 0.00011074999999999974, 0.00011076399999999931, 0.00011076399999999931, 0.00011074999999999974, 0.00011074999999999974, 0.00011076400000000278, 0.00011074999999999974, 0.00011076399999999931, 0.00011076399999999931, 0.00011074999999999974, 0.00011076399999999931, 0.00011076400000000278, 0.00011074999999999974, 0.00011077800000000235, 0.00011073600000000017, 0.00011073600000000017, 0.00011076399999999931, 0.00011076399999999931, 0.00011076400000000278, 0.00011076400000000278, 0.00011076299999999983, 0.00011076399999999931, 0.00011074999999999974, 0.00011074999999999974, 0.00011076399999999931, 0.00011076399999999931, 0.00011075000000000321, 0.00011073600000000017, 0.00011076299999999983, 0.00011076399999999931, 0.00011077799999999888, 0.00011074999999999974, 0.00011074999999999974, 0.00011077800000000235, 0.00011076400000000278, 0.00011074999999999974, 0.0001107769999999994, 0.00011076299999999983, 0.0001107220000000006, 0.00011074999999999974, 0.00011076400000000278, 0.00011074999999999974, 0.00011076399999999931]</msg>
<status status="PASS" starttime="20201030 10:57:02.387" endtime="20201030 10:57:02.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.382" endtime="20201030 10:57:02.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.038" endtime="20201030 10:57:02.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.015" endtime="20201030 10:57:02.390"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:02.393" endtime="20201030 10:57:02.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.391" endtime="20201030 10:57:02.413"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.421" endtime="20201030 10:57:02.435"></status>
</kw>
<msg timestamp="20201030 10:57:02.435" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.419" endtime="20201030 10:57:02.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.438" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.436" endtime="20201030 10:57:02.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.439" endtime="20201030 10:57:02.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.416" endtime="20201030 10:57:02.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.415" endtime="20201030 10:57:02.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.449" endtime="20201030 10:57:02.735"></status>
</kw>
<msg timestamp="20201030 10:57:02.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017563792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.447" endtime="20201030 10:57:02.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017563792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.739" endtime="20201030 10:57:02.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.747" endtime="20201030 10:57:02.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.445" endtime="20201030 10:57:02.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.443" endtime="20201030 10:57:02.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:02.753" level="INFO">${PHILIP_RES} = [{'diff': 0.00012726400000000193}, {'diff': 0.0001273200000000002}, {'diff': 0.00012729099999999813}, {'diff': 0.00012730500000000117}, {'diff': 0.0001273049999999977}, {'diff': 0.00012730600000000064...</msg>
<status status="PASS" starttime="20201030 10:57:02.750" endtime="20201030 10:57:02.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.757" level="INFO">${RESULT} = {'diff': [0.00012726400000000193, 0.0001273200000000002, 0.00012729099999999813, 0.00012730500000000117, 0.0001273049999999977, 0.00012730600000000064, 0.00012726399999999846, 0.00012731900000000074, ...</msg>
<status status="PASS" starttime="20201030 10:57:02.754" endtime="20201030 10:57:02.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.761" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:02.760" endtime="20201030 10:57:02.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.764" level="INFO">VALUE: [0.00012726400000000193, 0.0001273200000000002, 0.00012729099999999813, 0.00012730500000000117, 0.0001273049999999977, 0.00012730600000000064, 0.00012726399999999846, 0.00012731900000000074, 0.00012730500000000117, 0.00012730600000000064, 0.0001273330000000003, 0.00012730599999999717, 0.00012736099999999945, 0.00012736099999999945, 0.00012729200000000107, 0.0001273330000000003, 0.00012737499999999902, 0.0001272919999999976, 0.0001272910000000016, 0.0001273049999999977, 0.00012730600000000064, 0.00012730600000000064, 0.00012726400000000193, 0.00012730500000000117, 0.00012730600000000064, 0.00012730600000000064, 0.00012733399999999978, 0.00012723599999999932, 0.00012729099999999813, 0.00012731900000000074, 0.00012731999999999674, 0.00012726400000000193, 0.00012730500000000117, 0.00012730500000000117, 0.00012727699999999856, 0.00012729200000000107, 0.00012727799999999803, 0.00012730600000000064, 0.0001272780000000015, 0.00012729200000000107, 0.00012730600000000064, 0.0001272919999999976, 0.00012730600000000064, 0.00012729099999999813, 0.00012730500000000117, 0.0001273200000000002, 0.00012730600000000064, 0.00012730600000000064, 0.0001272910000000016, 0.0001272910000000016]</msg>
<status status="PASS" starttime="20201030 10:57:02.762" endtime="20201030 10:57:02.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.758" endtime="20201030 10:57:02.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.413" endtime="20201030 10:57:02.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.391" endtime="20201030 10:57:02.766"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:02.769" endtime="20201030 10:57:02.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.767" endtime="20201030 10:57:02.788"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.796" endtime="20201030 10:57:02.812"></status>
</kw>
<msg timestamp="20201030 10:57:02.813" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.795" endtime="20201030 10:57:02.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.815" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.814" endtime="20201030 10:57:02.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.816" endtime="20201030 10:57:02.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.792" endtime="20201030 10:57:02.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.790" endtime="20201030 10:57:02.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.825" endtime="20201030 10:57:03.110"></status>
</kw>
<msg timestamp="20201030 10:57:03.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017454958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017599764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.824" endtime="20201030 10:57:03.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017454958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017599764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.115" endtime="20201030 10:57:03.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.122" endtime="20201030 10:57:03.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.821" endtime="20201030 10:57:03.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.819" endtime="20201030 10:57:03.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:03.129" level="INFO">${PHILIP_RES} = [{'diff': 0.0001448060000000008}, {'diff': 0.00014486100000000307}, {'diff': 0.00014487499999999917}, {'diff': 0.0001448609999999996}, {'diff': 0.0001448890000000022}, {'diff': 0.00014487499999999917}...</msg>
<status status="PASS" starttime="20201030 10:57:03.126" endtime="20201030 10:57:03.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.134" level="INFO">${RESULT} = {'diff': [0.0001448060000000008, 0.00014486100000000307, 0.00014487499999999917, 0.0001448609999999996, 0.0001448890000000022, 0.00014487499999999917, 0.00014487499999999917, 0.0001448890000000022, 0....</msg>
<status status="PASS" starttime="20201030 10:57:03.130" endtime="20201030 10:57:03.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.138" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:03.137" endtime="20201030 10:57:03.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.140" level="INFO">VALUE: [0.0001448060000000008, 0.00014486100000000307, 0.00014487499999999917, 0.0001448609999999996, 0.0001448890000000022, 0.00014487499999999917, 0.00014487499999999917, 0.0001448890000000022, 0.0001448609999999996, 0.00014483300000000046, 0.00014486100000000307, 0.00014483399999999994, 0.00014488899999999874, 0.0001448609999999996, 0.00014487500000000264, 0.00014488899999999874, 0.00014487500000000264, 0.00014487499999999917, 0.00014487499999999917, 0.00014484700000000003, 0.00014484700000000003, 0.0001448609999999996, 0.0001448609999999996, 0.00014487499999999917, 0.00014487499999999917, 0.00014487500000000264, 0.00014494400000000102, 0.0001448609999999996, 0.0001448609999999996, 0.0001448609999999996, 0.00014479100000000175, 0.00014483399999999994, 0.00014488899999999874, 0.00014491699999999788, 0.00014486200000000254, 0.0001448609999999996, 0.00014487499999999917, 0.00014487500000000264, 0.0001448609999999996, 0.00014484700000000003, 0.00014483399999999994, 0.0001448609999999996, 0.0001448609999999996, 0.00014487500000000264, 0.00014487499999999917, 0.00014487499999999917, 0.00014483399999999994, 0.00014487499999999917, 0.0001448609999999996, 0.0001448609999999996]</msg>
<status status="PASS" starttime="20201030 10:57:03.139" endtime="20201030 10:57:03.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.135" endtime="20201030 10:57:03.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.789" endtime="20201030 10:57:03.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.767" endtime="20201030 10:57:03.142"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:03.145" endtime="20201030 10:57:03.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.143" endtime="20201030 10:57:03.165"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.172" endtime="20201030 10:57:03.189"></status>
</kw>
<msg timestamp="20201030 10:57:03.189" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.171" endtime="20201030 10:57:03.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.192" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.190" endtime="20201030 10:57:03.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.193" endtime="20201030 10:57:03.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.168" endtime="20201030 10:57:03.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.167" endtime="20201030 10:57:03.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.202" endtime="20201030 10:57:03.488"></status>
</kw>
<msg timestamp="20201030 10:57:03.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017632389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017795806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.200" endtime="20201030 10:57:03.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017632389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017795806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.492" endtime="20201030 10:57:03.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.500" endtime="20201030 10:57:03.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.198" endtime="20201030 10:57:03.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.196" endtime="20201030 10:57:03.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:03.507" level="INFO">${PHILIP_RES} = [{'diff': 0.0001634170000000025}, {'diff': 0.00016351300000000055}, {'diff': 0.0001634439999999987}, {'diff': 0.00016343100000000207}, {'diff': 0.00016345800000000174}, {'diff': 0.00016345799999999827...</msg>
<status status="PASS" starttime="20201030 10:57:03.504" endtime="20201030 10:57:03.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.511" level="INFO">${RESULT} = {'diff': [0.0001634170000000025, 0.00016351300000000055, 0.0001634439999999987, 0.00016343100000000207, 0.00016345800000000174, 0.00016345799999999827, 0.00016345900000000121, 0.00016344500000000164, ...</msg>
<status status="PASS" starttime="20201030 10:57:03.508" endtime="20201030 10:57:03.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.515" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:03.514" endtime="20201030 10:57:03.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.518" level="INFO">VALUE: [0.0001634170000000025, 0.00016351300000000055, 0.0001634439999999987, 0.00016343100000000207, 0.00016345800000000174, 0.00016345799999999827, 0.00016345900000000121, 0.00016344500000000164, 0.00016345800000000174, 0.00016345799999999827, 0.00016345799999999827, 0.0001634720000000013, 0.00016344500000000164, 0.00016345799999999827, 0.0001634439999999987, 0.00016345800000000174, 0.00016344499999999818, 0.0001634439999999987, 0.00016350000000000045, 0.00016345900000000121, 0.00016345799999999827, 0.00016345799999999827, 0.00016340299999999947, 0.00016345800000000174, 0.00016345799999999827, 0.00016345900000000121, 0.00016351400000000002, 0.00016342999999999913, 0.00016347299999999731, 0.00016342999999999913, 0.00016341599999999956, 0.00016340299999999947, 0.00016345799999999827, 0.000163402, 0.00016343100000000207, 0.00016345799999999827, 0.00016345799999999827, 0.00016342999999999913, 0.0001634720000000013, 0.000180971999999998, 0.0001634309999999986, 0.00016344400000000217, 0.00016345800000000174, 0.00016344499999999818, 0.0001634859999999974, 0.00016345800000000174, 0.0001634720000000013, 0.00016345799999999827, 0.0001634720000000013, 0.00016344500000000164]</msg>
<status status="PASS" starttime="20201030 10:57:03.517" endtime="20201030 10:57:03.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.512" endtime="20201030 10:57:03.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.165" endtime="20201030 10:57:03.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.143" endtime="20201030 10:57:03.520"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:03.522" endtime="20201030 10:57:03.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.521" endtime="20201030 10:57:03.542"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.550" endtime="20201030 10:57:03.568"></status>
</kw>
<msg timestamp="20201030 10:57:03.568" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.549" endtime="20201030 10:57:03.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.570" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.569" endtime="20201030 10:57:03.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.571" endtime="20201030 10:57:03.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.546" endtime="20201030 10:57:03.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.544" endtime="20201030 10:57:03.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.581" endtime="20201030 10:57:03.866"></status>
</kw>
<msg timestamp="20201030 10:57:03.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017967944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.580" endtime="20201030 10:57:03.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017967944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.870" endtime="20201030 10:57:03.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.878" endtime="20201030 10:57:03.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.577" endtime="20201030 10:57:03.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.576" endtime="20201030 10:57:03.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:03.885" level="INFO">${PHILIP_RES} = [{'diff': 0.0001830269999999988}, {'diff': 0.00018304200000000131}, {'diff': 0.00018305600000000088}, {'diff': 0.0001830979999999996}, {'diff': 0.00018306900000000098}, {'diff': 0.00018308300000000055...</msg>
<status status="PASS" starttime="20201030 10:57:03.882" endtime="20201030 10:57:03.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.889" level="INFO">${RESULT} = {'diff': [0.0001830269999999988, 0.00018304200000000131, 0.00018305600000000088, 0.0001830979999999996, 0.00018306900000000098, 0.00018308300000000055, 0.00018304099999999837, 0.00018305600000000088, ...</msg>
<status status="PASS" starttime="20201030 10:57:03.886" endtime="20201030 10:57:03.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.893" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:03.892" endtime="20201030 10:57:03.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.895" level="INFO">VALUE: [0.0001830269999999988, 0.00018304200000000131, 0.00018305600000000088, 0.0001830979999999996, 0.00018306900000000098, 0.00018308300000000055, 0.00018304099999999837, 0.00018305600000000088, 0.00018305600000000088, 0.00018308400000000002, 0.00018305600000000088, 0.0001830550000000014, 0.00018305499999999794, 0.00018306900000000098, 0.0001830550000000014, 0.00018305599999999742, 0.00018305600000000088, 0.00018307000000000045, 0.00018305499999999794, 0.00018304099999999837, 0.00018306900000000098, 0.0001830689999999975, 0.0001831109999999997, 0.00018304200000000131, 0.00018308400000000002, 0.00018304200000000131, 0.00018299999999999914, 0.00018304099999999837, 0.00018306900000000098, 0.00018307000000000045, 0.00018308400000000002, 0.00018305599999999742, 0.00018308300000000055, 0.00018315199999999893, 0.0001830689999999975, 0.0001830269999999988, 0.00018306900000000098, 0.00018306999999999699, 0.00018308400000000002, 0.00018308400000000002, 0.00018301400000000217, 0.00018306900000000098, 0.00018304100000000184, 0.00018305600000000088, 0.00018305600000000088, 0.00018304200000000131, 0.00018301400000000217, 0.00018305599999999742, 0.00018306900000000098, 0.00018306900000000098]</msg>
<status status="PASS" starttime="20201030 10:57:03.894" endtime="20201030 10:57:03.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.890" endtime="20201030 10:57:03.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.543" endtime="20201030 10:57:03.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.520" endtime="20201030 10:57:03.898"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:03.900" endtime="20201030 10:57:03.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.899" endtime="20201030 10:57:03.920"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.928" endtime="20201030 10:57:03.947"></status>
</kw>
<msg timestamp="20201030 10:57:03.947" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.927" endtime="20201030 10:57:03.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.949" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.948" endtime="20201030 10:57:03.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.950" endtime="20201030 10:57:03.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.924" endtime="20201030 10:57:03.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.922" endtime="20201030 10:57:03.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.959" endtime="20201030 10:57:04.244"></status>
</kw>
<msg timestamp="20201030 10:57:04.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017485167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017688819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.958" endtime="20201030 10:57:04.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017485167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017688819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.248" endtime="20201030 10:57:04.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.256" endtime="20201030 10:57:04.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.955" endtime="20201030 10:57:04.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.954" endtime="20201030 10:57:04.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:04.263" level="INFO">${PHILIP_RES} = [{'diff': 0.00020365200000000208}, {'diff': 0.00020368000000000122}, {'diff': 0.00020370800000000036}, {'diff': 0.00020369500000000026}, {'diff': 0.00020374999999999907}, {'diff': 0.000203708000000000...</msg>
<status status="PASS" starttime="20201030 10:57:04.259" endtime="20201030 10:57:04.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:04.267" level="INFO">${RESULT} = {'diff': [0.00020365200000000208, 0.00020368000000000122, 0.00020370800000000036, 0.00020369500000000026, 0.00020374999999999907, 0.00020370800000000036, 0.0002036940000000008, 0.00020368000000000122,...</msg>
<status status="PASS" starttime="20201030 10:57:04.264" endtime="20201030 10:57:04.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.272" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:04.271" endtime="20201030 10:57:04.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.274" level="INFO">VALUE: [0.00020365200000000208, 0.00020368000000000122, 0.00020370800000000036, 0.00020369500000000026, 0.00020374999999999907, 0.00020370800000000036, 0.0002036940000000008, 0.00020368000000000122, 0.00020363900000000199, 0.0002037359999999995, 0.00020367999999999775, 0.00020366700000000112, 0.00020365300000000156, 0.00020363899999999852, 0.00020366700000000112, 0.00020368000000000122, 0.00020372199999999993, 0.00020370899999999983, 0.0002036810000000007, 0.00020372199999999993, 0.0002036940000000008, 0.00020369500000000026, 0.0002036810000000007, 0.0002036810000000007, 0.00020366600000000165, 0.00020367999999999775, 0.00020366700000000112, 0.00020365299999999809, 0.00020372199999999993, 0.0002036940000000008, 0.0002037359999999995, 0.00020369500000000026, 0.0002036810000000007, 0.00020366599999999818, 0.00020368000000000122, 0.0002036940000000008, 0.00020369500000000026, 0.00020366700000000112, 0.00020372199999999993, 0.00020368000000000122, 0.00020369500000000026, 0.0002036810000000007, 0.00020366700000000112, 0.0002037359999999995, 0.0002036940000000008, 0.00020369500000000026, 0.00020369500000000026, 0.0002036940000000008, 0.0002036940000000008, 0.00020372300000000287]</msg>
<status status="PASS" starttime="20201030 10:57:04.273" endtime="20201030 10:57:04.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.268" endtime="20201030 10:57:04.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.921" endtime="20201030 10:57:04.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.898" endtime="20201030 10:57:04.276"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:04.278" endtime="20201030 10:57:04.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.277" endtime="20201030 10:57:04.298"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.306" endtime="20201030 10:57:04.326"></status>
</kw>
<msg timestamp="20201030 10:57:04.326" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.305" endtime="20201030 10:57:04.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.329" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.327" endtime="20201030 10:57:04.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.330" endtime="20201030 10:57:04.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.302" endtime="20201030 10:57:04.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.300" endtime="20201030 10:57:04.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.339" endtime="20201030 10:57:04.625"></status>
</kw>
<msg timestamp="20201030 10:57:04.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017490792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017716014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.337" endtime="20201030 10:57:04.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017490792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017716014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.629" endtime="20201030 10:57:04.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.637" endtime="20201030 10:57:04.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.335" endtime="20201030 10:57:04.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.333" endtime="20201030 10:57:04.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:04.643" level="INFO">${PHILIP_RES} = [{'diff': 0.00022522199999999715}, {'diff': 0.0002253329999999977}, {'diff': 0.0002253610000000003}, {'diff': 0.00022536199999999978}, {'diff': 0.00022534700000000074}, {'diff': 0.0002253329999999977}...</msg>
<status status="PASS" starttime="20201030 10:57:04.640" endtime="20201030 10:57:04.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:04.647" level="INFO">${RESULT} = {'diff': [0.00022522199999999715, 0.0002253329999999977, 0.0002253610000000003, 0.00022536199999999978, 0.00022534700000000074, 0.0002253329999999977, 0.00022532000000000107, 0.00022533400000000064, 0...</msg>
<status status="PASS" starttime="20201030 10:57:04.644" endtime="20201030 10:57:04.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.651" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:04.650" endtime="20201030 10:57:04.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.654" level="INFO">VALUE: [0.00022522199999999715, 0.0002253329999999977, 0.0002253610000000003, 0.00022536199999999978, 0.00022534700000000074, 0.0002253329999999977, 0.00022532000000000107, 0.00022533400000000064, 0.00022532000000000107, 0.00022533300000000117, 0.0002252779999999989, 0.00022534700000000074, 0.00022533300000000117, 0.00022534700000000074, 0.00022532000000000107, 0.00022530599999999804, 0.0002253610000000003, 0.00022534700000000074, 0.00022532000000000107, 0.00022534700000000074, 0.00022531899999999813, 0.0002253329999999977, 0.00022534800000000021, 0.00022533300000000117, 0.00022533300000000117, 0.0002253199999999976, 0.00022533399999999718, 0.00022534700000000074, 0.00022533300000000117, 0.00022532000000000107, 0.00022532000000000107, 0.0002253329999999977, 0.00022529100000000246, 0.00022533400000000064, 0.00022533400000000064, 0.00022534700000000074, 0.0002253329999999977, 0.00022532000000000107, 0.00022533300000000117, 0.00022533300000000117, 0.00022534699999999727, 0.0002253199999999976, 0.00022529200000000194, 0.00022534700000000074, 0.00022532000000000107, 0.00022533400000000064, 0.0002252779999999989, 0.00022531899999999813, 0.0002253610000000003, 0.00022533400000000064]</msg>
<status status="PASS" starttime="20201030 10:57:04.652" endtime="20201030 10:57:04.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.648" endtime="20201030 10:57:04.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.299" endtime="20201030 10:57:04.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.276" endtime="20201030 10:57:04.656"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:04.658" endtime="20201030 10:57:04.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.657" endtime="20201030 10:57:04.678"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.686" endtime="20201030 10:57:04.708"></status>
</kw>
<msg timestamp="20201030 10:57:04.708" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.684" endtime="20201030 10:57:04.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.711" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.709" endtime="20201030 10:57:04.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.712" endtime="20201030 10:57:04.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.682" endtime="20201030 10:57:04.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.680" endtime="20201030 10:57:04.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.724" endtime="20201030 10:57:05.009"></status>
</kw>
<msg timestamp="20201030 10:57:05.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017568611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017816597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.722" endtime="20201030 10:57:05.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017568611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017816597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.013" endtime="20201030 10:57:05.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.021" endtime="20201030 10:57:05.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.720" endtime="20201030 10:57:05.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.718" endtime="20201030 10:57:05.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:05.027" level="INFO">${PHILIP_RES} = [{'diff': 0.00024798599999999865}, {'diff': 0.000247958000000003}, {'diff': 0.00024797299999999856}, {'diff': 0.00024802799999999736}, {'diff': 0.00024798599999999865}, {'diff': 0.00024797200000000255...</msg>
<status status="PASS" starttime="20201030 10:57:05.024" endtime="20201030 10:57:05.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.031" level="INFO">${RESULT} = {'diff': [0.00024798599999999865, 0.000247958000000003, 0.00024797299999999856, 0.00024802799999999736, 0.00024798599999999865, 0.00024797200000000255, 0.0002574029999999998, 0.00024797200000000255, 0...</msg>
<status status="PASS" starttime="20201030 10:57:05.028" endtime="20201030 10:57:05.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.036" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:05.035" endtime="20201030 10:57:05.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.038" level="INFO">VALUE: [0.00024798599999999865, 0.000247958000000003, 0.00024797299999999856, 0.00024802799999999736, 0.00024798599999999865, 0.00024797200000000255, 0.0002574029999999998, 0.00024797200000000255, 0.00024802800000000083, 0.00024802799999999736, 0.0002479999999999982, 0.0002480130000000018, 0.0002479999999999982, 0.0002479999999999982, 0.0002480000000000017, 0.00024802800000000083, 0.00024801400000000126, 0.00024798599999999865, 0.0002479999999999982, 0.0002480000000000017, 0.0002480550000000005, 0.0002479999999999982, 0.0002480139999999978, 0.0002480000000000017, 0.0002480000000000017, 0.0002479869999999981, 0.0002480139999999978, 0.0002479999999999982, 0.00024801400000000126, 0.0002479999999999982, 0.00024798599999999865, 0.00024802800000000083, 0.00024801400000000126, 0.00024797200000000255, 0.0002480139999999978, 0.00024798599999999865, 0.0002480000000000017, 0.0002479860000000021, 0.0002480139999999978, 0.0002479999999999982, 0.0002479579999999995, 0.0002480000000000017, 0.0002479999999999982, 0.0002479719999999991, 0.00024798599999999865, 0.0002480000000000017, 0.00024801400000000126, 0.00024804199999999693, 0.0002479719999999991, 0.000248070000000003]</msg>
<status status="PASS" starttime="20201030 10:57:05.037" endtime="20201030 10:57:05.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.032" endtime="20201030 10:57:05.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.678" endtime="20201030 10:57:05.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.656" endtime="20201030 10:57:05.040"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:05.043" endtime="20201030 10:57:05.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.041" endtime="20201030 10:57:05.063"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.071" endtime="20201030 10:57:05.093"></status>
</kw>
<msg timestamp="20201030 10:57:05.094" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.069" endtime="20201030 10:57:05.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.096" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.095" endtime="20201030 10:57:05.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.097" endtime="20201030 10:57:05.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.067" endtime="20201030 10:57:05.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.065" endtime="20201030 10:57:05.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.106" endtime="20201030 10:57:05.392"></status>
</kw>
<msg timestamp="20201030 10:57:05.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017649458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017921125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.105" endtime="20201030 10:57:05.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017649458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017921125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.396" endtime="20201030 10:57:05.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.404" endtime="20201030 10:57:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.102" endtime="20201030 10:57:05.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.100" endtime="20201030 10:57:05.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:05.410" level="INFO">${PHILIP_RES} = [{'diff': 0.00027166699999999974}, {'diff': 0.00027170899999999845}, {'diff': 0.000271722000000002}, {'diff': 0.0002716940000000029}, {'diff': 0.000271707999999999}, {'diff': 0.0002716809999999993}, {...</msg>
<status status="PASS" starttime="20201030 10:57:05.407" endtime="20201030 10:57:05.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.415" level="INFO">${RESULT} = {'diff': [0.00027166699999999974, 0.00027170899999999845, 0.000271722000000002, 0.0002716940000000029, 0.000271707999999999, 0.0002716809999999993, 0.0002716939999999994, 0.00027167999999999984, 0.000...</msg>
<status status="PASS" starttime="20201030 10:57:05.411" endtime="20201030 10:57:05.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.419" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:05.418" endtime="20201030 10:57:05.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.421" level="INFO">VALUE: [0.00027166699999999974, 0.00027170899999999845, 0.000271722000000002, 0.0002716940000000029, 0.000271707999999999, 0.0002716809999999993, 0.0002716939999999994, 0.00027167999999999984, 0.0002717230000000015, 0.0002716949999999989, 0.00027172199999999855, 0.00027165300000000017, 0.00027162500000000103, 0.00027167999999999984, 0.00027166699999999974, 0.0002716949999999989, 0.0002716949999999989, 0.0002716939999999994, 0.00027176300000000125, 0.0002716949999999989, 0.0002716939999999994, 0.0002716939999999994, 0.0002716529999999967, 0.00027169500000000235, 0.000271707999999999, 0.0002717499999999977, 0.0002716809999999993, 0.0002716939999999994, 0.00027165300000000017, 0.0002716949999999989, 0.0002716949999999989, 0.00027167999999999984, 0.00028668000000000096, 0.0002716939999999994, 0.0002716949999999989, 0.0002716939999999994, 0.0002716940000000029, 0.00027170899999999845, 0.0002716809999999993, 0.00027176400000000073, 0.0002716939999999994, 0.0002716810000000028, 0.0002717499999999977, 0.000271707999999999, 0.00027169500000000235, 0.00027173599999999465, 0.00027170800000000245, 0.00027169399999999594, 0.00027169500000000235, 0.00027169500000000235]</msg>
<status status="PASS" starttime="20201030 10:57:05.420" endtime="20201030 10:57:05.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.416" endtime="20201030 10:57:05.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.063" endtime="20201030 10:57:05.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.041" endtime="20201030 10:57:05.423"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:05.426" endtime="20201030 10:57:05.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.424" endtime="20201030 10:57:05.446"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.454" endtime="20201030 10:57:05.478"></status>
</kw>
<msg timestamp="20201030 10:57:05.479" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.452" endtime="20201030 10:57:05.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.481" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.480" endtime="20201030 10:57:05.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.482" endtime="20201030 10:57:05.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.450" endtime="20201030 10:57:05.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.448" endtime="20201030 10:57:05.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.491" endtime="20201030 10:57:05.777"></status>
</kw>
<msg timestamp="20201030 10:57:05.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017621889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017918222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.490" endtime="20201030 10:57:05.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017621889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017918222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.781" endtime="20201030 10:57:05.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.789" endtime="20201030 10:57:05.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.487" endtime="20201030 10:57:05.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.485" endtime="20201030 10:57:05.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:05.795" level="INFO">${PHILIP_RES} = [{'diff': 0.0002963329999999993}, {'diff': 0.0002964450000000028}, {'diff': 0.0002963750000000015}, {'diff': 0.00029641599999999727}, {'diff': 0.00029638900000000107}, {'diff': 0.00029642999999999683}...</msg>
<status status="PASS" starttime="20201030 10:57:05.792" endtime="20201030 10:57:05.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.799" level="INFO">${RESULT} = {'diff': [0.0002963329999999993, 0.0002964450000000028, 0.0002963750000000015, 0.00029641599999999727, 0.00029638900000000107, 0.00029642999999999683, 0.00029641600000000073, 0.0002964170000000002, 0....</msg>
<status status="PASS" starttime="20201030 10:57:05.796" endtime="20201030 10:57:05.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.804" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:05.802" endtime="20201030 10:57:05.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.806" level="INFO">VALUE: [0.0002963329999999993, 0.0002964450000000028, 0.0002963750000000015, 0.00029641599999999727, 0.00029638900000000107, 0.00029642999999999683, 0.00029641600000000073, 0.0002964170000000002, 0.0002964170000000002, 0.00029641599999999727, 0.00029640300000000064, 0.00029641699999999674, 0.0002963880000000016, 0.00029636099999999846, 0.0002964170000000002, 0.0002964170000000002, 0.00029641600000000073, 0.00029637499999999803, 0.0002964580000000029, 0.00029640200000000116, 0.00029640300000000064, 0.00029636100000000193, 0.0002963880000000016, 0.00029640300000000064, 0.0002964170000000002, 0.00029641600000000073, 0.00029638900000000107, 0.00029640300000000064, 0.00029636199999999793, 0.00029640200000000116, 0.0002964170000000002, 0.00029640300000000064, 0.00029637499999999803, 0.0002964729999999985, 0.00029640299999999717, 0.00029640200000000116, 0.0002963889999999976, 0.00029640300000000064, 0.00029640299999999717, 0.00029640300000000064, 0.00029640300000000064, 0.00029642999999999337, 0.00029638900000000107, 0.00029640300000000064, 0.0002964170000000002, 0.0002964300000000003, 0.0002963750000000015, 0.00029638900000000107, 0.00029636100000000193, 0.00029648699999999806]</msg>
<status status="PASS" starttime="20201030 10:57:05.805" endtime="20201030 10:57:05.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.800" endtime="20201030 10:57:05.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.446" endtime="20201030 10:57:05.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.424" endtime="20201030 10:57:05.808"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:05.810" endtime="20201030 10:57:05.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.809" endtime="20201030 10:57:05.830"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.838" endtime="20201030 10:57:05.863"></status>
</kw>
<msg timestamp="20201030 10:57:05.863" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.836" endtime="20201030 10:57:05.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.866" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.864" endtime="20201030 10:57:05.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.867" endtime="20201030 10:57:05.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.834" endtime="20201030 10:57:05.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.832" endtime="20201030 10:57:05.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.877" endtime="20201030 10:57:06.162"></status>
</kw>
<msg timestamp="20201030 10:57:06.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017758972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.875" endtime="20201030 10:57:06.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017758972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.166" endtime="20201030 10:57:06.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.174" endtime="20201030 10:57:06.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.872" endtime="20201030 10:57:06.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.871" endtime="20201030 10:57:06.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:06.181" level="INFO">${PHILIP_RES} = [{'diff': 0.0003220830000000008}, {'diff': 0.0003220839999999968}, {'diff': 0.00032213899999999906}, {'diff': 0.0003221530000000021}, {'diff': 0.00032213899999999906}, {'diff': 0.0003221119999999994},...</msg>
<status status="PASS" starttime="20201030 10:57:06.178" endtime="20201030 10:57:06.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:06.185" level="INFO">${RESULT} = {'diff': [0.0003220830000000008, 0.0003220839999999968, 0.00032213899999999906, 0.0003221530000000021, 0.00032213899999999906, 0.0003221119999999994, 0.0003221249999999995, 0.0003221530000000021, 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:06.182" endtime="20201030 10:57:06.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.189" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:06.188" endtime="20201030 10:57:06.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.191" level="INFO">VALUE: [0.0003220830000000008, 0.0003220839999999968, 0.00032213899999999906, 0.0003221530000000021, 0.00032213899999999906, 0.0003221119999999994, 0.0003221249999999995, 0.0003221530000000021, 0.0003221249999999995, 0.00032215299999999863, 0.00032212500000000296, 0.0003221670000000017, 0.00032213899999999906, 0.0003221799999999983, 0.00032213899999999906, 0.00032216599999999873, 0.0003221669999999982, 0.00032213900000000253, 0.00032213899999999906, 0.00032213899999999906, 0.00032212500000000296, 0.00032213899999999906, 0.00032215299999999863, 0.0003221530000000021, 0.00032213899999999906, 0.0003221249999999995, 0.00032213899999999906, 0.0003221530000000021, 0.00032213899999999906, 0.00032213899999999906, 0.00032213900000000253, 0.0003221249999999995, 0.0003221249999999995, 0.00032213900000000253, 0.00032213900000000253, 0.00032213899999999906, 0.00032213899999999906, 0.0003221109999999999, 0.0003221249999999995, 0.0003221530000000056, 0.00032213899999999906, 0.00032213899999999906, 0.00032213899999999906, 0.00032219399999999787, 0.0003221249999999995, 0.0003221249999999995, 0.0003221109999999999, 0.0003221249999999995, 0.00032213899999999906, 0.00032209700000000036]</msg>
<status status="PASS" starttime="20201030 10:57:06.190" endtime="20201030 10:57:06.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.185" endtime="20201030 10:57:06.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.830" endtime="20201030 10:57:06.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.808" endtime="20201030 10:57:06.194"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:06.196" endtime="20201030 10:57:06.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.195" endtime="20201030 10:57:06.216"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.224" endtime="20201030 10:57:06.251"></status>
</kw>
<msg timestamp="20201030 10:57:06.251" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.222" endtime="20201030 10:57:06.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.254" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.252" endtime="20201030 10:57:06.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.255" endtime="20201030 10:57:06.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.220" endtime="20201030 10:57:06.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.218" endtime="20201030 10:57:06.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.263" endtime="20201030 10:57:06.549"></status>
</kw>
<msg timestamp="20201030 10:57:06.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017766681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.262" endtime="20201030 10:57:06.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017766681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.553" endtime="20201030 10:57:06.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.561" endtime="20201030 10:57:06.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.259" endtime="20201030 10:57:06.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.258" endtime="20201030 10:57:06.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:06.567" level="INFO">${PHILIP_RES} = [{'diff': 0.00034884699999999935}, {'diff': 0.0003489030000000011}, {'diff': 0.0003489449999999998}, {'diff': 0.0003488329999999998}, {'diff': 0.0003488879999999986}, {'diff': 0.00034888900000000153},...</msg>
<status status="PASS" starttime="20201030 10:57:06.564" endtime="20201030 10:57:06.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:06.572" level="INFO">${RESULT} = {'diff': [0.00034884699999999935, 0.0003489030000000011, 0.0003489449999999998, 0.0003488329999999998, 0.0003488879999999986, 0.00034888900000000153, 0.00034887500000000196, 0.0003489030000000011, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:06.568" endtime="20201030 10:57:06.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.577" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:06.576" endtime="20201030 10:57:06.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.579" level="INFO">VALUE: [0.00034884699999999935, 0.0003489030000000011, 0.0003489449999999998, 0.0003488329999999998, 0.0003488879999999986, 0.00034888900000000153, 0.00034887500000000196, 0.0003489030000000011, 0.0003489719999999995, 0.0003488749999999985, 0.00034888900000000153, 0.0003488609999999989, 0.00034888899999999806, 0.00034894399999999687, 0.00034887500000000196, 0.00034891700000000067, 0.00034888899999999806, 0.00034888900000000153, 0.00034887500000000196, 0.00034893100000000024, 0.00034888899999999806, 0.00034890299999999763, 0.00034891700000000067, 0.00034888900000000153, 0.00034888899999999806, 0.0003488749999999985, 0.00034888900000000153, 0.00034887500000000196, 0.0003489030000000011, 0.0003488609999999989, 0.00034893100000000024, 0.0003489030000000011, 0.0003488879999999986, 0.00034888899999999806, 0.00034888899999999806, 0.00034888899999999806, 0.00034890300000000457, 0.00034890300000000457, 0.0003489310000000037, 0.0003489310000000037, 0.0003489299999999973, 0.0003489169999999972, 0.00034888899999999806, 0.0003488190000000002, 0.00034888899999999806, 0.000348889000000005, 0.00034886100000000586, 0.00034890199999999816, 0.00034888899999999806, 0.00034890299999999763]</msg>
<status status="PASS" starttime="20201030 10:57:06.578" endtime="20201030 10:57:06.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.573" endtime="20201030 10:57:06.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.217" endtime="20201030 10:57:06.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.194" endtime="20201030 10:57:06.582"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:06.584" endtime="20201030 10:57:06.604"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.583" endtime="20201030 10:57:06.604"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.612" endtime="20201030 10:57:06.641"></status>
</kw>
<msg timestamp="20201030 10:57:06.642" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.611" endtime="20201030 10:57:06.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.644" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.643" endtime="20201030 10:57:06.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.645" endtime="20201030 10:57:06.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.608" endtime="20201030 10:57:06.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.606" endtime="20201030 10:57:06.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.654" endtime="20201030 10:57:06.941"></status>
</kw>
<msg timestamp="20201030 10:57:06.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017740681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018117306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.653" endtime="20201030 10:57:06.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017740681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018117306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.945" endtime="20201030 10:57:06.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.953" endtime="20201030 10:57:06.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.650" endtime="20201030 10:57:06.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.648" endtime="20201030 10:57:06.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:06.959" level="INFO">${PHILIP_RES} = [{'diff': 0.0003766249999999985}, {'diff': 0.00037668100000000024}, {'diff': 0.0003766669999999972}, {'diff': 0.0003766660000000012}, {'diff': 0.0003767089999999994}, {'diff': 0.00037666700000000067},...</msg>
<status status="PASS" starttime="20201030 10:57:06.956" endtime="20201030 10:57:06.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:06.963" level="INFO">${RESULT} = {'diff': [0.0003766249999999985, 0.00037668100000000024, 0.0003766669999999972, 0.0003766660000000012, 0.0003767089999999994, 0.00037666700000000067, 0.0003766659999999977, 0.00037666700000000067, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:06.960" endtime="20201030 10:57:06.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.967" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:06.966" endtime="20201030 10:57:06.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.970" level="INFO">VALUE: [0.0003766249999999985, 0.00037668100000000024, 0.0003766669999999972, 0.0003766660000000012, 0.0003767089999999994, 0.00037666700000000067, 0.0003766659999999977, 0.00037666700000000067, 0.00037668000000000076, 0.0003766669999999972, 0.00037666700000000067, 0.0003766660000000012, 0.0003767219999999995, 0.00037668000000000076, 0.00037663900000000153, 0.0003766669999999972, 0.0003766660000000012, 0.0003766530000000011, 0.00037663800000000205, 0.0003766660000000012, 0.00037666700000000067, 0.0003766660000000012, 0.00037665299999999763, 0.00037668100000000024, 0.00037669400000000033, 0.00037663899999999806, 0.00037668000000000076, 0.00037668100000000024, 0.00037666700000000067, 0.0003766660000000012, 0.00037663900000000153, 0.00037662500000000196, 0.0003766659999999977, 0.00037670799999999643, 0.0003766379999999986, 0.0003766810000000037, 0.00037665299999999763, 0.00037663899999999806, 0.00037669499999999634, 0.0003766659999999977, 0.00037666700000000414, 0.00037666700000000414, 0.00037666600000000466, 0.00037668099999999677, 0.0003766799999999973, 0.00037669399999999686, 0.00037674999999999514, 0.00037665199999999815, 0.00037672200000000294, 0.0003766810000000037]</msg>
<status status="PASS" starttime="20201030 10:57:06.968" endtime="20201030 10:57:06.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.964" endtime="20201030 10:57:06.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.605" endtime="20201030 10:57:06.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.582" endtime="20201030 10:57:06.972"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:06.974" endtime="20201030 10:57:06.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.973" endtime="20201030 10:57:06.994"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.002" endtime="20201030 10:57:07.032"></status>
</kw>
<msg timestamp="20201030 10:57:07.033" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.000" endtime="20201030 10:57:07.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.035" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.034" endtime="20201030 10:57:07.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.036" endtime="20201030 10:57:07.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.998" endtime="20201030 10:57:07.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.996" endtime="20201030 10:57:07.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.046" endtime="20201030 10:57:07.338"></status>
</kw>
<msg timestamp="20201030 10:57:07.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018016708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.045" endtime="20201030 10:57:07.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018016708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.347" endtime="20201030 10:57:07.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.365" endtime="20201030 10:57:07.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.042" endtime="20201030 10:57:07.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.040" endtime="20201030 10:57:07.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:07.378" level="INFO">${PHILIP_RES} = [{'diff': 0.00040540199999999915}, {'diff': 0.00040548600000000004}, {'diff': 0.00040544399999999786}, {'diff': 0.0004054580000000009}, {'diff': 0.00040545799999999743}, {'diff': 0.0004054440000000013...</msg>
<status status="PASS" starttime="20201030 10:57:07.372" endtime="20201030 10:57:07.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:07.387" level="INFO">${RESULT} = {'diff': [0.00040540199999999915, 0.00040548600000000004, 0.00040544399999999786, 0.0004054580000000009, 0.00040545799999999743, 0.00040544400000000133, 0.0004054169999999982, 0.0004054450000000008, 0...</msg>
<status status="PASS" starttime="20201030 10:57:07.380" endtime="20201030 10:57:07.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.395" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:07.394" endtime="20201030 10:57:07.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.398" level="INFO">VALUE: [0.00040540199999999915, 0.00040548600000000004, 0.00040544399999999786, 0.0004054580000000009, 0.00040545799999999743, 0.00040544400000000133, 0.0004054169999999982, 0.0004054450000000008, 0.0004054029999999986, 0.0004054590000000004, 0.0004054590000000004, 0.0004054580000000009, 0.0004054580000000009, 0.0004054580000000009, 0.00040544399999999786, 0.00040547200000000047, 0.0004054580000000009, 0.0004054580000000009, 0.00040547200000000047, 0.0004054590000000004, 0.0004054590000000004, 0.0004054590000000004, 0.00040547299999999994, 0.00040547200000000047, 0.0004054580000000009, 0.0004054580000000009, 0.00040547200000000047, 0.0004054580000000009, 0.00040547200000000047, 0.00040544400000000133, 0.00040545800000000437, 0.00040544499999999734, 0.0004054589999999969, 0.00040547200000000394, 0.00040545900000000384, 0.0004054589999999969, 0.000405471999999997, 0.00040544399999999786, 0.0004055000000000031, 0.0004054029999999986, 0.000405471999999997, 0.00040545800000000437, 0.00040547200000000394, 0.0004053749999999995, 0.0004054729999999965, 0.0004054029999999986, 0.0004054450000000043, 0.0004054589999999969, 0.000405471999999997, 0.0004054440000000048]</msg>
<status status="PASS" starttime="20201030 10:57:07.396" endtime="20201030 10:57:07.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.389" endtime="20201030 10:57:07.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.994" endtime="20201030 10:57:07.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.972" endtime="20201030 10:57:07.400"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:07.403" endtime="20201030 10:57:07.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.401" endtime="20201030 10:57:07.423"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.431" endtime="20201030 10:57:07.462"></status>
</kw>
<msg timestamp="20201030 10:57:07.462" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.429" endtime="20201030 10:57:07.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.465" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.463" endtime="20201030 10:57:07.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.466" endtime="20201030 10:57:07.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.427" endtime="20201030 10:57:07.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.425" endtime="20201030 10:57:07.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.474" endtime="20201030 10:57:07.761"></status>
</kw>
<msg timestamp="20201030 10:57:07.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017467292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017902528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.473" endtime="20201030 10:57:07.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017467292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017902528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.765" endtime="20201030 10:57:07.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.772" endtime="20201030 10:57:07.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.470" endtime="20201030 10:57:07.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.469" endtime="20201030 10:57:07.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:07.779" level="INFO">${PHILIP_RES} = [{'diff': 0.00043523600000000204}, {'diff': 0.00043527800000000075}, {'diff': 0.0004352640000000012}, {'diff': 0.0004352779999999973}, {'diff': 0.0004352779999999973}, {'diff': 0.00043527800000000075}...</msg>
<status status="PASS" starttime="20201030 10:57:07.776" endtime="20201030 10:57:07.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:07.784" level="INFO">${RESULT} = {'diff': [0.00043523600000000204, 0.00043527800000000075, 0.0004352640000000012, 0.0004352779999999973, 0.0004352779999999973, 0.00043527800000000075, 0.00043527800000000075, 0.00043527800000000075, 0...</msg>
<status status="PASS" starttime="20201030 10:57:07.780" endtime="20201030 10:57:07.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.788" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:07.787" endtime="20201030 10:57:07.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.790" level="INFO">VALUE: [0.00043523600000000204, 0.00043527800000000075, 0.0004352640000000012, 0.0004352779999999973, 0.0004352779999999973, 0.00043527800000000075, 0.00043527800000000075, 0.00043527800000000075, 0.0004352640000000012, 0.00043523599999999857, 0.0004352769999999978, 0.0004352640000000012, 0.0004353050000000004, 0.0004352770000000013, 0.00043527800000000075, 0.0004352640000000012, 0.00043527800000000075, 0.0004352920000000003, 0.0004352640000000012, 0.0004647499999999999, 0.00043527800000000075, 0.0004352640000000012, 0.0004352920000000003, 0.00043527800000000075, 0.0004352779999999973, 0.0004352500000000016, 0.000435221999999999, 0.00043529100000000084, 0.0004352770000000013, 0.0004352910000000043, 0.0004352779999999973, 0.0004352639999999977, 0.00043529199999999685, 0.0004352639999999977, 0.0004353050000000039, 0.0004353059999999964, 0.0004352920000000038, 0.00043529199999999685, 0.00043529199999999685, 0.0004352639999999977, 0.0004352779999999973, 0.0004352920000000038, 0.0004353340000000025, 0.0004352639999999977, 0.0004352769999999978, 0.0004352769999999978, 0.0004352360000000055, 0.00043523699999999804, 0.0004352639999999977, 0.0004352909999999974]</msg>
<status status="PASS" starttime="20201030 10:57:07.789" endtime="20201030 10:57:07.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.784" endtime="20201030 10:57:07.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.423" endtime="20201030 10:57:07.792"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.401" endtime="20201030 10:57:07.792"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:07.794" endtime="20201030 10:57:07.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.793" endtime="20201030 10:57:07.814"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.822" endtime="20201030 10:57:07.855"></status>
</kw>
<msg timestamp="20201030 10:57:07.855" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.821" endtime="20201030 10:57:07.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.858" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.856" endtime="20201030 10:57:07.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.859" endtime="20201030 10:57:07.860"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.818" endtime="20201030 10:57:07.861"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.816" endtime="20201030 10:57:07.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.868" endtime="20201030 10:57:08.164"></status>
</kw>
<msg timestamp="20201030 10:57:08.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017494917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017960986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.866" endtime="20201030 10:57:08.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017494917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017960986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.173" endtime="20201030 10:57:08.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.191" endtime="20201030 10:57:08.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.864" endtime="20201030 10:57:08.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.862" endtime="20201030 10:57:08.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:08.204" level="INFO">${PHILIP_RES} = [{'diff': 0.000466069000000003}, {'diff': 0.0004661109999999982}, {'diff': 0.0004661109999999982}, {'diff': 0.00046618099999999954}, {'diff': 0.00046605499999999994}, {'diff': 0.0004661109999999982}, ...</msg>
<status status="PASS" starttime="20201030 10:57:08.198" endtime="20201030 10:57:08.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:08.209" level="INFO">${RESULT} = {'diff': [0.000466069000000003, 0.0004661109999999982, 0.0004661109999999982, 0.00046618099999999954, 0.00046605499999999994, 0.0004661109999999982, 0.0004661110000000017, 0.0004661110000000017, 0.000...</msg>
<status status="PASS" starttime="20201030 10:57:08.206" endtime="20201030 10:57:08.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.213" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:08.212" endtime="20201030 10:57:08.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.215" level="INFO">VALUE: [0.000466069000000003, 0.0004661109999999982, 0.0004661109999999982, 0.00046618099999999954, 0.00046605499999999994, 0.0004661109999999982, 0.0004661110000000017, 0.0004661110000000017, 0.0004661249999999978, 0.0004661109999999982, 0.0004660970000000021, 0.00046613900000000083, 0.0004661109999999982, 0.0004661110000000017, 0.0004660970000000021, 0.0004661249999999978, 0.0004660979999999981, 0.00046612500000000126, 0.0004660980000000016, 0.00046612500000000126, 0.0004661119999999977, 0.000494737000000002, 0.0004660979999999981, 0.0004661119999999977, 0.00046613900000000083, 0.00046612500000000126, 0.0004661109999999982, 0.00046611100000000516, 0.00046609699999999865, 0.000466069999999999, 0.00046611100000000516, 0.00046609699999999865, 0.0004661109999999982, 0.0004660689999999995, 0.0004661109999999982, 0.0004661109999999982, 0.0004661249999999978, 0.0004660689999999995, 0.00046611100000000516, 0.0004661249999999978, 0.0004661109999999982, 0.00046612500000000473, 0.0004661109999999982, 0.00046609699999999865, 0.00046611100000000516, 0.00046609699999999865, 0.0004661109999999982, 0.0004661249999999978, 0.0004661109999999982, 0.00046611100000000516]</msg>
<status status="PASS" starttime="20201030 10:57:08.214" endtime="20201030 10:57:08.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.209" endtime="20201030 10:57:08.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.815" endtime="20201030 10:57:08.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.792" endtime="20201030 10:57:08.217"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:08.219" endtime="20201030 10:57:08.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.218" endtime="20201030 10:57:08.239"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.247" endtime="20201030 10:57:08.283"></status>
</kw>
<msg timestamp="20201030 10:57:08.283" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.246" endtime="20201030 10:57:08.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.286" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.284" endtime="20201030 10:57:08.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.287" endtime="20201030 10:57:08.291"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.243" endtime="20201030 10:57:08.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.241" endtime="20201030 10:57:08.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.299" endtime="20201030 10:57:08.584"></status>
</kw>
<msg timestamp="20201030 10:57:08.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017686139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018184097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.297" endtime="20201030 10:57:08.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017686139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018184097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.588" endtime="20201030 10:57:08.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.595" endtime="20201030 10:57:08.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.295" endtime="20201030 10:57:08.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.293" endtime="20201030 10:57:08.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:08.602" level="INFO">${PHILIP_RES} = [{'diff': 0.0004979579999999997}, {'diff': 0.0004979719999999993}, {'diff': 0.0004979719999999993}, {'diff': 0.0004979859999999989}, {'diff': 0.0004979720000000028}, {'diff': 0.0004979870000000018}, {...</msg>
<status status="PASS" starttime="20201030 10:57:08.599" endtime="20201030 10:57:08.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:08.606" level="INFO">${RESULT} = {'diff': [0.0004979579999999997, 0.0004979719999999993, 0.0004979719999999993, 0.0004979859999999989, 0.0004979720000000028, 0.0004979870000000018, 0.0004979440000000002, 0.0004979579999999997, 0.0004...</msg>
<status status="PASS" starttime="20201030 10:57:08.603" endtime="20201030 10:57:08.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.611" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:08.610" endtime="20201030 10:57:08.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.614" level="INFO">VALUE: [0.0004979579999999997, 0.0004979719999999993, 0.0004979719999999993, 0.0004979859999999989, 0.0004979720000000028, 0.0004979870000000018, 0.0004979440000000002, 0.0004979579999999997, 0.0004979719999999993, 0.0004979440000000002, 0.0004979449999999996, 0.0004979590000000027, 0.0004980420000000006, 0.0004979719999999993, 0.0004979579999999997, 0.0004979859999999989, 0.0004979589999999992, 0.0004979590000000027, 0.0004979720000000028, 0.0004979859999999989, 0.0004979719999999993, 0.0004979859999999989, 0.0004979859999999989, 0.0004980140000000015, 0.0004979719999999993, 0.000498014000000005, 0.0004979719999999993, 0.0004979720000000062, 0.0004979590000000061, 0.0004979729999999988, 0.0004979859999999989, 0.0004979719999999993, 0.0004979719999999993, 0.0004979579999999997, 0.0004979729999999988, 0.0004979719999999993, 0.0004979300000000006, 0.0004979719999999993, 0.0004979719999999993, 0.0004979719999999993, 0.0004979730000000057, 0.0004979730000000057, 0.0004979579999999997, 0.0004979719999999993, 0.000498013999999998, 0.0004979310000000001, 0.0004979729999999988, 0.0004979719999999993, 0.0004979859999999989, 0.0004979859999999989]</msg>
<status status="PASS" starttime="20201030 10:57:08.612" endtime="20201030 10:57:08.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.607" endtime="20201030 10:57:08.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.240" endtime="20201030 10:57:08.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.217" endtime="20201030 10:57:08.617"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:08.619" endtime="20201030 10:57:08.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.618" endtime="20201030 10:57:08.639"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.647" endtime="20201030 10:57:08.684"></status>
</kw>
<msg timestamp="20201030 10:57:08.684" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.645" endtime="20201030 10:57:08.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.687" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.686" endtime="20201030 10:57:08.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.688" endtime="20201030 10:57:08.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.643" endtime="20201030 10:57:08.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.641" endtime="20201030 10:57:08.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.697" endtime="20201030 10:57:08.995"></status>
</kw>
<msg timestamp="20201030 10:57:09.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01768625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018217097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:08.695" endtime="20201030 10:57:09.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01768625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018217097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:09.004" endtime="20201030 10:57:09.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.018" endtime="20201030 10:57:09.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.693" endtime="20201030 10:57:09.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.691" endtime="20201030 10:57:09.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:09.024" level="INFO">${PHILIP_RES} = [{'diff': 0.000530847000000001}, {'diff': 0.0005308330000000014}, {'diff': 0.0005308610000000005}, {'diff': 0.000530847000000001}, {'diff': 0.000530847000000001}, {'diff': 0.0005308889999999997}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:09.021" endtime="20201030 10:57:09.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:09.029" level="INFO">${RESULT} = {'diff': [0.000530847000000001, 0.0005308330000000014, 0.0005308610000000005, 0.000530847000000001, 0.000530847000000001, 0.0005308889999999997, 0.0005308049999999988, 0.0005308610000000005, 0.0005308...</msg>
<status status="PASS" starttime="20201030 10:57:09.025" endtime="20201030 10:57:09.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.033" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:09.032" endtime="20201030 10:57:09.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.035" level="INFO">VALUE: [0.000530847000000001, 0.0005308330000000014, 0.0005308610000000005, 0.000530847000000001, 0.000530847000000001, 0.0005308889999999997, 0.0005308049999999988, 0.0005308610000000005, 0.0005308750000000001, 0.0005308469999999975, 0.000530847000000001, 0.0005308480000000004, 0.0005308330000000014, 0.0005308610000000005, 0.0005308610000000005, 0.0005308480000000004, 0.0005308610000000005, 0.000530847000000001, 0.0005308889999999997, 0.0005308610000000005, 0.0005308469999999975, 0.000530847000000001, 0.0005308880000000002, 0.0005308469999999975, 0.0005308340000000009, 0.000530847000000001, 0.0005308480000000004, 0.0005307919999999952, 0.0005308750000000001, 0.0005308610000000005, 0.0005308609999999936, 0.000530847000000001, 0.000530847000000001, 0.000530847000000001, 0.0005307769999999962, 0.0005308610000000005, 0.0005308610000000005, 0.0005307780000000026, 0.000530847000000001, 0.0005308480000000004, 0.0005308610000000005, 0.0005308339999999939, 0.000530847000000001, 0.0005308610000000005, 0.0005308330000000014, 0.0005308329999999944, 0.0005308330000000014, 0.0005308190000000018, 0.0005308610000000005, 0.000530847000000001]</msg>
<status status="PASS" starttime="20201030 10:57:09.034" endtime="20201030 10:57:09.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.029" endtime="20201030 10:57:09.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.640" endtime="20201030 10:57:09.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.617" endtime="20201030 10:57:09.037"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:09.039" endtime="20201030 10:57:09.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.038" endtime="20201030 10:57:09.059"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.067" endtime="20201030 10:57:09.105"></status>
</kw>
<msg timestamp="20201030 10:57:09.106" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.066" endtime="20201030 10:57:09.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.108" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.107" endtime="20201030 10:57:09.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.109" endtime="20201030 10:57:09.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.063" endtime="20201030 10:57:09.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.061" endtime="20201030 10:57:09.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.118" endtime="20201030 10:57:09.404"></status>
</kw>
<msg timestamp="20201030 10:57:09.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017484847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018049542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.117" endtime="20201030 10:57:09.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017484847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018049542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.408" endtime="20201030 10:57:09.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.416" endtime="20201030 10:57:09.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.114" endtime="20201030 10:57:09.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.113" endtime="20201030 10:57:09.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:09.423" level="INFO">${PHILIP_RES} = [{'diff': 0.000564694999999997}, {'diff': 0.0005647369999999992}, {'diff': 0.0005647369999999992}, {'diff': 0.0005647359999999997}, {'diff': 0.0005647499999999993}, {'diff': 0.0005647360000000032}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:09.420" endtime="20201030 10:57:09.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:09.427" level="INFO">${RESULT} = {'diff': [0.000564694999999997, 0.0005647369999999992, 0.0005647369999999992, 0.0005647359999999997, 0.0005647499999999993, 0.0005647360000000032, 0.000564806000000001, 0.0005647499999999993, 0.000564...</msg>
<status status="PASS" starttime="20201030 10:57:09.424" endtime="20201030 10:57:09.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.431" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:09.430" endtime="20201030 10:57:09.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.433" level="INFO">VALUE: [0.000564694999999997, 0.0005647369999999992, 0.0005647369999999992, 0.0005647359999999997, 0.0005647499999999993, 0.0005647360000000032, 0.000564806000000001, 0.0005647499999999993, 0.0005647220000000001, 0.0005647639999999989, 0.0005647780000000019, 0.0005647499999999993, 0.0005647499999999993, 0.0005647359999999997, 0.0005647639999999989, 0.0005648049999999981, 0.0005647370000000027, 0.0005647499999999993, 0.0005925139999999988, 0.0005647920000000015, 0.0005647499999999993, 0.0005647499999999993, 0.0005647500000000027, 0.0005647500000000027, 0.0005646809999999974, 0.0005647500000000027, 0.0005647089999999966, 0.0005647089999999966, 0.0005647770000000024, 0.0005647640000000023, 0.0005647359999999962, 0.0005647360000000032, 0.0005647360000000032, 0.0005647359999999962, 0.000564679999999998, 0.0005647640000000023, 0.0005647640000000023, 0.0005647639999999954, 0.0005647220000000036, 0.0005647089999999966, 0.0005647499999999958, 0.0005647640000000023, 0.0005647630000000028, 0.0005647369999999957, 0.0005647360000000032, 0.0005647500000000027, 0.0005647499999999958, 0.0005647500000000027, 0.0005647360000000032, 0.000564679999999998]</msg>
<status status="PASS" starttime="20201030 10:57:09.432" endtime="20201030 10:57:09.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.427" endtime="20201030 10:57:09.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.060" endtime="20201030 10:57:09.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.037" endtime="20201030 10:57:09.435"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:09.437" endtime="20201030 10:57:09.457"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.436" endtime="20201030 10:57:09.457"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.465" endtime="20201030 10:57:09.506"></status>
</kw>
<msg timestamp="20201030 10:57:09.506" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.464" endtime="20201030 10:57:09.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.509" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.507" endtime="20201030 10:57:09.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.510" endtime="20201030 10:57:09.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.461" endtime="20201030 10:57:09.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.459" endtime="20201030 10:57:09.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.520" endtime="20201030 10:57:09.821"></status>
</kw>
<msg timestamp="20201030 10:57:09.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017603847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.518" endtime="20201030 10:57:09.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017603847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.827" endtime="20201030 10:57:09.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.835" endtime="20201030 10:57:09.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.516" endtime="20201030 10:57:09.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.514" endtime="20201030 10:57:09.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:09.841" level="INFO">${PHILIP_RES} = [{'diff': 0.0005996109999999999}, {'diff': 0.0005996809999999977}, {'diff': 0.0005996810000000012}, {'diff': 0.0005996809999999977}, {'diff': 0.0005996799999999983}, {'diff': 0.0005996800000000017}, {...</msg>
<status status="PASS" starttime="20201030 10:57:09.838" endtime="20201030 10:57:09.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:09.845" level="INFO">${RESULT} = {'diff': [0.0005996109999999999, 0.0005996809999999977, 0.0005996810000000012, 0.0005996809999999977, 0.0005996799999999983, 0.0005996800000000017, 0.0005996529999999986, 0.0005996529999999986, 0.0005...</msg>
<status status="PASS" starttime="20201030 10:57:09.842" endtime="20201030 10:57:09.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.849" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:09.848" endtime="20201030 10:57:09.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.852" level="INFO">VALUE: [0.0005996109999999999, 0.0005996809999999977, 0.0005996810000000012, 0.0005996809999999977, 0.0005996799999999983, 0.0005996800000000017, 0.0005996529999999986, 0.0005996529999999986, 0.0005996670000000016, 0.0005996519999999991, 0.0006163190000000006, 0.0005997080000000009, 0.0005996669999999982, 0.0005996670000000016, 0.0005996659999999987, 0.0005997220000000004, 0.0005996670000000016, 0.0005996950000000008, 0.0005996799999999983, 0.0005996520000000026, 0.0005997079999999974, 0.0005996529999999986, 0.0005996669999999982, 0.0005996660000000056, 0.0005997360000000035, 0.0005996809999999977, 0.0005996529999999986, 0.0005996799999999983, 0.0005996799999999983, 0.0005996810000000047, 0.0005996950000000043, 0.0005996939999999978, 0.0005995830000000008, 0.0005996939999999978, 0.0005996669999999982, 0.0005996670000000051, 0.0005996660000000056, 0.0005996669999999982, 0.000599638999999999, 0.0005996669999999982, 0.0005996799999999983, 0.0005997220000000039, 0.0005996670000000051, 0.0005996809999999977, 0.0005996659999999987, 0.0005996249999999995, 0.0005996669999999982, 0.0005996669999999982, 0.0005996530000000055, 0.0005996799999999983]</msg>
<status status="PASS" starttime="20201030 10:57:09.850" endtime="20201030 10:57:09.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.846" endtime="20201030 10:57:09.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.458" endtime="20201030 10:57:09.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.435" endtime="20201030 10:57:09.854"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:09.857" endtime="20201030 10:57:09.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.855" endtime="20201030 10:57:09.877"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.885" endtime="20201030 10:57:09.927"></status>
</kw>
<msg timestamp="20201030 10:57:09.928" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.883" endtime="20201030 10:57:09.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.930" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.929" endtime="20201030 10:57:09.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.931" endtime="20201030 10:57:09.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.880" endtime="20201030 10:57:09.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.879" endtime="20201030 10:57:09.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.940" endtime="20201030 10:57:10.225"></status>
</kw>
<msg timestamp="20201030 10:57:10.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017542681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018178236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.939" endtime="20201030 10:57:10.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017542681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018178236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.229" endtime="20201030 10:57:10.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.237" endtime="20201030 10:57:10.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.936" endtime="20201030 10:57:10.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.934" endtime="20201030 10:57:10.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:10.243" level="INFO">${PHILIP_RES} = [{'diff': 0.0006355549999999995}, {'diff': 0.0006356390000000003}, {'diff': 0.0006356109999999977}, {'diff': 0.0006356110000000012}, {'diff': 0.0006356109999999977}, {'diff': 0.000635666}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 10:57:10.240" endtime="20201030 10:57:10.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:10.248" level="INFO">${RESULT} = {'diff': [0.0006355549999999995, 0.0006356390000000003, 0.0006356109999999977, 0.0006356110000000012, 0.0006356109999999977, 0.000635666, 0.0006356249999999973, 0.0006356109999999977, 0.00063556900000...</msg>
<status status="PASS" starttime="20201030 10:57:10.244" endtime="20201030 10:57:10.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.253" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:10.252" endtime="20201030 10:57:10.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.255" level="INFO">VALUE: [0.0006355549999999995, 0.0006356390000000003, 0.0006356109999999977, 0.0006356110000000012, 0.0006356109999999977, 0.000635666, 0.0006356249999999973, 0.0006356109999999977, 0.0006355690000000025, 0.0006356109999999977, 0.0006356250000000008, 0.0006355969999999982, 0.0006356250000000008, 0.0006356110000000012, 0.0006356390000000003, 0.0006356250000000008, 0.0006356110000000012, 0.0006356250000000008, 0.0006356110000000012, 0.0006356110000000047, 0.0006356110000000012, 0.0006356110000000012, 0.0006356109999999943, 0.0006356110000000012, 0.0006356110000000012, 0.0006356109999999943, 0.0006355980000000011, 0.0006355980000000011, 0.0006356250000000008, 0.0006356110000000012, 0.0006356110000000012, 0.000635554999999996, 0.0006356390000000003, 0.0006356110000000012, 0.0006356390000000003, 0.0006355969999999947, 0.0006356669999999995, 0.0006356120000000007, 0.0006356110000000012, 0.0006355829999999951, 0.0006355840000000015, 0.0006356529999999999, 0.0006355969999999947, 0.0006357079999999987, 0.0006356390000000003, 0.0006356250000000008, 0.0006356110000000012, 0.0006356110000000012, 0.0006356250000000008, 0.0006356109999999943]</msg>
<status status="PASS" starttime="20201030 10:57:10.254" endtime="20201030 10:57:10.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.249" endtime="20201030 10:57:10.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.877" endtime="20201030 10:57:10.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.855" endtime="20201030 10:57:10.257"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:10.259" endtime="20201030 10:57:10.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.258" endtime="20201030 10:57:10.279"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.287" endtime="20201030 10:57:10.331"></status>
</kw>
<msg timestamp="20201030 10:57:10.332" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.286" endtime="20201030 10:57:10.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.334" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.333" endtime="20201030 10:57:10.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.335" endtime="20201030 10:57:10.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.283" endtime="20201030 10:57:10.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.281" endtime="20201030 10:57:10.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.344" endtime="20201030 10:57:10.645"></status>
</kw>
<msg timestamp="20201030 10:57:10.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01750525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018177792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:10.343" endtime="20201030 10:57:10.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01750525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018177792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:10.649" endtime="20201030 10:57:10.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.657" endtime="20201030 10:57:10.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.340" endtime="20201030 10:57:10.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.338" endtime="20201030 10:57:10.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:10.664" level="INFO">${PHILIP_RES} = [{'diff': 0.0006725420000000017}, {'diff': 0.0006725830000000009}, {'diff': 0.0006725690000000013}, {'diff': 0.0006725700000000008}, {'diff': 0.0006725550000000018}, {'diff': 0.0006725139999999991}, {...</msg>
<status status="PASS" starttime="20201030 10:57:10.660" endtime="20201030 10:57:10.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:10.668" level="INFO">${RESULT} = {'diff': [0.0006725420000000017, 0.0006725830000000009, 0.0006725690000000013, 0.0006725700000000008, 0.0006725550000000018, 0.0006725139999999991, 0.0006725700000000008, 0.0006725690000000013, 0.0006...</msg>
<status status="PASS" starttime="20201030 10:57:10.665" endtime="20201030 10:57:10.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.672" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:10.671" endtime="20201030 10:57:10.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.674" level="INFO">VALUE: [0.0006725420000000017, 0.0006725830000000009, 0.0006725690000000013, 0.0006725700000000008, 0.0006725550000000018, 0.0006725139999999991, 0.0006725700000000008, 0.0006725690000000013, 0.0006725689999999979, 0.0006725700000000008, 0.0006725689999999979, 0.0006725689999999979, 0.0006725700000000008, 0.0006725829999999974, 0.0006725830000000009, 0.0006725840000000004, 0.0006725830000000009, 0.0006725690000000013, 0.0006725840000000038, 0.000672596999999997, 0.0006725829999999974, 0.0006725980000000034, 0.0006725699999999973, 0.0006725549999999983, 0.0006725840000000038, 0.0006726110000000035, 0.0006725689999999979, 0.0006725559999999978, 0.0006725560000000047, 0.0006725689999999979, 0.0006725829999999974, 0.0006725830000000044, 0.0006725549999999983, 0.0006725839999999969, 0.0006725840000000038, 0.000672596999999997, 0.0006725839999999969, 0.0006725830000000044, 0.0006725689999999979, 0.0006726249999999961, 0.0006726110000000035, 0.0006725970000000039, 0.0006725139999999991, 0.0006725559999999978, 0.0006725830000000044, 0.0006724999999999995, 0.0006725559999999978, 0.0006725830000000044, 0.0006725699999999973, 0.0006726109999999966]</msg>
<status status="PASS" starttime="20201030 10:57:10.673" endtime="20201030 10:57:10.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.668" endtime="20201030 10:57:10.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.280" endtime="20201030 10:57:10.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.257" endtime="20201030 10:57:10.676"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:10.678" endtime="20201030 10:57:10.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.677" endtime="20201030 10:57:10.698"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.706" endtime="20201030 10:57:10.752"></status>
</kw>
<msg timestamp="20201030 10:57:10.752" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.705" endtime="20201030 10:57:10.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.755" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.754" endtime="20201030 10:57:10.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.756" endtime="20201030 10:57:10.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.702" endtime="20201030 10:57:10.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.700" endtime="20201030 10:57:10.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.766" endtime="20201030 10:57:11.052"></status>
</kw>
<msg timestamp="20201030 10:57:11.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017505597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018216139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.764" endtime="20201030 10:57:11.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017505597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018216139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.056" endtime="20201030 10:57:11.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.064" endtime="20201030 10:57:11.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.762" endtime="20201030 10:57:11.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.760" endtime="20201030 10:57:11.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:11.070" level="INFO">${PHILIP_RES} = [{'diff': 0.000710541999999998}, {'diff': 0.0007105689999999977}, {'diff': 0.0007105689999999977}, {'diff': 0.0007105409999999986}, {'diff': 0.0007105689999999977}, {'diff': 0.0007105699999999972}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:11.067" endtime="20201030 10:57:11.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:11.074" level="INFO">${RESULT} = {'diff': [0.000710541999999998, 0.0007105689999999977, 0.0007105689999999977, 0.0007105409999999986, 0.0007105689999999977, 0.0007105699999999972, 0.0007105560000000011, 0.0007105700000000006, 0.00071...</msg>
<status status="PASS" starttime="20201030 10:57:11.071" endtime="20201030 10:57:11.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.078" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:11.077" endtime="20201030 10:57:11.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.080" level="INFO">VALUE: [0.000710541999999998, 0.0007105689999999977, 0.0007105689999999977, 0.0007105409999999986, 0.0007105689999999977, 0.0007105699999999972, 0.0007105560000000011, 0.0007105700000000006, 0.0007104859999999998, 0.0007105420000000015, 0.0007105830000000007, 0.0007105550000000016, 0.0007105690000000012, 0.0007106109999999999, 0.0007332079999999991, 0.0007105560000000011, 0.0007105970000000003, 0.0007105560000000011, 0.0007105140000000024, 0.0007105550000000016, 0.000710541000000002, 0.0007105000000000028, 0.0007105270000000025, 0.0007105420000000015, 0.0007105970000000003, 0.0007105420000000015, 0.0007105280000000019, 0.0007105560000000011, 0.0007105830000000007, 0.0007105690000000012, 0.0007105690000000012, 0.0007105690000000012, 0.0007105560000000011, 0.0007104719999999967, 0.0007105419999999946, 0.0007105559999999941, 0.0007105419999999946, 0.0007105689999999942, 0.0007105830000000007, 0.0007105689999999942, 0.0007105560000000011, 0.0007105560000000011, 0.0007105700000000006, 0.0007105700000000006, 0.0007105700000000006, 0.0007105690000000012, 0.0007105690000000012, 0.0007105550000000016, 0.0007105560000000011, 0.0007105700000000006]</msg>
<status status="PASS" starttime="20201030 10:57:11.079" endtime="20201030 10:57:11.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.075" endtime="20201030 10:57:11.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.699" endtime="20201030 10:57:11.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.676" endtime="20201030 10:57:11.083"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:11.085" endtime="20201030 10:57:11.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.084" endtime="20201030 10:57:11.105"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.113" endtime="20201030 10:57:11.161"></status>
</kw>
<msg timestamp="20201030 10:57:11.162" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.112" endtime="20201030 10:57:11.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.164" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.163" endtime="20201030 10:57:11.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.166" endtime="20201030 10:57:11.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.109" endtime="20201030 10:57:11.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.107" endtime="20201030 10:57:11.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.174" endtime="20201030 10:57:11.472"></status>
</kw>
<msg timestamp="20201030 10:57:11.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017488486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018238014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.173" endtime="20201030 10:57:11.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017488486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018238014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.476" endtime="20201030 10:57:11.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.484" endtime="20201030 10:57:11.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.170" endtime="20201030 10:57:11.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.169" endtime="20201030 10:57:11.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:11.491" level="INFO">${PHILIP_RES} = [{'diff': 0.0007495279999999993}, {'diff': 0.0007495700000000015}, {'diff': 0.000749554999999999}, {'diff': 0.000749569000000002}, {'diff': 0.0007495839999999976}, {'diff': 0.0007495970000000012}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:11.488" endtime="20201030 10:57:11.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:11.495" level="INFO">${RESULT} = {'diff': [0.0007495279999999993, 0.0007495700000000015, 0.000749554999999999, 0.000749569000000002, 0.0007495839999999976, 0.0007495970000000012, 0.0007495409999999994, 0.0007495689999999985, 0.000749...</msg>
<status status="PASS" starttime="20201030 10:57:11.492" endtime="20201030 10:57:11.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.500" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:11.499" endtime="20201030 10:57:11.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.502" level="INFO">VALUE: [0.0007495279999999993, 0.0007495700000000015, 0.000749554999999999, 0.000749569000000002, 0.0007495839999999976, 0.0007495970000000012, 0.0007495409999999994, 0.0007495689999999985, 0.0007495700000000015, 0.0007495419999999989, 0.0007495550000000024, 0.0007495689999999985, 0.0007495700000000015, 0.0007495560000000019, 0.000749554999999999, 0.0007495550000000024, 0.0007495419999999989, 0.0007495559999999984, 0.0007495409999999994, 0.0007495829999999981, 0.0007494860000000006, 0.0007495130000000003, 0.000749554999999999, 0.0007495279999999993, 0.0007495560000000054, 0.000749569999999998, 0.000749554999999999, 0.0007495560000000054, 0.000749569999999998, 0.0007495559999999984, 0.0007495829999999981, 0.0007495550000000059, 0.0007495559999999984, 0.000749569999999998, 0.0007495690000000055, 0.000749554999999999, 0.000749569999999998, 0.000749569999999998, 0.0007495689999999985, 0.000749569999999998, 0.000749569999999998, 0.0007495420000000058, 0.0007495409999999994, 0.0007495689999999985, 0.0007495840000000045, 0.0007495419999999989, 0.0007495689999999985, 0.0007495829999999981, 0.0007495840000000045, 0.0007495419999999989]</msg>
<status status="PASS" starttime="20201030 10:57:11.501" endtime="20201030 10:57:11.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.496" endtime="20201030 10:57:11.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.106" endtime="20201030 10:57:11.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.083" endtime="20201030 10:57:11.504"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:11.506" endtime="20201030 10:57:11.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.505" endtime="20201030 10:57:11.526"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.534" endtime="20201030 10:57:11.585"></status>
</kw>
<msg timestamp="20201030 10:57:11.585" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.533" endtime="20201030 10:57:11.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.588" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.586" endtime="20201030 10:57:11.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.589" endtime="20201030 10:57:11.590"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.530" endtime="20201030 10:57:11.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.528" endtime="20201030 10:57:11.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.598" endtime="20201030 10:57:11.884"></status>
</kw>
<msg timestamp="20201030 10:57:11.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017561194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018350736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.596" endtime="20201030 10:57:11.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017561194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018350736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.888" endtime="20201030 10:57:11.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.896" endtime="20201030 10:57:11.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.594" endtime="20201030 10:57:11.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.592" endtime="20201030 10:57:11.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:11.902" level="INFO">${PHILIP_RES} = [{'diff': 0.0007895420000000007}, {'diff': 0.0007895690000000004}, {'diff': 0.0007895969999999995}, {'diff': 0.000789597999999999}, {'diff': 0.0007896380000000022}, {'diff': 0.0007895969999999995}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:11.899" endtime="20201030 10:57:11.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:11.906" level="INFO">${RESULT} = {'diff': [0.0007895420000000007, 0.0007895690000000004, 0.0007895969999999995, 0.000789597999999999, 0.0007896380000000022, 0.0007895969999999995, 0.0007895690000000004, 0.0007895699999999999, 0.00078...</msg>
<status status="PASS" starttime="20201030 10:57:11.903" endtime="20201030 10:57:11.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.910" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:11.909" endtime="20201030 10:57:11.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.913" level="INFO">VALUE: [0.0007895420000000007, 0.0007895690000000004, 0.0007895969999999995, 0.000789597999999999, 0.0007896380000000022, 0.0007895969999999995, 0.0007895690000000004, 0.0007895699999999999, 0.0007895980000000025, 0.000789583, 0.000789583, 0.0007895969999999995, 0.000789597999999999, 0.0007895839999999994, 0.0007896390000000017, 0.000789583, 0.0007895689999999969, 0.0007895700000000033, 0.000789583999999996, 0.0007895830000000034, 0.0007895689999999969, 0.000789597000000003, 0.000789583999999996, 0.0007895830000000034, 0.0007895829999999965, 0.0007895830000000034, 0.000789583999999996, 0.0007895980000000025, 0.0007896109999999956, 0.0007895830000000034, 0.0007895689999999969, 0.0007895840000000029, 0.000789583999999996, 0.0007895830000000034, 0.0007895279999999977, 0.0007896250000000021, 0.0007896109999999956, 0.000789612000000002, 0.0007896109999999956, 0.0007895690000000039, 0.0008267500000000011, 0.0007896389999999948, 0.0007896110000000026, 0.0007895979999999955, 0.000789514000000005, 0.0007895829999999965, 0.0007895690000000039, 0.000789583999999996, 0.0007895840000000029, 0.0007896109999999956]</msg>
<status status="PASS" starttime="20201030 10:57:11.911" endtime="20201030 10:57:11.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.907" endtime="20201030 10:57:11.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.527" endtime="20201030 10:57:11.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.504" endtime="20201030 10:57:11.915"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:11.917" endtime="20201030 10:57:11.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.915" endtime="20201030 10:57:11.937"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.945" endtime="20201030 10:57:11.998"></status>
</kw>
<msg timestamp="20201030 10:57:11.998" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.943" endtime="20201030 10:57:11.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.001" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.999" endtime="20201030 10:57:12.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.002" endtime="20201030 10:57:12.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.941" endtime="20201030 10:57:12.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.939" endtime="20201030 10:57:12.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.014" endtime="20201030 10:57:12.313"></status>
</kw>
<msg timestamp="20201030 10:57:12.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017414639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018245208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:12.012" endtime="20201030 10:57:12.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017414639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018245208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:12.317" endtime="20201030 10:57:12.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.325" endtime="20201030 10:57:12.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.010" endtime="20201030 10:57:12.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.008" endtime="20201030 10:57:12.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:12.331" level="INFO">${PHILIP_RES} = [{'diff': 0.0008305689999999998}, {'diff': 0.0008306390000000011}, {'diff': 0.0008306390000000011}, {'diff': 0.0008306800000000003}, {'diff': 0.0008306670000000002}, {'diff': 0.0008305829999999993}, {...</msg>
<status status="PASS" starttime="20201030 10:57:12.328" endtime="20201030 10:57:12.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:12.335" level="INFO">${RESULT} = {'diff': [0.0008305689999999998, 0.0008306390000000011, 0.0008306390000000011, 0.0008306800000000003, 0.0008306670000000002, 0.0008305829999999993, 0.000830624999999998, 0.0008306250000000015, 0.00083...</msg>
<status status="PASS" starttime="20201030 10:57:12.332" endtime="20201030 10:57:12.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.339" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:12.338" endtime="20201030 10:57:12.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.342" level="INFO">VALUE: [0.0008305689999999998, 0.0008306390000000011, 0.0008306390000000011, 0.0008306800000000003, 0.0008306670000000002, 0.0008305829999999993, 0.000830624999999998, 0.0008306250000000015, 0.0008305550000000002, 0.0008305559999999997, 0.0008306389999999976, 0.0008306250000000015, 0.0008306390000000011, 0.0008305969999999989, 0.000830624999999998, 0.0008306530000000006, 0.0008306390000000011, 0.0008306390000000011, 0.0008306390000000011, 0.000830610999999995, 0.0008305970000000024, 0.0008306110000000019, 0.0008307230000000054, 0.0008306250000000015, 0.0008306250000000015, 0.0008307080000000064, 0.0008306250000000015, 0.0008306250000000015, 0.0008306530000000006, 0.0008306390000000011, 0.0008305969999999954, 0.0008306390000000011, 0.0008306390000000011, 0.000830610999999995, 0.0008306390000000011, 0.0008306250000000015, 0.0008306249999999946, 0.0008306250000000015, 0.0008306250000000015, 0.0008306390000000011, 0.0008305830000000028, 0.0008306390000000011, 0.0008306110000000019, 0.0008306670000000002, 0.0008306250000000015, 0.0008306390000000011, 0.0008306390000000011, 0.0008306530000000006, 0.0008306110000000019, 0.000830721999999999]</msg>
<status status="PASS" starttime="20201030 10:57:12.340" endtime="20201030 10:57:12.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.336" endtime="20201030 10:57:12.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.937" endtime="20201030 10:57:12.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.915" endtime="20201030 10:57:12.344"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:12.347" endtime="20201030 10:57:12.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.345" endtime="20201030 10:57:12.367"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.374" endtime="20201030 10:57:12.429"></status>
</kw>
<msg timestamp="20201030 10:57:12.429" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:12.373" endtime="20201030 10:57:12.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.431" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:12.430" endtime="20201030 10:57:12.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.433" endtime="20201030 10:57:12.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.370" endtime="20201030 10:57:12.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.369" endtime="20201030 10:57:12.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.441" endtime="20201030 10:57:12.727"></status>
</kw>
<msg timestamp="20201030 10:57:12.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017503167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018375833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:12.440" endtime="20201030 10:57:12.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017503167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018375833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:12.731" endtime="20201030 10:57:12.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.739" endtime="20201030 10:57:12.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.437" endtime="20201030 10:57:12.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.436" endtime="20201030 10:57:12.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:12.746" level="INFO">${PHILIP_RES} = [{'diff': 0.0008726660000000011}, {'diff': 0.0008727370000000019}, {'diff': 0.0008727219999999994}, {'diff': 0.0008727079999999998}, {'diff': 0.0008726949999999997}, {'diff': 0.0008726940000000002}, {...</msg>
<status status="PASS" starttime="20201030 10:57:12.742" endtime="20201030 10:57:12.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:12.750" level="INFO">${RESULT} = {'diff': [0.0008726660000000011, 0.0008727370000000019, 0.0008727219999999994, 0.0008727079999999998, 0.0008726949999999997, 0.0008726940000000002, 0.0008727360000000024, 0.0008727089999999993, 0.0008...</msg>
<status status="PASS" starttime="20201030 10:57:12.747" endtime="20201030 10:57:12.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.755" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:12.754" endtime="20201030 10:57:12.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.757" level="INFO">VALUE: [0.0008726660000000011, 0.0008727370000000019, 0.0008727219999999994, 0.0008727079999999998, 0.0008726949999999997, 0.0008726940000000002, 0.0008727360000000024, 0.0008727089999999993, 0.0008726799999999972, 0.0008727079999999998, 0.0008726949999999997, 0.0008727219999999994, 0.0008726949999999997, 0.0008726949999999997, 0.0008727079999999998, 0.0008726949999999997, 0.0008726799999999937, 0.0008727079999999998, 0.0008727089999999993, 0.0008726940000000002, 0.0008726949999999997, 0.0008727089999999993, 0.0008726800000000007, 0.0008726949999999997, 0.0008727079999999998, 0.0008727219999999994, 0.0008727089999999993, 0.0008726940000000002, 0.0008726940000000002, 0.0008727089999999993, 0.0008726940000000002, 0.0008727089999999993, 0.0008727079999999998, 0.0008726940000000002, 0.0008727230000000058, 0.0008726520000000015, 0.000872735999999999, 0.000872735999999999, 0.0008726940000000002, 0.0008726949999999997, 0.0008727079999999998, 0.0008727079999999998, 0.0008727089999999993, 0.0008727079999999998, 0.0008727219999999994, 0.0008726949999999997, 0.0008727079999999998, 0.0008726810000000071, 0.0008726950000000067, 0.0009055690000000088]</msg>
<status status="PASS" starttime="20201030 10:57:12.756" endtime="20201030 10:57:12.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.751" endtime="20201030 10:57:12.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.367" endtime="20201030 10:57:12.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.345" endtime="20201030 10:57:12.884"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:12.886" endtime="20201030 10:57:12.906"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.885" endtime="20201030 10:57:12.906"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.914" endtime="20201030 10:57:12.971"></status>
</kw>
<msg timestamp="20201030 10:57:12.972" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:12.913" endtime="20201030 10:57:12.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.977" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:12.975" endtime="20201030 10:57:12.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.980" endtime="20201030 10:57:12.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.910" endtime="20201030 10:57:12.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.908" endtime="20201030 10:57:12.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.998" endtime="20201030 10:57:13.290"></status>
</kw>
<msg timestamp="20201030 10:57:13.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017463083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018378847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:12.995" endtime="20201030 10:57:13.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017463083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018378847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.294" endtime="20201030 10:57:13.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.302" endtime="20201030 10:57:13.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.990" endtime="20201030 10:57:13.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.986" endtime="20201030 10:57:13.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:13.308" level="INFO">${PHILIP_RES} = [{'diff': 0.0009157639999999995}, {'diff': 0.0009157919999999986}, {'diff': 0.0009157769999999996}, {'diff': 0.0009158340000000008}, {'diff': 0.0009157920000000021}, {'diff': 0.0009157909999999991}, {...</msg>
<status status="PASS" starttime="20201030 10:57:13.305" endtime="20201030 10:57:13.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:13.312" level="INFO">${RESULT} = {'diff': [0.0009157639999999995, 0.0009157919999999986, 0.0009157769999999996, 0.0009158340000000008, 0.0009157920000000021, 0.0009157909999999991, 0.0009157920000000021, 0.0009158049999999987, 0.0009...</msg>
<status status="PASS" starttime="20201030 10:57:13.309" endtime="20201030 10:57:13.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.317" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:13.316" endtime="20201030 10:57:13.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.319" level="INFO">VALUE: [0.0009157639999999995, 0.0009157919999999986, 0.0009157769999999996, 0.0009158340000000008, 0.0009157920000000021, 0.0009157909999999991, 0.0009157920000000021, 0.0009158049999999987, 0.0009157360000000003, 0.0009157919999999986, 0.0009158610000000005, 0.0009157919999999986, 0.0009157769999999996, 0.000915777999999999, 0.000915777999999999, 0.000915778000000006, 0.000915777999999999, 0.0009157909999999991, 0.0009157499999999999, 0.0009157910000000061, 0.0009157639999999995, 0.0009157919999999986, 0.0009157909999999991, 0.0009157920000000055, 0.0009157909999999991, 0.000915777999999999, 0.0009157499999999999, 0.0009158049999999987, 0.000915777999999999, 0.0009157769999999996, 0.0009157919999999986, 0.0009546659999999998, 0.0009158059999999982, 0.0009158049999999987, 0.0009157920000000055, 0.000915777999999999, 0.0009157909999999991, 0.0009158059999999982, 0.0009157499999999999, 0.000915777999999999, 0.0009157919999999986, 0.0009158189999999983, 0.0009158060000000051, 0.0009157909999999991, 0.0009158059999999982, 0.0009157919999999986, 0.0009157909999999991, 0.000915778000000006, 0.0009157909999999991, 0.000915778000000006]</msg>
<status status="PASS" starttime="20201030 10:57:13.318" endtime="20201030 10:57:13.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.313" endtime="20201030 10:57:13.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.907" endtime="20201030 10:57:13.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.884" endtime="20201030 10:57:13.321"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.323" endtime="20201030 10:57:13.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.322" endtime="20201030 10:57:13.343"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.351" endtime="20201030 10:57:13.411"></status>
</kw>
<msg timestamp="20201030 10:57:13.411" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.350" endtime="20201030 10:57:13.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.414" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.412" endtime="20201030 10:57:13.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.415" endtime="20201030 10:57:13.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.347" endtime="20201030 10:57:13.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.345" endtime="20201030 10:57:13.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.425" endtime="20201030 10:57:13.711"></status>
</kw>
<msg timestamp="20201030 10:57:13.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017656986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018616792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.423" endtime="20201030 10:57:13.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017656986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018616792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.715" endtime="20201030 10:57:13.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.723" endtime="20201030 10:57:13.725"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.420" endtime="20201030 10:57:13.725"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.419" endtime="20201030 10:57:13.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:13.730" level="INFO">${PHILIP_RES} = [{'diff': 0.0009598060000000005}, {'diff': 0.0009599029999999981}, {'diff': 0.000959889000000002}, {'diff': 0.0009599029999999981}, {'diff': 0.0009599310000000007}, {'diff': 0.0009599030000000015}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:13.727" endtime="20201030 10:57:13.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:13.734" level="INFO">${RESULT} = {'diff': [0.0009598060000000005, 0.0009599029999999981, 0.000959889000000002, 0.0009599029999999981, 0.0009599310000000007, 0.0009599030000000015, 0.0009598889999999985, 0.0009599020000000021, 0.00095...</msg>
<status status="PASS" starttime="20201030 10:57:13.731" endtime="20201030 10:57:13.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.739" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:13.738" endtime="20201030 10:57:13.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.741" level="INFO">VALUE: [0.0009598060000000005, 0.0009599029999999981, 0.000959889000000002, 0.0009599029999999981, 0.0009599310000000007, 0.0009599030000000015, 0.0009598889999999985, 0.0009599020000000021, 0.0009599580000000003, 0.0009599030000000015, 0.0009598880000000025, 0.0009599169999999976, 0.0009599030000000015, 0.0009598889999999985, 0.000959903000000005, 0.0009598889999999985, 0.0009599169999999976, 0.000959903000000005, 0.000959887999999999, 0.0009598889999999985, 0.0009599449999999968, 0.0009599020000000055, 0.0009599169999999976, 0.0009599029999999981, 0.0009598890000000054, 0.0009599029999999981, 0.0009598889999999985, 0.000959903000000005, 0.0009598749999999989, 0.0009599029999999981, 0.0009599029999999981, 0.000959887999999999, 0.0009599029999999981, 0.0009599029999999981, 0.0009598890000000054, 0.0009599029999999981, 0.0009598889999999985, 0.0009599170000000046, 0.0009599029999999981, 0.0009599019999999986, 0.0009599029999999981, 0.0009599310000000041, 0.000959887999999999, 0.0009599020000000055, 0.0009599019999999986, 0.0009599299999999977, 0.0009598469999999998, 0.0009599019999999986, 0.0009598749999999989, 0.0009599590000000102]</msg>
<status status="PASS" starttime="20201030 10:57:13.740" endtime="20201030 10:57:13.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.735" endtime="20201030 10:57:13.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.344" endtime="20201030 10:57:13.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.321" endtime="20201030 10:57:13.744"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.747" endtime="20201030 10:57:13.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.745" endtime="20201030 10:57:13.767"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.776" endtime="20201030 10:57:13.840"></status>
</kw>
<msg timestamp="20201030 10:57:13.841" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.773" endtime="20201030 10:57:13.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.846" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.843" endtime="20201030 10:57:13.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.848" endtime="20201030 10:57:13.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.771" endtime="20201030 10:57:13.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.769" endtime="20201030 10:57:13.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.867" endtime="20201030 10:57:14.167"></status>
</kw>
<msg timestamp="20201030 10:57:14.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020700222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02170525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:13.863" endtime="20201030 10:57:14.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020700222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02170525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:14.171" endtime="20201030 10:57:14.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.179" endtime="20201030 10:57:14.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.858" endtime="20201030 10:57:14.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.855" endtime="20201030 10:57:14.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:14.185" level="INFO">${PHILIP_RES} = [{'diff': 0.001005027999999998}, {'diff': 0.0010050409999999982}, {'diff': 0.0010050409999999982}, {'diff': 0.0010050269999999986}, {'diff': 0.0010050130000000025}, {'diff': 0.0010050130000000025}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:14.182" endtime="20201030 10:57:14.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.190" level="INFO">${RESULT} = {'diff': [0.001005027999999998, 0.0010050409999999982, 0.0010050409999999982, 0.0010050269999999986, 0.0010050130000000025, 0.0010050130000000025, 0.001005012999999999, 0.001004999999999999, 0.0010050...</msg>
<status status="PASS" starttime="20201030 10:57:14.186" endtime="20201030 10:57:14.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.194" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:14.193" endtime="20201030 10:57:14.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.196" level="INFO">VALUE: [0.001005027999999998, 0.0010050409999999982, 0.0010050409999999982, 0.0010050269999999986, 0.0010050130000000025, 0.0010050130000000025, 0.001005012999999999, 0.001004999999999999, 0.001005012999999999, 0.001005027000000002, 0.0010050419999999977, 0.0010050409999999982, 0.0010050270000000056, 0.0010050409999999982, 0.0010050410000000051, 0.0010050549999999978, 0.0010050409999999982, 0.0010050269999999986, 0.0010387909999999972, 0.0010050410000000051, 0.0010050139999999985, 0.0010050689999999973, 0.0010050550000000047, 0.0010050409999999982, 0.0010050830000000038, 0.0010050269999999986, 0.0010050409999999982, 0.001005012999999999, 0.0010050139999999985, 0.001005013000000006, 0.0010050269999999986, 0.001005012999999999, 0.0010050269999999986, 0.001005012999999999, 0.0010050269999999986, 0.0010050269999999986, 0.0010050270000000056, 0.001005012999999999, 0.0010049859999999924, 0.0010050270000000056, 0.001005041000000012, 0.0010050270000000056, 0.0010050270000000056, 0.001005012999999999, 0.0010050969999999965, 0.001005111000000003, 0.0010050270000000056, 0.0010050550000000047, 0.001005012999999999, 0.0010050550000000047]</msg>
<status status="PASS" starttime="20201030 10:57:14.195" endtime="20201030 10:57:14.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.191" endtime="20201030 10:57:14.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.767" endtime="20201030 10:57:14.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.745" endtime="20201030 10:57:14.198"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.201" endtime="20201030 10:57:14.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.199" endtime="20201030 10:57:14.220"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.228" endtime="20201030 10:57:14.292"></status>
</kw>
<msg timestamp="20201030 10:57:14.292" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.227" endtime="20201030 10:57:14.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.295" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.294" endtime="20201030 10:57:14.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.296" endtime="20201030 10:57:14.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.224" endtime="20201030 10:57:14.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.223" endtime="20201030 10:57:14.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.305" endtime="20201030 10:57:14.591"></status>
</kw>
<msg timestamp="20201030 10:57:14.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017458611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018509833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.303" endtime="20201030 10:57:14.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017458611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018509833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.595" endtime="20201030 10:57:14.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.603" endtime="20201030 10:57:14.604"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.301" endtime="20201030 10:57:14.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.299" endtime="20201030 10:57:14.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:14.609" level="INFO">${PHILIP_RES} = [{'diff': 0.001051222000000001}, {'diff': 0.0010511939999999984}, {'diff': 0.0010511669999999987}, {'diff': 0.0010511800000000023}, {'diff': 0.0010511810000000017}, {'diff': 0.0010511659999999992}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:14.606" endtime="20201030 10:57:14.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.613" level="INFO">${RESULT} = {'diff': [0.001051222000000001, 0.0010511939999999984, 0.0010511669999999987, 0.0010511800000000023, 0.0010511810000000017, 0.0010511659999999992, 0.0010511529999999991, 0.0010511799999999988, 0.00105...</msg>
<status status="PASS" starttime="20201030 10:57:14.610" endtime="20201030 10:57:14.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.617" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:14.616" endtime="20201030 10:57:14.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.620" level="INFO">VALUE: [0.001051222000000001, 0.0010511939999999984, 0.0010511669999999987, 0.0010511800000000023, 0.0010511810000000017, 0.0010511659999999992, 0.0010511529999999991, 0.0010511799999999988, 0.0010511529999999991, 0.0010511940000000018, 0.0010511810000000017, 0.0010511799999999988, 0.0010511809999999983, 0.0010511670000000056, 0.0010511799999999988, 0.0010511809999999983, 0.0010511659999999992, 0.0010511809999999983, 0.001051236000000004, 0.0010511389999999995, 0.0010511659999999992, 0.0010511939999999984, 0.0010511799999999988, 0.0010512220000000044, 0.0010511809999999983, 0.0010511809999999983, 0.0010512080000000049, 0.0010511669999999987, 0.001051207999999998, 0.0010511809999999983, 0.0010511799999999988, 0.0010511810000000052, 0.0010511809999999983, 0.0010511799999999988, 0.0010511529999999991, 0.0010511799999999988, 0.0010511810000000052, 0.0010511939999999984, 0.0010511950000000048, 0.0010511669999999917, 0.0010511390000000065, 0.0010511799999999988, 0.0010511810000000121, 0.0010511949999999909, 0.0010511660000000062, 0.0010511809999999983, 0.0010511939999999914, 0.0010511809999999983, 0.0010511669999999917, 0.0010511810000000121]</msg>
<status status="PASS" starttime="20201030 10:57:14.618" endtime="20201030 10:57:14.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.614" endtime="20201030 10:57:14.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.221" endtime="20201030 10:57:14.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.199" endtime="20201030 10:57:14.622"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.624" endtime="20201030 10:57:14.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.623" endtime="20201030 10:57:14.644"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.652" endtime="20201030 10:57:14.720"></status>
</kw>
<msg timestamp="20201030 10:57:14.721" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.650" endtime="20201030 10:57:14.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.726" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.723" endtime="20201030 10:57:14.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.729" endtime="20201030 10:57:14.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.648" endtime="20201030 10:57:14.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.646" endtime="20201030 10:57:14.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.749" endtime="20201030 10:57:15.041"></status>
</kw>
<msg timestamp="20201030 10:57:15.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017433944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018532278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.746" endtime="20201030 10:57:15.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017433944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018532278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.045" endtime="20201030 10:57:15.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.053" endtime="20201030 10:57:15.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.741" endtime="20201030 10:57:15.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.737" endtime="20201030 10:57:15.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:15.059" level="INFO">${PHILIP_RES} = [{'diff': 0.0010983339999999994}, {'diff': 0.0010983890000000017}, {'diff': 0.0010983750000000021}, {'diff': 0.0010983050000000008}, {'diff': 0.0010983469999999995}, {'diff': 0.0010983339999999994}, {...</msg>
<status status="PASS" starttime="20201030 10:57:15.056" endtime="20201030 10:57:15.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:15.063" level="INFO">${RESULT} = {'diff': [0.0010983339999999994, 0.0010983890000000017, 0.0010983750000000021, 0.0010983050000000008, 0.0010983469999999995, 0.0010983339999999994, 0.001098360999999999, 0.0010983469999999995, 0.00109...</msg>
<status status="PASS" starttime="20201030 10:57:15.060" endtime="20201030 10:57:15.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.067" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:15.066" endtime="20201030 10:57:15.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.070" level="INFO">VALUE: [0.0010983339999999994, 0.0010983890000000017, 0.0010983750000000021, 0.0010983050000000008, 0.0010983469999999995, 0.0010983339999999994, 0.001098360999999999, 0.0010983469999999995, 0.0010983469999999995, 0.0010984030000000013, 0.001098347000000003, 0.0010983469999999995, 0.0010983469999999995, 0.0010983749999999987, 0.001098360999999999, 0.0010983469999999995, 0.001098333, 0.001098347999999999, 0.001098333, 0.001098360999999999, 0.0010983750000000056, 0.0010983620000000055, 0.001098360999999999, 0.0010983469999999995, 0.0010983749999999987, 0.0010983749999999987, 0.001098333, 0.001098360999999999, 0.001098360999999999, 0.0010984029999999978, 0.0010982910000000012, 0.001098360999999999, 0.0010983469999999995, 0.001098347999999999, 0.0010983889999999982, 0.0010983749999999987, 0.0010983469999999995, 0.0010983890000000052, 0.001098333, 0.0010983469999999995, 0.0010984300000000113, 0.0010983609999999921, 0.0010983609999999921, 0.0010983199999999999, 0.0010983619999999916, 0.0010983749999999987, 0.0010983469999999995, 0.0010983469999999995, 0.001098347999999999, 0.0010983609999999921]</msg>
<status status="PASS" starttime="20201030 10:57:15.068" endtime="20201030 10:57:15.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.064" endtime="20201030 10:57:15.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.644" endtime="20201030 10:57:15.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.622" endtime="20201030 10:57:15.072"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:15.075" endtime="20201030 10:57:15.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.073" endtime="20201030 10:57:15.094"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.102" endtime="20201030 10:57:15.171"></status>
</kw>
<msg timestamp="20201030 10:57:15.171" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.101" endtime="20201030 10:57:15.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.174" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.173" endtime="20201030 10:57:15.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.175" endtime="20201030 10:57:15.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.098" endtime="20201030 10:57:15.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.096" endtime="20201030 10:57:15.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.184" endtime="20201030 10:57:15.470"></status>
</kw>
<msg timestamp="20201030 10:57:15.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017526944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018673472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.182" endtime="20201030 10:57:15.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017526944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018673472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.474" endtime="20201030 10:57:15.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.482" endtime="20201030 10:57:15.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.180" endtime="20201030 10:57:15.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.178" endtime="20201030 10:57:15.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:15.488" level="INFO">${PHILIP_RES} = [{'diff': 0.0011465280000000008}, {'diff': 0.0011465550000000005}, {'diff': 0.0011465420000000004}, {'diff': 0.0011465420000000004}, {'diff': 0.0011465420000000004}, {'diff': 0.0011597919999999998}, {...</msg>
<status status="PASS" starttime="20201030 10:57:15.485" endtime="20201030 10:57:15.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:15.493" level="INFO">${RESULT} = {'diff': [0.0011465280000000008, 0.0011465550000000005, 0.0011465420000000004, 0.0011465420000000004, 0.0011465420000000004, 0.0011597919999999998, 0.0011465420000000004, 0.0011465550000000005, 0.0011...</msg>
<status status="PASS" starttime="20201030 10:57:15.489" endtime="20201030 10:57:15.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.497" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:15.496" endtime="20201030 10:57:15.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.501" level="INFO">VALUE: [0.0011465280000000008, 0.0011465550000000005, 0.0011465420000000004, 0.0011465420000000004, 0.0011465420000000004, 0.0011597919999999998, 0.0011465420000000004, 0.0011465550000000005, 0.0011465270000000014, 0.001146541000000001, 0.001146541999999997, 0.0011465420000000004, 0.001146556, 0.001146556, 0.0011465420000000004, 0.0011465000000000017, 0.0011465549999999936, 0.0011465550000000005, 0.001146583999999999, 0.0011465420000000004, 0.0011465420000000004, 0.0011465420000000004, 0.0011465550000000005, 0.0011465550000000005, 0.0011465279999999939, 0.001146556, 0.0011465420000000004, 0.0011465699999999995, 0.0011465420000000004, 0.0011465420000000004, 0.001146541000000001, 0.0011465000000000017, 0.001146569, 0.0011465280000000008, 0.0011465280000000008, 0.001146556, 0.001146555999999993, 0.001146541000000001, 0.001146541000000001, 0.0011465550000000074, 0.0011465279999999939, 0.001146556000000007, 0.001146556000000007, 0.0011465420000000004, 0.001146541000000001, 0.001146541000000001, 0.001146541000000001, 0.0011465420000000004, 0.0011465140000000013, 0.0011465420000000004]</msg>
<status status="PASS" starttime="20201030 10:57:15.498" endtime="20201030 10:57:15.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.494" endtime="20201030 10:57:15.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.095" endtime="20201030 10:57:15.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.073" endtime="20201030 10:57:15.505"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:15.510" endtime="20201030 10:57:15.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.507" endtime="20201030 10:57:15.532"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.549" endtime="20201030 10:57:15.623"></status>
</kw>
<msg timestamp="20201030 10:57:15.624" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.546" endtime="20201030 10:57:15.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.629" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.627" endtime="20201030 10:57:15.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.632" endtime="20201030 10:57:15.635"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.540" endtime="20201030 10:57:15.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.537" endtime="20201030 10:57:15.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.650" endtime="20201030 10:57:15.943"></status>
</kw>
<msg timestamp="20201030 10:57:15.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029440014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030635736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.647" endtime="20201030 10:57:15.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029440014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030635736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.947" endtime="20201030 10:57:15.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.955" endtime="20201030 10:57:15.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.642" endtime="20201030 10:57:15.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.638" endtime="20201030 10:57:15.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:15.962" level="INFO">${PHILIP_RES} = [{'diff': 0.0011957219999999998}, {'diff': 0.0011957639999999985}, {'diff': 0.001195764000000002}, {'diff': 0.001195764000000002}, {'diff': 0.001195764000000002}, {'diff': 0.0011957360000000028}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:15.959" endtime="20201030 10:57:15.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:15.966" level="INFO">${RESULT} = {'diff': [0.0011957219999999998, 0.0011957639999999985, 0.001195764000000002, 0.001195764000000002, 0.001195764000000002, 0.0011957360000000028, 0.0011957500000000024, 0.001195764000000002, 0.00119577...</msg>
<status status="PASS" starttime="20201030 10:57:15.963" endtime="20201030 10:57:15.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.970" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:15.969" endtime="20201030 10:57:15.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.972" level="INFO">VALUE: [0.0011957219999999998, 0.0011957639999999985, 0.001195764000000002, 0.001195764000000002, 0.001195764000000002, 0.0011957360000000028, 0.0011957500000000024, 0.001195764000000002, 0.0011957780000000015, 0.0011958330000000003, 0.0011957360000000028, 0.0011957500000000024, 0.0011957360000000028, 0.0012252360000000045, 0.001195763999999995, 0.0011956670000000044, 0.0011957919999999941, 0.0011957780000000015, 0.0011957499999999954, 0.0011957500000000024, 0.001195763999999995, 0.0011957500000000024, 0.001195763999999995, 0.0011957500000000024, 0.0011957499999999954, 0.001195763999999995, 0.0011957499999999954, 0.001195763999999988, 0.0011957500000000093, 0.001195763999999988, 0.0011958329999999934, 0.001195735999999989, 0.0011957500000000093, 0.001195764000000002, 0.001195764000000002, 0.0011957780000000084, 0.001195764000000002, 0.0011958330000000073, 0.001195764000000002, 0.0011957499999999954, 0.0011957360000000028, 0.001195764000000002, 0.0011957360000000028, 0.0011957500000000093, 0.0011957360000000028, 0.0011957500000000093, 0.001195764000000002, 0.001195764000000002, 0.0011957229999999958, 0.0011957780000000084]</msg>
<status status="PASS" starttime="20201030 10:57:15.971" endtime="20201030 10:57:15.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.966" endtime="20201030 10:57:15.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.534" endtime="20201030 10:57:15.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.506" endtime="20201030 10:57:15.974"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:15.976" endtime="20201030 10:57:15.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.975" endtime="20201030 10:57:15.996"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.004" endtime="20201030 10:57:16.079"></status>
</kw>
<msg timestamp="20201030 10:57:16.079" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.003" endtime="20201030 10:57:16.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.082" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.080" endtime="20201030 10:57:16.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.083" endtime="20201030 10:57:16.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.000" endtime="20201030 10:57:16.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.998" endtime="20201030 10:57:16.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.095" endtime="20201030 10:57:16.381"></status>
</kw>
<msg timestamp="20201030 10:57:16.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017727361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018973306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.093" endtime="20201030 10:57:16.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017727361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018973306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.385" endtime="20201030 10:57:16.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.393" endtime="20201030 10:57:16.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.091" endtime="20201030 10:57:16.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.089" endtime="20201030 10:57:16.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:16.399" level="INFO">${PHILIP_RES} = [{'diff': 0.0012459449999999983}, {'diff': 0.0012460140000000001}, {'diff': 0.0012459720000000014}, {'diff': 0.0012460279999999997}, {'diff': 0.001245986000000001}, {'diff': 0.0012460000000000006}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:16.396" endtime="20201030 10:57:16.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.403" level="INFO">${RESULT} = {'diff': [0.0012459449999999983, 0.0012460140000000001, 0.0012459720000000014, 0.0012460279999999997, 0.001245986000000001, 0.0012460000000000006, 0.0012460000000000006, 0.0012459999999999971, 0.00124...</msg>
<status status="PASS" starttime="20201030 10:57:16.400" endtime="20201030 10:57:16.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.407" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:16.406" endtime="20201030 10:57:16.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.410" level="INFO">VALUE: [0.0012459449999999983, 0.0012460140000000001, 0.0012459720000000014, 0.0012460279999999997, 0.001245986000000001, 0.0012460000000000006, 0.0012460000000000006, 0.0012459999999999971, 0.001245986000000001, 0.0012460000000000006, 0.001245987000000004, 0.0012459860000000045, 0.0012459590000000048, 0.0012459860000000045, 0.001246000000000004, 0.001245987000000004, 0.0012754859999999993, 0.0012459860000000045, 0.001246000000000004, 0.001246000000000004, 0.0012459999999999971, 0.0012460419999999958, 0.0012459449999999983, 0.001245986999999997, 0.0012459999999999971, 0.0012460550000000029, 0.0012459859999999975, 0.001246000000000004, 0.001246000000000004, 0.001246000000000004, 0.001246000000000004, 0.0012459860000000045, 0.0012459439999999988, 0.0012460269999999968, 0.0012459440000000127, 0.001245971999999998, 0.0012459999999999971, 0.001245971999999998, 0.0012459999999999971, 0.0012459999999999971, 0.001245971999999998, 0.0012460140000000036, 0.0012459860000000045, 0.0012459999999999971, 0.0012459999999999971, 0.0012460410000000033, 0.0012459860000000045, 0.0012459999999999971, 0.0012460269999999968, 0.0012459860000000045]</msg>
<status status="PASS" starttime="20201030 10:57:16.408" endtime="20201030 10:57:16.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.404" endtime="20201030 10:57:16.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.997" endtime="20201030 10:57:16.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.974" endtime="20201030 10:57:16.412"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.416" endtime="20201030 10:57:16.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.413" endtime="20201030 10:57:16.439"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.455" endtime="20201030 10:57:16.536"></status>
</kw>
<msg timestamp="20201030 10:57:16.537" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.452" endtime="20201030 10:57:16.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.542" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.539" endtime="20201030 10:57:16.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.544" endtime="20201030 10:57:16.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.447" endtime="20201030 10:57:16.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.443" endtime="20201030 10:57:16.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.562" endtime="20201030 10:57:16.854"></status>
</kw>
<msg timestamp="20201030 10:57:16.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029430889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030728111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.559" endtime="20201030 10:57:16.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029430889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030728111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.858" endtime="20201030 10:57:16.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.866" endtime="20201030 10:57:16.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.554" endtime="20201030 10:57:16.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.550" endtime="20201030 10:57:16.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:16.872" level="INFO">${PHILIP_RES} = [{'diff': 0.0012972220000000007}, {'diff': 0.0012972639999999994}, {'diff': 0.0012972639999999994}, {'diff': 0.0012972360000000002}, {'diff': 0.0012972360000000002}, {'diff': 0.0012972360000000002}, {...</msg>
<status status="PASS" starttime="20201030 10:57:16.869" endtime="20201030 10:57:16.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.877" level="INFO">${RESULT} = {'diff': [0.0012972220000000007, 0.0012972639999999994, 0.0012972639999999994, 0.0012972360000000002, 0.0012972360000000002, 0.0012972360000000002, 0.0012972499999999998, 0.0012972220000000007, 0.0012...</msg>
<status status="PASS" starttime="20201030 10:57:16.873" endtime="20201030 10:57:16.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.881" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:16.880" endtime="20201030 10:57:16.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.884" level="INFO">VALUE: [0.0012972220000000007, 0.0012972639999999994, 0.0012972639999999994, 0.0012972360000000002, 0.0012972360000000002, 0.0012972360000000002, 0.0012972499999999998, 0.0012972220000000007, 0.0012972360000000002, 0.0012972499999999998, 0.0012972640000000063, 0.0012972360000000002, 0.0012972499999999998, 0.0012972499999999998, 0.0012972499999999998, 0.001297291000000006, 0.0012972639999999994, 0.0012972639999999994, 0.0012972639999999994, 0.001297277999999999, 0.0013301520000000011, 0.0012972639999999994, 0.0012972640000000063, 0.0012972500000000067, 0.0012972079999999941, 0.0012972499999999998, 0.0012972359999999933, 0.0012972499999999998, 0.0012972500000000137, 0.0012973049999999986, 0.0012972639999999924, 0.0012972499999999998, 0.001297305999999998, 0.0012972640000000063, 0.0012972630000000068, 0.0012972640000000063, 0.0012972230000000001, 0.0012972499999999998, 0.0012972769999999995, 0.001297277999999999, 0.001297277999999999, 0.0012972499999999998, 0.0012972640000000063, 0.0012972499999999998, 0.001297277999999999, 0.0012972639999999924, 0.001297305999999998, 0.0012972499999999998, 0.0012972639999999924, 0.0012972640000000063]</msg>
<status status="PASS" starttime="20201030 10:57:16.882" endtime="20201030 10:57:16.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.878" endtime="20201030 10:57:16.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.440" endtime="20201030 10:57:16.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.413" endtime="20201030 10:57:16.885"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.888" endtime="20201030 10:57:16.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.886" endtime="20201030 10:57:16.908"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.916" endtime="20201030 10:57:16.995"></status>
</kw>
<msg timestamp="20201030 10:57:16.996" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.914" endtime="20201030 10:57:16.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.998" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.997" endtime="20201030 10:57:16.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.999" endtime="20201030 10:57:17.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.911" endtime="20201030 10:57:17.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.910" endtime="20201030 10:57:17.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.008" endtime="20201030 10:57:17.294"></status>
</kw>
<msg timestamp="20201030 10:57:17.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017471514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018821, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:17.007" endtime="20201030 10:57:17.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017471514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018821, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:17.298" endtime="20201030 10:57:17.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.306" endtime="20201030 10:57:17.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.004" endtime="20201030 10:57:17.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.002" endtime="20201030 10:57:17.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:17.313" level="INFO">${PHILIP_RES} = [{'diff': 0.0013494860000000004}, {'diff': 0.0013495419999999987}, {'diff': 0.0013495409999999992}, {'diff': 0.0013495}, {'diff': 0.0013495139999999996}, {'diff': 0.0013494720000000009}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:17.310" endtime="20201030 10:57:17.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:17.317" level="INFO">${RESULT} = {'diff': [0.0013494860000000004, 0.0013495419999999987, 0.0013495409999999992, 0.0013495, 0.0013495139999999996, 0.0013494720000000009, 0.0013494860000000004, 0.0013495419999999987, 0.001349513, 0.001...</msg>
<status status="PASS" starttime="20201030 10:57:17.314" endtime="20201030 10:57:17.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.321" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:17.320" endtime="20201030 10:57:17.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.324" level="INFO">VALUE: [0.0013494860000000004, 0.0013495419999999987, 0.0013495409999999992, 0.0013495, 0.0013495139999999996, 0.0013494720000000009, 0.0013494860000000004, 0.0013495419999999987, 0.001349513, 0.0013495280000000026, 0.0013495280000000026, 0.001349486000000004, 0.0013495280000000026, 0.0013495420000000022, 0.0013495130000000036, 0.0013495280000000026, 0.0013495280000000026, 0.001349597000000001, 0.001349485999999997, 0.0013892500000000016, 0.0013495279999999957, 0.0013495269999999962, 0.0013495419999999952, 0.0013495279999999957, 0.0013495269999999962, 0.0013495560000000018, 0.0013495419999999952, 0.0013495279999999957, 0.0013495420000000022, 0.0013495280000000026, 0.0013495280000000026, 0.0013495280000000026, 0.0013495279999999887, 0.0013495409999999958, 0.001349583999999987, 0.001349513999999996, 0.0013495279999999887, 0.0013495279999999887, 0.0013495279999999887, 0.0013495280000000026, 0.0013495279999999887, 0.0013495280000000026, 0.0013495420000000091, 0.0013495280000000026, 0.0013495280000000026, 0.0013495280000000026, 0.0013495560000000018, 0.0013495280000000026, 0.0013495280000000026, 0.0013495270000000031]</msg>
<status status="PASS" starttime="20201030 10:57:17.322" endtime="20201030 10:57:17.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.317" endtime="20201030 10:57:17.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.908" endtime="20201030 10:57:17.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.886" endtime="20201030 10:57:17.328"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:17.332" endtime="20201030 10:57:17.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.329" endtime="20201030 10:57:17.355"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.372" endtime="20201030 10:57:17.456"></status>
</kw>
<msg timestamp="20201030 10:57:17.457" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.368" endtime="20201030 10:57:17.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.461" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.459" endtime="20201030 10:57:17.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.464" endtime="20201030 10:57:17.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.363" endtime="20201030 10:57:17.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.359" endtime="20201030 10:57:17.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.484" endtime="20201030 10:57:17.776"></status>
</kw>
<msg timestamp="20201030 10:57:17.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029453347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030856125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.481" endtime="20201030 10:57:17.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029453347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030856125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.781" endtime="20201030 10:57:17.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.789" endtime="20201030 10:57:17.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.476" endtime="20201030 10:57:17.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.472" endtime="20201030 10:57:17.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:17.795" level="INFO">${PHILIP_RES} = [{'diff': 0.0014027780000000004}, {'diff': 0.0014028610000000018}, {'diff': 0.001402819999999999}, {'diff': 0.001402792}, {'diff': 0.0014027780000000004}, {'diff': 0.0014028060000000064}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:17.792" endtime="20201030 10:57:17.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:17.799" level="INFO">${RESULT} = {'diff': [0.0014027780000000004, 0.0014028610000000018, 0.001402819999999999, 0.001402792, 0.0014027780000000004, 0.0014028060000000064, 0.0014028889999999974, 0.0014028469999999987, 0.001402833999999...</msg>
<status status="PASS" starttime="20201030 10:57:17.796" endtime="20201030 10:57:17.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.803" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:17.802" endtime="20201030 10:57:17.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.806" level="INFO">VALUE: [0.0014027780000000004, 0.0014028610000000018, 0.001402819999999999, 0.001402792, 0.0014027780000000004, 0.0014028060000000064, 0.0014028889999999974, 0.0014028469999999987, 0.0014028339999999986, 0.0014028749999999979, 0.0014028329999999992, 0.0014027630000000013, 0.0014027770000000009, 0.0014028469999999987, 0.0014028469999999987, 0.001402805, 0.001402792, 0.0014028189999999996, 0.0014028749999999979, 0.001449416000000002, 0.0014028189999999996, 0.001402819999999999, 0.001402833000000006, 0.0014028609999999914, 0.0014028329999999922, 0.0014028329999999922, 0.001402848000000012, 0.001402833000000006, 0.0014028189999999996, 0.001402833000000006, 0.001402805000000007, 0.0014028469999999987, 0.001402833000000006, 0.0014028329999999922, 0.001402792, 0.0014027780000000073, 0.001402819999999999, 0.001402819999999999, 0.001402819999999999, 0.0014028479999999982, 0.0014028060000000064, 0.001402820000000013, 0.0014028469999999987, 0.001402792, 0.0014028189999999996, 0.0014028329999999922, 0.0014028469999999987, 0.0014028329999999922, 0.0014028189999999996, 0.0014028610000000052]</msg>
<status status="PASS" starttime="20201030 10:57:17.804" endtime="20201030 10:57:17.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.800" endtime="20201030 10:57:17.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.356" endtime="20201030 10:57:17.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.328" endtime="20201030 10:57:17.865"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:17.867" endtime="20201030 10:57:17.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.866" endtime="20201030 10:57:17.887"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.895" endtime="20201030 10:57:17.980"></status>
</kw>
<msg timestamp="20201030 10:57:17.981" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.894" endtime="20201030 10:57:17.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.983" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.982" endtime="20201030 10:57:17.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.985" endtime="20201030 10:57:17.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.891" endtime="20201030 10:57:17.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.889" endtime="20201030 10:57:17.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.993" endtime="20201030 10:57:18.286"></status>
</kw>
<msg timestamp="20201030 10:57:18.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019068153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.992" endtime="20201030 10:57:18.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019068153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.295" endtime="20201030 10:57:18.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.313" endtime="20201030 10:57:18.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.989" endtime="20201030 10:57:18.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.988" endtime="20201030 10:57:18.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:18.326" level="INFO">${PHILIP_RES} = [{'diff': 0.001457097000000001}, {'diff': 0.0014571529999999992}, {'diff': 0.0014571389999999997}, {'diff': 0.001457125}, {'diff': 0.0014571389999999997}, {'diff': 0.0014570689999999983}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:18.320" endtime="20201030 10:57:18.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:18.336" level="INFO">${RESULT} = {'diff': [0.001457097000000001, 0.0014571529999999992, 0.0014571389999999997, 0.001457125, 0.0014571389999999997, 0.0014570689999999983, 0.0014571950000000014, 0.0014572230000000005, 0.001457166999999...</msg>
<status status="PASS" starttime="20201030 10:57:18.328" endtime="20201030 10:57:18.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.345" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:18.343" endtime="20201030 10:57:18.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.347" level="INFO">VALUE: [0.001457097000000001, 0.0014571529999999992, 0.0014571389999999997, 0.001457125, 0.0014571389999999997, 0.0014570689999999983, 0.0014571950000000014, 0.0014572230000000005, 0.0014571669999999953, 0.001457110999999997, 0.0014571380000000037, 0.0014570830000000048, 0.0014571529999999958, 0.0014571659999999959, 0.0014571250000000036, 0.0014571529999999958, 0.001457082999999998, 0.0014572080000000015, 0.0014571670000000023, 0.0014571389999999962, 0.0014908889999999952, 0.0014571390000000031, 0.0014571670000000023, 0.0014571389999999962, 0.0014571249999999966, 0.001457194000000002, 0.0014571520000000032, 0.0014571660000000028, 0.0014572080000000015, 0.0014570699999999909, 0.0014571810000000018, 0.00145713900000001, 0.0014571530000000027, 0.0014571389999999962, 0.0014571389999999962, 0.0014571530000000027, 0.0014571530000000027, 0.0014571529999999888, 0.0014571379999999967, 0.0014571379999999967, 0.0014571389999999962, 0.0014571529999999888, 0.0014571389999999962, 0.0014571660000000097, 0.0014571530000000027, 0.0014571669999999953, 0.0014571530000000027, 0.0014571530000000027, 0.0014571389999999962, 0.0014570970000000044]</msg>
<status status="PASS" starttime="20201030 10:57:18.346" endtime="20201030 10:57:18.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.338" endtime="20201030 10:57:18.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.888" endtime="20201030 10:57:18.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.865" endtime="20201030 10:57:18.349"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.351" endtime="20201030 10:57:18.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.350" endtime="20201030 10:57:18.371"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.379" endtime="20201030 10:57:18.467"></status>
</kw>
<msg timestamp="20201030 10:57:18.468" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.378" endtime="20201030 10:57:18.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.470" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.469" endtime="20201030 10:57:18.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.471" endtime="20201030 10:57:18.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.375" endtime="20201030 10:57:18.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.373" endtime="20201030 10:57:18.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.480" endtime="20201030 10:57:18.766"></status>
</kw>
<msg timestamp="20201030 10:57:18.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017526306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01903875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:18.479" endtime="20201030 10:57:18.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017526306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01903875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:18.770" endtime="20201030 10:57:18.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.778" endtime="20201030 10:57:18.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.476" endtime="20201030 10:57:18.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.474" endtime="20201030 10:57:18.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:18.785" level="INFO">${PHILIP_RES} = [{'diff': 0.0015124440000000017}, {'diff': 0.0015124860000000004}, {'diff': 0.0015124719999999973}, {'diff': 0.001512485999999997}, {'diff': 0.0015385699999999995}, {'diff': 0.0015124860000000004}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:18.781" endtime="20201030 10:57:18.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:18.789" level="INFO">${RESULT} = {'diff': [0.0015124440000000017, 0.0015124860000000004, 0.0015124719999999973, 0.001512485999999997, 0.0015385699999999995, 0.0015124860000000004, 0.0015125139999999995, 0.0015124860000000004, 0.00151...</msg>
<status status="PASS" starttime="20201030 10:57:18.786" endtime="20201030 10:57:18.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.794" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:18.793" endtime="20201030 10:57:18.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.796" level="INFO">VALUE: [0.0015124440000000017, 0.0015124860000000004, 0.0015124719999999973, 0.001512485999999997, 0.0015385699999999995, 0.0015124860000000004, 0.0015125139999999995, 0.0015124860000000004, 0.001512485999999997, 0.0015125, 0.0015124860000000004, 0.0015124860000000004, 0.001512416999999995, 0.0015125, 0.0015125139999999995, 0.0015124860000000004, 0.0015124860000000004, 0.001512528000000006, 0.0015125, 0.0015124440000000017, 0.0015124860000000004, 0.0015125, 0.0015124720000000008, 0.0015124860000000004, 0.0015124860000000004, 0.0015124159999999956, 0.0015124720000000008, 0.0015124860000000073, 0.0015124720000000008, 0.001512527999999999, 0.0015125, 0.0015124859999999934, 0.0015125, 0.0015125139999999926, 0.0015124860000000073, 0.001512527999999999, 0.0015124720000000008, 0.0015124859999999934, 0.0015124720000000008, 0.0015124730000000003, 0.0015125, 0.0015124870000000068, 0.001512486999999993, 0.0015124870000000068, 0.0015607920000000053, 0.0015125, 0.0015125419999999917, 0.0015124859999999934, 0.0015124860000000073, 0.0015124859999999934]</msg>
<status status="PASS" starttime="20201030 10:57:18.795" endtime="20201030 10:57:18.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.790" endtime="20201030 10:57:18.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.372" endtime="20201030 10:57:18.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.349" endtime="20201030 10:57:18.798"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.801" endtime="20201030 10:57:18.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.799" endtime="20201030 10:57:18.820"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.828" endtime="20201030 10:57:18.919"></status>
</kw>
<msg timestamp="20201030 10:57:18.920" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.827" endtime="20201030 10:57:18.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.922" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.921" endtime="20201030 10:57:18.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.923" endtime="20201030 10:57:18.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.824" endtime="20201030 10:57:18.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.822" endtime="20201030 10:57:18.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.933" endtime="20201030 10:57:19.231"></status>
</kw>
<msg timestamp="20201030 10:57:19.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017623111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019191931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.931" endtime="20201030 10:57:19.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017623111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019191931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.235" endtime="20201030 10:57:19.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.243" endtime="20201030 10:57:19.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.929" endtime="20201030 10:57:19.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.927" endtime="20201030 10:57:19.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:19.249" level="INFO">${PHILIP_RES} = [{'diff': 0.0015688199999999985}, {'diff': 0.0015688469999999982}, {'diff': 0.0015688750000000008}, {'diff': 0.0015688469999999982}, {'diff': 0.0015688470000000017}, {'diff': 0.001568903}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 10:57:19.246" endtime="20201030 10:57:19.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.253" level="INFO">${RESULT} = {'diff': [0.0015688199999999985, 0.0015688469999999982, 0.0015688750000000008, 0.0015688469999999982, 0.0015688470000000017, 0.001568903, 0.0015688469999999982, 0.001568903, 0.001568818999999999, 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:19.250" endtime="20201030 10:57:19.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.257" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:19.256" endtime="20201030 10:57:19.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.260" level="INFO">VALUE: [0.0015688199999999985, 0.0015688469999999982, 0.0015688750000000008, 0.0015688469999999982, 0.0015688470000000017, 0.001568903, 0.0015688469999999982, 0.001568903, 0.001568818999999999, 0.001615430000000001, 0.001568818999999999, 0.0015688469999999982, 0.0015688479999999977, 0.001568834000000005, 0.0015688470000000052, 0.0015687919999999994, 0.0015688329999999986, 0.0015688619999999973, 0.0015688329999999986, 0.0015688470000000052, 0.0015688469999999982, 0.0015688469999999982, 0.0015688479999999977, 0.0015688469999999982, 0.0015688330000000056, 0.0015688049999999995, 0.0015688470000000052, 0.0015688890000000039, 0.0015688469999999982, 0.0015688049999999926, 0.0015688469999999982, 0.0015688469999999982, 0.001568917000000003, 0.0015688469999999982, 0.001568818999999999, 0.0015688469999999982, 0.0015688330000000056, 0.0015688480000000116, 0.0015688469999999982, 0.00156888899999999, 0.0015688469999999982, 0.0015688469999999982, 0.0015688620000000042, 0.001568791, 0.0015688469999999982, 0.0015688749999999974, 0.0015688330000000056, 0.0015688339999999912, 0.001621417, 0.0015688469999999982]</msg>
<status status="PASS" starttime="20201030 10:57:19.258" endtime="20201030 10:57:19.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.254" endtime="20201030 10:57:19.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.821" endtime="20201030 10:57:19.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.799" endtime="20201030 10:57:19.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.644" endtime="20201030 10:57:19.262"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:57.012" endtime="20201030 10:57:19.263" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:56:36.784" endtime="20201030 10:57:19.273"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.343" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:19.352" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:25.071" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:19.342" endtime="20201030 10:57:25.072"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.075" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:25.073" endtime="20201030 10:57:25.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.341" endtime="20201030 10:57:25.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.078" endtime="20201030 10:57:25.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.076" endtime="20201030 10:57:25.263"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.275" endtime="20201030 10:57:25.291"></status>
</kw>
<msg timestamp="20201030 10:57:25.292" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD'...</msg>
<status status="PASS" starttime="20201030 10:57:25.274" endtime="20201030 10:57:25.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.294" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD'...</msg>
<status status="PASS" starttime="20201030 10:57:25.293" endtime="20201030 10:57:25.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.298" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:25.296" endtime="20201030 10:57:25.298"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:25.271" endtime="20201030 10:57:25.299"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:25.269" endtime="20201030 10:57:25.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.268" endtime="20201030 10:57:25.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:25.304" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:25.304" endtime="20201030 10:57:25.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.300" endtime="20201030 10:57:25.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.267" endtime="20201030 10:57:25.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.266" endtime="20201030 10:57:25.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.306" endtime="20201030 10:57:25.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.265" endtime="20201030 10:57:25.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.309" endtime="20201030 10:57:25.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.264" endtime="20201030 10:57:25.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.339" endtime="20201030 10:57:25.311"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.317" endtime="20201030 10:57:25.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.316" endtime="20201030 10:57:25.337"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.351" endtime="20201030 10:57:25.366"></status>
</kw>
<msg timestamp="20201030 10:57:25.367" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.349" endtime="20201030 10:57:25.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.369" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.368" endtime="20201030 10:57:25.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.372" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:25.370" endtime="20201030 10:57:25.372"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:25.347" endtime="20201030 10:57:25.373"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:25.344" endtime="20201030 10:57:25.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.343" endtime="20201030 10:57:25.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:25.377" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:25.377" endtime="20201030 10:57:25.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.375" endtime="20201030 10:57:25.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.342" endtime="20201030 10:57:25.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.341" endtime="20201030 10:57:25.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.379" endtime="20201030 10:57:25.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.340" endtime="20201030 10:57:25.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.338" endtime="20201030 10:57:25.382"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.314" endtime="20201030 10:57:25.382"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.393" endtime="20201030 10:57:25.408"></status>
</kw>
<msg timestamp="20201030 10:57:25.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.391" endtime="20201030 10:57:25.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.409" endtime="20201030 10:57:25.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.412" endtime="20201030 10:57:25.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.388" endtime="20201030 10:57:25.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.386" endtime="20201030 10:57:25.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.421" endtime="20201030 10:57:25.709"></status>
</kw>
<msg timestamp="20201030 10:57:25.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068172847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068178153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.419" endtime="20201030 10:57:25.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068172847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068178153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.714" endtime="20201030 10:57:25.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.722" endtime="20201030 10:57:25.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.417" endtime="20201030 10:57:25.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.415" endtime="20201030 10:57:25.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.728" level="INFO">${RESULT} = [{'diff': 5.306000000010469e-06}, {'diff': 5.3200000000031e-06}, {'diff': 4.152999999992857e-06}, {'diff': 4.6949999999990055e-06}, {'diff': 5.916999999994177e-06}, {'diff': 4.666999999999866e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:25.725" endtime="20201030 10:57:25.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:25.733" level="INFO">${ACCURACY} = {'diff': [5.306000000010469e-06, 5.3200000000031e-06, 4.152999999992857e-06, 4.6949999999990055e-06, 5.916999999994177e-06, 4.666999999999866e-06, 5.305000000010995e-06, 5.304999999997118e-06, 4.70799...</msg>
<status status="PASS" starttime="20201030 10:57:25.729" endtime="20201030 10:57:25.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.738" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 10:57:25.737" endtime="20201030 10:57:25.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.740" level="INFO">VALUE: [5.306000000010469e-06, 5.3200000000031e-06, 4.152999999992857e-06, 4.6949999999990055e-06, 5.916999999994177e-06, 4.666999999999866e-06, 5.305000000010995e-06, 5.304999999997118e-06, 4.707999999992163e-06, 4.693999999999532e-06, 4.722999999998145e-06, 4.166999999999366e-06, 5.26400000000482e-06, 4.707999999992163e-06, 5.332999999996257e-06, 5.332999999996257e-06, 5.916999999994177e-06, 4.096999999994577e-06, 4.7360000000051805e-06, 5.318999999989749e-06, 4.153000000006735e-06, 4.707999999992163e-06, 4.708000000006041e-06, 5.931000000000686e-06, 4.7499999999978115e-06, 5.930000000001212e-06, 4.709000000005514e-06, 4.652999999993357e-06, 5.916000000008581e-06, 4.111000000001086e-06, 5.3200000000031e-06, 5.916999999994177e-06, 5.860999999995897e-06, 4.693999999999532e-06, 5.305000000010995e-06, 5.319999999989222e-06, 4.666000000000392e-06, 4.111000000001086e-06, 5.916999999994177e-06, 5.221999999999172e-06, 4.709000000005514e-06, 4.722999999998145e-06, 4.083000000001946e-06, 4.097000000008455e-06, 5.277999999997451e-06, 5.9019999999881945e-06, 4.721999999998672e-06, 4.721999999998672e-06, 4.722999999998145e-06, 5.917000000008055e-06]</msg>
<status status="PASS" starttime="20201030 10:57:25.739" endtime="20201030 10:57:25.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.733" endtime="20201030 10:57:25.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.745" endtime="20201030 10:57:25.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.743" endtime="20201030 10:57:25.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.742" endtime="20201030 10:57:25.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.384" endtime="20201030 10:57:25.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.383" endtime="20201030 10:57:25.765"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.774" endtime="20201030 10:57:25.788"></status>
</kw>
<msg timestamp="20201030 10:57:25.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.772" endtime="20201030 10:57:25.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.790" endtime="20201030 10:57:25.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.792" endtime="20201030 10:57:25.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.770" endtime="20201030 10:57:25.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.768" endtime="20201030 10:57:25.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.802" endtime="20201030 10:57:26.087"></status>
</kw>
<msg timestamp="20201030 10:57:26.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021594722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.800" endtime="20201030 10:57:26.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021594722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.091" endtime="20201030 10:57:26.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.099" endtime="20201030 10:57:26.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.797" endtime="20201030 10:57:26.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.795" endtime="20201030 10:57:26.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.106" level="INFO">${RESULT} = [{'diff': 7.138999999999757e-06}, {'diff': 7.138999999999757e-06}, {'diff': 5.929999999997743e-06}, {'diff': 7.069999999997911e-06}, {'diff': 6.485999999999992e-06}, {'diff': 6.5279999999987015e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:26.102" endtime="20201030 10:57:26.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:26.111" level="INFO">${ACCURACY} = {'diff': [7.138999999999757e-06, 7.138999999999757e-06, 5.929999999997743e-06, 7.069999999997911e-06, 6.485999999999992e-06, 6.5279999999987015e-06, 7.125000000000187e-06, 6.514000000002601e-06, 5.917...</msg>
<status status="PASS" starttime="20201030 10:57:26.107" endtime="20201030 10:57:26.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.115" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 10:57:26.114" endtime="20201030 10:57:26.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.118" level="INFO">VALUE: [7.138999999999757e-06, 7.138999999999757e-06, 5.929999999997743e-06, 7.069999999997911e-06, 6.485999999999992e-06, 6.5279999999987015e-06, 7.125000000000187e-06, 6.514000000002601e-06, 5.917000000001116e-06, 7.721999999998203e-06, 6.597000000000547e-06, 7.111000000000617e-06, 7.110999999997147e-06, 7.111000000000617e-06, 7.806000000002561e-06, 6.540999999998798e-06, 7.111000000000617e-06, 7.721999999998203e-06, 7.125000000000187e-06, 6.5279999999987015e-06, 7.125000000000187e-06, 6.542000000001741e-06, 6.513999999999132e-06, 7.750000000000812e-06, 7.083000000001477e-06, 5.999999999999062e-06, 7.721999999998203e-06, 6.526999999999228e-06, 7.736000000001242e-06, 6.5279999999987015e-06, 6.526999999999228e-06, 7.707999999998633e-06, 6.540999999998798e-06, 7.070000000001381e-06, 7.111000000000617e-06, 6.499999999999562e-06, 7.721999999998203e-06, 7.735999999997772e-06, 6.499999999999562e-06, 7.138999999999757e-06, 5.874999999998937e-06, 7.180999999998466e-06, 5.930999999997216e-06, 5.930000000001212e-06, 6.5279999999987015e-06, 7.138999999999757e-06, 5.917000000001116e-06, 7.181000000001936e-06, 7.750000000000812e-06, 7.680999999998966e-06]</msg>
<status status="PASS" starttime="20201030 10:57:26.116" endtime="20201030 10:57:26.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.112" endtime="20201030 10:57:26.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:26.122" endtime="20201030 10:57:26.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.120" endtime="20201030 10:57:26.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.119" endtime="20201030 10:57:26.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.766" endtime="20201030 10:57:26.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.766" endtime="20201030 10:57:26.143"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.151" endtime="20201030 10:57:26.166"></status>
</kw>
<msg timestamp="20201030 10:57:26.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.150" endtime="20201030 10:57:26.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.168" endtime="20201030 10:57:26.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.170" endtime="20201030 10:57:26.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.147" endtime="20201030 10:57:26.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.145" endtime="20201030 10:57:26.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.180" endtime="20201030 10:57:26.465"></status>
</kw>
<msg timestamp="20201030 10:57:26.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021570458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.178" endtime="20201030 10:57:26.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021570458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.469" endtime="20201030 10:57:26.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.477" endtime="20201030 10:57:26.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.176" endtime="20201030 10:57:26.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.174" endtime="20201030 10:57:26.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.484" level="INFO">${RESULT} = [{'diff': 9.514000000002132e-06}, {'diff': 7.721999999998203e-06}, {'diff': 8.944999999999786e-06}, {'diff': 9.597000000000078e-06}, {'diff': 8.875000000001937e-06}, {'diff': 8.264000000000882e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:26.480" endtime="20201030 10:57:26.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:26.488" level="INFO">${ACCURACY} = {'diff': [9.514000000002132e-06, 7.721999999998203e-06, 8.944999999999786e-06, 9.597000000000078e-06, 8.875000000001937e-06, 8.264000000000882e-06, 8.319999999999161e-06, 8.916999999997177e-06, 8.9310...</msg>
<status status="PASS" starttime="20201030 10:57:26.485" endtime="20201030 10:57:26.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.492" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 10:57:26.491" endtime="20201030 10:57:26.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.494" level="INFO">VALUE: [9.514000000002132e-06, 7.721999999998203e-06, 8.944999999999786e-06, 9.597000000000078e-06, 8.875000000001937e-06, 8.264000000000882e-06, 8.319999999999161e-06, 8.916999999997177e-06, 8.931000000000217e-06, 8.332999999999258e-06, 8.931000000000217e-06, 8.944000000000313e-06, 9.540999999998329e-06, 8.389000000001007e-06, 8.292000000000022e-06, 8.931000000000217e-06, 8.957999999999883e-06, 1.0111999999999621e-05, 9.555999999997372e-06, 9.542000000001272e-06, 9.541999999997802e-06, 8.34800000000177e-06, 9.528000000001702e-06, 8.917000000000647e-06, 8.32000000000263e-06, 9.583000000000508e-06, 8.944999999999786e-06, 9.527999999998232e-06, 8.944999999999786e-06, 8.889000000001507e-06, 8.917000000000647e-06, 9.541000000001798e-06, 8.958999999999356e-06, 8.944000000000313e-06, 8.931000000000217e-06, 9.541999999997802e-06, 8.930000000000743e-06, 8.944000000000313e-06, 8.931000000000217e-06, 8.3340000000022e-06, 8.931000000000217e-06, 8.318999999999688e-06, 8.3340000000022e-06, 9.528000000001702e-06, 9.542000000001272e-06, 8.944000000000313e-06, 8.332999999999258e-06, 1.0138999999999287e-05, 8.291000000000548e-06, 8.999999999998592e-06]</msg>
<status status="PASS" starttime="20201030 10:57:26.493" endtime="20201030 10:57:26.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.488" endtime="20201030 10:57:26.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:26.499" endtime="20201030 10:57:26.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.497" endtime="20201030 10:57:26.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.496" endtime="20201030 10:57:26.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.144" endtime="20201030 10:57:26.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.143" endtime="20201030 10:57:26.519"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.529" endtime="20201030 10:57:26.543"></status>
</kw>
<msg timestamp="20201030 10:57:26.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.526" endtime="20201030 10:57:26.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.545" endtime="20201030 10:57:26.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.547" endtime="20201030 10:57:26.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.524" endtime="20201030 10:57:26.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.522" endtime="20201030 10:57:26.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.556" endtime="20201030 10:57:26.842"></status>
</kw>
<msg timestamp="20201030 10:57:26.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.555" endtime="20201030 10:57:26.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.846" endtime="20201030 10:57:26.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.855" endtime="20201030 10:57:26.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.552" endtime="20201030 10:57:26.857"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.551" endtime="20201030 10:57:26.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.861" level="INFO">${RESULT} = [{'diff': 1.1416999999999677e-05}, {'diff': 1.129099999999661e-05}, {'diff': 1.0763999999999913e-05}, {'diff': 1.0750000000000343e-05}, {'diff': 1.0124999999999718e-05}, {'diff': 1.0763999999999913e-0...</msg>
<status status="PASS" starttime="20201030 10:57:26.858" endtime="20201030 10:57:26.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:26.865" level="INFO">${ACCURACY} = {'diff': [1.1416999999999677e-05, 1.129099999999661e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0124999999999718e-05, 1.0763999999999913e-05, 1.1361000000001398e-05, 1.1347000000001828e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:26.862" endtime="20201030 10:57:26.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.870" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 10:57:26.869" endtime="20201030 10:57:26.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.872" level="INFO">VALUE: [1.1416999999999677e-05, 1.129099999999661e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0124999999999718e-05, 1.0763999999999913e-05, 1.1361000000001398e-05, 1.1347000000001828e-05, 1.0722000000001203e-05, 1.0763999999999913e-05, 1.1334000000001732e-05, 1.0153000000002327e-05, 1.0152999999998857e-05, 1.0736000000000773e-05, 1.1957999999999414e-05, 1.1971999999998983e-05, 1.1361000000001398e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0138999999999287e-05, 1.1360999999997928e-05, 1.1346999999998358e-05, 1.0152999999998857e-05, 1.1346999999998358e-05, 1.0763999999999913e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.1360999999997928e-05, 1.1944999999999317e-05, 1.0750000000000343e-05, 1.0138999999999287e-05, 1.1375000000000968e-05, 1.0750000000000343e-05, 1.1361000000001398e-05, 1.0138999999999287e-05, 1.1360999999997928e-05, 1.1930000000000274e-05, 1.1360999999997928e-05, 1.1958999999998887e-05, 1.0777999999999482e-05, 1.0152999999998857e-05, 1.1319999999998692e-05, 1.0736000000000773e-05, 1.0152999999998857e-05, 1.1346999999998358e-05, 1.0750000000000343e-05, 1.1360999999997928e-05, 1.0151999999999384e-05]</msg>
<status status="PASS" starttime="20201030 10:57:26.871" endtime="20201030 10:57:26.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.866" endtime="20201030 10:57:26.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:26.877" endtime="20201030 10:57:26.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.876" endtime="20201030 10:57:26.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.875" endtime="20201030 10:57:26.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.520" endtime="20201030 10:57:26.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.520" endtime="20201030 10:57:26.898"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.907" endtime="20201030 10:57:26.922"></status>
</kw>
<msg timestamp="20201030 10:57:26.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.905" endtime="20201030 10:57:26.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.923" endtime="20201030 10:57:26.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.926" endtime="20201030 10:57:26.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.902" endtime="20201030 10:57:26.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.900" endtime="20201030 10:57:26.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.935" endtime="20201030 10:57:27.221"></status>
</kw>
<msg timestamp="20201030 10:57:27.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.933" endtime="20201030 10:57:27.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.225" endtime="20201030 10:57:27.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.234" endtime="20201030 10:57:27.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.931" endtime="20201030 10:57:27.236"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.929" endtime="20201030 10:57:27.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.240" level="INFO">${RESULT} = [{'diff': 1.1957999999999414e-05}, {'diff': 1.2486000000002523e-05}, {'diff': 1.2569999999999942e-05}, {'diff': 1.3791000000002579e-05}, {'diff': 1.2583000000000039e-05}, {'diff': 1.3181000000000997e-...</msg>
<status status="PASS" starttime="20201030 10:57:27.237" endtime="20201030 10:57:27.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:27.245" level="INFO">${ACCURACY} = {'diff': [1.1957999999999414e-05, 1.2486000000002523e-05, 1.2569999999999942e-05, 1.3791000000002579e-05, 1.2583000000000039e-05, 1.3181000000000997e-05, 1.1972999999998457e-05, 1.3166999999997958e-05...</msg>
<status status="PASS" starttime="20201030 10:57:27.241" endtime="20201030 10:57:27.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.249" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 10:57:27.248" endtime="20201030 10:57:27.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.252" level="INFO">VALUE: [1.1957999999999414e-05, 1.2486000000002523e-05, 1.2569999999999942e-05, 1.3791000000002579e-05, 1.2583000000000039e-05, 1.3181000000000997e-05, 1.1972999999998457e-05, 1.3166999999997958e-05, 1.3181000000000997e-05, 1.2612000000002122e-05, 1.1957999999999414e-05, 1.3167000000001428e-05, 1.3777999999999013e-05, 1.2625000000002218e-05, 1.3166000000001954e-05, 1.3777999999999013e-05, 1.377699999999954e-05, 1.2583000000000039e-05, 1.3097000000000109e-05, 1.2555000000000899e-05, 1.3235999999999803e-05, 1.3180999999997528e-05, 1.3180000000001524e-05, 1.3180999999997528e-05, 1.1943999999999844e-05, 1.2555000000000899e-05, 1.2555999999996903e-05, 1.377699999999954e-05, 1.1957999999999414e-05, 1.2569999999999942e-05, 1.3152999999998388e-05, 1.3777999999999013e-05, 1.3097000000000109e-05, 1.2541000000001329e-05, 1.2541999999997333e-05, 1.1957999999999414e-05, 1.2597999999999082e-05, 1.1957999999999414e-05, 1.2568999999997e-05, 1.1986000000002023e-05, 1.3777999999999013e-05, 1.2555000000000899e-05, 1.2541999999997333e-05, 1.1958000000002883e-05, 1.3791999999998583e-05, 1.3763999999999443e-05, 1.1972999999998457e-05, 1.2569999999999942e-05, 1.3166000000001954e-05, 1.3166999999997958e-05]</msg>
<status status="PASS" starttime="20201030 10:57:27.250" endtime="20201030 10:57:27.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.246" endtime="20201030 10:57:27.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:27.256" endtime="20201030 10:57:27.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.255" endtime="20201030 10:57:27.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.254" endtime="20201030 10:57:27.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.899" endtime="20201030 10:57:27.277"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.898" endtime="20201030 10:57:27.277"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.286" endtime="20201030 10:57:27.301"></status>
</kw>
<msg timestamp="20201030 10:57:27.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.284" endtime="20201030 10:57:27.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.302" endtime="20201030 10:57:27.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.305" endtime="20201030 10:57:27.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.282" endtime="20201030 10:57:27.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.280" endtime="20201030 10:57:27.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.314" endtime="20201030 10:57:27.600"></status>
</kw>
<msg timestamp="20201030 10:57:27.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.312" endtime="20201030 10:57:27.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.604" endtime="20201030 10:57:27.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.612" endtime="20201030 10:57:27.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.310" endtime="20201030 10:57:27.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.308" endtime="20201030 10:57:27.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.619" level="INFO">${RESULT} = [{'diff': 1.5555999999999903e-05}, {'diff': 1.558299999999957e-05}, {'diff': 1.4389000000000068e-05}, {'diff': 1.4429999999999304e-05}, {'diff': 1.4375000000000498e-05}, {'diff': 1.4375000000000498e-0...</msg>
<status status="PASS" starttime="20201030 10:57:27.616" endtime="20201030 10:57:27.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:27.623" level="INFO">${ACCURACY} = {'diff': [1.5555999999999903e-05, 1.558299999999957e-05, 1.4389000000000068e-05, 1.4429999999999304e-05, 1.4375000000000498e-05, 1.4375000000000498e-05, 1.5000000000001124e-05, 1.4945000000002318e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:27.620" endtime="20201030 10:57:27.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.627" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 10:57:27.626" endtime="20201030 10:57:27.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.630" level="INFO">VALUE: [1.5555999999999903e-05, 1.558299999999957e-05, 1.4389000000000068e-05, 1.4429999999999304e-05, 1.4375000000000498e-05, 1.4375000000000498e-05, 1.5000000000001124e-05, 1.4945000000002318e-05, 1.4903000000000138e-05, 1.3819999999997723e-05, 1.4388000000000595e-05, 1.4430999999998778e-05, 1.4362000000000402e-05, 1.5569e-05, 1.5583999999999043e-05, 1.4973000000001457e-05, 1.4374999999997029e-05, 1.502700000000079e-05, 1.558299999999957e-05, 1.4402999999999638e-05, 1.5584000000002513e-05, 1.4375000000000498e-05, 1.4971999999998514e-05, 1.5569e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.6193999999997155e-05, 1.5583999999999043e-05, 1.4985999999998084e-05, 1.4943999999999374e-05, 1.4986000000001554e-05, 1.4362000000000402e-05, 1.5041999999999833e-05, 1.5000000000001124e-05, 1.4375000000000498e-05, 1.4972000000001984e-05, 1.4971999999998514e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4374999999997029e-05, 1.558299999999957e-05, 1.4375000000000498e-05, 1.6235999999999334e-05, 1.558299999999957e-05, 1.4361000000000929e-05, 1.3777999999999013e-05, 1.5556000000003373e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4415999999999735e-05]</msg>
<status status="PASS" starttime="20201030 10:57:27.628" endtime="20201030 10:57:27.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.624" endtime="20201030 10:57:27.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:27.634" endtime="20201030 10:57:27.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.633" endtime="20201030 10:57:27.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.631" endtime="20201030 10:57:27.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.278" endtime="20201030 10:57:27.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.277" endtime="20201030 10:57:27.655"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.664" endtime="20201030 10:57:27.679"></status>
</kw>
<msg timestamp="20201030 10:57:27.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.662" endtime="20201030 10:57:27.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.681" endtime="20201030 10:57:27.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.683" endtime="20201030 10:57:27.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.660" endtime="20201030 10:57:27.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.657" endtime="20201030 10:57:27.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.692" endtime="20201030 10:57:27.976"></status>
</kw>
<msg timestamp="20201030 10:57:27.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.691" endtime="20201030 10:57:27.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.980" endtime="20201030 10:57:27.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.989" endtime="20201030 10:57:27.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.688" endtime="20201030 10:57:27.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.686" endtime="20201030 10:57:27.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.996" level="INFO">${RESULT} = [{'diff': 1.731899999999828e-05}, {'diff': 1.680500000000168e-05}, {'diff': 1.6180000000001055e-05}, {'diff': 1.6194000000000625e-05}, {'diff': 1.740299999999917e-05}, {'diff': 1.6820000000000723e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:27.992" endtime="20201030 10:57:27.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:28.000" level="INFO">${ACCURACY} = {'diff': [1.731899999999828e-05, 1.680500000000168e-05, 1.6180000000001055e-05, 1.6194000000000625e-05, 1.740299999999917e-05, 1.6820000000000723e-05, 1.686099999999996e-05, 1.740299999999917e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 10:57:27.997" endtime="20201030 10:57:28.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.005" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 10:57:28.004" endtime="20201030 10:57:28.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.007" level="INFO">VALUE: [1.731899999999828e-05, 1.680500000000168e-05, 1.6180000000001055e-05, 1.6194000000000625e-05, 1.740299999999917e-05, 1.6820000000000723e-05, 1.686099999999996e-05, 1.740299999999917e-05, 1.7986000000001084e-05, 1.680500000000168e-05, 1.8000000000000654e-05, 1.6181000000000528e-05, 1.679099999999864e-05, 1.7388000000000126e-05, 1.8000000000000654e-05, 1.6764000000002444e-05, 1.6194000000000625e-05, 1.6791999999998114e-05, 1.740300000000264e-05, 1.6194000000000625e-05, 1.677699999999907e-05, 1.73889999999996e-05, 1.6777999999998544e-05, 1.6193999999997155e-05, 1.6806000000001153e-05, 1.6166000000001485e-05, 1.740299999999917e-05, 1.6180000000001055e-05, 1.737500000000003e-05, 1.7401999999999695e-05, 1.7986000000001084e-05, 1.741699999999874e-05, 1.6792000000001583e-05, 1.6778000000002014e-05, 1.680500000000168e-05, 1.740299999999917e-05, 1.7320000000001223e-05, 1.6792000000001583e-05, 1.6791999999998114e-05, 1.740299999999917e-05, 1.7388000000000126e-05, 1.7999999999997185e-05, 1.8041999999999364e-05, 1.7416000000002735e-05, 1.6806000000001153e-05, 1.6763999999998974e-05, 1.8000000000000654e-05, 1.6805999999997684e-05, 1.7388000000000126e-05, 1.6750000000002874e-05]</msg>
<status status="PASS" starttime="20201030 10:57:28.006" endtime="20201030 10:57:28.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.001" endtime="20201030 10:57:28.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:28.013" endtime="20201030 10:57:28.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.012" endtime="20201030 10:57:28.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.010" endtime="20201030 10:57:28.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.656" endtime="20201030 10:57:28.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.655" endtime="20201030 10:57:28.034"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.042" endtime="20201030 10:57:28.058"></status>
</kw>
<msg timestamp="20201030 10:57:28.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.041" endtime="20201030 10:57:28.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.059" endtime="20201030 10:57:28.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.062" endtime="20201030 10:57:28.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.038" endtime="20201030 10:57:28.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.036" endtime="20201030 10:57:28.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.070" endtime="20201030 10:57:28.356"></status>
</kw>
<msg timestamp="20201030 10:57:28.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021546861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021565458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.069" endtime="20201030 10:57:28.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021546861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021565458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.360" endtime="20201030 10:57:28.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.368" endtime="20201030 10:57:28.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.066" endtime="20201030 10:57:28.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.065" endtime="20201030 10:57:28.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:28.375" level="INFO">${RESULT} = [{'diff': 1.859699999999867e-05}, {'diff': 1.919499999999963e-05}, {'diff': 1.8000000000000654e-05}, {'diff': 1.8569999999999004e-05}, {'diff': 1.9194000000000155e-05}, {'diff': 1.861099999999824e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:28.371" endtime="20201030 10:57:28.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:28.379" level="INFO">${ACCURACY} = {'diff': [1.859699999999867e-05, 1.919499999999963e-05, 1.8000000000000654e-05, 1.8569999999999004e-05, 1.9194000000000155e-05, 1.861099999999824e-05, 1.861100000000171e-05, 1.8541999999999864e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:57:28.376" endtime="20201030 10:57:28.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.384" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 10:57:28.383" endtime="20201030 10:57:28.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.386" level="INFO">VALUE: [1.859699999999867e-05, 1.919499999999963e-05, 1.8000000000000654e-05, 1.8569999999999004e-05, 1.9194000000000155e-05, 1.861099999999824e-05, 1.861100000000171e-05, 1.8541999999999864e-05, 1.8612000000001183e-05, 1.8000000000000654e-05, 1.7985999999997615e-05, 1.9221999999999295e-05, 1.9819999999996785e-05, 1.861099999999824e-05, 1.9221999999999295e-05, 1.9820000000000254e-05, 1.9806000000000684e-05, 1.913900000000135e-05, 1.8027999999999794e-05, 1.7943999999998905e-05, 1.862499999999781e-05, 1.9207999999999725e-05, 1.861099999999824e-05, 1.861100000000171e-05, 1.9806000000000684e-05, 1.980500000000121e-05, 1.861100000000171e-05, 1.980500000000121e-05, 1.859700000000214e-05, 1.920900000000267e-05, 1.922299999999877e-05, 1.859699999999867e-05, 1.7986000000001084e-05, 1.9806000000000684e-05, 1.9194000000000155e-05, 1.9193999999996686e-05, 1.9250000000001904e-05, 1.986099999999949e-05, 1.86950000000026e-05, 1.983300000000035e-05, 1.7972000000001515e-05, 1.9264000000001474e-05, 1.9235999999998865e-05, 1.859699999999867e-05, 1.984699999999992e-05, 1.9207999999999725e-05, 1.862500000000128e-05, 1.8000000000000654e-05, 1.861100000000171e-05, 1.922299999999877e-05]</msg>
<status status="PASS" starttime="20201030 10:57:28.385" endtime="20201030 10:57:28.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.380" endtime="20201030 10:57:28.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:28.391" endtime="20201030 10:57:28.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.390" endtime="20201030 10:57:28.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.389" endtime="20201030 10:57:28.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.035" endtime="20201030 10:57:28.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.034" endtime="20201030 10:57:28.412"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.420" endtime="20201030 10:57:28.435"></status>
</kw>
<msg timestamp="20201030 10:57:28.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.419" endtime="20201030 10:57:28.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.437" endtime="20201030 10:57:28.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.439" endtime="20201030 10:57:28.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.416" endtime="20201030 10:57:28.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.414" endtime="20201030 10:57:28.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.448" endtime="20201030 10:57:28.737"></status>
</kw>
<msg timestamp="20201030 10:57:28.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.446" endtime="20201030 10:57:28.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.741" endtime="20201030 10:57:28.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.749" endtime="20201030 10:57:28.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.444" endtime="20201030 10:57:28.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.442" endtime="20201030 10:57:28.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:28.755" level="INFO">${RESULT} = [{'diff': 2.162500000000081e-05}, {'diff': 2.1041999999998895e-05}, {'diff': 2.041700000000174e-05}, {'diff': 2.043099999999784e-05}, {'diff': 2.101300000000028e-05}, {'diff': 2.1721999999998326e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:28.752" endtime="20201030 10:57:28.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:28.759" level="INFO">${ACCURACY} = {'diff': [2.162500000000081e-05, 2.1041999999998895e-05, 2.041700000000174e-05, 2.043099999999784e-05, 2.101300000000028e-05, 2.1721999999998326e-05, 2.037499999999956e-05, 2.156899999999906e-05, 2.16...</msg>
<status status="PASS" starttime="20201030 10:57:28.756" endtime="20201030 10:57:28.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.764" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 10:57:28.763" endtime="20201030 10:57:28.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.766" level="INFO">VALUE: [2.162500000000081e-05, 2.1041999999998895e-05, 2.041700000000174e-05, 2.043099999999784e-05, 2.101300000000028e-05, 2.1721999999998326e-05, 2.037499999999956e-05, 2.156899999999906e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.165299999999995e-05, 2.097300000000052e-05, 2.162500000000081e-05, 2.162499999999734e-05, 2.10830000000016e-05, 2.1637999999997437e-05, 2.0944000000001906e-05, 2.1013999999999755e-05, 2.1027999999999325e-05, 2.041700000000174e-05, 2.163900000000038e-05, 2.1041999999998895e-05, 2.2250000000001435e-05, 2.1013999999999755e-05, 2.165299999999995e-05, 2.041700000000174e-05, 2.041699999999827e-05, 2.1027999999999325e-05, 2.0472000000000545e-05, 2.045899999999698e-05, 2.104099999999942e-05, 2.041699999999827e-05, 2.04029999999987e-05, 2.038899999999913e-05, 2.0943999999998436e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.1056000000001934e-05, 1.983300000000035e-05, 2.041700000000174e-05, 2.1027999999999325e-05, 2.161099999999777e-05, 2.162500000000081e-05, 2.1013999999999755e-05, 2.162499999999734e-05, 2.043099999999784e-05, 2.162500000000081e-05, 2.041700000000174e-05, 2.102699999999985e-05, 1.983299999999688e-05]</msg>
<status status="PASS" starttime="20201030 10:57:28.765" endtime="20201030 10:57:28.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.760" endtime="20201030 10:57:28.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:28.771" endtime="20201030 10:57:28.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.770" endtime="20201030 10:57:28.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.769" endtime="20201030 10:57:28.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.413" endtime="20201030 10:57:28.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.412" endtime="20201030 10:57:28.792"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.800" endtime="20201030 10:57:28.816"></status>
</kw>
<msg timestamp="20201030 10:57:28.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.799" endtime="20201030 10:57:28.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.818" endtime="20201030 10:57:28.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.820" endtime="20201030 10:57:28.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.796" endtime="20201030 10:57:28.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.794" endtime="20201030 10:57:28.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.829" endtime="20201030 10:57:29.114"></status>
</kw>
<msg timestamp="20201030 10:57:29.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.828" endtime="20201030 10:57:29.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.118" endtime="20201030 10:57:29.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.126" endtime="20201030 10:57:29.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.825" endtime="20201030 10:57:29.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.824" endtime="20201030 10:57:29.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.132" level="INFO">${RESULT} = [{'diff': 2.405500000000199e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.3430000000001366e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.2208000000002726e-0...</msg>
<status status="PASS" starttime="20201030 10:57:29.129" endtime="20201030 10:57:29.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:29.136" level="INFO">${ACCURACY} = {'diff': [2.405500000000199e-05, 2.3485999999999646e-05, 2.2207999999999256e-05, 2.3430000000001366e-05, 2.2305999999999715e-05, 2.2208000000002726e-05, 2.3485999999999646e-05, 2.4042000000001895e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:29.133" endtime="20201030 10:57:29.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.141" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 10:57:29.140" endtime="20201030 10:57:29.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.143" level="INFO">VALUE: [2.405500000000199e-05, 2.3485999999999646e-05, 2.2207999999999256e-05, 2.3430000000001366e-05, 2.2305999999999715e-05, 2.2208000000002726e-05, 2.3485999999999646e-05, 2.4042000000001895e-05, 2.344500000000041e-05, 2.283299999999988e-05, 2.2778000000001075e-05, 2.4028000000002325e-05, 2.279100000000117e-05, 2.4014000000002755e-05, 2.340299999999823e-05, 2.2819999999999785e-05, 2.411100000000027e-05, 2.2235999999998396e-05, 2.284699999999945e-05, 2.2249999999997966e-05, 2.284699999999945e-05, 2.4041999999998426e-05, 2.2235999999998396e-05, 2.2235999999998396e-05, 2.2806000000000215e-05, 2.2221999999998826e-05, 2.343100000000084e-05, 2.283299999999988e-05, 2.27770000000016e-05, 2.2848000000002394e-05, 2.2235999999998396e-05, 2.344500000000041e-05, 2.2221999999998826e-05, 2.283299999999988e-05, 2.3429999999997897e-05, 2.288900000000163e-05, 2.2235999999998396e-05, 2.3444000000000936e-05, 2.344499999999694e-05, 2.2834000000002824e-05, 2.2193999999999686e-05, 2.2292000000000145e-05, 2.2819999999999785e-05, 2.3472000000000076e-05, 2.341700000000127e-05, 2.22229999999983e-05, 2.4040999999998952e-05, 2.2236000000001865e-05, 2.283299999999988e-05, 2.3444000000000936e-05]</msg>
<status status="PASS" starttime="20201030 10:57:29.142" endtime="20201030 10:57:29.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.137" endtime="20201030 10:57:29.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.149" endtime="20201030 10:57:29.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.148" endtime="20201030 10:57:29.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.147" endtime="20201030 10:57:29.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.793" endtime="20201030 10:57:29.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.792" endtime="20201030 10:57:29.170"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.178" endtime="20201030 10:57:29.194"></status>
</kw>
<msg timestamp="20201030 10:57:29.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.177" endtime="20201030 10:57:29.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.195" endtime="20201030 10:57:29.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.198" endtime="20201030 10:57:29.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.174" endtime="20201030 10:57:29.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.172" endtime="20201030 10:57:29.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.207" endtime="20201030 10:57:29.492"></status>
</kw>
<msg timestamp="20201030 10:57:29.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.205" endtime="20201030 10:57:29.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.496" endtime="20201030 10:57:29.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.504" endtime="20201030 10:57:29.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.203" endtime="20201030 10:57:29.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.201" endtime="20201030 10:57:29.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.511" level="INFO">${RESULT} = [{'diff': 2.5236000000001396e-05}, {'diff': 2.4054999999998522e-05}, {'diff': 2.4042000000001895e-05}, {'diff': 2.5249999999997497e-05}, {'diff': 2.5278000000000106e-05}, {'diff': 2.5249999999997497e-...</msg>
<status status="PASS" starttime="20201030 10:57:29.508" endtime="20201030 10:57:29.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:29.516" level="INFO">${ACCURACY} = {'diff': [2.5236000000001396e-05, 2.4054999999998522e-05, 2.4042000000001895e-05, 2.5249999999997497e-05, 2.5278000000000106e-05, 2.5249999999997497e-05, 2.5263000000001062e-05, 2.4041999999998426e-05...</msg>
<status status="PASS" starttime="20201030 10:57:29.512" endtime="20201030 10:57:29.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.520" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 10:57:29.519" endtime="20201030 10:57:29.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.523" level="INFO">VALUE: [2.5236000000001396e-05, 2.4054999999998522e-05, 2.4042000000001895e-05, 2.5249999999997497e-05, 2.5278000000000106e-05, 2.5249999999997497e-05, 2.5263000000001062e-05, 2.4041999999998426e-05, 2.5874999999998122e-05, 2.5250000000000966e-05, 2.5860999999998552e-05, 2.5278000000000106e-05, 2.4028000000002325e-05, 2.4027999999998856e-05, 2.462500000000034e-05, 2.5250000000000966e-05, 2.4083999999997135e-05, 2.5250000000000966e-05, 2.463899999999991e-05, 2.3971999999997107e-05, 2.5250000000000966e-05, 2.587500000000159e-05, 2.5250000000000966e-05, 2.5278000000000106e-05, 2.466699999999905e-05, 2.5250000000000966e-05, 2.5888000000001687e-05, 2.5862000000001495e-05, 2.405500000000199e-05, 2.4054999999998522e-05, 2.5264000000000536e-05, 2.5249999999997497e-05, 2.465299999999948e-05, 2.463899999999991e-05, 2.584700000000245e-05, 2.4680000000002617e-05, 2.5250000000000966e-05, 2.465299999999948e-05, 2.586100000000202e-05, 2.52230000000013e-05, 2.518099999999912e-05, 2.4055999999997996e-05, 2.461100000000077e-05, 2.47230000000008e-05, 2.3999999999999716e-05, 2.4041999999998426e-05, 2.5250000000000966e-05, 2.405500000000199e-05, 2.5264000000000536e-05, 2.4056000000001465e-05]</msg>
<status status="PASS" starttime="20201030 10:57:29.521" endtime="20201030 10:57:29.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.517" endtime="20201030 10:57:29.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.528" endtime="20201030 10:57:29.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.526" endtime="20201030 10:57:29.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.525" endtime="20201030 10:57:29.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.171" endtime="20201030 10:57:29.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.170" endtime="20201030 10:57:29.548"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.557" endtime="20201030 10:57:29.572"></status>
</kw>
<msg timestamp="20201030 10:57:29.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.555" endtime="20201030 10:57:29.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.574" endtime="20201030 10:57:29.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.576" endtime="20201030 10:57:29.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.553" endtime="20201030 10:57:29.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.551" endtime="20201030 10:57:29.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.585" endtime="20201030 10:57:29.871"></status>
</kw>
<msg timestamp="20201030 10:57:29.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.584" endtime="20201030 10:57:29.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.875" endtime="20201030 10:57:29.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.884" endtime="20201030 10:57:29.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.581" endtime="20201030 10:57:29.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.579" endtime="20201030 10:57:29.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.890" level="INFO">${RESULT} = [{'diff': 2.766699999999858e-05}, {'diff': 2.766699999999858e-05}, {'diff': 2.5847999999998456e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.7056000000000996e-05}, {'diff': 2.5860999999998552e-05...</msg>
<status status="PASS" starttime="20201030 10:57:29.887" endtime="20201030 10:57:29.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:29.894" level="INFO">${ACCURACY} = {'diff': [2.766699999999858e-05, 2.766699999999858e-05, 2.5847999999998456e-05, 2.7680000000002147e-05, 2.7056000000000996e-05, 2.5860999999998552e-05, 2.6471999999999607e-05, 2.6458000000000037e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:29.891" endtime="20201030 10:57:29.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.898" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 10:57:29.897" endtime="20201030 10:57:29.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.901" level="INFO">VALUE: [2.766699999999858e-05, 2.766699999999858e-05, 2.5847999999998456e-05, 2.7680000000002147e-05, 2.7056000000000996e-05, 2.5860999999998552e-05, 2.6471999999999607e-05, 2.6458000000000037e-05, 2.766699999999858e-05, 2.7069000000001092e-05, 2.768099999999815e-05, 2.7068999999997623e-05, 2.6458000000000037e-05, 2.7054999999998053e-05, 2.7055000000001522e-05, 2.6471999999999607e-05, 2.7693999999998248e-05, 2.6485999999999177e-05, 2.769500000000119e-05, 2.7694000000001717e-05, 2.7055000000001522e-05, 2.7054999999998053e-05, 2.766699999999858e-05, 2.584700000000245e-05, 2.5860999999998552e-05, 2.6472000000003076e-05, 2.6402000000001757e-05, 2.6471999999999607e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.768099999999815e-05, 2.7110999999999802e-05, 2.64170000000008e-05, 2.768100000000162e-05, 2.768099999999815e-05, 2.766700000000205e-05, 2.593099999999987e-05, 2.766699999999858e-05, 2.7084000000000136e-05, 2.7665999999999108e-05, 2.766700000000205e-05, 2.7056000000000996e-05, 2.586100000000202e-05, 2.6458000000000037e-05, 2.645900000000298e-05, 2.7027999999998387e-05, 2.7027999999998387e-05, 2.587500000000159e-05, 2.7110999999999802e-05, 2.768100000000162e-05]</msg>
<status status="PASS" starttime="20201030 10:57:29.900" endtime="20201030 10:57:29.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.895" endtime="20201030 10:57:29.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.906" endtime="20201030 10:57:29.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.904" endtime="20201030 10:57:29.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.903" endtime="20201030 10:57:29.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.549" endtime="20201030 10:57:29.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.548" endtime="20201030 10:57:29.926"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.935" endtime="20201030 10:57:29.952"></status>
</kw>
<msg timestamp="20201030 10:57:29.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.933" endtime="20201030 10:57:29.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.953" endtime="20201030 10:57:29.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.956" endtime="20201030 10:57:29.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.931" endtime="20201030 10:57:29.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.929" endtime="20201030 10:57:29.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.965" endtime="20201030 10:57:30.250"></status>
</kw>
<msg timestamp="20201030 10:57:30.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.963" endtime="20201030 10:57:30.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.254" endtime="20201030 10:57:30.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.262" endtime="20201030 10:57:30.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.961" endtime="20201030 10:57:30.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.959" endtime="20201030 10:57:30.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.269" level="INFO">${RESULT} = [{'diff': 2.9500000000001747e-05}, {'diff': 2.8277999999999637e-05}, {'diff': 2.9500000000001747e-05}, {'diff': 2.9485999999998708e-05}, {'diff': 2.9471999999999138e-05}, {'diff': 2.8888999999997222e-...</msg>
<status status="PASS" starttime="20201030 10:57:30.266" endtime="20201030 10:57:30.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:30.273" level="INFO">${ACCURACY} = {'diff': [2.9500000000001747e-05, 2.8277999999999637e-05, 2.9500000000001747e-05, 2.9485999999998708e-05, 2.9471999999999138e-05, 2.8888999999997222e-05, 2.9472000000002607e-05, 2.8236000000000927e-05...</msg>
<status status="PASS" starttime="20201030 10:57:30.270" endtime="20201030 10:57:30.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.277" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 10:57:30.276" endtime="20201030 10:57:30.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.280" level="INFO">VALUE: [2.9500000000001747e-05, 2.8277999999999637e-05, 2.9500000000001747e-05, 2.9485999999998708e-05, 2.9471999999999138e-05, 2.8888999999997222e-05, 2.9472000000002607e-05, 2.8236000000000927e-05, 2.9499999999998278e-05, 2.8847000000001982e-05, 2.8902999999996792e-05, 2.8264000000000067e-05, 2.9485999999998708e-05, 2.8278000000003106e-05, 3.0083000000000193e-05, 2.8875000000001122e-05, 3.0083000000000193e-05, 2.8889000000000692e-05, 3.0054999999997584e-05, 2.8250000000000497e-05, 2.8305000000002772e-05, 3.0055000000001053e-05, 2.9457999999999568e-05, 2.8888999999997222e-05, 2.8277999999999637e-05, 2.8264000000000067e-05, 2.8875000000001122e-05, 2.9486000000002177e-05, 2.9472000000002607e-05, 2.8263000000000593e-05, 2.8889000000000692e-05, 2.8291999999999207e-05, 2.8875000000001122e-05, 2.8264000000000067e-05, 2.890199999999732e-05, 2.8875000000001122e-05, 2.8264000000000067e-05, 2.9485999999998708e-05, 2.8875000000001122e-05, 2.9403000000000762e-05, 2.8874999999997653e-05, 2.9457999999999568e-05, 2.9485999999998708e-05, 2.9471999999999138e-05, 2.947299999999861e-05, 2.8874999999997653e-05, 2.9500000000001747e-05, 2.9499999999998278e-05, 3.0096999999999763e-05, 2.8875000000001122e-05]</msg>
<status status="PASS" starttime="20201030 10:57:30.278" endtime="20201030 10:57:30.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.274" endtime="20201030 10:57:30.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:30.285" endtime="20201030 10:57:30.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.284" endtime="20201030 10:57:30.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.283" endtime="20201030 10:57:30.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.927" endtime="20201030 10:57:30.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.927" endtime="20201030 10:57:30.306"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.315" endtime="20201030 10:57:30.330"></status>
</kw>
<msg timestamp="20201030 10:57:30.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.313" endtime="20201030 10:57:30.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.331" endtime="20201030 10:57:30.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.334" endtime="20201030 10:57:30.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.310" endtime="20201030 10:57:30.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.308" endtime="20201030 10:57:30.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.342" endtime="20201030 10:57:30.628"></status>
</kw>
<msg timestamp="20201030 10:57:30.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.341" endtime="20201030 10:57:30.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.632" endtime="20201030 10:57:30.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.640" endtime="20201030 10:57:30.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.338" endtime="20201030 10:57:30.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.337" endtime="20201030 10:57:30.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.647" level="INFO">${RESULT} = [{'diff': 3.066599999999864e-05}, {'diff': 3.130600000000178e-05}, {'diff': 3.069400000000125e-05}, {'diff': 3.070800000000082e-05}, {'diff': 3.066600000000211e-05}, {'diff': 3.066699999999811e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:30.644" endtime="20201030 10:57:30.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:30.652" level="INFO">${ACCURACY} = {'diff': [3.066599999999864e-05, 3.130600000000178e-05, 3.069400000000125e-05, 3.070800000000082e-05, 3.066600000000211e-05, 3.066699999999811e-05, 3.188900000000022e-05, 3.130600000000178e-05, 3.1278...</msg>
<status status="PASS" starttime="20201030 10:57:30.648" endtime="20201030 10:57:30.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.656" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 10:57:30.655" endtime="20201030 10:57:30.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.659" level="INFO">VALUE: [3.066599999999864e-05, 3.130600000000178e-05, 3.069400000000125e-05, 3.070800000000082e-05, 3.066600000000211e-05, 3.066699999999811e-05, 3.188900000000022e-05, 3.130600000000178e-05, 3.127800000000264e-05, 3.0124999999998903e-05, 3.069499999999725e-05, 3.068099999999768e-05, 3.069400000000125e-05, 3.073599999999996e-05, 3.069500000000072e-05, 3.068000000000168e-05, 3.068100000000115e-05, 3.130599999999831e-05, 3.068100000000115e-05, 3.068100000000115e-05, 3.184700000000151e-05, 3.069400000000125e-05, 3.130600000000178e-05, 3.069400000000125e-05, 3.066700000000158e-05, 3.1290999999999264e-05, 3.068100000000115e-05, 3.0138999999998473e-05, 3.130599999999831e-05, 3.188900000000022e-05, 3.1304999999998834e-05, 3.188900000000022e-05, 3.190299999999979e-05, 3.069500000000072e-05, 3.129200000000221e-05, 3.129199999999874e-05, 3.129199999999874e-05, 3.069500000000072e-05, 3.070900000000029e-05, 3.069399999999778e-05, 3.068100000000115e-05, 3.0097999999999236e-05, 3.070799999999735e-05, 3.074999999999953e-05, 3.129199999999874e-05, 3.070899999999682e-05, 3.0083000000000193e-05, 3.069399999999778e-05, 3.0028000000001387e-05, 3.191599999999989e-05]</msg>
<status status="PASS" starttime="20201030 10:57:30.657" endtime="20201030 10:57:30.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.653" endtime="20201030 10:57:30.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:30.664" endtime="20201030 10:57:30.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.662" endtime="20201030 10:57:30.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.661" endtime="20201030 10:57:30.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.307" endtime="20201030 10:57:30.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.306" endtime="20201030 10:57:30.684"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.693" endtime="20201030 10:57:30.709"></status>
</kw>
<msg timestamp="20201030 10:57:30.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.691" endtime="20201030 10:57:30.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.710" endtime="20201030 10:57:30.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.713" endtime="20201030 10:57:30.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.689" endtime="20201030 10:57:30.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.687" endtime="20201030 10:57:30.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.722" endtime="20201030 10:57:31.009"></status>
</kw>
<msg timestamp="20201030 10:57:31.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.720" endtime="20201030 10:57:31.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.013" endtime="20201030 10:57:31.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.021" endtime="20201030 10:57:31.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.718" endtime="20201030 10:57:31.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.716" endtime="20201030 10:57:31.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.028" level="INFO">${RESULT} = [{'diff': 3.313900000000147e-05}, {'diff': 3.188900000000022e-05}, {'diff': 3.250000000000128e-05}, {'diff': 3.3082999999999724e-05}, {'diff': 3.372199999999992e-05}, {'diff': 3.3110999999998864e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:31.025" endtime="20201030 10:57:31.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:31.032" level="INFO">${ACCURACY} = {'diff': [3.313900000000147e-05, 3.188900000000022e-05, 3.250000000000128e-05, 3.3082999999999724e-05, 3.372199999999992e-05, 3.3110999999998864e-05, 3.366700000000111e-05, 3.316699999999714e-05, 3.30...</msg>
<status status="PASS" starttime="20201030 10:57:31.029" endtime="20201030 10:57:31.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.037" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 10:57:31.036" endtime="20201030 10:57:31.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.040" level="INFO">VALUE: [3.313900000000147e-05, 3.188900000000022e-05, 3.250000000000128e-05, 3.3082999999999724e-05, 3.372199999999992e-05, 3.3110999999998864e-05, 3.366700000000111e-05, 3.316699999999714e-05, 3.30839999999992e-05, 3.249999999999781e-05, 3.31250000000019e-05, 3.251400000000085e-05, 3.3110999999998864e-05, 3.309700000000276e-05, 3.250000000000128e-05, 3.250000000000128e-05, 3.370899999999982e-05, 3.372299999999939e-05, 3.372199999999992e-05, 3.249999999999781e-05, 3.369400000000078e-05, 3.250000000000128e-05, 3.370899999999982e-05, 3.24579999999991e-05, 3.250000000000128e-05, 3.370899999999982e-05, 3.372299999999939e-05, 3.188900000000022e-05, 3.372199999999992e-05, 3.250000000000128e-05, 3.370800000000035e-05, 3.372199999999992e-05, 3.370800000000035e-05, 3.311100000000233e-05, 3.370899999999982e-05, 3.251400000000085e-05, 3.377800000000167e-05, 3.251400000000085e-05, 3.3096999999999294e-05, 3.3110999999998864e-05, 3.251400000000085e-05, 3.3096999999999294e-05, 3.3096999999999294e-05, 3.251400000000085e-05, 3.30700000000031e-05, 3.250000000000128e-05, 3.249999999999781e-05, 3.248599999999824e-05, 3.374999999999906e-05, 3.3110999999998864e-05]</msg>
<status status="PASS" starttime="20201030 10:57:31.038" endtime="20201030 10:57:31.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.033" endtime="20201030 10:57:31.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:31.045" endtime="20201030 10:57:31.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.043" endtime="20201030 10:57:31.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.042" endtime="20201030 10:57:31.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.685" endtime="20201030 10:57:31.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.685" endtime="20201030 10:57:31.066"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.075" endtime="20201030 10:57:31.092"></status>
</kw>
<msg timestamp="20201030 10:57:31.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.073" endtime="20201030 10:57:31.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.094" endtime="20201030 10:57:31.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.096" endtime="20201030 10:57:31.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.070" endtime="20201030 10:57:31.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.068" endtime="20201030 10:57:31.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.105" endtime="20201030 10:57:31.395"></status>
</kw>
<msg timestamp="20201030 10:57:31.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.104" endtime="20201030 10:57:31.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.405" endtime="20201030 10:57:31.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.423" endtime="20201030 10:57:31.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.101" endtime="20201030 10:57:31.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.099" endtime="20201030 10:57:31.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.436" level="INFO">${RESULT} = [{'diff': 3.552799999999995e-05}, {'diff': 3.4333000000000974e-05}, {'diff': 3.551400000000038e-05}, {'diff': 3.4319000000001404e-05}, {'diff': 3.490199999999985e-05}, {'diff': 3.491699999999889e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:31.430" endtime="20201030 10:57:31.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:31.445" level="INFO">${ACCURACY} = {'diff': [3.552799999999995e-05, 3.4333000000000974e-05, 3.551400000000038e-05, 3.4319000000001404e-05, 3.490199999999985e-05, 3.491699999999889e-05, 3.552799999999995e-05, 3.5541000000000045e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 10:57:31.438" endtime="20201030 10:57:31.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.454" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 10:57:31.452" endtime="20201030 10:57:31.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.459" level="INFO">VALUE: [3.552799999999995e-05, 3.4333000000000974e-05, 3.551400000000038e-05, 3.4319000000001404e-05, 3.490199999999985e-05, 3.491699999999889e-05, 3.552799999999995e-05, 3.5541000000000045e-05, 3.431999999999741e-05, 3.5527000000000475e-05, 3.429199999999827e-05, 3.491699999999889e-05, 3.551400000000038e-05, 3.4860999999997144e-05, 3.5610999999997894e-05, 3.556999999999866e-05, 3.4861000000000614e-05, 3.4319000000001404e-05, 3.5513000000000905e-05, 3.5610999999997894e-05, 3.491699999999889e-05, 3.432000000000088e-05, 3.4388999999999253e-05, 3.491599999999942e-05, 3.492999999999899e-05, 3.500000000000031e-05, 3.5527000000000475e-05, 3.430600000000131e-05, 3.4902999999999323e-05, 3.4318999999997934e-05, 3.6125000000001434e-05, 3.551400000000038e-05, 3.5527000000000475e-05, 3.429199999999827e-05, 3.432000000000088e-05, 3.491699999999889e-05, 3.6125000000001434e-05, 3.4318999999997934e-05, 3.554199999999952e-05, 3.6110999999998394e-05, 3.491699999999889e-05, 3.552799999999995e-05, 3.4319000000001404e-05, 3.4902999999999323e-05, 3.5527000000000475e-05, 3.556999999999866e-05, 3.4319000000001404e-05, 3.4304999999998365e-05, 3.547200000000167e-05, 3.552799999999995e-05]</msg>
<status status="PASS" starttime="20201030 10:57:31.457" endtime="20201030 10:57:31.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.447" endtime="20201030 10:57:31.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:31.471" endtime="20201030 10:57:31.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.468" endtime="20201030 10:57:31.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.466" endtime="20201030 10:57:31.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.067" endtime="20201030 10:57:31.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.066" endtime="20201030 10:57:31.491"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.500" endtime="20201030 10:57:31.516"></status>
</kw>
<msg timestamp="20201030 10:57:31.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.498" endtime="20201030 10:57:31.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.518" endtime="20201030 10:57:31.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.520" endtime="20201030 10:57:31.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.496" endtime="20201030 10:57:31.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.494" endtime="20201030 10:57:31.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.529" endtime="20201030 10:57:31.814"></status>
</kw>
<msg timestamp="20201030 10:57:31.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02171175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217485, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:31.528" endtime="20201030 10:57:31.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02171175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217485, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:31.818" endtime="20201030 10:57:31.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.826" endtime="20201030 10:57:31.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.525" endtime="20201030 10:57:31.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.524" endtime="20201030 10:57:31.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.833" level="INFO">${RESULT} = [{'diff': 3.675000000000206e-05}, {'diff': 3.6125000000001434e-05}, {'diff': 3.672299999999892e-05}, {'diff': 3.6124999999997964e-05}, {'diff': 3.6139000000001004e-05}, {'diff': 3.672299999999892e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:31.829" endtime="20201030 10:57:31.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:31.837" level="INFO">${ACCURACY} = {'diff': [3.675000000000206e-05, 3.6125000000001434e-05, 3.672299999999892e-05, 3.6124999999997964e-05, 3.6139000000001004e-05, 3.672299999999892e-05, 3.7333000000000505e-05, 3.7888999999999284e-05, 3...</msg>
<status status="PASS" starttime="20201030 10:57:31.833" endtime="20201030 10:57:31.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.842" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 10:57:31.841" endtime="20201030 10:57:31.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.844" level="INFO">VALUE: [3.675000000000206e-05, 3.6125000000001434e-05, 3.672299999999892e-05, 3.6124999999997964e-05, 3.6139000000001004e-05, 3.672299999999892e-05, 3.7333000000000505e-05, 3.7888999999999284e-05, 3.7333000000000505e-05, 3.7874999999999714e-05, 3.673599999999902e-05, 3.618000000000024e-05, 3.6124999999997964e-05, 3.680600000000034e-05, 3.7333000000000505e-05, 3.6763000000002155e-05, 3.733399999999998e-05, 3.6125000000001434e-05, 3.672199999999945e-05, 3.733399999999998e-05, 3.609800000000177e-05, 3.7931000000001464e-05, 3.7347000000000075e-05, 3.7332999999997035e-05, 3.734799999999955e-05, 3.672200000000292e-05, 3.6124999999997964e-05, 3.673599999999902e-05, 3.794400000000156e-05, 3.7945000000001033e-05, 3.672199999999945e-05, 3.736199999999912e-05, 3.733399999999998e-05, 3.7944999999997564e-05, 3.669499999999978e-05, 3.793000000000199e-05, 3.7332999999997035e-05, 3.7945000000001033e-05, 3.672199999999945e-05, 3.6805000000000865e-05, 3.7318999999997465e-05, 3.674999999999859e-05, 3.674999999999859e-05, 3.674999999999859e-05, 3.6125000000001434e-05, 3.6111000000001864e-05, 3.7333000000000505e-05, 3.673599999999902e-05, 3.7945000000001033e-05, 3.733399999999998e-05]</msg>
<status status="PASS" starttime="20201030 10:57:31.843" endtime="20201030 10:57:31.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.838" endtime="20201030 10:57:31.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:31.849" endtime="20201030 10:57:31.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.848" endtime="20201030 10:57:31.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.847" endtime="20201030 10:57:31.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.492" endtime="20201030 10:57:31.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.491" endtime="20201030 10:57:31.870"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.878" endtime="20201030 10:57:31.894"></status>
</kw>
<msg timestamp="20201030 10:57:31.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.877" endtime="20201030 10:57:31.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.896" endtime="20201030 10:57:31.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.898" endtime="20201030 10:57:31.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.874" endtime="20201030 10:57:31.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.872" endtime="20201030 10:57:31.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.907" endtime="20201030 10:57:32.196"></status>
</kw>
<msg timestamp="20201030 10:57:32.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.906" endtime="20201030 10:57:32.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.200" endtime="20201030 10:57:32.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.208" endtime="20201030 10:57:32.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.903" endtime="20201030 10:57:32.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.901" endtime="20201030 10:57:32.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.215" level="INFO">${RESULT} = [{'diff': 3.976399999999769e-05}, {'diff': 3.923600000000152e-05}, {'diff': 3.913799999999759e-05}, {'diff': 3.793000000000199e-05}, {'diff': 3.854200000000252e-05}, {'diff': 3.9153000000000104e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:32.212" endtime="20201030 10:57:32.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:32.219" level="INFO">${ACCURACY} = {'diff': [3.976399999999769e-05, 3.923600000000152e-05, 3.913799999999759e-05, 3.793000000000199e-05, 3.854200000000252e-05, 3.9153000000000104e-05, 3.794400000000156e-05, 3.975000000000159e-05, 3.916...</msg>
<status status="PASS" starttime="20201030 10:57:32.216" endtime="20201030 10:57:32.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.223" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 10:57:32.222" endtime="20201030 10:57:32.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.226" level="INFO">VALUE: [3.976399999999769e-05, 3.923600000000152e-05, 3.913799999999759e-05, 3.793000000000199e-05, 3.854200000000252e-05, 3.9153000000000104e-05, 3.794400000000156e-05, 3.975000000000159e-05, 3.91660000000002e-05, 3.854199999999905e-05, 3.7945000000001033e-05, 3.9166999999999674e-05, 3.977800000000073e-05, 3.9139000000000534e-05, 3.861200000000037e-05, 3.9153000000000104e-05, 3.790199999999938e-05, 3.7945000000001033e-05, 3.854199999999905e-05, 3.8527000000000006e-05, 3.975000000000159e-05, 3.79590000000006e-05, 3.792999999999852e-05, 3.7944999999997564e-05, 3.854200000000252e-05, 3.915200000000063e-05, 3.8513000000000436e-05, 3.979199999999683e-05, 3.9096999999998355e-05, 3.9153000000000104e-05, 3.855599999999862e-05, 3.974999999999812e-05, 3.9805000000000396e-05, 3.7931000000001464e-05, 3.9139000000000534e-05, 3.794399999999809e-05, 3.855599999999862e-05, 3.854199999999905e-05, 3.8554999999999146e-05, 3.852800000000295e-05, 3.8554999999999146e-05, 3.9181000000002714e-05, 3.8540999999999576e-05, 3.975000000000159e-05, 3.9125000000000965e-05, 3.8568999999998715e-05, 3.845800000000163e-05, 3.854200000000252e-05, 3.9208999999998384e-05, 3.9153000000000104e-05]</msg>
<status status="PASS" starttime="20201030 10:57:32.224" endtime="20201030 10:57:32.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.220" endtime="20201030 10:57:32.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:32.230" endtime="20201030 10:57:32.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.229" endtime="20201030 10:57:32.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.228" endtime="20201030 10:57:32.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.871" endtime="20201030 10:57:32.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.870" endtime="20201030 10:57:32.251"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.259" endtime="20201030 10:57:32.277"></status>
</kw>
<msg timestamp="20201030 10:57:32.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.258" endtime="20201030 10:57:32.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.278" endtime="20201030 10:57:32.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.281" endtime="20201030 10:57:32.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.255" endtime="20201030 10:57:32.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.253" endtime="20201030 10:57:32.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.290" endtime="20201030 10:57:32.575"></status>
</kw>
<msg timestamp="20201030 10:57:32.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022519389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.288" endtime="20201030 10:57:32.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022519389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.580" endtime="20201030 10:57:32.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.588" endtime="20201030 10:57:32.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.286" endtime="20201030 10:57:32.590"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.284" endtime="20201030 10:57:32.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.594" level="INFO">${RESULT} = [{'diff': 4.097200000000023e-05}, {'diff': 4.0945000000000564e-05}, {'diff': 4.156999999999772e-05}, {'diff': 4.095800000000066e-05}, {'diff': 4.097200000000023e-05}, {'diff': 4.0403000000001354e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:32.591" endtime="20201030 10:57:32.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:32.598" level="INFO">${ACCURACY} = {'diff': [4.097200000000023e-05, 4.0945000000000564e-05, 4.156999999999772e-05, 4.095800000000066e-05, 4.097200000000023e-05, 4.0403000000001354e-05, 4.0361000000002645e-05, 4.1569000000001716e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:57:32.595" endtime="20201030 10:57:32.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.603" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 10:57:32.602" endtime="20201030 10:57:32.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.605" level="INFO">VALUE: [4.097200000000023e-05, 4.0945000000000564e-05, 4.156999999999772e-05, 4.095800000000066e-05, 4.097200000000023e-05, 4.0403000000001354e-05, 4.0361000000002645e-05, 4.1569000000001716e-05, 4.0305000000000896e-05, 4.0360999999999175e-05, 4.0361000000002645e-05, 4.157000000000119e-05, 4.095799999999719e-05, 4.040199999999841e-05, 4.034799999999908e-05, 3.9777000000001256e-05, 4.0360999999999175e-05, 4.0889000000002285e-05, 4.157000000000119e-05, 4.094400000000109e-05, 4.0361000000002645e-05, 4.0360999999999175e-05, 4.0360999999999175e-05, 4.036200000000212e-05, 4.0346999999999605e-05, 4.0361000000002645e-05, 4.0389000000001785e-05, 4.216599999999973e-05, 4.156999999999772e-05, 4.154200000000205e-05, 4.1554999999998676e-05, 4.1555000000002146e-05, 3.976399999999769e-05, 4.0360999999999175e-05, 4.095800000000066e-05, 4.152800000000248e-05, 4.0346999999999605e-05, 4.0360999999999175e-05, 4.097199999999676e-05, 4.155599999999815e-05, 4.155600000000162e-05, 4.036200000000212e-05, 4.0360999999999175e-05, 4.099999999999937e-05, 4.099999999999937e-05, 4.093000000000152e-05, 4.158400000000076e-05, 3.972199999999898e-05, 3.976399999999769e-05, 4.1568999999998246e-05]</msg>
<status status="PASS" starttime="20201030 10:57:32.604" endtime="20201030 10:57:32.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.599" endtime="20201030 10:57:32.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:32.611" endtime="20201030 10:57:32.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.609" endtime="20201030 10:57:32.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.608" endtime="20201030 10:57:32.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.252" endtime="20201030 10:57:32.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.251" endtime="20201030 10:57:32.631"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.640" endtime="20201030 10:57:32.656"></status>
</kw>
<msg timestamp="20201030 10:57:32.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.638" endtime="20201030 10:57:32.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.658" endtime="20201030 10:57:32.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.660" endtime="20201030 10:57:32.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.636" endtime="20201030 10:57:32.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.634" endtime="20201030 10:57:32.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.669" endtime="20201030 10:57:32.955"></status>
</kw>
<msg timestamp="20201030 10:57:32.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.667" endtime="20201030 10:57:32.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.959" endtime="20201030 10:57:32.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.967" endtime="20201030 10:57:32.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.665" endtime="20201030 10:57:32.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.663" endtime="20201030 10:57:32.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.973" level="INFO">${RESULT} = [{'diff': 4.3389000000001315e-05}, {'diff': 4.2152999999999635e-05}, {'diff': 4.398599999999933e-05}, {'diff': 4.338800000000184e-05}, {'diff': 4.2180999999998775e-05}, {'diff': 4.2166999999999205e-05...</msg>
<status status="PASS" starttime="20201030 10:57:32.970" endtime="20201030 10:57:32.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:32.978" level="INFO">${ACCURACY} = {'diff': [4.3389000000001315e-05, 4.2152999999999635e-05, 4.398599999999933e-05, 4.338800000000184e-05, 4.2180999999998775e-05, 4.2166999999999205e-05, 4.3388999999997846e-05, 4.277800000000026e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:57:32.974" endtime="20201030 10:57:32.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.983" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 10:57:32.982" endtime="20201030 10:57:32.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.985" level="INFO">VALUE: [4.3389000000001315e-05, 4.2152999999999635e-05, 4.398599999999933e-05, 4.338800000000184e-05, 4.2180999999998775e-05, 4.2166999999999205e-05, 4.3388999999997846e-05, 4.277800000000026e-05, 4.2791000000000357e-05, 4.279099999999689e-05, 4.3389000000001315e-05, 4.3388999999997846e-05, 4.398599999999933e-05, 4.21799999999993e-05, 4.277799999999679e-05, 4.2181000000002244e-05, 4.3389000000001315e-05, 4.2791000000000357e-05, 4.277800000000026e-05, 4.2153000000003105e-05, 4.3374999999998276e-05, 4.276399999999722e-05, 4.3374999999998276e-05, 4.219400000000234e-05, 4.276399999999722e-05, 4.3374999999998276e-05, 4.2181000000002244e-05, 4.3375000000001745e-05, 4.277800000000026e-05, 4.2791000000000357e-05, 4.3360999999998706e-05, 4.216599999999973e-05, 4.390200000000191e-05, 4.21799999999993e-05, 4.216599999999973e-05, 4.218000000000277e-05, 4.2181000000002244e-05, 4.222200000000148e-05, 4.277799999999679e-05, 4.3361000000002176e-05, 4.2166999999999205e-05, 4.3374999999998276e-05, 4.216599999999973e-05, 4.3458999999999165e-05, 4.3389000000001315e-05, 4.2152999999999635e-05, 4.3389000000001315e-05, 4.277800000000026e-05, 4.277799999999679e-05, 4.2166999999999205e-05]</msg>
<status status="PASS" starttime="20201030 10:57:32.984" endtime="20201030 10:57:32.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.979" endtime="20201030 10:57:32.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:32.990" endtime="20201030 10:57:33.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.988" endtime="20201030 10:57:33.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.987" endtime="20201030 10:57:33.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.632" endtime="20201030 10:57:33.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.632" endtime="20201030 10:57:33.011"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.019" endtime="20201030 10:57:33.035"></status>
</kw>
<msg timestamp="20201030 10:57:33.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.018" endtime="20201030 10:57:33.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.037" endtime="20201030 10:57:33.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.039" endtime="20201030 10:57:33.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.015" endtime="20201030 10:57:33.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.013" endtime="20201030 10:57:33.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.048" endtime="20201030 10:57:33.335"></status>
</kw>
<msg timestamp="20201030 10:57:33.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.047" endtime="20201030 10:57:33.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.339" endtime="20201030 10:57:33.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.348" endtime="20201030 10:57:33.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.044" endtime="20201030 10:57:33.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.042" endtime="20201030 10:57:33.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:33.354" level="INFO">${RESULT} = [{'diff': 4.51939999999984e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.579199999999936e-05}, {'diff': 4.458400000000029e-05}, {'diff': 4.580599999999893e-05}, {'diff': 4.5209000000000915e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:33.351" endtime="20201030 10:57:33.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:33.358" level="INFO">${ACCURACY} = {'diff': [4.51939999999984e-05, 4.397199999999976e-05, 4.579199999999936e-05, 4.458400000000029e-05, 4.580599999999893e-05, 4.5209000000000915e-05, 4.456999999999725e-05, 4.519400000000187e-05, 4.3985...</msg>
<status status="PASS" starttime="20201030 10:57:33.355" endtime="20201030 10:57:33.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.363" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 10:57:33.362" endtime="20201030 10:57:33.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.365" level="INFO">VALUE: [4.51939999999984e-05, 4.397199999999976e-05, 4.579199999999936e-05, 4.458400000000029e-05, 4.580599999999893e-05, 4.5209000000000915e-05, 4.456999999999725e-05, 4.519400000000187e-05, 4.398599999999933e-05, 4.458400000000029e-05, 4.519400000000187e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.397199999999976e-05, 4.398599999999933e-05, 4.51939999999984e-05, 4.4583000000000816e-05, 4.51939999999984e-05, 4.4610999999999956e-05, 4.580499999999946e-05, 4.466599999999876e-05, 4.5209000000000915e-05, 4.579099999999989e-05, 4.5861000000001206e-05, 4.459799999999986e-05, 4.4583000000000816e-05, 4.5195000000001345e-05, 4.573600000000108e-05, 4.5195000000001345e-05, 4.5195000000001345e-05, 4.4583000000000816e-05, 4.519400000000187e-05, 4.51800000000023e-05, 4.3986999999998805e-05, 4.517999999999883e-05, 4.4555000000001677e-05, 4.520799999999797e-05, 4.5166999999998736e-05, 4.577799999999979e-05, 4.4610999999999956e-05, 4.39999999999989e-05, 4.459799999999986e-05, 4.458299999999735e-05, 4.5195000000001345e-05, 4.51800000000023e-05, 4.5195000000001345e-05, 4.397199999999976e-05, 4.39999999999989e-05, 4.580499999999946e-05, 4.456899999999778e-05]</msg>
<status status="PASS" starttime="20201030 10:57:33.364" endtime="20201030 10:57:33.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.359" endtime="20201030 10:57:33.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:33.370" endtime="20201030 10:57:33.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.369" endtime="20201030 10:57:33.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.367" endtime="20201030 10:57:33.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.011" endtime="20201030 10:57:33.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.011" endtime="20201030 10:57:33.391"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.399" endtime="20201030 10:57:33.417"></status>
</kw>
<msg timestamp="20201030 10:57:33.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.398" endtime="20201030 10:57:33.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.419" endtime="20201030 10:57:33.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.421" endtime="20201030 10:57:33.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.395" endtime="20201030 10:57:33.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.393" endtime="20201030 10:57:33.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.430" endtime="20201030 10:57:33.716"></status>
</kw>
<msg timestamp="20201030 10:57:33.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:33.428" endtime="20201030 10:57:33.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:33.720" endtime="20201030 10:57:33.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.728" endtime="20201030 10:57:33.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.426" endtime="20201030 10:57:33.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.424" endtime="20201030 10:57:33.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:33.735" level="INFO">${RESULT} = [{'diff': 4.820800000000097e-05}, {'diff': 4.70000000000019e-05}, {'diff': 4.761099999999949e-05}, {'diff': 4.699999999999843e-05}, {'diff': 4.708299999999985e-05}, {'diff': 4.822200000000054e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:33.731" endtime="20201030 10:57:33.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:33.739" level="INFO">${ACCURACY} = {'diff': [4.820800000000097e-05, 4.70000000000019e-05, 4.761099999999949e-05, 4.699999999999843e-05, 4.708299999999985e-05, 4.822200000000054e-05, 4.699999999999843e-05, 4.699999999999843e-05, 4.70139...</msg>
<status status="PASS" starttime="20201030 10:57:33.736" endtime="20201030 10:57:33.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.743" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 10:57:33.742" endtime="20201030 10:57:33.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.746" level="INFO">VALUE: [4.820800000000097e-05, 4.70000000000019e-05, 4.761099999999949e-05, 4.699999999999843e-05, 4.708299999999985e-05, 4.822200000000054e-05, 4.699999999999843e-05, 4.699999999999843e-05, 4.7013999999998e-05, 4.6403000000000416e-05, 4.6987000000001805e-05, 4.6416999999999986e-05, 4.640299999999695e-05, 4.643000000000008e-05, 4.762499999999906e-05, 4.759699999999992e-05, 4.640200000000094e-05, 4.7013999999998e-05, 4.761199999999896e-05, 4.762499999999906e-05, 4.6403000000000416e-05, 4.70000000000019e-05, 4.762499999999906e-05, 4.698599999999886e-05, 4.759699999999992e-05, 4.701400000000147e-05, 4.579099999999989e-05, 4.7013999999998e-05, 4.702700000000157e-05, 4.6347000000002136e-05, 4.6416999999999986e-05, 4.6430999999999556e-05, 4.6375000000001276e-05, 4.698599999999886e-05, 4.757000000000025e-05, 4.761200000000243e-05, 4.6958999999999196e-05, 4.759699999999992e-05, 4.758399999999982e-05, 4.6389000000000846e-05, 4.702800000000104e-05, 4.58329999999986e-05, 4.761200000000243e-05, 4.761099999999949e-05, 4.640299999999695e-05, 4.6403000000000416e-05, 4.704199999999714e-05, 4.647199999999879e-05, 4.758399999999982e-05, 4.6389000000000846e-05]</msg>
<status status="PASS" starttime="20201030 10:57:33.744" endtime="20201030 10:57:33.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.740" endtime="20201030 10:57:33.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:33.751" endtime="20201030 10:57:33.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.750" endtime="20201030 10:57:33.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.749" endtime="20201030 10:57:33.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.392" endtime="20201030 10:57:33.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.391" endtime="20201030 10:57:33.772"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.780" endtime="20201030 10:57:33.797"></status>
</kw>
<msg timestamp="20201030 10:57:33.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.779" endtime="20201030 10:57:33.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.799" endtime="20201030 10:57:33.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.801" endtime="20201030 10:57:33.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.776" endtime="20201030 10:57:33.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.774" endtime="20201030 10:57:33.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.810" endtime="20201030 10:57:34.097"></status>
</kw>
<msg timestamp="20201030 10:57:34.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021644167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.809" endtime="20201030 10:57:34.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021644167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.101" endtime="20201030 10:57:34.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.109" endtime="20201030 10:57:34.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.806" endtime="20201030 10:57:34.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.804" endtime="20201030 10:57:34.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.115" level="INFO">${RESULT} = [{'diff': 4.826399999999925e-05}, {'diff': 4.884700000000117e-05}, {'diff': 4.88330000000016e-05}, {'diff': 4.881899999999856e-05}, {'diff': 4.820800000000097e-05}, {'diff': 4.9431000000002556e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:34.112" endtime="20201030 10:57:34.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:34.120" level="INFO">${ACCURACY} = {'diff': [4.826399999999925e-05, 4.884700000000117e-05, 4.88330000000016e-05, 4.881899999999856e-05, 4.820800000000097e-05, 4.9431000000002556e-05, 4.943000000000308e-05, 4.941600000000004e-05, 4.9416...</msg>
<status status="PASS" starttime="20201030 10:57:34.116" endtime="20201030 10:57:34.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.125" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 10:57:34.124" endtime="20201030 10:57:34.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.127" level="INFO">VALUE: [4.826399999999925e-05, 4.884700000000117e-05, 4.88330000000016e-05, 4.881899999999856e-05, 4.820800000000097e-05, 4.9431000000002556e-05, 4.943000000000308e-05, 4.941600000000004e-05, 4.941699999999952e-05, 4.881900000000203e-05, 4.9445000000002126e-05, 4.88200000000015e-05, 4.940299999999995e-05, 4.823600000000011e-05, 4.8209000000000446e-05, 4.9388000000000903e-05, 4.8195000000000876e-05, 4.997199999999882e-05, 5.005500000000024e-05, 4.819399999999793e-05, 4.883299999999813e-05, 4.940200000000047e-05, 4.881899999999856e-05, 4.822199999999707e-05, 4.88200000000015e-05, 4.9459000000001696e-05, 4.822200000000054e-05, 4.884800000000064e-05, 4.82079999999975e-05, 4.822200000000054e-05, 4.880600000000193e-05, 4.822200000000054e-05, 4.943099999999909e-05, 4.8209000000000446e-05, 4.880499999999899e-05, 4.880500000000246e-05, 4.95140000000005e-05, 4.887500000000031e-05, 4.942999999999961e-05, 4.943099999999909e-05, 4.875000000000018e-05, 4.8209000000000446e-05, 4.883400000000107e-05, 5.000000000000143e-05, 4.8223000000000016e-05, 4.88200000000015e-05, 4.8153000000002166e-05, 4.881899999999856e-05, 4.941699999999952e-05, 4.880599999999846e-05]</msg>
<status status="PASS" starttime="20201030 10:57:34.126" endtime="20201030 10:57:34.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.121" endtime="20201030 10:57:34.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:34.132" endtime="20201030 10:57:34.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.131" endtime="20201030 10:57:34.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.130" endtime="20201030 10:57:34.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.773" endtime="20201030 10:57:34.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.772" endtime="20201030 10:57:34.153"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.161" endtime="20201030 10:57:34.178"></status>
</kw>
<msg timestamp="20201030 10:57:34.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.160" endtime="20201030 10:57:34.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.180" endtime="20201030 10:57:34.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.182" endtime="20201030 10:57:34.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.157" endtime="20201030 10:57:34.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.155" endtime="20201030 10:57:34.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.191" endtime="20201030 10:57:34.478"></status>
</kw>
<msg timestamp="20201030 10:57:34.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021711625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.189" endtime="20201030 10:57:34.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021711625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.482" endtime="20201030 10:57:34.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.490" endtime="20201030 10:57:34.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.187" endtime="20201030 10:57:34.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.185" endtime="20201030 10:57:34.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.497" level="INFO">${RESULT} = [{'diff': 5.06530000000012e-05}, {'diff': 5.122299999999955e-05}, {'diff': 5.065299999999773e-05}, {'diff': 5.002699999999763e-05}, {'diff': 5.062499999999859e-05}, {'diff': 5.183300000000113e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:34.494" endtime="20201030 10:57:34.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:34.501" level="INFO">${ACCURACY} = {'diff': [5.06530000000012e-05, 5.122299999999955e-05, 5.065299999999773e-05, 5.002699999999763e-05, 5.062499999999859e-05, 5.183300000000113e-05, 5.1902000000002974e-05, 5.004200000000014e-05, 5.1847...</msg>
<status status="PASS" starttime="20201030 10:57:34.498" endtime="20201030 10:57:34.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.505" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 10:57:34.504" endtime="20201030 10:57:34.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.508" level="INFO">VALUE: [5.06530000000012e-05, 5.122299999999955e-05, 5.065299999999773e-05, 5.002699999999763e-05, 5.062499999999859e-05, 5.183300000000113e-05, 5.1902000000002974e-05, 5.004200000000014e-05, 5.18470000000007e-05, 5.063900000000163e-05, 5.063899999999816e-05, 5.002699999999763e-05, 5.062500000000206e-05, 5.179200000000189e-05, 5.115299999999823e-05, 5.1915999999999074e-05, 5.061100000000249e-05, 5.0637999999998684e-05, 5.1223000000003016e-05, 5.062500000000206e-05, 5.06530000000012e-05, 5.126400000000225e-05, 5.182000000000103e-05, 5.123599999999964e-05, 5.06530000000012e-05, 5.0014000000001e-05, 5.123599999999964e-05, 5.058399999999935e-05, 5.119400000000093e-05, 5.124999999999921e-05, 5.004100000000067e-05, 5.004200000000014e-05, 5.00409999999972e-05, 5.063899999999816e-05, 5.181999999999756e-05, 5.063899999999816e-05, 5.062500000000206e-05, 5.186100000000027e-05, 4.995800000000272e-05, 5.002800000000057e-05, 5.061200000000196e-05, 5.119500000000041e-05, 5.123599999999964e-05, 5.000000000000143e-05, 5.063899999999816e-05, 5.061099999999902e-05, 5.126399999999878e-05, 5.18470000000007e-05, 5.183300000000113e-05, 5.181900000000156e-05]</msg>
<status status="PASS" starttime="20201030 10:57:34.506" endtime="20201030 10:57:34.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.502" endtime="20201030 10:57:34.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:34.526" endtime="20201030 10:57:34.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.524" endtime="20201030 10:57:34.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.523" endtime="20201030 10:57:34.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.154" endtime="20201030 10:57:34.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.153" endtime="20201030 10:57:34.546"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.555" endtime="20201030 10:57:34.573"></status>
</kw>
<msg timestamp="20201030 10:57:34.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.554" endtime="20201030 10:57:34.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.574" endtime="20201030 10:57:34.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.577" endtime="20201030 10:57:34.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.551" endtime="20201030 10:57:34.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.549" endtime="20201030 10:57:34.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.585" endtime="20201030 10:57:34.871"></status>
</kw>
<msg timestamp="20201030 10:57:34.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023179056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023232639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.584" endtime="20201030 10:57:34.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023179056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023232639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.875" endtime="20201030 10:57:34.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.883" endtime="20201030 10:57:34.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.581" endtime="20201030 10:57:34.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.580" endtime="20201030 10:57:34.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.889" level="INFO">${RESULT} = [{'diff': 5.358299999999941e-05}, {'diff': 5.361100000000202e-05}, {'diff': 5.305600000000271e-05}, {'diff': 5.304199999999967e-05}, {'diff': 5.244400000000218e-05}, {'diff': 5.30410000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:34.886" endtime="20201030 10:57:34.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:34.894" level="INFO">${ACCURACY} = {'diff': [5.358299999999941e-05, 5.361100000000202e-05, 5.305600000000271e-05, 5.304199999999967e-05, 5.244400000000218e-05, 5.30410000000002e-05, 5.365300000000073e-05, 5.302700000000063e-05, 5.36809...</msg>
<status status="PASS" starttime="20201030 10:57:34.890" endtime="20201030 10:57:34.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.898" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 10:57:34.897" endtime="20201030 10:57:34.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.900" level="INFO">VALUE: [5.358299999999941e-05, 5.361100000000202e-05, 5.305600000000271e-05, 5.304199999999967e-05, 5.244400000000218e-05, 5.30410000000002e-05, 5.365300000000073e-05, 5.302700000000063e-05, 5.368099999999987e-05, 5.2457999999998284e-05, 5.181899999999809e-05, 5.243099999999862e-05, 5.250000000000046e-05, 5.3638000000001684e-05, 5.311100000000152e-05, 5.363899999999769e-05, 5.304199999999967e-05, 5.244500000000166e-05, 5.244400000000218e-05, 5.251400000000003e-05, 5.363900000000116e-05, 5.365300000000073e-05, 5.2430000000002613e-05, 5.306999999999881e-05, 5.3651999999997785e-05, 5.363899999999769e-05, 5.18470000000007e-05, 5.2430000000002613e-05, 5.181999999999756e-05, 5.3665999999997355e-05, 5.365299999999726e-05, 5.186100000000027e-05, 5.302700000000063e-05, 5.2443999999998714e-05, 5.245800000000175e-05, 5.3680000000000394e-05, 5.365300000000073e-05, 5.3652000000001254e-05, 5.36670000000003e-05, 5.305600000000271e-05, 5.245899999999776e-05, 5.2443999999998714e-05, 5.302700000000063e-05, 5.2443999999998714e-05, 5.307000000000228e-05, 5.30280000000001e-05, 5.312500000000109e-05, 5.3637999999998215e-05, 5.18470000000007e-05, 5.363900000000116e-05]</msg>
<status status="PASS" starttime="20201030 10:57:34.899" endtime="20201030 10:57:34.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.894" endtime="20201030 10:57:34.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:34.906" endtime="20201030 10:57:34.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.905" endtime="20201030 10:57:34.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.903" endtime="20201030 10:57:34.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.547" endtime="20201030 10:57:34.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.547" endtime="20201030 10:57:34.927"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.935" endtime="20201030 10:57:34.952"></status>
</kw>
<msg timestamp="20201030 10:57:34.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.934" endtime="20201030 10:57:34.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.953" endtime="20201030 10:57:34.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.956" endtime="20201030 10:57:34.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.931" endtime="20201030 10:57:34.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.929" endtime="20201030 10:57:34.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.964" endtime="20201030 10:57:35.250"></status>
</kw>
<msg timestamp="20201030 10:57:35.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.963" endtime="20201030 10:57:35.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.254" endtime="20201030 10:57:35.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.262" endtime="20201030 10:57:35.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.960" endtime="20201030 10:57:35.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.959" endtime="20201030 10:57:35.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.269" level="INFO">${RESULT} = [{'diff': 5.5458000000001284e-05}, {'diff': 5.484700000000023e-05}, {'diff': 5.5471999999997385e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.5471999999997385e-0...</msg>
<status status="PASS" starttime="20201030 10:57:35.266" endtime="20201030 10:57:35.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:35.274" level="INFO">${ACCURACY} = {'diff': [5.5458000000001284e-05, 5.484700000000023e-05, 5.5471999999997385e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.5471999999997385e-05, 5.5472000000000854e-05, 5.487499999999937e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:35.270" endtime="20201030 10:57:35.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.278" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 10:57:35.277" endtime="20201030 10:57:35.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.280" level="INFO">VALUE: [5.5458000000001284e-05, 5.484700000000023e-05, 5.5471999999997385e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.5471999999997385e-05, 5.5472000000000854e-05, 5.487499999999937e-05, 5.5486000000000424e-05, 5.486200000000274e-05, 5.486100000000327e-05, 5.608299999999844e-05, 5.5458000000001284e-05, 5.48609999999998e-05, 5.48609999999998e-05, 5.5458000000001284e-05, 5.427800000000135e-05, 5.607000000000181e-05, 5.484700000000023e-05, 5.487499999999937e-05, 5.430500000000102e-05, 5.4277999999997883e-05, 5.608400000000138e-05, 5.547300000000033e-05, 5.5458000000001284e-05, 5.5513999999999564e-05, 5.5457999999997815e-05, 5.547300000000033e-05, 5.488899999999894e-05, 5.545900000000076e-05, 5.48609999999998e-05, 5.490300000000198e-05, 5.4249999999998744e-05, 5.4221999999999604e-05, 5.487500000000284e-05, 5.4277999999997883e-05, 5.426400000000178e-05, 5.425000000000221e-05, 5.422300000000255e-05, 5.427800000000135e-05, 5.5472000000000854e-05, 5.426400000000178e-05, 5.486199999999927e-05, 5.48609999999998e-05, 5.547300000000033e-05, 5.48609999999998e-05, 5.425000000000221e-05, 5.433399999999963e-05, 5.4277999999997883e-05, 5.48609999999998e-05]</msg>
<status status="PASS" starttime="20201030 10:57:35.279" endtime="20201030 10:57:35.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.275" endtime="20201030 10:57:35.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:35.285" endtime="20201030 10:57:35.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.284" endtime="20201030 10:57:35.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.283" endtime="20201030 10:57:35.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.928" endtime="20201030 10:57:35.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.927" endtime="20201030 10:57:35.306"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.315" endtime="20201030 10:57:35.332"></status>
</kw>
<msg timestamp="20201030 10:57:35.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.313" endtime="20201030 10:57:35.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.333" endtime="20201030 10:57:35.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.336" endtime="20201030 10:57:35.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.310" endtime="20201030 10:57:35.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.308" endtime="20201030 10:57:35.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.345" endtime="20201030 10:57:35.634"></status>
</kw>
<msg timestamp="20201030 10:57:35.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.343" endtime="20201030 10:57:35.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.638" endtime="20201030 10:57:35.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.646" endtime="20201030 10:57:35.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.341" endtime="20201030 10:57:35.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.339" endtime="20201030 10:57:35.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.653" level="INFO">${RESULT} = [{'diff': 5.7264000000001314e-05}, {'diff': 5.6652000000000785e-05}, {'diff': 5.6693999999999495e-05}, {'diff': 5.666699999999983e-05}, {'diff': 5.608300000000191e-05}, {'diff': 5.7278000000000884e-05...</msg>
<status status="PASS" starttime="20201030 10:57:35.650" endtime="20201030 10:57:35.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:35.657" level="INFO">${ACCURACY} = {'diff': [5.7264000000001314e-05, 5.6652000000000785e-05, 5.6693999999999495e-05, 5.666699999999983e-05, 5.608300000000191e-05, 5.7278000000000884e-05, 5.611100000000105e-05, 5.66809999999994e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 10:57:35.654" endtime="20201030 10:57:35.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.661" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 10:57:35.660" endtime="20201030 10:57:35.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.664" level="INFO">VALUE: [5.7264000000001314e-05, 5.6652000000000785e-05, 5.6693999999999495e-05, 5.666699999999983e-05, 5.608300000000191e-05, 5.7278000000000884e-05, 5.611100000000105e-05, 5.66809999999994e-05, 5.606900000000234e-05, 5.727699999999794e-05, 5.666699999999983e-05, 5.7249999999998274e-05, 5.7278000000000884e-05, 5.605500000000277e-05, 5.666699999999983e-05, 5.7221999999999135e-05, 5.7278000000000884e-05, 5.607000000000181e-05, 5.7278000000000884e-05, 5.788900000000194e-05, 5.78749999999989e-05, 5.606899999999887e-05, 5.6652000000000785e-05, 5.606999999999834e-05, 5.7278000000000884e-05, 5.7277999999997414e-05, 5.78749999999989e-05, 5.6055999999998773e-05, 5.666699999999983e-05, 5.78749999999989e-05, 5.665300000000026e-05, 5.7291999999996984e-05, 5.7249999999998274e-05, 5.78749999999989e-05, 5.606899999999887e-05, 5.7263999999997844e-05, 5.6679999999999925e-05, 5.6666000000000355e-05, 5.7263999999997844e-05, 5.611100000000105e-05, 5.666699999999983e-05, 5.7263999999997844e-05, 5.666699999999983e-05, 5.60549999999993e-05, 5.7319999999999593e-05, 5.607000000000181e-05, 5.786200000000227e-05, 5.608400000000138e-05, 5.788900000000194e-05, 5.6665999999996886e-05]</msg>
<status status="PASS" starttime="20201030 10:57:35.662" endtime="20201030 10:57:35.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.658" endtime="20201030 10:57:35.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:35.669" endtime="20201030 10:57:35.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.667" endtime="20201030 10:57:35.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.666" endtime="20201030 10:57:35.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.307" endtime="20201030 10:57:35.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.306" endtime="20201030 10:57:35.689"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.698" endtime="20201030 10:57:35.717"></status>
</kw>
<msg timestamp="20201030 10:57:35.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.696" endtime="20201030 10:57:35.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.718" endtime="20201030 10:57:35.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.721" endtime="20201030 10:57:35.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.694" endtime="20201030 10:57:35.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.691" endtime="20201030 10:57:35.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.729" endtime="20201030 10:57:36.015"></status>
</kw>
<msg timestamp="20201030 10:57:36.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022605389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.728" endtime="20201030 10:57:36.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022605389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.019" endtime="20201030 10:57:36.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.027" endtime="20201030 10:57:36.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.726" endtime="20201030 10:57:36.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.724" endtime="20201030 10:57:36.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.033" level="INFO">${RESULT} = [{'diff': 5.9693999999999026e-05}, {'diff': 5.9694000000002495e-05}, {'diff': 5.969500000000197e-05}, {'diff': 5.9083999999997444e-05}, {'diff': 5.90689999999984e-05}, {'diff': 5.8485999999999955e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:36.030" endtime="20201030 10:57:36.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.038" level="INFO">${ACCURACY} = {'diff': [5.9693999999999026e-05, 5.9694000000002495e-05, 5.969500000000197e-05, 5.9083999999997444e-05, 5.90689999999984e-05, 5.8485999999999955e-05, 5.9693999999999026e-05, 5.8499999999999525e-05, 5...</msg>
<status status="PASS" starttime="20201030 10:57:36.034" endtime="20201030 10:57:36.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.042" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.041" endtime="20201030 10:57:36.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.044" level="INFO">VALUE: [5.9693999999999026e-05, 5.9694000000002495e-05, 5.969500000000197e-05, 5.9083999999997444e-05, 5.90689999999984e-05, 5.8485999999999955e-05, 5.9693999999999026e-05, 5.8499999999999525e-05, 5.8471999999996915e-05, 5.8457999999997345e-05, 5.8472000000000385e-05, 5.970899999999807e-05, 5.968099999999893e-05, 5.909700000000101e-05, 5.8513999999999095e-05, 5.904099999999926e-05, 5.788899999999847e-05, 5.78749999999989e-05, 5.909700000000101e-05, 5.8472000000000385e-05, 5.9694000000002495e-05, 5.969500000000197e-05, 5.8485999999999955e-05, 5.909700000000101e-05, 5.8472000000000385e-05, 5.916699999999886e-05, 5.9665999999999886e-05, 5.96949999999985e-05, 5.8499999999999525e-05, 5.970899999999807e-05, 5.8485999999999955e-05, 5.8472000000000385e-05, 5.909699999999754e-05, 5.909699999999754e-05, 5.969500000000197e-05, 5.9708000000002065e-05, 5.96810000000024e-05, 5.9000000000000025e-05, 5.9693999999999026e-05, 5.912500000000015e-05, 5.9042000000002204e-05, 5.8499999999999525e-05, 5.8444000000001245e-05, 5.908300000000144e-05, 5.9084000000000914e-05, 5.9098000000000483e-05, 5.8499999999999525e-05, 5.9750000000000775e-05, 5.970900000000154e-05, 5.8472000000000385e-05]</msg>
<status status="PASS" starttime="20201030 10:57:36.043" endtime="20201030 10:57:36.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.038" endtime="20201030 10:57:36.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.050" endtime="20201030 10:57:36.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.049" endtime="20201030 10:57:36.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.047" endtime="20201030 10:57:36.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.690" endtime="20201030 10:57:36.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.689" endtime="20201030 10:57:36.071"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.079" endtime="20201030 10:57:36.096"></status>
</kw>
<msg timestamp="20201030 10:57:36.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.078" endtime="20201030 10:57:36.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.098" endtime="20201030 10:57:36.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.100" endtime="20201030 10:57:36.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.075" endtime="20201030 10:57:36.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.073" endtime="20201030 10:57:36.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.109" endtime="20201030 10:57:36.394"></status>
</kw>
<msg timestamp="20201030 10:57:36.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.108" endtime="20201030 10:57:36.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.399" endtime="20201030 10:57:36.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.407" endtime="20201030 10:57:36.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.105" endtime="20201030 10:57:36.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.103" endtime="20201030 10:57:36.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.413" level="INFO">${RESULT} = [{'diff': 6.030500000000008e-05}, {'diff': 6.0278000000000415e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.15279999999982e-05}, {'diff': 6.150000000000252e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:36.410" endtime="20201030 10:57:36.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.418" level="INFO">${ACCURACY} = {'diff': [6.030500000000008e-05, 6.0278000000000415e-05, 6.090300000000104e-05, 6.090300000000104e-05, 6.15279999999982e-05, 6.150000000000252e-05, 6.15140000000021e-05, 6.149999999999906e-05, 6.21249...</msg>
<status status="PASS" starttime="20201030 10:57:36.414" endtime="20201030 10:57:36.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.423" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.422" endtime="20201030 10:57:36.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.425" level="INFO">VALUE: [6.030500000000008e-05, 6.0278000000000415e-05, 6.090300000000104e-05, 6.090300000000104e-05, 6.15279999999982e-05, 6.150000000000252e-05, 6.15140000000021e-05, 6.149999999999906e-05, 6.212499999999968e-05, 6.031899999999965e-05, 6.0305999999999554e-05, 6.030500000000008e-05, 6.029099999999704e-05, 6.149999999999906e-05, 6.090300000000104e-05, 6.215299999999882e-05, 6.147199999999992e-05, 6.0291999999999984e-05, 6.0305999999999554e-05, 6.0916000000001136e-05, 6.0902000000001566e-05, 6.033299999999922e-05, 6.090300000000104e-05, 6.0278000000000415e-05, 6.0305999999999554e-05, 6.15140000000021e-05, 6.087499999999843e-05, 6.087499999999843e-05, 6.15279999999982e-05, 6.208300000000097e-05, 6.211199999999958e-05, 6.152800000000166e-05, 6.0291999999999984e-05, 6.0291999999999984e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.0263999999997375e-05, 6.091699999999714e-05, 6.0291999999999984e-05, 6.0902000000001566e-05, 6.0888999999998e-05, 6.0250000000001275e-05, 6.0278000000000415e-05, 6.148599999999949e-05, 6.0278000000000415e-05, 6.149999999999906e-05, 6.094499999999975e-05, 6.0235999999998235e-05, 6.029100000000051e-05, 6.083299999999972e-05]</msg>
<status status="PASS" starttime="20201030 10:57:36.424" endtime="20201030 10:57:36.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.419" endtime="20201030 10:57:36.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.430" endtime="20201030 10:57:36.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.429" endtime="20201030 10:57:36.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.427" endtime="20201030 10:57:36.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.071" endtime="20201030 10:57:36.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.071" endtime="20201030 10:57:36.451"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.459" endtime="20201030 10:57:36.477"></status>
</kw>
<msg timestamp="20201030 10:57:36.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.458" endtime="20201030 10:57:36.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.479" endtime="20201030 10:57:36.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.481" endtime="20201030 10:57:36.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.455" endtime="20201030 10:57:36.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.453" endtime="20201030 10:57:36.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.490" endtime="20201030 10:57:36.777"></status>
</kw>
<msg timestamp="20201030 10:57:36.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:36.488" endtime="20201030 10:57:36.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:36.781" endtime="20201030 10:57:36.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.789" endtime="20201030 10:57:36.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.486" endtime="20201030 10:57:36.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.484" endtime="20201030 10:57:36.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.796" level="INFO">${RESULT} = [{'diff': 6.77640000000014e-05}, {'diff': 6.884700000000035e-05}, {'diff': 6.779199999999708e-05}, {'diff': 6.72229999999982e-05}, {'diff': 6.85420000000013e-05}, {'diff': 6.731899999999971e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:36.792" endtime="20201030 10:57:36.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.800" level="INFO">${ACCURACY} = {'diff': [6.77640000000014e-05, 6.884700000000035e-05, 6.779199999999708e-05, 6.72229999999982e-05, 6.85420000000013e-05, 6.731899999999971e-05, 6.826399999999844e-05, 6.808300000000003e-05, 6.7332999...</msg>
<status status="PASS" starttime="20201030 10:57:36.796" endtime="20201030 10:57:36.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.804" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.803" endtime="20201030 10:57:36.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.806" level="INFO">VALUE: [6.77640000000014e-05, 6.884700000000035e-05, 6.779199999999708e-05, 6.72229999999982e-05, 6.85420000000013e-05, 6.731899999999971e-05, 6.826399999999844e-05, 6.808300000000003e-05, 6.733299999999928e-05, 6.812500000000221e-05, 6.715300000000035e-05, 6.761099999999867e-05, 6.841599999999823e-05, 6.849999999999912e-05, 6.736100000000189e-05, 6.870800000000066e-05, 6.862499999999924e-05, 6.769500000000303e-05, 6.865199999999891e-05, 6.733300000000275e-05, 6.805600000000037e-05, 6.863900000000228e-05, 6.847199999999998e-05, 6.831900000000071e-05, 6.886099999999992e-05, 6.866700000000142e-05, 6.820800000000016e-05, 6.870900000000013e-05, 6.895900000000038e-05, 6.70419999999998e-05, 6.852800000000173e-05, 6.790200000000163e-05, 6.795799999999991e-05, 6.779200000000055e-05, 6.74030000000006e-05, 6.881900000000121e-05, 6.883300000000078e-05, 6.815299999999788e-05, 6.866700000000142e-05, 6.783299999999978e-05, 6.797199999999948e-05, 6.847299999999945e-05, 6.797299999999895e-05, 6.706999999999894e-05, 6.836200000000237e-05, 6.720799999999916e-05, 6.769400000000009e-05, 6.763900000000128e-05, 6.868000000000152e-05, 6.748600000000202e-05]</msg>
<status status="PASS" starttime="20201030 10:57:36.805" endtime="20201030 10:57:36.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.800" endtime="20201030 10:57:36.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.811" endtime="20201030 10:57:36.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.810" endtime="20201030 10:57:36.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.809" endtime="20201030 10:57:36.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.451" endtime="20201030 10:57:36.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.451" endtime="20201030 10:57:36.832"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.840" endtime="20201030 10:57:36.861"></status>
</kw>
<msg timestamp="20201030 10:57:36.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.839" endtime="20201030 10:57:36.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.862" endtime="20201030 10:57:36.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.865" endtime="20201030 10:57:36.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.836" endtime="20201030 10:57:36.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.834" endtime="20201030 10:57:36.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.874" endtime="20201030 10:57:37.159"></status>
</kw>
<msg timestamp="20201030 10:57:37.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022900472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.872" endtime="20201030 10:57:37.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022900472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.163" endtime="20201030 10:57:37.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.172" endtime="20201030 10:57:37.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.870" endtime="20201030 10:57:37.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.868" endtime="20201030 10:57:37.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.179" level="INFO">${RESULT} = [{'diff': 6.92640000000029e-05}, {'diff': 7.055499999999992e-05}, {'diff': 7.070799999999919e-05}, {'diff': 6.922200000000073e-05}, {'diff': 7.077800000000051e-05}, {'diff': 7.011100000000117e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:37.175" endtime="20201030 10:57:37.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.183" level="INFO">${ACCURACY} = {'diff': [6.92640000000029e-05, 7.055499999999992e-05, 7.070799999999919e-05, 6.922200000000073e-05, 7.077800000000051e-05, 7.011100000000117e-05, 6.956999999999797e-05, 6.920900000000063e-05, 7.09590...</msg>
<status status="PASS" starttime="20201030 10:57:37.179" endtime="20201030 10:57:37.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.187" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.186" endtime="20201030 10:57:37.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.189" level="INFO">VALUE: [6.92640000000029e-05, 7.055499999999992e-05, 7.070799999999919e-05, 6.922200000000073e-05, 7.077800000000051e-05, 7.011100000000117e-05, 6.956999999999797e-05, 6.920900000000063e-05, 7.095900000000238e-05, 6.976399999999994e-05, 6.909800000000008e-05, 7.040199999999719e-05, 7.058299999999906e-05, 7.027700000000053e-05, 6.900000000000309e-05, 7.061100000000167e-05, 6.936100000000042e-05, 6.984800000000083e-05, 6.901399999999919e-05, 6.913900000000278e-05, 6.912499999999974e-05, 7.012499999999727e-05, 6.955600000000187e-05, 7.05559999999994e-05, 7.002799999999976e-05, 7.080500000000017e-05, 6.927699999999953e-05, 7.047200000000198e-05, 6.969500000000156e-05, 6.994399999999887e-05, 7.019500000000206e-05, 7.027800000000001e-05, 7.000000000000062e-05, 6.97499999999969e-05, 7.087500000000149e-05, 6.947200000000098e-05, 7.043099999999927e-05, 7.10559999999999e-05, 6.934700000000085e-05, 6.980600000000212e-05, 7.077800000000051e-05, 6.933400000000076e-05, 6.965299999999938e-05, 6.979199999999908e-05, 6.962500000000024e-05, 7.080500000000017e-05, 7.095900000000238e-05, 6.961199999999668e-05, 7.047199999999851e-05, 7.029199999999958e-05]</msg>
<status status="PASS" starttime="20201030 10:57:37.188" endtime="20201030 10:57:37.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.183" endtime="20201030 10:57:37.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.195" endtime="20201030 10:57:37.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.194" endtime="20201030 10:57:37.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.193" endtime="20201030 10:57:37.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.833" endtime="20201030 10:57:37.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.832" endtime="20201030 10:57:37.216"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.224" endtime="20201030 10:57:37.243"></status>
</kw>
<msg timestamp="20201030 10:57:37.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.223" endtime="20201030 10:57:37.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.245" endtime="20201030 10:57:37.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.247" endtime="20201030 10:57:37.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.220" endtime="20201030 10:57:37.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.218" endtime="20201030 10:57:37.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.256" endtime="20201030 10:57:37.541"></status>
</kw>
<msg timestamp="20201030 10:57:37.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.254" endtime="20201030 10:57:37.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.545" endtime="20201030 10:57:37.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.553" endtime="20201030 10:57:37.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.252" endtime="20201030 10:57:37.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.250" endtime="20201030 10:57:37.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.560" level="INFO">${RESULT} = [{'diff': 7.291599999999926e-05}, {'diff': 7.26110000000002e-05}, {'diff': 7.130500000000067e-05}, {'diff': 7.188899999999859e-05}, {'diff': 7.190300000000163e-05}, {'diff': 7.27499999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:37.557" endtime="20201030 10:57:37.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.565" level="INFO">${ACCURACY} = {'diff': [7.291599999999926e-05, 7.26110000000002e-05, 7.130500000000067e-05, 7.188899999999859e-05, 7.190300000000163e-05, 7.27499999999999e-05, 7.101400000000119e-05, 7.152800000000126e-05, 7.201399...</msg>
<status status="PASS" starttime="20201030 10:57:37.561" endtime="20201030 10:57:37.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.569" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.568" endtime="20201030 10:57:37.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.572" level="INFO">VALUE: [7.291599999999926e-05, 7.26110000000002e-05, 7.130500000000067e-05, 7.188899999999859e-05, 7.190300000000163e-05, 7.27499999999999e-05, 7.101400000000119e-05, 7.152800000000126e-05, 7.201399999999872e-05, 7.201399999999872e-05, 7.104200000000033e-05, 7.229099999999863e-05, 7.2069000000001e-05, 7.237500000000299e-05, 7.16109999999992e-05, 7.298600000000058e-05, 7.26110000000002e-05, 7.290299999999916e-05, 7.288899999999959e-05, 7.113900000000131e-05, 7.130600000000015e-05, 7.170899999999966e-05, 7.101399999999772e-05, 7.209700000000013e-05, 7.218000000000155e-05, 7.138899999999809e-05, 7.177699999999856e-05, 7.181900000000074e-05, 7.176399999999847e-05, 7.163899999999834e-05, 7.112499999999827e-05, 7.220800000000069e-05, 7.182000000000022e-05, 7.277799999999904e-05, 7.298600000000058e-05, 7.213800000000284e-05, 7.194400000000087e-05, 7.145799999999994e-05, 7.240300000000213e-05, 7.259700000000063e-05, 7.286100000000045e-05, 7.156999999999997e-05, 7.295799999999797e-05, 7.238799999999962e-05, 7.207000000000047e-05, 7.113899999999784e-05, 7.15690000000005e-05, 7.291699999999873e-05, 7.298600000000058e-05, 7.112500000000174e-05]</msg>
<status status="PASS" starttime="20201030 10:57:37.570" endtime="20201030 10:57:37.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.566" endtime="20201030 10:57:37.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.576" endtime="20201030 10:57:37.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.575" endtime="20201030 10:57:37.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.574" endtime="20201030 10:57:37.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.217" endtime="20201030 10:57:37.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.216" endtime="20201030 10:57:37.597"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.606" endtime="20201030 10:57:37.624"></status>
</kw>
<msg timestamp="20201030 10:57:37.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.604" endtime="20201030 10:57:37.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.625" endtime="20201030 10:57:37.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.628" endtime="20201030 10:57:37.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.601" endtime="20201030 10:57:37.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.599" endtime="20201030 10:57:37.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.636" endtime="20201030 10:57:37.924"></status>
</kw>
<msg timestamp="20201030 10:57:37.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022231681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.635" endtime="20201030 10:57:37.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022231681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.928" endtime="20201030 10:57:37.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.936" endtime="20201030 10:57:37.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.632" endtime="20201030 10:57:37.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.631" endtime="20201030 10:57:37.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.942" level="INFO">${RESULT} = [{'diff': 7.380599999999918e-05}, {'diff': 7.451399999999775e-05}, {'diff': 7.398600000000158e-05}, {'diff': 7.481999999999975e-05}, {'diff': 7.322299999999726e-05}, {'diff': 7.398600000000158e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:37.939" endtime="20201030 10:57:37.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.946" level="INFO">${ACCURACY} = {'diff': [7.380599999999918e-05, 7.451399999999775e-05, 7.398600000000158e-05, 7.481999999999975e-05, 7.322299999999726e-05, 7.398600000000158e-05, 7.43050000000002e-05, 7.447199999999904e-05, 7.46389...</msg>
<status status="PASS" starttime="20201030 10:57:37.943" endtime="20201030 10:57:37.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.951" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.950" endtime="20201030 10:57:37.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.953" level="INFO">VALUE: [7.380599999999918e-05, 7.451399999999775e-05, 7.398600000000158e-05, 7.481999999999975e-05, 7.322299999999726e-05, 7.398600000000158e-05, 7.43050000000002e-05, 7.447199999999904e-05, 7.463899999999787e-05, 7.484699999999941e-05, 7.377800000000004e-05, 7.362500000000077e-05, 7.304199999999886e-05, 7.391699999999973e-05, 7.488899999999812e-05, 7.380599999999918e-05, 7.415300000000041e-05, 7.33049999999992e-05, 7.46249999999983e-05, 7.404199999999986e-05, 7.313899999999984e-05, 7.401400000000072e-05, 7.463900000000134e-05, 7.370799999999872e-05, 7.361099999999773e-05, 7.454200000000036e-05, 7.363900000000034e-05, 7.326399999999997e-05, 7.418000000000008e-05, 7.411199999999771e-05, 7.347200000000151e-05, 7.447200000000251e-05, 7.422299999999826e-05, 7.313899999999984e-05, 7.47500000000019e-05, 7.4069999999999e-05, 7.319500000000159e-05, 7.451399999999775e-05, 7.330599999999868e-05, 7.486199999999846e-05, 7.433300000000281e-05, 7.37370000000008e-05, 7.304099999999938e-05, 7.356899999999902e-05, 7.411099999999823e-05, 7.481900000000027e-05, 7.420800000000269e-05, 7.373600000000133e-05, 7.377800000000004e-05, 7.438900000000109e-05]</msg>
<status status="PASS" starttime="20201030 10:57:37.952" endtime="20201030 10:57:37.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.947" endtime="20201030 10:57:37.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.958" endtime="20201030 10:57:37.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.957" endtime="20201030 10:57:37.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.956" endtime="20201030 10:57:37.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.598" endtime="20201030 10:57:37.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.597" endtime="20201030 10:57:37.979"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.987" endtime="20201030 10:57:38.006"></status>
</kw>
<msg timestamp="20201030 10:57:38.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.986" endtime="20201030 10:57:38.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.008" endtime="20201030 10:57:38.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.010" endtime="20201030 10:57:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.983" endtime="20201030 10:57:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.981" endtime="20201030 10:57:38.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.019" endtime="20201030 10:57:38.304"></status>
</kw>
<msg timestamp="20201030 10:57:38.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.018" endtime="20201030 10:57:38.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.309" endtime="20201030 10:57:38.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.317" endtime="20201030 10:57:38.318"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.015" endtime="20201030 10:57:38.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.013" endtime="20201030 10:57:38.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.323" level="INFO">${RESULT} = [{'diff': 7.62639999999995e-05}, {'diff': 7.605499999999848e-05}, {'diff': 7.580600000000118e-05}, {'diff': 7.523599999999936e-05}, {'diff': 7.698599999999764e-05}, {'diff': 7.522299999999926e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:38.320" endtime="20201030 10:57:38.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:38.327" level="INFO">${ACCURACY} = {'diff': [7.62639999999995e-05, 7.605499999999848e-05, 7.580600000000118e-05, 7.523599999999936e-05, 7.698599999999764e-05, 7.522299999999926e-05, 7.53890000000021e-05, 7.577799999999857e-05, 7.598600...</msg>
<status status="PASS" starttime="20201030 10:57:38.324" endtime="20201030 10:57:38.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.332" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 10:57:38.331" endtime="20201030 10:57:38.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.334" level="INFO">VALUE: [7.62639999999995e-05, 7.605499999999848e-05, 7.580600000000118e-05, 7.523599999999936e-05, 7.698599999999764e-05, 7.522299999999926e-05, 7.53890000000021e-05, 7.577799999999857e-05, 7.598600000000011e-05, 7.647200000000104e-05, 7.659700000000116e-05, 7.511099999999923e-05, 7.597200000000054e-05, 7.591700000000173e-05, 7.580600000000118e-05, 7.559700000000016e-05, 7.572199999999682e-05, 7.665299999999944e-05, 7.527800000000154e-05, 7.597200000000054e-05, 7.62639999999995e-05, 7.534799999999939e-05, 7.605499999999848e-05, 7.661100000000073e-05, 7.66250000000003e-05, 7.611100000000023e-05, 7.519400000000065e-05, 7.504200000000086e-05, 7.672200000000129e-05, 7.69449999999984e-05, 7.638800000000015e-05, 7.579200000000161e-05, 7.66250000000003e-05, 7.669499999999815e-05, 7.634700000000091e-05, 7.588899999999912e-05, 7.669499999999815e-05, 7.582000000000075e-05, 7.586099999999998e-05, 7.681999999999828e-05, 7.652799999999932e-05, 7.668100000000205e-05, 7.536099999999948e-05, 7.570900000000019e-05, 7.565199999999897e-05, 7.669399999999868e-05, 7.638899999999962e-05, 7.523599999999936e-05, 7.565300000000191e-05, 7.698599999999764e-05]</msg>
<status status="PASS" starttime="20201030 10:57:38.333" endtime="20201030 10:57:38.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.328" endtime="20201030 10:57:38.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:38.340" endtime="20201030 10:57:38.359"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.338" endtime="20201030 10:57:38.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.337" endtime="20201030 10:57:38.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.980" endtime="20201030 10:57:38.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.979" endtime="20201030 10:57:38.360"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.369" endtime="20201030 10:57:38.387"></status>
</kw>
<msg timestamp="20201030 10:57:38.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.367" endtime="20201030 10:57:38.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.388" endtime="20201030 10:57:38.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.390" endtime="20201030 10:57:38.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.365" endtime="20201030 10:57:38.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.363" endtime="20201030 10:57:38.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.399" endtime="20201030 10:57:38.685"></status>
</kw>
<msg timestamp="20201030 10:57:38.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.398" endtime="20201030 10:57:38.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.689" endtime="20201030 10:57:38.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.697" endtime="20201030 10:57:38.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.395" endtime="20201030 10:57:38.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.394" endtime="20201030 10:57:38.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.703" level="INFO">${RESULT} = [{'diff': 7.72640000000005e-05}, {'diff': 7.838900000000162e-05}, {'diff': 7.780599999999971e-05}, {'diff': 7.875000000000243e-05}, {'diff': 7.747300000000151e-05}, {'diff': 7.729199999999964e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:38.700" endtime="20201030 10:57:38.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:38.708" level="INFO">${ACCURACY} = {'diff': [7.72640000000005e-05, 7.838900000000162e-05, 7.780599999999971e-05, 7.875000000000243e-05, 7.747300000000151e-05, 7.729199999999964e-05, 7.861199999999874e-05, 7.78189999999998e-05, 7.815299...</msg>
<status status="PASS" starttime="20201030 10:57:38.704" endtime="20201030 10:57:38.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.713" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 10:57:38.712" endtime="20201030 10:57:38.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.715" level="INFO">VALUE: [7.72640000000005e-05, 7.838900000000162e-05, 7.780599999999971e-05, 7.875000000000243e-05, 7.747300000000151e-05, 7.729199999999964e-05, 7.861199999999874e-05, 7.78189999999998e-05, 7.815299999999747e-05, 7.729199999999964e-05, 7.861099999999926e-05, 7.798600000000211e-05, 7.818100000000008e-05, 7.81389999999979e-05, 7.786099999999851e-05, 7.870899999999972e-05, 7.840199999999825e-05, 7.82779999999976e-05, 7.704099999999992e-05, 7.72640000000005e-05, 7.81389999999979e-05, 7.769399999999968e-05, 7.769400000000315e-05, 7.854200000000089e-05, 7.877800000000157e-05, 7.843100000000033e-05, 7.82779999999976e-05, 7.840200000000172e-05, 7.82640000000015e-05, 7.855499999999752e-05, 7.761099999999826e-05, 7.899999999999921e-05, 7.780599999999971e-05, 7.713900000000037e-05, 7.802800000000082e-05, 7.900000000000268e-05, 7.829199999999717e-05, 7.804200000000039e-05, 7.833399999999935e-05, 7.83190000000003e-05, 7.868099999999711e-05, 7.799999999999821e-05, 7.798599999999864e-05, 7.718000000000308e-05, 7.858300000000012e-05, 7.729199999999964e-05, 7.730599999999921e-05, 7.847199999999957e-05, 7.765300000000044e-05, 7.726399999999703e-05]</msg>
<status status="PASS" starttime="20201030 10:57:38.714" endtime="20201030 10:57:38.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.709" endtime="20201030 10:57:38.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:38.720" endtime="20201030 10:57:38.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.719" endtime="20201030 10:57:38.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.718" endtime="20201030 10:57:38.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.361" endtime="20201030 10:57:38.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.361" endtime="20201030 10:57:38.741"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.749" endtime="20201030 10:57:38.768"></status>
</kw>
<msg timestamp="20201030 10:57:38.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.748" endtime="20201030 10:57:38.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.770" endtime="20201030 10:57:38.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.772" endtime="20201030 10:57:38.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.745" endtime="20201030 10:57:38.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.743" endtime="20201030 10:57:38.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.781" endtime="20201030 10:57:39.069"></status>
</kw>
<msg timestamp="20201030 10:57:39.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02184075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:38.780" endtime="20201030 10:57:39.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02184075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:39.073" endtime="20201030 10:57:39.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.081" endtime="20201030 10:57:39.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.777" endtime="20201030 10:57:39.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.776" endtime="20201030 10:57:39.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.088" level="INFO">${RESULT} = [{'diff': 8.043099999999886e-05}, {'diff': 7.998600000000064e-05}, {'diff': 7.980599999999824e-05}, {'diff': 7.929200000000164e-05}, {'diff': 7.994399999999846e-05}, {'diff': 7.933400000000035e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:39.084" endtime="20201030 10:57:39.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.092" level="INFO">${ACCURACY} = {'diff': [8.043099999999886e-05, 7.998600000000064e-05, 7.980599999999824e-05, 7.929200000000164e-05, 7.994399999999846e-05, 7.933400000000035e-05, 8.075000000000096e-05, 7.943100000000133e-05, 8.0736...</msg>
<status status="PASS" starttime="20201030 10:57:39.089" endtime="20201030 10:57:39.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.096" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.095" endtime="20201030 10:57:39.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.098" level="INFO">VALUE: [8.043099999999886e-05, 7.998600000000064e-05, 7.980599999999824e-05, 7.929200000000164e-05, 7.994399999999846e-05, 7.933400000000035e-05, 8.075000000000096e-05, 7.943100000000133e-05, 8.073600000000139e-05, 7.994399999999846e-05, 7.97909999999992e-05, 8.000000000000021e-05, 8.027800000000307e-05, 7.994399999999846e-05, 7.930600000000121e-05, 8.055600000000246e-05, 8.065299999999997e-05, 8.087500000000108e-05, 8.086099999999805e-05, 8.045799999999853e-05, 8.034700000000145e-05, 8.019399999999871e-05, 7.916700000000151e-05, 8.011100000000076e-05, 8.043099999999886e-05, 8.080599999999924e-05, 8.095799999999903e-05, 8.07780000000001e-05, 8.031999999999831e-05, 8.05269999999969e-05, 8.043100000000233e-05, 8.05269999999969e-05, 8.031899999999884e-05, 7.951399999999928e-05, 8.030599999999874e-05, 7.948600000000014e-05, 7.945799999999753e-05, 8.036099999999755e-05, 8.06390000000004e-05, 7.97230000000003e-05, 8.084700000000195e-05, 7.94169999999983e-05, 8.002699999999988e-05, 7.93190000000013e-05, 8.029200000000264e-05, 7.987500000000008e-05, 8.094400000000293e-05, 7.980599999999824e-05, 8.016699999999904e-05, 7.962499999999983e-05]</msg>
<status status="PASS" starttime="20201030 10:57:39.097" endtime="20201030 10:57:39.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.093" endtime="20201030 10:57:39.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.103" endtime="20201030 10:57:39.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.102" endtime="20201030 10:57:39.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.101" endtime="20201030 10:57:39.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.742" endtime="20201030 10:57:39.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.741" endtime="20201030 10:57:39.124"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.132" endtime="20201030 10:57:39.153"></status>
</kw>
<msg timestamp="20201030 10:57:39.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.131" endtime="20201030 10:57:39.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.154" endtime="20201030 10:57:39.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.157" endtime="20201030 10:57:39.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.128" endtime="20201030 10:57:39.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.126" endtime="20201030 10:57:39.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.167" endtime="20201030 10:57:39.452"></status>
</kw>
<msg timestamp="20201030 10:57:39.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.165" endtime="20201030 10:57:39.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.457" endtime="20201030 10:57:39.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.465" endtime="20201030 10:57:39.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.162" endtime="20201030 10:57:39.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.160" endtime="20201030 10:57:39.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.471" level="INFO">${RESULT} = [{'diff': 8.144499999999943e-05}, {'diff': 8.25979999999997e-05}, {'diff': 8.230600000000074e-05}, {'diff': 8.131999999999931e-05}, {'diff': 8.227700000000213e-05}, {'diff': 8.198599999999917e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:39.468" endtime="20201030 10:57:39.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.476" level="INFO">${ACCURACY} = {'diff': [8.144499999999943e-05, 8.25979999999997e-05, 8.230600000000074e-05, 8.131999999999931e-05, 8.227700000000213e-05, 8.198599999999917e-05, 8.163899999999794e-05, 8.234699999999998e-05, 8.16940...</msg>
<status status="PASS" starttime="20201030 10:57:39.472" endtime="20201030 10:57:39.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.480" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.479" endtime="20201030 10:57:39.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.482" level="INFO">VALUE: [8.144499999999943e-05, 8.25979999999997e-05, 8.230600000000074e-05, 8.131999999999931e-05, 8.227700000000213e-05, 8.198599999999917e-05, 8.163899999999794e-05, 8.234699999999998e-05, 8.169400000000021e-05, 8.248599999999967e-05, 8.21109999999993e-05, 8.213899999999844e-05, 8.251299999999934e-05, 8.294500000000093e-05, 8.169499999999968e-05, 8.197300000000254e-05, 8.21390000000019e-05, 8.181900000000034e-05, 8.104100000000045e-05, 8.120799999999928e-05, 8.131899999999984e-05, 8.207000000000006e-05, 8.102800000000035e-05, 8.280600000000124e-05, 8.104100000000045e-05, 8.19589999999995e-05, 8.190199999999828e-05, 8.111100000000177e-05, 8.21390000000019e-05, 8.162499999999837e-05, 8.168000000000064e-05, 8.1152999999997e-05, 8.262499999999937e-05, 8.129200000000017e-05, 8.293100000000136e-05, 8.151400000000128e-05, 8.249999999999924e-05, 8.161100000000227e-05, 8.101400000000078e-05, 8.177700000000163e-05, 8.205500000000102e-05, 8.194400000000046e-05, 8.222199999999985e-05, 8.290299999999876e-05, 8.297199999999713e-05, 8.120799999999928e-05, 8.294399999999799e-05, 8.226400000000203e-05, 8.270800000000078e-05, 8.169400000000021e-05]</msg>
<status status="PASS" starttime="20201030 10:57:39.481" endtime="20201030 10:57:39.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.476" endtime="20201030 10:57:39.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.488" endtime="20201030 10:57:39.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.487" endtime="20201030 10:57:39.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.485" endtime="20201030 10:57:39.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.125" endtime="20201030 10:57:39.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.124" endtime="20201030 10:57:39.509"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.517" endtime="20201030 10:57:39.536"></status>
</kw>
<msg timestamp="20201030 10:57:39.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.516" endtime="20201030 10:57:39.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.538" endtime="20201030 10:57:39.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.540" endtime="20201030 10:57:39.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.513" endtime="20201030 10:57:39.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.511" endtime="20201030 10:57:39.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.549" endtime="20201030 10:57:39.834"></status>
</kw>
<msg timestamp="20201030 10:57:39.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.548" endtime="20201030 10:57:39.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.838" endtime="20201030 10:57:39.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.846" endtime="20201030 10:57:39.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.545" endtime="20201030 10:57:39.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.543" endtime="20201030 10:57:39.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.852" level="INFO">${RESULT} = [{'diff': 8.358300000000166e-05}, {'diff': 8.409699999999826e-05}, {'diff': 8.377700000000016e-05}, {'diff': 8.337500000000012e-05}, {'diff': 8.312499999999987e-05}, {'diff': 8.44859999999982e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:39.849" endtime="20201030 10:57:39.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.857" level="INFO">${ACCURACY} = {'diff': [8.358300000000166e-05, 8.409699999999826e-05, 8.377700000000016e-05, 8.337500000000012e-05, 8.312499999999987e-05, 8.44859999999982e-05, 8.365200000000003e-05, 8.363899999999994e-05, 8.48059...</msg>
<status status="PASS" starttime="20201030 10:57:39.853" endtime="20201030 10:57:39.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.862" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.861" endtime="20201030 10:57:39.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.864" level="INFO">VALUE: [8.358300000000166e-05, 8.409699999999826e-05, 8.377700000000016e-05, 8.337500000000012e-05, 8.312499999999987e-05, 8.44859999999982e-05, 8.365200000000003e-05, 8.363899999999994e-05, 8.480599999999977e-05, 8.380600000000224e-05, 8.477800000000063e-05, 8.42919999999997e-05, 8.440300000000026e-05, 8.437500000000112e-05, 8.326399999999956e-05, 8.500000000000174e-05, 8.369399999999874e-05, 8.454100000000048e-05, 8.4846999999999e-05, 8.323600000000042e-05, 8.36249999999969e-05, 8.381999999999834e-05, 8.477800000000063e-05, 8.395899999999804e-05, 8.318100000000161e-05, 8.344500000000143e-05, 8.412500000000087e-05, 8.369500000000168e-05, 8.384700000000148e-05, 8.384700000000148e-05, 8.472200000000235e-05, 8.440300000000026e-05, 8.437500000000112e-05, 8.427800000000013e-05, 8.354199999999895e-05, 8.355600000000199e-05, 8.423600000000142e-05, 8.312499999999987e-05, 8.423599999999795e-05, 8.427700000000066e-05, 8.338899999999969e-05, 8.468000000000017e-05, 8.454199999999995e-05, 8.450000000000124e-05, 8.459699999999876e-05, 8.498700000000164e-05, 8.320799999999781e-05, 8.363800000000046e-05, 8.343100000000186e-05, 8.381899999999887e-05]</msg>
<status status="PASS" starttime="20201030 10:57:39.863" endtime="20201030 10:57:39.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.858" endtime="20201030 10:57:39.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.879" endtime="20201030 10:57:39.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.878" endtime="20201030 10:57:39.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.877" endtime="20201030 10:57:39.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.510" endtime="20201030 10:57:39.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.509" endtime="20201030 10:57:39.900"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.908" endtime="20201030 10:57:39.927"></status>
</kw>
<msg timestamp="20201030 10:57:39.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.907" endtime="20201030 10:57:39.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.929" endtime="20201030 10:57:39.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.931" endtime="20201030 10:57:39.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.904" endtime="20201030 10:57:39.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.902" endtime="20201030 10:57:39.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.940" endtime="20201030 10:57:40.226"></status>
</kw>
<msg timestamp="20201030 10:57:40.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.938" endtime="20201030 10:57:40.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.231" endtime="20201030 10:57:40.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.239" endtime="20201030 10:57:40.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.936" endtime="20201030 10:57:40.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.934" endtime="20201030 10:57:40.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:40.245" level="INFO">${RESULT} = [{'diff': 8.559700000000323e-05}, {'diff': 8.538900000000169e-05}, {'diff': 8.661099999999686e-05}, {'diff': 8.559799999999923e-05}, {'diff': 8.536099999999908e-05}, {'diff': 8.63059999999978e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:40.242" endtime="20201030 10:57:40.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:40.249" level="INFO">${ACCURACY} = {'diff': [8.559700000000323e-05, 8.538900000000169e-05, 8.661099999999686e-05, 8.559799999999923e-05, 8.536099999999908e-05, 8.63059999999978e-05, 8.570899999999979e-05, 8.64860000000002e-05, 8.615199...</msg>
<status status="PASS" starttime="20201030 10:57:40.246" endtime="20201030 10:57:40.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.254" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 10:57:40.253" endtime="20201030 10:57:40.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.256" level="INFO">VALUE: [8.559700000000323e-05, 8.538900000000169e-05, 8.661099999999686e-05, 8.559799999999923e-05, 8.536099999999908e-05, 8.63059999999978e-05, 8.570899999999979e-05, 8.64860000000002e-05, 8.615199999999906e-05, 8.676399999999959e-05, 8.559699999999976e-05, 8.563900000000194e-05, 8.530499999999733e-05, 8.502799999999741e-05, 8.6153000000002e-05, 8.504200000000045e-05, 8.658399999999719e-05, 8.676399999999959e-05, 8.645899999999707e-05, 8.602700000000241e-05, 8.513800000000196e-05, 8.555500000000105e-05, 8.643000000000192e-05, 8.555600000000052e-05, 8.61249999999994e-05, 8.595800000000056e-05, 8.62920000000017e-05, 8.569500000000022e-05, 8.595900000000004e-05, 8.533299999999994e-05, 8.526399999999809e-05, 8.544400000000049e-05, 8.529100000000123e-05, 8.499999999999827e-05, 8.581900000000087e-05, 8.576399999999859e-05, 8.544499999999997e-05, 8.527800000000113e-05, 8.626399999999909e-05, 8.661100000000033e-05, 8.572299999999936e-05, 8.61660000000021e-05, 8.643000000000192e-05, 8.523600000000242e-05, 8.6153000000002e-05, 8.544400000000049e-05, 8.622200000000038e-05, 8.599999999999927e-05, 8.579199999999773e-05, 8.562500000000237e-05]</msg>
<status status="PASS" starttime="20201030 10:57:40.255" endtime="20201030 10:57:40.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.250" endtime="20201030 10:57:40.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:40.261" endtime="20201030 10:57:40.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.259" endtime="20201030 10:57:40.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.258" endtime="20201030 10:57:40.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.901" endtime="20201030 10:57:40.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.900" endtime="20201030 10:57:40.281"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.290" endtime="20201030 10:57:40.310"></status>
</kw>
<msg timestamp="20201030 10:57:40.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.289" endtime="20201030 10:57:40.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.312" endtime="20201030 10:57:40.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.314" endtime="20201030 10:57:40.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.286" endtime="20201030 10:57:40.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.284" endtime="20201030 10:57:40.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.323" endtime="20201030 10:57:40.608"></status>
</kw>
<msg timestamp="20201030 10:57:40.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.321" endtime="20201030 10:57:40.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.612" endtime="20201030 10:57:40.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.620" endtime="20201030 10:57:40.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.319" endtime="20201030 10:57:40.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.317" endtime="20201030 10:57:40.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:40.626" level="INFO">${RESULT} = [{'diff': 8.709800000000073e-05}, {'diff': 8.815200000000106e-05}, {'diff': 8.747199999999816e-05}, {'diff': 8.766600000000013e-05}, {'diff': 8.815300000000054e-05}, {'diff': 8.720800000000181e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:40.623" endtime="20201030 10:57:40.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:40.630" level="INFO">${ACCURACY} = {'diff': [8.709800000000073e-05, 8.815200000000106e-05, 8.747199999999816e-05, 8.766600000000013e-05, 8.815300000000054e-05, 8.720800000000181e-05, 8.874999999999855e-05, 8.854200000000048e-05, 8.8625...</msg>
<status status="PASS" starttime="20201030 10:57:40.627" endtime="20201030 10:57:40.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.635" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 10:57:40.634" endtime="20201030 10:57:40.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.637" level="INFO">VALUE: [8.709800000000073e-05, 8.815200000000106e-05, 8.747199999999816e-05, 8.766600000000013e-05, 8.815300000000054e-05, 8.720800000000181e-05, 8.874999999999855e-05, 8.854200000000048e-05, 8.86250000000019e-05, 8.854200000000048e-05, 8.744500000000197e-05, 8.718100000000215e-05, 8.788899999999725e-05, 8.700000000000027e-05, 8.766600000000013e-05, 8.83189999999999e-05, 8.809699999999879e-05, 8.861099999999886e-05, 8.745799999999859e-05, 8.78059999999993e-05, 8.745899999999807e-05, 8.708300000000169e-05, 8.751300000000087e-05, 8.759699999999829e-05, 8.873600000000245e-05, 8.78059999999993e-05, 8.890300000000129e-05, 8.761099999999786e-05, 8.870900000000279e-05, 8.745899999999807e-05, 8.704200000000245e-05, 8.815300000000054e-05, 8.822200000000238e-05, 8.702699999999994e-05, 8.887499999999868e-05, 8.831999999999937e-05, 8.879200000000073e-05, 8.736099999999761e-05, 8.833400000000241e-05, 8.811100000000183e-05, 8.732000000000184e-05, 8.786100000000158e-05, 8.845799999999959e-05, 8.847199999999916e-05, 8.776399999999712e-05, 8.890300000000129e-05, 8.745799999999859e-05, 8.768100000000265e-05, 8.816600000000063e-05, 8.866599999999766e-05]</msg>
<status status="PASS" starttime="20201030 10:57:40.636" endtime="20201030 10:57:40.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.631" endtime="20201030 10:57:40.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:40.643" endtime="20201030 10:57:40.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.641" endtime="20201030 10:57:40.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.640" endtime="20201030 10:57:40.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.282" endtime="20201030 10:57:40.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.282" endtime="20201030 10:57:40.664"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.672" endtime="20201030 10:57:40.691"></status>
</kw>
<msg timestamp="20201030 10:57:40.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.671" endtime="20201030 10:57:40.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.693" endtime="20201030 10:57:40.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.695" endtime="20201030 10:57:40.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.668" endtime="20201030 10:57:40.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.666" endtime="20201030 10:57:40.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.704" endtime="20201030 10:57:40.989"></status>
</kw>
<msg timestamp="20201030 10:57:40.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021752014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.702" endtime="20201030 10:57:40.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021752014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.993" endtime="20201030 10:57:41.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.001" endtime="20201030 10:57:41.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.700" endtime="20201030 10:57:41.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.698" endtime="20201030 10:57:41.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.008" level="INFO">${RESULT} = [{'diff': 8.944400000000102e-05}, {'diff': 8.93190000000009e-05}, {'diff': 8.926400000000209e-05}, {'diff': 8.950000000000277e-05}, {'diff': 9.044400000000202e-05}, {'diff': 9.065299999999957e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:41.005" endtime="20201030 10:57:41.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:41.013" level="INFO">${ACCURACY} = {'diff': [8.944400000000102e-05, 8.93190000000009e-05, 8.926400000000209e-05, 8.950000000000277e-05, 9.044400000000202e-05, 9.065299999999957e-05, 8.926400000000209e-05, 8.91389999999985e-05, 9.034699...</msg>
<status status="PASS" starttime="20201030 10:57:41.009" endtime="20201030 10:57:41.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.017" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 10:57:41.016" endtime="20201030 10:57:41.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.020" level="INFO">VALUE: [8.944400000000102e-05, 8.93190000000009e-05, 8.926400000000209e-05, 8.950000000000277e-05, 9.044400000000202e-05, 9.065299999999957e-05, 8.926400000000209e-05, 8.91389999999985e-05, 9.034699999999757e-05, 8.990299999999882e-05, 8.919500000000025e-05, 9.037500000000018e-05, 9.020800000000134e-05, 8.965299999999857e-05, 9.027800000000266e-05, 9.013900000000297e-05, 9.048600000000073e-05, 9.065299999999957e-05, 9.066599999999966e-05, 9.006999999999765e-05, 8.952800000000191e-05, 8.94999999999993e-05, 8.968100000000118e-05, 9.011100000000036e-05, 9.070799999999837e-05, 8.995799999999762e-05, 8.922199999999991e-05, 9.037500000000018e-05, 8.99999999999998e-05, 8.94999999999993e-05, 8.966699999999814e-05, 8.986100000000011e-05, 8.902799999999794e-05, 8.944400000000102e-05, 9.027799999999919e-05, 9.036100000000061e-05, 8.924999999999905e-05, 9.08329999999985e-05, 9.086200000000058e-05, 9.057000000000162e-05, 8.905500000000108e-05, 9.019400000000177e-05, 8.977799999999869e-05, 8.951400000000234e-05, 9.022200000000091e-05, 9.065300000000304e-05, 9.08060000000023e-05, 9.0639e-05, 9.011100000000036e-05, 8.938900000000222e-05]</msg>
<status status="PASS" starttime="20201030 10:57:41.018" endtime="20201030 10:57:41.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.014" endtime="20201030 10:57:41.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.024" endtime="20201030 10:57:41.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.023" endtime="20201030 10:57:41.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.022" endtime="20201030 10:57:41.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.665" endtime="20201030 10:57:41.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.664" endtime="20201030 10:57:41.045"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.054" endtime="20201030 10:57:41.074"></status>
</kw>
<msg timestamp="20201030 10:57:41.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.052" endtime="20201030 10:57:41.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.075" endtime="20201030 10:57:41.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.078" endtime="20201030 10:57:41.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.049" endtime="20201030 10:57:41.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.047" endtime="20201030 10:57:41.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.087" endtime="20201030 10:57:41.376"></status>
</kw>
<msg timestamp="20201030 10:57:41.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.085" endtime="20201030 10:57:41.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.385" endtime="20201030 10:57:41.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.404" endtime="20201030 10:57:41.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.083" endtime="20201030 10:57:41.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.081" endtime="20201030 10:57:41.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.417" level="INFO">${RESULT} = [{'diff': 9.276300000000265e-05}, {'diff': 9.141599999999694e-05}, {'diff': 9.129100000000029e-05}, {'diff': 9.199999999999833e-05}, {'diff': 9.284700000000007e-05}, {'diff': 9.136100000000161e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:41.410" endtime="20201030 10:57:41.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:41.426" level="INFO">${ACCURACY} = {'diff': [9.276300000000265e-05, 9.141599999999694e-05, 9.129100000000029e-05, 9.199999999999833e-05, 9.284700000000007e-05, 9.136100000000161e-05, 9.277799999999822e-05, 9.198599999999876e-05, 9.1847...</msg>
<status status="PASS" starttime="20201030 10:57:41.419" endtime="20201030 10:57:41.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.435" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 10:57:41.433" endtime="20201030 10:57:41.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.440" level="INFO">VALUE: [9.276300000000265e-05, 9.141599999999694e-05, 9.129100000000029e-05, 9.199999999999833e-05, 9.284700000000007e-05, 9.136100000000161e-05, 9.277799999999822e-05, 9.198599999999876e-05, 9.184799999999854e-05, 9.104199999999951e-05, 9.151400000000087e-05, 9.213899999999803e-05, 9.155599999999958e-05, 9.231899999999696e-05, 9.28200000000004e-05, 9.226400000000162e-05, 9.136099999999814e-05, 9.177800000000069e-05, 9.194499999999953e-05, 9.243100000000046e-05, 9.138900000000075e-05, 9.234699999999957e-05, 9.198600000000223e-05, 9.166700000000014e-05, 9.168099999999971e-05, 9.154200000000001e-05, 9.126400000000062e-05, 9.205600000000008e-05, 9.207000000000312e-05, 9.225000000000205e-05, 9.298599999999976e-05, 9.229099999999782e-05, 9.272199999999994e-05, 9.172200000000241e-05, 9.276399999999865e-05, 9.1639000000001e-05, 9.212499999999846e-05, 9.220900000000282e-05, 9.23199999999999e-05, 9.205600000000008e-05, 9.298599999999976e-05, 9.227699999999825e-05, 9.202800000000094e-05, 9.148599999999826e-05, 9.198600000000223e-05, 9.218100000000021e-05, 9.148599999999826e-05, 9.198599999999876e-05, 9.254099999999807e-05, 9.215199999999812e-05]</msg>
<status status="PASS" starttime="20201030 10:57:41.437" endtime="20201030 10:57:41.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.428" endtime="20201030 10:57:41.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.450" endtime="20201030 10:57:41.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.447" endtime="20201030 10:57:41.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.445" endtime="20201030 10:57:41.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.046" endtime="20201030 10:57:41.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.045" endtime="20201030 10:57:41.471"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.480" endtime="20201030 10:57:41.500"></status>
</kw>
<msg timestamp="20201030 10:57:41.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.479" endtime="20201030 10:57:41.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.502" endtime="20201030 10:57:41.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.504" endtime="20201030 10:57:41.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.476" endtime="20201030 10:57:41.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.474" endtime="20201030 10:57:41.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.513" endtime="20201030 10:57:41.799"></status>
</kw>
<msg timestamp="20201030 10:57:41.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022791139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.512" endtime="20201030 10:57:41.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022791139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.803" endtime="20201030 10:57:41.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.811" endtime="20201030 10:57:41.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.509" endtime="20201030 10:57:41.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.507" endtime="20201030 10:57:41.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.818" level="INFO">${RESULT} = [{'diff': 9.461099999999792e-05}, {'diff': 9.318100000000121e-05}, {'diff': 9.358400000000072e-05}, {'diff': 9.39590000000011e-05}, {'diff': 9.412500000000046e-05}, {'diff': 9.377799999999922e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:41.814" endtime="20201030 10:57:41.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:41.822" level="INFO">${ACCURACY} = {'diff': [9.461099999999792e-05, 9.318100000000121e-05, 9.358400000000072e-05, 9.39590000000011e-05, 9.412500000000046e-05, 9.377799999999922e-05, 9.411100000000089e-05, 9.413900000000003e-05, 9.31389...</msg>
<status status="PASS" starttime="20201030 10:57:41.819" endtime="20201030 10:57:41.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.826" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 10:57:41.825" endtime="20201030 10:57:41.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.829" level="INFO">VALUE: [9.461099999999792e-05, 9.318100000000121e-05, 9.358400000000072e-05, 9.39590000000011e-05, 9.412500000000046e-05, 9.377799999999922e-05, 9.411100000000089e-05, 9.413900000000003e-05, 9.313899999999903e-05, 9.330599999999786e-05, 9.405600000000208e-05, 9.452799999999997e-05, 9.315300000000207e-05, 9.452799999999997e-05, 9.365199999999962e-05, 9.331900000000143e-05, 9.488900000000078e-05, 9.345800000000112e-05, 9.354200000000201e-05, 9.472199999999847e-05, 9.405599999999861e-05, 9.320900000000035e-05, 9.49720000000022e-05, 9.400000000000033e-05, 9.425000000000058e-05, 9.395800000000162e-05, 9.498600000000176e-05, 9.415300000000307e-05, 9.494399999999958e-05, 9.41940000000023e-05, 9.430599999999886e-05, 9.329199999999829e-05, 9.473600000000151e-05, 9.34590000000006e-05, 9.425000000000058e-05, 9.331900000000143e-05, 9.437500000000071e-05, 9.462500000000096e-05, 9.365199999999962e-05, 9.43200000000019e-05, 9.393099999999849e-05, 9.379200000000226e-05, 9.463900000000053e-05, 9.322299999999992e-05, 9.31520000000026e-05, 9.419399999999883e-05, 9.370800000000137e-05, 9.431899999999896e-05, 9.302799999999847e-05, 9.402799999999947e-05]</msg>
<status status="PASS" starttime="20201030 10:57:41.827" endtime="20201030 10:57:41.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.823" endtime="20201030 10:57:41.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.834" endtime="20201030 10:57:41.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.833" endtime="20201030 10:57:41.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.832" endtime="20201030 10:57:41.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.472" endtime="20201030 10:57:41.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.472" endtime="20201030 10:57:41.855"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.863" endtime="20201030 10:57:41.883"></status>
</kw>
<msg timestamp="20201030 10:57:41.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.862" endtime="20201030 10:57:41.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.884" endtime="20201030 10:57:41.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.887" endtime="20201030 10:57:41.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.859" endtime="20201030 10:57:41.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.857" endtime="20201030 10:57:41.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.896" endtime="20201030 10:57:42.182"></status>
</kw>
<msg timestamp="20201030 10:57:42.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.894" endtime="20201030 10:57:42.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.186" endtime="20201030 10:57:42.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.194" endtime="20201030 10:57:42.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.892" endtime="20201030 10:57:42.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.890" endtime="20201030 10:57:42.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.200" level="INFO">${RESULT} = [{'diff': 9.549999999999836e-05}, {'diff': 9.563900000000153e-05}, {'diff': 9.51530000000006e-05}, {'diff': 9.68470000000006e-05}, {'diff': 9.613899999999856e-05}, {'diff': 9.549999999999836e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:42.197" endtime="20201030 10:57:42.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.206" level="INFO">${ACCURACY} = {'diff': [9.549999999999836e-05, 9.563900000000153e-05, 9.51530000000006e-05, 9.68470000000006e-05, 9.613899999999856e-05, 9.549999999999836e-05, 9.62080000000004e-05, 9.693100000000149e-05, 9.6055000...</msg>
<status status="PASS" starttime="20201030 10:57:42.201" endtime="20201030 10:57:42.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.210" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.209" endtime="20201030 10:57:42.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.213" level="INFO">VALUE: [9.549999999999836e-05, 9.563900000000153e-05, 9.51530000000006e-05, 9.68470000000006e-05, 9.613899999999856e-05, 9.549999999999836e-05, 9.62080000000004e-05, 9.693100000000149e-05, 9.605500000000114e-05, 9.529100000000082e-05, 9.694399999999812e-05, 9.636099999999967e-05, 9.604199999999757e-05, 9.67920000000018e-05, 9.602800000000147e-05, 9.612500000000246e-05, 9.597199999999972e-05, 9.677799999999875e-05, 9.669399999999786e-05, 9.579099999999785e-05, 9.636099999999967e-05, 9.62080000000004e-05, 9.65279999999985e-05, 9.579100000000132e-05, 9.665199999999916e-05, 9.530500000000039e-05, 9.611199999999889e-05, 9.619400000000083e-05, 9.695800000000115e-05, 9.690299999999888e-05, 9.577800000000122e-05, 9.67080000000009e-05, 9.597199999999972e-05, 9.697200000000072e-05, 9.559699999999935e-05, 9.612500000000246e-05, 9.669499999999734e-05, 9.6027999999998e-05, 9.631899999999749e-05, 9.594400000000058e-05, 9.623599999999954e-05, 9.566700000000067e-05, 9.51530000000006e-05, 9.511099999999842e-05, 9.548700000000174e-05, 9.562499999999849e-05, 9.533299999999953e-05, 9.647200000000022e-05, 9.511100000000189e-05, 9.66530000000021e-05]</msg>
<status status="PASS" starttime="20201030 10:57:42.212" endtime="20201030 10:57:42.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.207" endtime="20201030 10:57:42.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.219" endtime="20201030 10:57:42.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.217" endtime="20201030 10:57:42.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.216" endtime="20201030 10:57:42.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.856" endtime="20201030 10:57:42.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.855" endtime="20201030 10:57:42.239"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.248" endtime="20201030 10:57:42.268"></status>
</kw>
<msg timestamp="20201030 10:57:42.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.247" endtime="20201030 10:57:42.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.270" endtime="20201030 10:57:42.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.272" endtime="20201030 10:57:42.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.244" endtime="20201030 10:57:42.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.242" endtime="20201030 10:57:42.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.281" endtime="20201030 10:57:42.569"></status>
</kw>
<msg timestamp="20201030 10:57:42.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.280" endtime="20201030 10:57:42.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.574" endtime="20201030 10:57:42.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.582" endtime="20201030 10:57:42.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.277" endtime="20201030 10:57:42.584"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.275" endtime="20201030 10:57:42.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.588" level="INFO">${RESULT} = [{'diff': 9.725000000000011e-05}, {'diff': 9.856999999999921e-05}, {'diff': 9.791599999999998e-05}, {'diff': 9.71530000000026e-05}, {'diff': 9.794500000000206e-05}, {'diff': 9.772200000000147e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:42.585" endtime="20201030 10:57:42.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.592" level="INFO">${ACCURACY} = {'diff': [9.725000000000011e-05, 9.856999999999921e-05, 9.791599999999998e-05, 9.71530000000026e-05, 9.794500000000206e-05, 9.772200000000147e-05, 9.829199999999982e-05, 9.786100000000117e-05, 9.82919...</msg>
<status status="PASS" starttime="20201030 10:57:42.589" endtime="20201030 10:57:42.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.597" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.596" endtime="20201030 10:57:42.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.599" level="INFO">VALUE: [9.725000000000011e-05, 9.856999999999921e-05, 9.791599999999998e-05, 9.71530000000026e-05, 9.794500000000206e-05, 9.772200000000147e-05, 9.829199999999982e-05, 9.786100000000117e-05, 9.829199999999982e-05, 9.780499999999942e-05, 9.863900000000106e-05, 9.780600000000236e-05, 9.875000000000161e-05, 9.827800000000025e-05, 9.773600000000104e-05, 9.879100000000085e-05, 9.744400000000208e-05, 9.86670000000002e-05, 9.768100000000224e-05, 9.829199999999982e-05, 9.840300000000038e-05, 9.75279999999995e-05, 9.737500000000024e-05, 9.729199999999882e-05, 9.89860000000023e-05, 9.701399999999943e-05, 9.812500000000099e-05, 9.705600000000161e-05, 9.763900000000006e-05, 9.829199999999982e-05, 9.738899999999981e-05, 9.770899999999791e-05, 9.787500000000074e-05, 9.713899999999956e-05, 9.881899999999999e-05, 9.811099999999795e-05, 9.738899999999981e-05, 9.870799999999944e-05, 9.76669999999992e-05, 9.704199999999857e-05, 9.798700000000077e-05, 9.868099999999977e-05, 9.783399999999803e-05, 9.770900000000138e-05, 9.811100000000142e-05, 9.723600000000054e-05, 9.754200000000254e-05, 9.840300000000038e-05, 9.82080000000024e-05, 9.812500000000099e-05]</msg>
<status status="PASS" starttime="20201030 10:57:42.598" endtime="20201030 10:57:42.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.593" endtime="20201030 10:57:42.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.604" endtime="20201030 10:57:42.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.602" endtime="20201030 10:57:42.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.601" endtime="20201030 10:57:42.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.240" endtime="20201030 10:57:42.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.240" endtime="20201030 10:57:42.624"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.633" endtime="20201030 10:57:42.654"></status>
</kw>
<msg timestamp="20201030 10:57:42.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.631" endtime="20201030 10:57:42.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.656" endtime="20201030 10:57:42.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.658" endtime="20201030 10:57:42.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.629" endtime="20201030 10:57:42.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.627" endtime="20201030 10:57:42.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.667" endtime="20201030 10:57:42.953"></status>
</kw>
<msg timestamp="20201030 10:57:42.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.666" endtime="20201030 10:57:42.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.957" endtime="20201030 10:57:42.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.965" endtime="20201030 10:57:42.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.663" endtime="20201030 10:57:42.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.661" endtime="20201030 10:57:42.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.971" level="INFO">${RESULT} = [{'diff': 0.00010012499999999952}, {'diff': 9.913800000000209e-05}, {'diff': 9.908299999999981e-05}, {'diff': 9.955500000000117e-05}, {'diff': 9.934699999999963e-05}, {'diff': 0.00010098600000000083},...</msg>
<status status="PASS" starttime="20201030 10:57:42.968" endtime="20201030 10:57:42.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.975" level="INFO">${ACCURACY} = {'diff': [0.00010012499999999952, 9.913800000000209e-05, 9.908299999999981e-05, 9.955500000000117e-05, 9.934699999999963e-05, 0.00010098600000000083, 9.944400000000062e-05, 9.993099999999755e-05, 9.99...</msg>
<status status="PASS" starttime="20201030 10:57:42.972" endtime="20201030 10:57:42.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.979" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.978" endtime="20201030 10:57:42.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.982" level="INFO">VALUE: [0.00010012499999999952, 9.913800000000209e-05, 9.908299999999981e-05, 9.955500000000117e-05, 9.934699999999963e-05, 0.00010098600000000083, 9.944400000000062e-05, 9.993099999999755e-05, 9.990299999999841e-05, 9.940299999999791e-05, 0.00010081899999999852, 0.00010012499999999952, 9.917999999999733e-05, 9.913900000000156e-05, 0.00010019400000000137, 0.00010098600000000083, 9.912500000000199e-05, 9.94999999999989e-05, 0.00010094499999999812, 0.0001003199999999975, 9.95549999999977e-05, 0.00010011099999999995, 9.913899999999809e-05, 9.94999999999989e-05, 9.908299999999981e-05, 9.913900000000156e-05, 9.927799999999778e-05, 0.0001002220000000005, 9.947200000000322e-05, 9.99999999999994e-05, 0.00010012499999999952, 0.00010061099999999698, 9.926400000000168e-05, 0.0001007359999999971, 0.00010098599999999736, 0.00010027799999999878, 0.00010069500000000134, 9.995900000000016e-05, 9.990199999999894e-05, 0.00010029099999999888, 9.901299999999849e-05, 0.00010056899999999827, 0.00010043000000000205, 0.00010086099999999723, 0.00010069499999999787, 0.00010013899999999909, 0.00010080599999999842, 0.00010079200000000232, 9.998599999999983e-05, 0.00010045800000000119]</msg>
<status status="PASS" starttime="20201030 10:57:42.980" endtime="20201030 10:57:42.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.976" endtime="20201030 10:57:42.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.988" endtime="20201030 10:57:43.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.986" endtime="20201030 10:57:43.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.985" endtime="20201030 10:57:43.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.625" endtime="20201030 10:57:43.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.625" endtime="20201030 10:57:43.008"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.017" endtime="20201030 10:57:43.036"></status>
</kw>
<msg timestamp="20201030 10:57:43.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.015" endtime="20201030 10:57:43.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.038" endtime="20201030 10:57:43.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.040" endtime="20201030 10:57:43.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.013" endtime="20201030 10:57:43.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.011" endtime="20201030 10:57:43.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.049" endtime="20201030 10:57:43.335"></status>
</kw>
<msg timestamp="20201030 10:57:43.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021696944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.047" endtime="20201030 10:57:43.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021696944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.339" endtime="20201030 10:57:43.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.347" endtime="20201030 10:57:43.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.045" endtime="20201030 10:57:43.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.043" endtime="20201030 10:57:43.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.353" level="INFO">${RESULT} = [{'diff': 0.00010107000000000171}, {'diff': 0.00010297299999999926}, {'diff': 0.00010231900000000002}, {'diff': 0.00010134799999999763}, {'diff': 0.00010175000000000115}, {'diff': 0.000101625000000001...</msg>
<status status="PASS" starttime="20201030 10:57:43.350" endtime="20201030 10:57:43.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:43.358" level="INFO">${ACCURACY} = {'diff': [0.00010107000000000171, 0.00010297299999999926, 0.00010231900000000002, 0.00010134799999999763, 0.00010175000000000115, 0.00010162500000000102, 0.00010138900000000034, 0.00010216700000000023...</msg>
<status status="PASS" starttime="20201030 10:57:43.354" endtime="20201030 10:57:43.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.363" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 10:57:43.362" endtime="20201030 10:57:43.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.365" level="INFO">VALUE: [0.00010107000000000171, 0.00010297299999999926, 0.00010231900000000002, 0.00010134799999999763, 0.00010175000000000115, 0.00010162500000000102, 0.00010138900000000034, 0.00010216700000000023, 0.00010265300000000116, 0.00010151400000000046, 0.00010144500000000209, 0.0001022220000000025, 0.00010154100000000013, 0.00010116599999999976, 0.00010247199999999929, 0.00010195799999999922, 0.00010197199999999879, 0.00010245899999999919, 0.00010102799999999953, 0.00010206900000000324, 0.00010230599999999992, 0.00010247199999999929, 0.00010212499999999805, 0.00010281900000000052, 0.00010206900000000324, 0.00010236099999999873, 0.00010138900000000034, 0.00010215300000000066, 0.00010143099999999905, 0.0001013480000000011, 0.00010290200000000194, 0.00010294400000000065, 0.00010222199999999904, 0.0001025550000000007, 0.00010280499999999748, 0.00010223600000000208, 0.00010157000000000221, 0.00010133299999999859, 0.00010231900000000002, 0.00010294500000000012, 0.00010275000000000215, 0.00010197199999999879, 0.00010293000000000108, 0.00010111100000000095, 0.00010230599999999992, 0.00010279200000000085, 0.00010188900000000084, 0.00010115200000000019, 0.00010277799999999782, 0.00010174999999999768]</msg>
<status status="PASS" starttime="20201030 10:57:43.364" endtime="20201030 10:57:43.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.359" endtime="20201030 10:57:43.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.370" endtime="20201030 10:57:43.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.369" endtime="20201030 10:57:43.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.367" endtime="20201030 10:57:43.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.009" endtime="20201030 10:57:43.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.008" endtime="20201030 10:57:43.391"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.399" endtime="20201030 10:57:43.419"></status>
</kw>
<msg timestamp="20201030 10:57:43.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.398" endtime="20201030 10:57:43.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.420" endtime="20201030 10:57:43.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.423" endtime="20201030 10:57:43.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.395" endtime="20201030 10:57:43.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.393" endtime="20201030 10:57:43.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.431" endtime="20201030 10:57:43.717"></status>
</kw>
<msg timestamp="20201030 10:57:43.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022226125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.430" endtime="20201030 10:57:43.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022226125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.721" endtime="20201030 10:57:43.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.729" endtime="20201030 10:57:43.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.427" endtime="20201030 10:57:43.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.426" endtime="20201030 10:57:43.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.736" level="INFO">${RESULT} = [{'diff': 0.00010395799999999775}, {'diff': 0.00010369399999999793}, {'diff': 0.0001037360000000001}, {'diff': 0.000104820000000002}, {'diff': 0.0001031810000000008}, {'diff': 0.00010379199999999839},...</msg>
<status status="PASS" starttime="20201030 10:57:43.733" endtime="20201030 10:57:43.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:43.740" level="INFO">${ACCURACY} = {'diff': [0.00010395799999999775, 0.00010369399999999793, 0.0001037360000000001, 0.000104820000000002, 0.0001031810000000008, 0.00010379199999999839, 0.00010452800000000304, 0.0001046810000000023, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:43.737" endtime="20201030 10:57:43.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.744" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 10:57:43.743" endtime="20201030 10:57:43.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.747" level="INFO">VALUE: [0.00010395799999999775, 0.00010369399999999793, 0.0001037360000000001, 0.000104820000000002, 0.0001031810000000008, 0.00010379199999999839, 0.00010452800000000304, 0.0001046810000000023, 0.00010351299999999952, 0.00010354199999999814, 0.00010469500000000187, 0.00010344500000000062, 0.00010398699999999983, 0.00010305600000000067, 0.00010427799999999932, 0.00010393100000000155, 0.0001040689999999983, 0.00010363900000000259, 0.00010495799999999875, 0.00010450000000000043, 0.0001035420000000016, 0.000104514, 0.00010388899999999937, 0.00010430599999999846, 0.000103513999999999, 0.00010363899999999912, 0.00010327699999999884, 0.00010365299999999869, 0.00010436100000000073, 0.00010363899999999912, 0.00010380600000000142, 0.0001045689999999988, 0.00010354199999999814, 0.0001030420000000011, 0.00010412500000000005, 0.00010491600000000004, 0.00010448600000000086, 0.00010363899999999912, 0.00010395800000000122, 0.0001043750000000003, 0.00010436099999999726, 0.00010494499999999865, 0.00010418099999999833, 0.00010426300000000027, 0.00010313799999999915, 0.00010397200000000079, 0.00010408300000000134, 0.00010343099999999758, 0.00010436100000000073, 0.00010313900000000209]</msg>
<status status="PASS" starttime="20201030 10:57:43.745" endtime="20201030 10:57:43.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.741" endtime="20201030 10:57:43.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.752" endtime="20201030 10:57:43.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.750" endtime="20201030 10:57:43.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.749" endtime="20201030 10:57:43.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.391" endtime="20201030 10:57:43.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.391" endtime="20201030 10:57:43.772"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.781" endtime="20201030 10:57:43.801"></status>
</kw>
<msg timestamp="20201030 10:57:43.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.779" endtime="20201030 10:57:43.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.803" endtime="20201030 10:57:43.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.805" endtime="20201030 10:57:43.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.777" endtime="20201030 10:57:43.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.775" endtime="20201030 10:57:43.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.814" endtime="20201030 10:57:44.099"></status>
</kw>
<msg timestamp="20201030 10:57:44.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.813" endtime="20201030 10:57:44.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.103" endtime="20201030 10:57:44.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.111" endtime="20201030 10:57:44.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.810" endtime="20201030 10:57:44.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.808" endtime="20201030 10:57:44.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.118" level="INFO">${RESULT} = [{'diff': 0.00010643100000000058}, {'diff': 0.00010555500000000023}, {'diff': 0.00010576400000000125}, {'diff': 0.00010516600000000029}, {'diff': 0.00010530499999999998}, {'diff': 0.000106999999999999...</msg>
<status status="PASS" starttime="20201030 10:57:44.115" endtime="20201030 10:57:44.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.122" level="INFO">${ACCURACY} = {'diff': [0.00010643100000000058, 0.00010555500000000023, 0.00010576400000000125, 0.00010516600000000029, 0.00010530499999999998, 0.00010699999999999946, 0.00010613899999999815, 0.00010516699999999976...</msg>
<status status="PASS" starttime="20201030 10:57:44.119" endtime="20201030 10:57:44.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.126" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.125" endtime="20201030 10:57:44.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.129" level="INFO">VALUE: [0.00010643100000000058, 0.00010555500000000023, 0.00010576400000000125, 0.00010516600000000029, 0.00010530499999999998, 0.00010699999999999946, 0.00010613899999999815, 0.00010516699999999976, 0.00010612500000000205, 0.00010620899999999947, 0.00010540300000000044, 0.00010583299999999962, 0.00010613899999999815, 0.00010500000000000093, 0.00010644400000000068, 0.00010645800000000025, 0.00010584799999999867, 0.00010511099999999801, 0.00010672299999999954, 0.0001053750000000013, 0.00010580500000000048, 0.00010663900000000212, 0.00010698599999999989, 0.00010699999999999946, 0.00010662499999999908, 0.00010613900000000162, 0.00010588900000000137, 0.00010540200000000097, 0.00010568000000000036, 0.00010586099999999876, 0.00010563900000000112, 0.00010502800000000007, 0.00010565299999999722, 0.00010602700000000159, 0.00010694500000000065, 0.00010697299999999979, 0.00010579099999999744, 0.00010613899999999815, 0.0001068750000000028, 0.00010604200000000064, 0.00010543099999999958, 0.000106208, 0.00010580599999999996, 0.00010661099999999951, 0.00010699999999999946, 0.00010661099999999951, 0.00010699999999999946, 0.00010581900000000005, 0.00010637499999999883, 0.00010672200000000007]</msg>
<status status="PASS" starttime="20201030 10:57:44.127" endtime="20201030 10:57:44.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.123" endtime="20201030 10:57:44.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.134" endtime="20201030 10:57:44.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.133" endtime="20201030 10:57:44.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.132" endtime="20201030 10:57:44.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.773" endtime="20201030 10:57:44.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.773" endtime="20201030 10:57:44.155"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.164" endtime="20201030 10:57:44.184"></status>
</kw>
<msg timestamp="20201030 10:57:44.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.162" endtime="20201030 10:57:44.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.185" endtime="20201030 10:57:44.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.188" endtime="20201030 10:57:44.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.159" endtime="20201030 10:57:44.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.157" endtime="20201030 10:57:44.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.197" endtime="20201030 10:57:44.482"></status>
</kw>
<msg timestamp="20201030 10:57:44.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:44.195" endtime="20201030 10:57:44.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:44.486" endtime="20201030 10:57:44.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.494" endtime="20201030 10:57:44.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.193" endtime="20201030 10:57:44.496"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.191" endtime="20201030 10:57:44.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.500" level="INFO">${RESULT} = [{'diff': 0.00010744400000000168}, {'diff': 0.00010865300000000022}, {'diff': 0.00010847199999999835}, {'diff': 0.00010888899999999743}, {'diff': 0.00010744400000000168}, {'diff': 0.000107707999999998...</msg>
<status status="PASS" starttime="20201030 10:57:44.497" endtime="20201030 10:57:44.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.505" level="INFO">${ACCURACY} = {'diff': [0.00010744400000000168, 0.00010865300000000022, 0.00010847199999999835, 0.00010888899999999743, 0.00010744400000000168, 0.00010770799999999803, 0.00010862499999999761, 0.00010872300000000154...</msg>
<status status="PASS" starttime="20201030 10:57:44.501" endtime="20201030 10:57:44.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.509" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.508" endtime="20201030 10:57:44.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.512" level="INFO">VALUE: [0.00010744400000000168, 0.00010865300000000022, 0.00010847199999999835, 0.00010888899999999743, 0.00010744400000000168, 0.00010770799999999803, 0.00010862499999999761, 0.00010872300000000154, 0.00010830499999999951, 0.00010730499999999851, 0.00010804099999999969, 0.00010834700000000169, 0.00010720799999999753, 0.00010733300000000112, 0.0001087080000000025, 0.00010848700000000086, 0.00010734800000000017, 0.00010817999999999939, 0.00010759799999999695, 0.00010831899999999908, 0.00010847200000000182, 0.00010737499999999983, 0.00010781900000000205, 0.00010716699999999829, 0.00010734700000000069, 0.00010716599999999882, 0.00010829199999999942, 0.00010762500000000008, 0.00010813900000000015, 0.00010791599999999957, 0.00010727800000000232, 0.00010758400000000085, 0.00010813900000000015, 0.00010848700000000086, 0.00010819499999999843, 0.00010788800000000043, 0.00010752699999999962, 0.00010733299999999765, 0.00010770799999999803, 0.00010862500000000108, 0.00010819399999999896, 0.00010891700000000004, 0.000108208999999998, 0.00010787500000000033, 0.00010863900000000065, 0.00010863900000000065, 0.0001083890000000004, 0.00010897199999999885, 0.00010847199999999835, 0.00010887500000000133]</msg>
<status status="PASS" starttime="20201030 10:57:44.511" endtime="20201030 10:57:44.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.506" endtime="20201030 10:57:44.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.517" endtime="20201030 10:57:44.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.515" endtime="20201030 10:57:44.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.514" endtime="20201030 10:57:44.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.156" endtime="20201030 10:57:44.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.155" endtime="20201030 10:57:44.537"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.546" endtime="20201030 10:57:44.567"></status>
</kw>
<msg timestamp="20201030 10:57:44.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.545" endtime="20201030 10:57:44.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.568" endtime="20201030 10:57:44.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.570" endtime="20201030 10:57:44.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.542" endtime="20201030 10:57:44.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.540" endtime="20201030 10:57:44.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.579" endtime="20201030 10:57:44.866"></status>
</kw>
<msg timestamp="20201030 10:57:44.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.578" endtime="20201030 10:57:44.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.870" endtime="20201030 10:57:44.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.878" endtime="20201030 10:57:44.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.575" endtime="20201030 10:57:44.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.574" endtime="20201030 10:57:44.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.884" level="INFO">${RESULT} = [{'diff': 0.00010923599999999867}, {'diff': 0.00011048599999999992}, {'diff': 0.00011013900000000215}, {'diff': 0.00010962500000000208}, {'diff': 0.000109208000000003}, {'diff': 0.0001105419999999982}...</msg>
<status status="PASS" starttime="20201030 10:57:44.881" endtime="20201030 10:57:44.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.888" level="INFO">${ACCURACY} = {'diff': [0.00010923599999999867, 0.00011048599999999992, 0.00011013900000000215, 0.00010962500000000208, 0.000109208000000003, 0.0001105419999999982, 0.00011055599999999777, 0.00010916600000000082, 0...</msg>
<status status="PASS" starttime="20201030 10:57:44.885" endtime="20201030 10:57:44.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.893" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.892" endtime="20201030 10:57:44.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.895" level="INFO">VALUE: [0.00010923599999999867, 0.00011048599999999992, 0.00011013900000000215, 0.00010962500000000208, 0.000109208000000003, 0.0001105419999999982, 0.00011055599999999777, 0.00010916600000000082, 0.0001097769999999984, 0.00011052699999999915, 0.00011051400000000253, 0.00011097200000000085, 0.00011038899999999893, 0.00011077700000000287, 0.00011034700000000022, 0.00010969400000000046, 0.00011049999999999949, 0.0001100549999999978, 0.0001102769999999989, 0.00011066700000000179, 0.00010933299999999965, 0.00010937500000000183, 0.0001102220000000001, 0.00010988899999999843, 0.00010947199999999935, 0.00010980500000000101, 0.00011086100000000029, 0.00010916700000000029, 0.00010994400000000071, 0.00010901399999999756, 0.00010905599999999974, 0.00011052799999999863, 0.0001102220000000001, 0.00010969400000000046, 0.00010983300000000015, 0.00010975000000000221, 0.00010994400000000071, 0.0001095699999999998, 0.00011077799999999888, 0.00011004200000000117, 0.00010998599999999942, 0.00010906899999999983, 0.00010905500000000026, 0.00010968000000000089, 0.00011018100000000086, 0.00011099999999999999, 0.00010905599999999974, 0.00011084700000000072, 0.00010937500000000183, 0.00010945899999999925]</msg>
<status status="PASS" starttime="20201030 10:57:44.894" endtime="20201030 10:57:44.896"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.889" endtime="20201030 10:57:44.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.900" endtime="20201030 10:57:44.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.899" endtime="20201030 10:57:44.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.898" endtime="20201030 10:57:44.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.538" endtime="20201030 10:57:44.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.538" endtime="20201030 10:57:44.921"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.930" endtime="20201030 10:57:44.950"></status>
</kw>
<msg timestamp="20201030 10:57:44.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.928" endtime="20201030 10:57:44.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.952" endtime="20201030 10:57:44.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.954" endtime="20201030 10:57:44.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.926" endtime="20201030 10:57:44.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.924" endtime="20201030 10:57:44.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.963" endtime="20201030 10:57:45.247"></status>
</kw>
<msg timestamp="20201030 10:57:45.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022939333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023052083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.962" endtime="20201030 10:57:45.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022939333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023052083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.252" endtime="20201030 10:57:45.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.260" endtime="20201030 10:57:45.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.959" endtime="20201030 10:57:45.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.958" endtime="20201030 10:57:45.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.267" level="INFO">${RESULT} = [{'diff': 0.00011275000000000174}, {'diff': 0.00011213899999999721}, {'diff': 0.00011138899999999993}, {'diff': 0.00011269499999999946}, {'diff': 0.00011116700000000229}, {'diff': 0.000112778000000000...</msg>
<status status="PASS" starttime="20201030 10:57:45.264" endtime="20201030 10:57:45.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:45.271" level="INFO">${ACCURACY} = {'diff': [0.00011275000000000174, 0.00011213899999999721, 0.00011138899999999993, 0.00011269499999999946, 0.00011116700000000229, 0.00011277800000000088, 0.00011173600000000117, 0.0001112769999999999,...</msg>
<status status="PASS" starttime="20201030 10:57:45.268" endtime="20201030 10:57:45.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.276" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 10:57:45.275" endtime="20201030 10:57:45.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.278" level="INFO">VALUE: [0.00011275000000000174, 0.00011213899999999721, 0.00011138899999999993, 0.00011269499999999946, 0.00011116700000000229, 0.00011277800000000088, 0.00011173600000000117, 0.0001112769999999999, 0.00011113899999999968, 0.00011183299999999868, 0.00011284700000000272, 0.00011123600000000067, 0.00011195899999999828, 0.00011165299999999975, 0.0001127359999999987, 0.0001128749999999984, 0.0001124030000000005, 0.00011201399999999709, 0.00011115299999999925, 0.00011281999999999959, 0.00011197300000000132, 0.00011236100000000179, 0.00011243099999999964, 0.00011166599999999985, 0.00011111100000000054, 0.00011172199999999813, 0.00011219499999999896, 0.00011155599999999877, 0.00011208400000000188, 0.00011180599999999902, 0.00011297300000000232, 0.00011266600000000085, 0.00011198599999999795, 0.00011199999999999752, 0.00011247199999999888, 0.00011197200000000185, 0.00011183300000000215, 0.00011113899999999968, 0.00011134699999999775, 0.00011213900000000068, 0.00011108299999999793, 0.00011244399999999974, 0.00011268099999999989, 0.00011211100000000154, 0.00011284699999999925, 0.00011187499999999739, 0.00011197300000000132, 0.00011186100000000129, 0.00011268000000000042, 0.00011302800000000113]</msg>
<status status="PASS" starttime="20201030 10:57:45.277" endtime="20201030 10:57:45.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.272" endtime="20201030 10:57:45.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:45.284" endtime="20201030 10:57:45.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.282" endtime="20201030 10:57:45.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.281" endtime="20201030 10:57:45.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.922" endtime="20201030 10:57:45.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.921" endtime="20201030 10:57:45.305"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.313" endtime="20201030 10:57:45.333"></status>
</kw>
<msg timestamp="20201030 10:57:45.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.311" endtime="20201030 10:57:45.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.335" endtime="20201030 10:57:45.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.337" endtime="20201030 10:57:45.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.309" endtime="20201030 10:57:45.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.307" endtime="20201030 10:57:45.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.346" endtime="20201030 10:57:45.631"></status>
</kw>
<msg timestamp="20201030 10:57:45.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.345" endtime="20201030 10:57:45.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.635" endtime="20201030 10:57:45.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.643" endtime="20201030 10:57:45.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.342" endtime="20201030 10:57:45.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.340" endtime="20201030 10:57:45.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.649" level="INFO">${RESULT} = [{'diff': 0.0001134030000000015}, {'diff': 0.0001148750000000004}, {'diff': 0.00011301300000000208}, {'diff': 0.000113597}, {'diff': 0.00011333300000000018}, {'diff': 0.00011483299999999821}, {'diff':...</msg>
<status status="PASS" starttime="20201030 10:57:45.646" endtime="20201030 10:57:45.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:45.654" level="INFO">${ACCURACY} = {'diff': [0.0001134030000000015, 0.0001148750000000004, 0.00011301300000000208, 0.000113597, 0.00011333300000000018, 0.00011483299999999821, 0.00011498600000000095, 0.00011343100000000064, 0.000114249...</msg>
<status status="PASS" starttime="20201030 10:57:45.650" endtime="20201030 10:57:45.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.658" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 10:57:45.657" endtime="20201030 10:57:45.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.661" level="INFO">VALUE: [0.0001134030000000015, 0.0001148750000000004, 0.00011301300000000208, 0.000113597, 0.00011333300000000018, 0.00011483299999999821, 0.00011498600000000095, 0.00011343100000000064, 0.00011424999999999977, 0.00011315300000000125, 0.00011368000000000142, 0.00011363899999999871, 0.00011368099999999742, 0.00011330500000000104, 0.0001148750000000004, 0.00011422200000000063, 0.00011329199999999748, 0.0001144160000000026, 0.00011313900000000168, 0.0001138749999999994, 0.00011394400000000124, 0.00011338899999999846, 0.00011415299999999878, 0.00011365299999999828, 0.00011399999999999952, 0.00011345899999999978, 0.00011323600000000267, 0.0001137909999999985, 0.00011447200000000088, 0.0001130550000000008, 0.00011476399999999984, 0.00011430600000000152, 0.00011454199999999873, 0.00011329200000000095, 0.0001148750000000004, 0.00011452799999999916, 0.00011362499999999914, 0.00011430500000000204, 0.0001130420000000007, 0.00011352800000000163, 0.00011495900000000128, 0.00011379200000000145, 0.00011380599999999755, 0.00011395800000000081, 0.00011413899999999921, 0.00011444399999999827, 0.00011338899999999846, 0.00011445800000000131, 0.00011488899999999996, 0.00011491599999999963]</msg>
<status status="PASS" starttime="20201030 10:57:45.659" endtime="20201030 10:57:45.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.655" endtime="20201030 10:57:45.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:45.666" endtime="20201030 10:57:45.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.664" endtime="20201030 10:57:45.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.663" endtime="20201030 10:57:45.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.305" endtime="20201030 10:57:45.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.305" endtime="20201030 10:57:45.686"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.695" endtime="20201030 10:57:45.716"></status>
</kw>
<msg timestamp="20201030 10:57:45.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.693" endtime="20201030 10:57:45.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.718" endtime="20201030 10:57:45.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.720" endtime="20201030 10:57:45.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.691" endtime="20201030 10:57:45.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.689" endtime="20201030 10:57:45.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.729" endtime="20201030 10:57:46.018"></status>
</kw>
<msg timestamp="20201030 10:57:46.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:45.727" endtime="20201030 10:57:46.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:46.022" endtime="20201030 10:57:46.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.030" endtime="20201030 10:57:46.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.725" endtime="20201030 10:57:46.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.723" endtime="20201030 10:57:46.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.037" level="INFO">${RESULT} = [{'diff': 0.00011659699999999953}, {'diff': 0.00011563899999999724}, {'diff': 0.00011588900000000096}, {'diff': 0.00011679200000000098}, {'diff': 0.00011569499999999899}, {'diff': 0.000116778000000001...</msg>
<status status="PASS" starttime="20201030 10:57:46.033" endtime="20201030 10:57:46.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:46.041" level="INFO">${ACCURACY} = {'diff': [0.00011659699999999953, 0.00011563899999999724, 0.00011588900000000096, 0.00011679200000000098, 0.00011569499999999899, 0.00011677800000000141, 0.00011637499999999842, 0.00011588900000000096...</msg>
<status status="PASS" starttime="20201030 10:57:46.038" endtime="20201030 10:57:46.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.045" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.044" endtime="20201030 10:57:46.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.047" level="INFO">VALUE: [0.00011659699999999953, 0.00011563899999999724, 0.00011588900000000096, 0.00011679200000000098, 0.00011569499999999899, 0.00011677800000000141, 0.00011637499999999842, 0.00011588900000000096, 0.00011649999999999855, 0.00011538900000000046, 0.00011531999999999862, 0.00011518099999999892, 0.0001165560000000003, 0.00011665299999999781, 0.00011670800000000009, 0.00011534700000000175, 0.00011517999999999945, 0.00011670800000000009, 0.00011695800000000034, 0.00011634699999999928, 0.00011533300000000218, 0.0001162360000000022, 0.0001150559999999988, 0.00011504199999999923, 0.0001160689999999999, 0.00011636099999999885, 0.000115597000000002, 0.00011662499999999867, 0.00011620899999999906, 0.00011515299999999978, 0.00011573599999999823, 0.00011665200000000181, 0.00011649999999999855, 0.00011538900000000046, 0.0001157910000000005, 0.00011597199999999891, 0.00011518099999999892, 0.00011612500000000164, 0.00011648699999999845, 0.00011586100000000182, 0.00011695800000000034, 0.00011588900000000096, 0.00011684699999999978, 0.00011649999999999855, 0.00011534700000000175, 0.00011522199999999816, 0.00011619400000000002, 0.00011530499999999957, 0.00011593099999999967, 0.00011649999999999855]</msg>
<status status="PASS" starttime="20201030 10:57:46.046" endtime="20201030 10:57:46.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.041" endtime="20201030 10:57:46.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.052" endtime="20201030 10:57:46.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.051" endtime="20201030 10:57:46.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.050" endtime="20201030 10:57:46.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.687" endtime="20201030 10:57:46.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.687" endtime="20201030 10:57:46.073"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.081" endtime="20201030 10:57:46.103"></status>
</kw>
<msg timestamp="20201030 10:57:46.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.080" endtime="20201030 10:57:46.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.104" endtime="20201030 10:57:46.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.107" endtime="20201030 10:57:46.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.077" endtime="20201030 10:57:46.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.075" endtime="20201030 10:57:46.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.116" endtime="20201030 10:57:46.401"></status>
</kw>
<msg timestamp="20201030 10:57:46.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.114" endtime="20201030 10:57:46.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.405" endtime="20201030 10:57:46.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.413" endtime="20201030 10:57:46.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.112" endtime="20201030 10:57:46.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.110" endtime="20201030 10:57:46.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.419" level="INFO">${RESULT} = [{'diff': 0.0001182500000000003}, {'diff': 0.0001187089999999981}, {'diff': 0.0001183049999999991}, {'diff': 0.0001178049999999986}, {'diff': 0.00011870799999999862}, {'diff': 0.0001182500000000003}, ...</msg>
<status status="PASS" starttime="20201030 10:57:46.416" endtime="20201030 10:57:46.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:46.423" level="INFO">${ACCURACY} = {'diff': [0.0001182500000000003, 0.0001187089999999981, 0.0001183049999999991, 0.0001178049999999986, 0.00011870799999999862, 0.0001182500000000003, 0.00011836099999999738, 0.00011869399999999905, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:46.420" endtime="20201030 10:57:46.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.428" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.427" endtime="20201030 10:57:46.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.430" level="INFO">VALUE: [0.0001182500000000003, 0.0001187089999999981, 0.0001183049999999991, 0.0001178049999999986, 0.00011870799999999862, 0.0001182500000000003, 0.00011836099999999738, 0.00011869399999999905, 0.00011781900000000164, 0.00011883400000000169, 0.00011842999999999923, 0.00011881899999999918, 0.00011763900000000271, 0.00011824999999999683, 0.00011881999999999865, 0.00011847299999999741, 0.00011865299999999981, 0.00011808399999999747, 0.00011770800000000109, 0.00011850000000000055, 0.00011829200000000248, 0.00011804200000000223, 0.0001175560000000013, 0.00011733400000000019, 0.00011898599999999801, 0.00011737499999999942, 0.00011884699999999832, 0.0001170690000000009, 0.00011850000000000055, 0.00011784699999999732, 0.00011733400000000019, 0.00011841699999999913, 0.00011747299999999988, 0.00011812500000000017, 0.0001185690000000024, 0.00011722200000000016, 0.00011884700000000178, 0.00011884800000000126, 0.00011751399999999912, 0.00011822299999999716, 0.0001189309999999992, 0.00011750000000000302, 0.00011770800000000109, 0.00011895799999999887, 0.00011851400000000012, 0.000118389, 0.00011704199999999776, 0.00011727799999999844, 0.00011813899999999974, 0.00011881899999999918]</msg>
<status status="PASS" starttime="20201030 10:57:46.429" endtime="20201030 10:57:46.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.424" endtime="20201030 10:57:46.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.436" endtime="20201030 10:57:46.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.434" endtime="20201030 10:57:46.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.433" endtime="20201030 10:57:46.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.074" endtime="20201030 10:57:46.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.073" endtime="20201030 10:57:46.456"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.465" endtime="20201030 10:57:46.486"></status>
</kw>
<msg timestamp="20201030 10:57:46.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.463" endtime="20201030 10:57:46.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.488" endtime="20201030 10:57:46.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.490" endtime="20201030 10:57:46.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.461" endtime="20201030 10:57:46.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.459" endtime="20201030 10:57:46.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.499" endtime="20201030 10:57:46.785"></status>
</kw>
<msg timestamp="20201030 10:57:46.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.498" endtime="20201030 10:57:46.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.789" endtime="20201030 10:57:46.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.797" endtime="20201030 10:57:46.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.495" endtime="20201030 10:57:46.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.493" endtime="20201030 10:57:46.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.803" level="INFO">${RESULT} = [{'diff': 0.00012030600000000058}, {'diff': 0.00012018100000000045}, {'diff': 0.00012098600000000001}, {'diff': 0.00012058399999999997}, {'diff': 0.00011965200000000134}, {'diff': 0.000120333000000000...</msg>
<status status="PASS" starttime="20201030 10:57:46.800" endtime="20201030 10:57:46.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:46.808" level="INFO">${ACCURACY} = {'diff': [0.00012030600000000058, 0.00012018100000000045, 0.00012098600000000001, 0.00012058399999999997, 0.00011965200000000134, 0.00012033300000000025, 0.00012072200000000019, 0.00011984699999999932...</msg>
<status status="PASS" starttime="20201030 10:57:46.804" endtime="20201030 10:57:46.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.812" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.811" endtime="20201030 10:57:46.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.815" level="INFO">VALUE: [0.00012030600000000058, 0.00012018100000000045, 0.00012098600000000001, 0.00012058399999999997, 0.00011965200000000134, 0.00012033300000000025, 0.00012072200000000019, 0.00011984699999999932, 0.00012086099999999989, 0.00012072200000000019, 0.00011901400000000062, 0.00012013900000000174, 0.00011987499999999846, 0.00011906899999999943, 0.00012015299999999784, 0.00012036099999999939, 0.00012013900000000174, 0.0001195699999999994, 0.0001207090000000001, 0.00012104200000000176, 0.00011940300000000056, 0.00012081900000000118, 0.00012015300000000131, 0.00012069500000000052, 0.00012061099999999964, 0.00011918099999999945, 0.00012087499999999946, 0.00012088899999999903, 0.00011999999999999858, 0.00011911099999999814, 0.0001202500000000023, 0.00011927800000000044, 0.0001204310000000007, 0.00012079200000000151, 0.00011948599999999851, 0.00012016600000000141, 0.00011990300000000106, 0.00012041599999999819, 0.00012015300000000131, 0.00011984699999999932, 0.00012055599999999736, 0.00011963900000000124, 0.00012033399999999972, 0.00011981999999999965, 0.00011945800000000284, 0.00011984699999999932, 0.00012019500000000002, 0.000119389000000001, 0.00011961099999999864, 0.00011948600000000198]</msg>
<status status="PASS" starttime="20201030 10:57:46.813" endtime="20201030 10:57:46.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.809" endtime="20201030 10:57:46.816"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.820" endtime="20201030 10:57:46.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.818" endtime="20201030 10:57:46.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.817" endtime="20201030 10:57:46.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.457" endtime="20201030 10:57:46.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.457" endtime="20201030 10:57:46.840"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.849" endtime="20201030 10:57:46.869"></status>
</kw>
<msg timestamp="20201030 10:57:46.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.847" endtime="20201030 10:57:46.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.870" endtime="20201030 10:57:46.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.873" endtime="20201030 10:57:46.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.845" endtime="20201030 10:57:46.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.843" endtime="20201030 10:57:46.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.881" endtime="20201030 10:57:47.167"></status>
</kw>
<msg timestamp="20201030 10:57:47.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.880" endtime="20201030 10:57:47.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.172" endtime="20201030 10:57:47.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.180" endtime="20201030 10:57:47.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.877" endtime="20201030 10:57:47.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.876" endtime="20201030 10:57:47.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.186" level="INFO">${RESULT} = [{'diff': 0.00012151399999999965}, {'diff': 0.00012186099999999742}, {'diff': 0.00012130599999999811}, {'diff': 0.0001217639999999999}, {'diff': 0.00012187499999999699}, {'diff': 0.0001228050000000001...</msg>
<status status="PASS" starttime="20201030 10:57:47.183" endtime="20201030 10:57:47.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:47.190" level="INFO">${ACCURACY} = {'diff': [0.00012151399999999965, 0.00012186099999999742, 0.00012130599999999811, 0.0001217639999999999, 0.00012187499999999699, 0.00012280500000000014, 0.00012200000000000058, 0.00012179199999999904,...</msg>
<status status="PASS" starttime="20201030 10:57:47.187" endtime="20201030 10:57:47.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.194" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 10:57:47.193" endtime="20201030 10:57:47.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.197" level="INFO">VALUE: [0.00012151399999999965, 0.00012186099999999742, 0.00012130599999999811, 0.0001217639999999999, 0.00012187499999999699, 0.00012280500000000014, 0.00012200000000000058, 0.00012179199999999904, 0.00012198600000000101, 0.00012143099999999823, 0.00012190200000000012, 0.00012269499999999905, 0.00012155600000000183, 0.0001214029999999991, 0.0001221250000000007, 0.0001219579999999984, 0.00012211099999999767, 0.00012170800000000162, 0.00012215299999999985, 0.00012144500000000127, 0.0001219029999999996, 0.00012251400000000065, 0.00012298599999999854, 0.00012116700000000188, 0.00012188900000000003, 0.00012295900000000234, 0.00012147300000000041, 0.00012105600000000133, 0.00012147199999999747, 0.00012205499999999939, 0.00012188900000000003, 0.00012119400000000155, 0.00012163899999999978, 0.00012147199999999747, 0.0001219029999999996, 0.00012104099999999882, 0.0001222220000000017, 0.0001223189999999992, 0.00012202799999999972, 0.00012136099999999692, 0.00012241699999999966, 0.00012123699999999973, 0.0001216250000000002, 0.00012233300000000225, 0.00012187500000000046, 0.00012213900000000028, 0.00012176400000000337, 0.00012113900000000274, 0.00012218099999999898, 0.0001225419999999998]</msg>
<status status="PASS" starttime="20201030 10:57:47.195" endtime="20201030 10:57:47.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.191" endtime="20201030 10:57:47.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.202" endtime="20201030 10:57:47.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.200" endtime="20201030 10:57:47.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.199" endtime="20201030 10:57:47.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.841" endtime="20201030 10:57:47.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.840" endtime="20201030 10:57:47.222"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.231" endtime="20201030 10:57:47.252"></status>
</kw>
<msg timestamp="20201030 10:57:47.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.229" endtime="20201030 10:57:47.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.254" endtime="20201030 10:57:47.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.256" endtime="20201030 10:57:47.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.227" endtime="20201030 10:57:47.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.225" endtime="20201030 10:57:47.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.265" endtime="20201030 10:57:47.551"></status>
</kw>
<msg timestamp="20201030 10:57:47.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:47.264" endtime="20201030 10:57:47.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:47.555" endtime="20201030 10:57:47.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.563" endtime="20201030 10:57:47.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.261" endtime="20201030 10:57:47.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.259" endtime="20201030 10:57:47.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.570" level="INFO">${RESULT} = [{'diff': 0.00012309700000000257}, {'diff': 0.0001243199999999972}, {'diff': 0.00012345899999999937}, {'diff': 0.0001242779999999985}, {'diff': 0.00012355600000000036}, {'diff': 0.00012388900000000203...</msg>
<status status="PASS" starttime="20201030 10:57:47.567" endtime="20201030 10:57:47.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:47.574" level="INFO">${ACCURACY} = {'diff': [0.00012309700000000257, 0.0001243199999999972, 0.00012345899999999937, 0.0001242779999999985, 0.00012355600000000036, 0.00012388900000000203, 0.00012315300000000085, 0.00012411099999999967, ...</msg>
<status status="PASS" starttime="20201030 10:57:47.571" endtime="20201030 10:57:47.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.578" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 10:57:47.577" endtime="20201030 10:57:47.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.580" level="INFO">VALUE: [0.00012309700000000257, 0.0001243199999999972, 0.00012345899999999937, 0.0001242779999999985, 0.00012355600000000036, 0.00012388900000000203, 0.00012315300000000085, 0.00012411099999999967, 0.00012331899999999674, 0.00012479199999999857, 0.0001241939999999976, 0.0001246519999999994, 0.00012436099999999992, 0.00012380500000000114, 0.00012473599999999682, 0.0001236250000000022, 0.00012405600000000086, 0.00012311100000000214, 0.00012361099999999917, 0.0001232229999999987, 0.00012494399999999836, 0.00012497200000000097, 0.0001249169999999987, 0.0001239299999999978, 0.00012355600000000036, 0.00012433400000000025, 0.00012362499999999874, 0.00012422200000000022, 0.00012420800000000065, 0.0001240970000000001, 0.00012347199999999947, 0.00012436099999999992, 0.00012469500000000105, 0.00012476299999999996, 0.0001249719999999975, 0.0001230420000000003, 0.00012302799999999725, 0.00012366600000000144, 0.00012338899999999806, 0.0001239580000000004, 0.00012448600000000004, 0.00012320799999999965, 0.00012447299999999994, 0.0001239580000000004, 0.00012490199999999965, 0.00012412499999999924, 0.0001249719999999975, 0.0001240420000000013, 0.00012379199999999757, 0.0001248060000000016]</msg>
<status status="PASS" starttime="20201030 10:57:47.579" endtime="20201030 10:57:47.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.575" endtime="20201030 10:57:47.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.586" endtime="20201030 10:57:47.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.585" endtime="20201030 10:57:47.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.584" endtime="20201030 10:57:47.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.223" endtime="20201030 10:57:47.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.223" endtime="20201030 10:57:47.607"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.615" endtime="20201030 10:57:47.637"></status>
</kw>
<msg timestamp="20201030 10:57:47.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.614" endtime="20201030 10:57:47.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.638" endtime="20201030 10:57:47.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.641" endtime="20201030 10:57:47.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.611" endtime="20201030 10:57:47.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.609" endtime="20201030 10:57:47.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.649" endtime="20201030 10:57:47.934"></status>
</kw>
<msg timestamp="20201030 10:57:47.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.648" endtime="20201030 10:57:47.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.938" endtime="20201030 10:57:47.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.946" endtime="20201030 10:57:47.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.645" endtime="20201030 10:57:47.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.644" endtime="20201030 10:57:47.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.953" level="INFO">${RESULT} = [{'diff': 0.0001259299999999998}, {'diff': 0.0001269719999999995}, {'diff': 0.00012580499999999967}, {'diff': 0.00012556900000000246}, {'diff': 0.00012522200000000122}, {'diff': 0.0001268199999999997}...</msg>
<status status="PASS" starttime="20201030 10:57:47.950" endtime="20201030 10:57:47.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:47.958" level="INFO">${ACCURACY} = {'diff': [0.0001259299999999998, 0.0001269719999999995, 0.00012580499999999967, 0.00012556900000000246, 0.00012522200000000122, 0.0001268199999999997, 0.0001263060000000031, 0.00012566599999999997, 0....</msg>
<status status="PASS" starttime="20201030 10:57:47.954" endtime="20201030 10:57:47.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.962" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 10:57:47.961" endtime="20201030 10:57:47.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.965" level="INFO">VALUE: [0.0001259299999999998, 0.0001269719999999995, 0.00012580499999999967, 0.00012556900000000246, 0.00012522200000000122, 0.0001268199999999997, 0.0001263060000000031, 0.00012566599999999997, 0.00012695799999999993, 0.00012526300000000046, 0.00012681900000000024, 0.0001259589999999984, 0.00012569499999999859, 0.0001258329999999988, 0.00012529200000000254, 0.00012507000000000143, 0.0001268329999999998, 0.00012562500000000074, 0.00012611100000000167, 0.00012586100000000142, 0.00012616699999999995, 0.0001263329999999993, 0.00012612500000000124, 0.00012538800000000058, 0.00012684700000000285, 0.00012622200000000222, 0.00012644399999999986, 0.00012548600000000104, 0.0001256390000000003, 0.00012515300000000285, 0.00012572299999999773, 0.00012538900000000006, 0.0001251519999999999, 0.00012565299999999988, 0.00012511100000000067, 0.00012588900000000056, 0.0001251389999999998, 0.00012562500000000074, 0.00012681900000000024, 0.00012583300000000228, 0.00012658299999999956, 0.0001258329999999988, 0.00012618099999999952, 0.00012515299999999938, 0.0001270000000000021, 0.00012648699999999805, 0.000126262999999998, 0.00012655500000000042, 0.00012584700000000185, 0.00012566700000000292]</msg>
<status status="PASS" starttime="20201030 10:57:47.963" endtime="20201030 10:57:47.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.959" endtime="20201030 10:57:47.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.970" endtime="20201030 10:57:47.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.968" endtime="20201030 10:57:47.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.967" endtime="20201030 10:57:47.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.608" endtime="20201030 10:57:47.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.607" endtime="20201030 10:57:47.990"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.999" endtime="20201030 10:57:48.020"></status>
</kw>
<msg timestamp="20201030 10:57:48.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.997" endtime="20201030 10:57:48.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.022" endtime="20201030 10:57:48.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.024" endtime="20201030 10:57:48.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.995" endtime="20201030 10:57:48.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.993" endtime="20201030 10:57:48.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.033" endtime="20201030 10:57:48.321"></status>
</kw>
<msg timestamp="20201030 10:57:48.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.032" endtime="20201030 10:57:48.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.325" endtime="20201030 10:57:48.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.333" endtime="20201030 10:57:48.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.029" endtime="20201030 10:57:48.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.028" endtime="20201030 10:57:48.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.339" level="INFO">${RESULT} = [{'diff': 0.00012792999999999832}, {'diff': 0.00012816700000000195}, {'diff': 0.00012833299999999784}, {'diff': 0.00012786199999999942}, {'diff': 0.00012744500000000034}, {'diff': 0.000128347999999996...</msg>
<status status="PASS" starttime="20201030 10:57:48.336" endtime="20201030 10:57:48.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:48.343" level="INFO">${ACCURACY} = {'diff': [0.00012792999999999832, 0.00012816700000000195, 0.00012833299999999784, 0.00012786199999999942, 0.00012744500000000034, 0.00012834799999999688, 0.0001272079999999967, 0.00012786099999999995,...</msg>
<status status="PASS" starttime="20201030 10:57:48.340" endtime="20201030 10:57:48.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.348" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 10:57:48.347" endtime="20201030 10:57:48.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.350" level="INFO">VALUE: [0.00012792999999999832, 0.00012816700000000195, 0.00012833299999999784, 0.00012786199999999942, 0.00012744500000000034, 0.00012834799999999688, 0.0001272079999999967, 0.00012786099999999995, 0.0001281940000000016, 0.00012716700000000095, 0.00012805599999999792, 0.00012827799999999903, 0.00012813899999999934, 0.00012813899999999934, 0.0001284590000000009, 0.00012791699999999823, 0.00012787499999999952, 0.00012872199999999778, 0.00012880599999999867, 0.00012845800000000143, 0.00012708399999999953, 0.00012730600000000064, 0.000128472000000001, 0.00012831899999999827, 0.0001278889999999991, 0.0001282079999999977, 0.0001288890000000001, 0.00012855599999999842, 0.00012797299999999998, 0.00012813799999999986, 0.00012893100000000227, 0.00012873600000000082, 0.00012830500000000217, 0.00012876399999999996, 0.00012817999999999857, 0.00012894500000000184, 0.0001274589999999999, 0.00012880599999999867, 0.00012863800000000036, 0.00012879099999999963, 0.00012731900000000074, 0.00012723599999999932, 0.00012827799999999903, 0.00012802799999999878, 0.00012850000000000014, 0.00012876399999999996, 0.00012887500000000052, 0.00012845800000000143, 0.00012772200000000025, 0.00012718100000000052]</msg>
<status status="PASS" starttime="20201030 10:57:48.349" endtime="20201030 10:57:48.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.344" endtime="20201030 10:57:48.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.355" endtime="20201030 10:57:48.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.354" endtime="20201030 10:57:48.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.353" endtime="20201030 10:57:48.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.991" endtime="20201030 10:57:48.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.990" endtime="20201030 10:57:48.376"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.384" endtime="20201030 10:57:48.407"></status>
</kw>
<msg timestamp="20201030 10:57:48.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.383" endtime="20201030 10:57:48.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.408" endtime="20201030 10:57:48.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.411" endtime="20201030 10:57:48.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.380" endtime="20201030 10:57:48.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.378" endtime="20201030 10:57:48.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.420" endtime="20201030 10:57:48.705"></status>
</kw>
<msg timestamp="20201030 10:57:48.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.418" endtime="20201030 10:57:48.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.709" endtime="20201030 10:57:48.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.717" endtime="20201030 10:57:48.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.416" endtime="20201030 10:57:48.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.414" endtime="20201030 10:57:48.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.723" level="INFO">${RESULT} = [{'diff': 0.000130263999999998}, {'diff': 0.0001291529999999999}, {'diff': 0.00012977800000000053}, {'diff': 0.0001309029999999982}, {'diff': 0.00013065200000000193}, {'diff': 0.00012933400000000178},...</msg>
<status status="PASS" starttime="20201030 10:57:48.720" endtime="20201030 10:57:48.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:48.727" level="INFO">${ACCURACY} = {'diff': [0.000130263999999998, 0.0001291529999999999, 0.00012977800000000053, 0.0001309029999999982, 0.00013065200000000193, 0.00012933400000000178, 0.0001297500000000014, 0.0001301110000000022, 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:48.724" endtime="20201030 10:57:48.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.732" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 10:57:48.731" endtime="20201030 10:57:48.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.734" level="INFO">VALUE: [0.000130263999999998, 0.0001291529999999999, 0.00012977800000000053, 0.0001309029999999982, 0.00013065200000000193, 0.00012933400000000178, 0.0001297500000000014, 0.0001301110000000022, 0.00012979100000000063, 0.00012995799999999946, 0.0001299720000000025, 0.0001294590000000019, 0.00012954199999999985, 0.00012913900000000034, 0.0001297630000000015, 0.00013073599999999935, 0.00012947199999999853, 0.00012986100000000195, 0.00013030600000000017, 0.0001309310000000008, 0.00013006900000000002, 0.00012976400000000096, 0.00012980599999999967, 0.0001307500000000024, 0.00012995799999999946, 0.00013063899999999837, 0.0001302089999999992, 0.00013018100000000005, 0.00012990300000000066, 0.00013047199999999953, 0.00012913900000000034, 0.00013065299999999794, 0.00013036100000000245, 0.00012987499999999805, 0.00013063800000000236, 0.00013004100000000088, 0.00012947199999999853, 0.0001306799999999976, 0.0001291529999999999, 0.0001297920000000001, 0.0001298890000000011, 0.00013005500000000045, 0.00012963800000000136, 0.0001305409999999979, 0.00013097200000000003, 0.00012940300000000016, 0.0001298890000000011, 0.00012931999999999874, 0.00012944500000000234, 0.00013016700000000048]</msg>
<status status="PASS" starttime="20201030 10:57:48.733" endtime="20201030 10:57:48.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.728" endtime="20201030 10:57:48.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.740" endtime="20201030 10:57:48.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.738" endtime="20201030 10:57:48.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.737" endtime="20201030 10:57:48.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.377" endtime="20201030 10:57:48.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.376" endtime="20201030 10:57:48.760"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.769" endtime="20201030 10:57:48.791"></status>
</kw>
<msg timestamp="20201030 10:57:48.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.767" endtime="20201030 10:57:48.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.792" endtime="20201030 10:57:48.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.795" endtime="20201030 10:57:48.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.765" endtime="20201030 10:57:48.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.763" endtime="20201030 10:57:48.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.804" endtime="20201030 10:57:49.089"></status>
</kw>
<msg timestamp="20201030 10:57:49.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.802" endtime="20201030 10:57:49.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.093" endtime="20201030 10:57:49.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.101" endtime="20201030 10:57:49.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.800" endtime="20201030 10:57:49.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.798" endtime="20201030 10:57:49.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.107" level="INFO">${RESULT} = [{'diff': 0.00013293099999999933}, {'diff': 0.00013273599999999788}, {'diff': 0.00013265200000000046}, {'diff': 0.00013147200000000053}, {'diff': 0.00013129099999999866}, {'diff': 0.000132639000000000...</msg>
<status status="PASS" starttime="20201030 10:57:49.104" endtime="20201030 10:57:49.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.112" level="INFO">${ACCURACY} = {'diff': [0.00013293099999999933, 0.00013273599999999788, 0.00013265200000000046, 0.00013147200000000053, 0.00013129099999999866, 0.00013263900000000037, 0.000132264, 0.00013213899999999987, 0.0001326...</msg>
<status status="PASS" starttime="20201030 10:57:49.108" endtime="20201030 10:57:49.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.117" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.116" endtime="20201030 10:57:49.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.119" level="INFO">VALUE: [0.00013293099999999933, 0.00013273599999999788, 0.00013265200000000046, 0.00013147200000000053, 0.00013129099999999866, 0.00013263900000000037, 0.000132264, 0.00013213899999999987, 0.00013265299999999994, 0.00013211100000000073, 0.0001310830000000006, 0.00013223599999999738, 0.00013147200000000053, 0.00013281999999999877, 0.00013245800000000196, 0.00013197200000000103, 0.0001319029999999992, 0.0001328059999999992, 0.00013209800000000063, 0.00013174999999999992, 0.00013136099999999998, 0.00013168100000000155, 0.00013195800000000146, 0.0001324029999999997, 0.00013168100000000155, 0.00013219400000000214, 0.0001323609999999975, 0.0001318059999999982, 0.0001313470000000004, 0.0001328059999999992, 0.00013122200000000028, 0.00013219399999999867, 0.00013279100000000016, 0.00013247199999999806, 0.00013216700000000248, 0.00013244399999999892, 0.0001328059999999992, 0.00013163899999999937, 0.0001321250000000003, 0.00013123699999999933, 0.00013187500000000005, 0.0001318189999999983, 0.0001325830000000021, 0.00013204200000000235, 0.00013263900000000037, 0.000131473, 0.0001328059999999992, 0.00013279100000000016, 0.00013193000000000232, 0.00013270799999999874]</msg>
<status status="PASS" starttime="20201030 10:57:49.118" endtime="20201030 10:57:49.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.113" endtime="20201030 10:57:49.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.124" endtime="20201030 10:57:49.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.123" endtime="20201030 10:57:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.121" endtime="20201030 10:57:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.761" endtime="20201030 10:57:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.761" endtime="20201030 10:57:49.145"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.153" endtime="20201030 10:57:49.175"></status>
</kw>
<msg timestamp="20201030 10:57:49.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.152" endtime="20201030 10:57:49.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.176" endtime="20201030 10:57:49.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.179" endtime="20201030 10:57:49.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.149" endtime="20201030 10:57:49.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.147" endtime="20201030 10:57:49.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.187" endtime="20201030 10:57:49.477"></status>
</kw>
<msg timestamp="20201030 10:57:49.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.186" endtime="20201030 10:57:49.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.481" endtime="20201030 10:57:49.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.489" endtime="20201030 10:57:49.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.183" endtime="20201030 10:57:49.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.182" endtime="20201030 10:57:49.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.496" level="INFO">${RESULT} = [{'diff': 0.0001332909999999972}, {'diff': 0.0001335410000000009}, {'diff': 0.00013384699999999944}, {'diff': 0.0001338470000000029}, {'diff': 0.00013341700000000026}, {'diff': 0.00013301400000000074}...</msg>
<status status="PASS" starttime="20201030 10:57:49.493" endtime="20201030 10:57:49.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.500" level="INFO">${ACCURACY} = {'diff': [0.0001332909999999972, 0.0001335410000000009, 0.00013384699999999944, 0.0001338470000000029, 0.00013341700000000026, 0.00013301400000000074, 0.00013345899999999897, 0.00013447299999999954, 0...</msg>
<status status="PASS" starttime="20201030 10:57:49.497" endtime="20201030 10:57:49.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.504" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.503" endtime="20201030 10:57:49.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.506" level="INFO">VALUE: [0.0001332909999999972, 0.0001335410000000009, 0.00013384699999999944, 0.0001338470000000029, 0.00013341700000000026, 0.00013301400000000074, 0.00013345899999999897, 0.00013447299999999954, 0.00013443000000000135, 0.00013481899999999783, 0.00013500000000000317, 0.00013412499999999883, 0.00013374999999999845, 0.00013368100000000008, 0.0001340280000000013, 0.00013343000000000035, 0.00013384699999999944, 0.00013302799999999684, 0.00013347199999999906, 0.0001336670000000005, 0.0001344450000000004, 0.00013305599999999945, 0.0001341389999999984, 0.00013472200000000031, 0.00013379199999999716, 0.00013498600000000013, 0.00013412499999999883, 0.0001333609999999985, 0.00013312499999999783, 0.00013422199999999981, 0.0001338190000000003, 0.00013426399999999852, 0.00013420800000000024, 0.0001333479999999984, 0.0001344860000000031, 0.00013447299999999954, 0.0001336389999999979, 0.00013397199999999956, 0.00013427800000000156, 0.00013355599999999995, 0.0001343609999999995, 0.00013448599999999963, 0.00013484700000000044, 0.00013461100000000323, 0.00013383299999999987, 0.0001338190000000003, 0.0001334579999999995, 0.00013413900000000187, 0.0001345419999999979, 0.0001338060000000002]</msg>
<status status="PASS" starttime="20201030 10:57:49.505" endtime="20201030 10:57:49.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.500" endtime="20201030 10:57:49.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.511" endtime="20201030 10:57:49.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.510" endtime="20201030 10:57:49.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.509" endtime="20201030 10:57:49.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.145" endtime="20201030 10:57:49.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.145" endtime="20201030 10:57:49.532"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.540" endtime="20201030 10:57:49.562"></status>
</kw>
<msg timestamp="20201030 10:57:49.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.539" endtime="20201030 10:57:49.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.564" endtime="20201030 10:57:49.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.566" endtime="20201030 10:57:49.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.536" endtime="20201030 10:57:49.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.534" endtime="20201030 10:57:49.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.575" endtime="20201030 10:57:49.861"></status>
</kw>
<msg timestamp="20201030 10:57:49.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.574" endtime="20201030 10:57:49.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.865" endtime="20201030 10:57:49.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.872" endtime="20201030 10:57:49.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.571" endtime="20201030 10:57:49.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.569" endtime="20201030 10:57:49.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.879" level="INFO">${RESULT} = [{'diff': 0.0001360000000000007}, {'diff': 0.0001364719999999986}, {'diff': 0.00013504099999999894}, {'diff': 0.0001354169999999988}, {'diff': 0.0001356389999999999}, {'diff': 0.0001358749999999971}, ...</msg>
<status status="PASS" starttime="20201030 10:57:49.876" endtime="20201030 10:57:49.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.883" level="INFO">${ACCURACY} = {'diff': [0.0001360000000000007, 0.0001364719999999986, 0.00013504099999999894, 0.0001354169999999988, 0.0001356389999999999, 0.0001358749999999971, 0.00013576400000000002, 0.0001359719999999981, 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:49.880" endtime="20201030 10:57:49.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.887" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.886" endtime="20201030 10:57:49.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.890" level="INFO">VALUE: [0.0001360000000000007, 0.0001364719999999986, 0.00013504099999999894, 0.0001354169999999988, 0.0001356389999999999, 0.0001358749999999971, 0.00013576400000000002, 0.0001359719999999981, 0.00013561100000000076, 0.0001369719999999991, 0.00013631899999999933, 0.00013588900000000015, 0.0001366109999999983, 0.00013537500000000008, 0.0001368060000000032, 0.00013616600000000006, 0.00013518100000000158, 0.0001357779999999996, 0.00013529199999999866, 0.00013570900000000122, 0.00013612500000000083, 0.00013516599999999906, 0.00013612499999999736, 0.00013633300000000237, 0.00013602799999999984, 0.0001361809999999991, 0.00013620799999999877, 0.0001360419999999994, 0.00013555599999999848, 0.00013661199999999776, 0.0001365269999999974, 0.0001361390000000004, 0.0001369719999999991, 0.00013615299999999997, 0.000136652000000001, 0.00013688900000000115, 0.00013515299999999897, 0.00013630499999999976, 0.00013631899999999933, 0.00013695799999999952, 0.00013516699999999854, 0.0001358480000000009, 0.00013547300000000054, 0.00013537500000000008, 0.00013559699999999772, 0.00013601400000000027, 0.0001354580000000015, 0.0001353610000000005, 0.00013516699999999854, 0.00013669499999999918]</msg>
<status status="PASS" starttime="20201030 10:57:49.888" endtime="20201030 10:57:49.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.884" endtime="20201030 10:57:49.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.895" endtime="20201030 10:57:49.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.894" endtime="20201030 10:57:49.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.893" endtime="20201030 10:57:49.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.533" endtime="20201030 10:57:49.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.532" endtime="20201030 10:57:49.916"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.924" endtime="20201030 10:57:49.945"></status>
</kw>
<msg timestamp="20201030 10:57:49.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.923" endtime="20201030 10:57:49.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.947" endtime="20201030 10:57:49.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.949" endtime="20201030 10:57:49.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.920" endtime="20201030 10:57:49.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.918" endtime="20201030 10:57:49.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.958" endtime="20201030 10:57:50.243"></status>
</kw>
<msg timestamp="20201030 10:57:50.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021757736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.957" endtime="20201030 10:57:50.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021757736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.247" endtime="20201030 10:57:50.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.255" endtime="20201030 10:57:50.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.954" endtime="20201030 10:57:50.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.953" endtime="20201030 10:57:50.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.261" level="INFO">${RESULT} = [{'diff': 0.00013858300000000115}, {'diff': 0.00013863899999999943}, {'diff': 0.00013730500000000076}, {'diff': 0.00013812500000000283}, {'diff': 0.00013868099999999814}, {'diff': 0.000138861000000000...</msg>
<status status="PASS" starttime="20201030 10:57:50.258" endtime="20201030 10:57:50.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:50.266" level="INFO">${ACCURACY} = {'diff': [0.00013858300000000115, 0.00013863899999999943, 0.00013730500000000076, 0.00013812500000000283, 0.00013868099999999814, 0.00013886100000000054, 0.00013813899999999893, 0.00013863799999999996...</msg>
<status status="PASS" starttime="20201030 10:57:50.262" endtime="20201030 10:57:50.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.271" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 10:57:50.270" endtime="20201030 10:57:50.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.273" level="INFO">VALUE: [0.00013858300000000115, 0.00013863899999999943, 0.00013730500000000076, 0.00013812500000000283, 0.00013868099999999814, 0.00013886100000000054, 0.00013813899999999893, 0.00013863799999999996, 0.00013704100000000094, 0.00013706900000000008, 0.00013781900000000083, 0.00013852799999999887, 0.0001389720000000011, 0.00013820900000000025, 0.00013706900000000008, 0.00013840300000000222, 0.00013765199999999853, 0.0001388049999999988, 0.00013752800000000134, 0.000137652999999998, 0.00013752800000000134, 0.00013865199999999953, 0.0001388469999999975, 0.00013795800000000052, 0.00013781899999999736, 0.00013754199999999744, 0.0001378200000000003, 0.00013755600000000048, 0.0001376390000000019, 0.00013754099999999797, 0.0001389720000000011, 0.00013872200000000084, 0.00013723599999999891, 0.0001389720000000011, 0.0001377230000000028, 0.000138959000000001, 0.00013776400000000202, 0.0001371390000000014, 0.00013880500000000226, 0.0001388750000000001, 0.0001373199999999998, 0.0001379309999999974, 0.00013791599999999835, 0.0001374719999999996, 0.000138652999999999, 0.0001377919999999977, 0.00013813899999999893, 0.00013863899999999943, 0.00013865199999999953, 0.00013730500000000076]</msg>
<status status="PASS" starttime="20201030 10:57:50.272" endtime="20201030 10:57:50.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.267" endtime="20201030 10:57:50.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.278" endtime="20201030 10:57:50.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.277" endtime="20201030 10:57:50.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.275" endtime="20201030 10:57:50.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.917" endtime="20201030 10:57:50.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.916" endtime="20201030 10:57:50.299"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.307" endtime="20201030 10:57:50.329"></status>
</kw>
<msg timestamp="20201030 10:57:50.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.306" endtime="20201030 10:57:50.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.330" endtime="20201030 10:57:50.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.333" endtime="20201030 10:57:50.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.303" endtime="20201030 10:57:50.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.301" endtime="20201030 10:57:50.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.343" endtime="20201030 10:57:50.630"></status>
</kw>
<msg timestamp="20201030 10:57:50.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:50.341" endtime="20201030 10:57:50.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:50.634" endtime="20201030 10:57:50.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.642" endtime="20201030 10:57:50.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.338" endtime="20201030 10:57:50.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.336" endtime="20201030 10:57:50.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.648" level="INFO">${RESULT} = [{'diff': 0.00013909700000000122}, {'diff': 0.00014022300000000182}, {'diff': 0.00014030599999999976}, {'diff': 0.00014022199999999888}, {'diff': 0.00014012500000000136}, {'diff': 0.000139056000000001...</msg>
<status status="PASS" starttime="20201030 10:57:50.645" endtime="20201030 10:57:50.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:50.652" level="INFO">${ACCURACY} = {'diff': [0.00013909700000000122, 0.00014022300000000182, 0.00014030599999999976, 0.00014022199999999888, 0.00014012500000000136, 0.00013905600000000198, 0.0001399859999999982, 0.00014073699999999842,...</msg>
<status status="PASS" starttime="20201030 10:57:50.649" endtime="20201030 10:57:50.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.657" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 10:57:50.656" endtime="20201030 10:57:50.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.659" level="INFO">VALUE: [0.00013909700000000122, 0.00014022300000000182, 0.00014030599999999976, 0.00014022199999999888, 0.00014012500000000136, 0.00013905600000000198, 0.0001399859999999982, 0.00014073699999999842, 0.00013984799999999797, 0.00014008299999999918, 0.00013904199999999894, 0.00013988900000000068, 0.0001398049999999998, 0.0001407079999999998, 0.00014043000000000042, 0.00013930599999999876, 0.0001403750000000016, 0.00013930599999999876, 0.00013995799999999906, 0.00014022199999999888, 0.00014080600000000026, 0.00014030599999999976, 0.00013990299999999678, 0.00013969399999999924, 0.0001398049999999998, 0.0001400140000000008, 0.00014024999999999802, 0.00014058299999999968, 0.00014097199999999963, 0.0001390139999999998, 0.0001391529999999995, 0.00014081900000000036, 0.00013929099999999972, 0.00014016700000000007, 0.0001397079999999988, 0.00014023600000000191, 0.00014047199999999913, 0.0001399729999999981, 0.0001397079999999988, 0.00014023599999999845, 0.0001391110000000008, 0.00014027800000000062, 0.00014062500000000186, 0.00013977800000000012, 0.0001405690000000001, 0.00013966699999999957, 0.000139653, 0.00013923599999999745, 0.00014030599999999976, 0.00014066700000000057]</msg>
<status status="PASS" starttime="20201030 10:57:50.658" endtime="20201030 10:57:50.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.653" endtime="20201030 10:57:50.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.664" endtime="20201030 10:57:50.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.663" endtime="20201030 10:57:50.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.661" endtime="20201030 10:57:50.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.299" endtime="20201030 10:57:50.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.299" endtime="20201030 10:57:50.685"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.693" endtime="20201030 10:57:50.716"></status>
</kw>
<msg timestamp="20201030 10:57:50.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.692" endtime="20201030 10:57:50.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.717" endtime="20201030 10:57:50.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.720" endtime="20201030 10:57:50.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.689" endtime="20201030 10:57:50.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.687" endtime="20201030 10:57:50.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.729" endtime="20201030 10:57:51.013"></status>
</kw>
<msg timestamp="20201030 10:57:51.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.727" endtime="20201030 10:57:51.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.017" endtime="20201030 10:57:51.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.025" endtime="20201030 10:57:51.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.725" endtime="20201030 10:57:51.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.723" endtime="20201030 10:57:51.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.032" level="INFO">${RESULT} = [{'diff': 0.00014169400000000124}, {'diff': 0.00014243000000000242}, {'diff': 0.00014141699999999785}, {'diff': 0.0001416249999999994}, {'diff': 0.00014265200000000006}, {'diff': 0.0001419999999999997...</msg>
<status status="PASS" starttime="20201030 10:57:51.029" endtime="20201030 10:57:51.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.036" level="INFO">${ACCURACY} = {'diff': [0.00014169400000000124, 0.00014243000000000242, 0.00014141699999999785, 0.0001416249999999994, 0.00014265200000000006, 0.00014199999999999977, 0.00014197200000000063, 0.00014244399999999852,...</msg>
<status status="PASS" starttime="20201030 10:57:51.033" endtime="20201030 10:57:51.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.040" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.039" endtime="20201030 10:57:51.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.042" level="INFO">VALUE: [0.00014169400000000124, 0.00014243000000000242, 0.00014141699999999785, 0.0001416249999999994, 0.00014265200000000006, 0.00014199999999999977, 0.00014197200000000063, 0.00014244399999999852, 0.00014174999999999952, 0.00014216700000000207, 0.0001421249999999999, 0.0001416249999999994, 0.0001414859999999997, 0.00014229099999999925, 0.0001413750000000026, 0.00014245799999999809, 0.0001422080000000013, 0.0001419860000000002, 0.000141653000000002, 0.00014130499999999782, 0.0001424310000000019, 0.00014259699999999778, 0.00014222200000000088, 0.000141653000000002, 0.0001412920000000012, 0.00014172299999999985, 0.00014290300000000325, 0.000142347000000001, 0.00014233300000000143, 0.00014220799999999784, 0.00014279199999999923, 0.00014113899999999846, 0.00014138799999999924, 0.00014190300000000225, 0.00014263899999999996, 0.00014158300000000068, 0.00014215299999999903, 0.00014273599999999748, 0.0001415140000000023, 0.00014298599999999773, 0.00014183300000000093, 0.00014291599999999988, 0.00014280499999999932, 0.0001420279999999989, 0.00014161099999999982, 0.0001417629999999996, 0.00014211100000000032, 0.00014112500000000236, 0.00014187499999999964, 0.000142347000000001]</msg>
<status status="PASS" starttime="20201030 10:57:51.041" endtime="20201030 10:57:51.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.037" endtime="20201030 10:57:51.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.048" endtime="20201030 10:57:51.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.047" endtime="20201030 10:57:51.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.046" endtime="20201030 10:57:51.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.686" endtime="20201030 10:57:51.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.685" endtime="20201030 10:57:51.069"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.077" endtime="20201030 10:57:51.098"></status>
</kw>
<msg timestamp="20201030 10:57:51.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.076" endtime="20201030 10:57:51.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.100" endtime="20201030 10:57:51.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.102" endtime="20201030 10:57:51.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.073" endtime="20201030 10:57:51.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.071" endtime="20201030 10:57:51.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.111" endtime="20201030 10:57:51.404"></status>
</kw>
<msg timestamp="20201030 10:57:51.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.110" endtime="20201030 10:57:51.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.414" endtime="20201030 10:57:51.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.431" endtime="20201030 10:57:51.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.107" endtime="20201030 10:57:51.436"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.106" endtime="20201030 10:57:51.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.445" level="INFO">${RESULT} = [{'diff': 0.00014426400000000159}, {'diff': 0.00014315300000000003}, {'diff': 0.00014365300000000053}, {'diff': 0.00014387500000000164}, {'diff': 0.00014465299999999806}, {'diff': 0.000144417000000000...</msg>
<status status="PASS" starttime="20201030 10:57:51.438" endtime="20201030 10:57:51.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.455" level="INFO">${ACCURACY} = {'diff': [0.00014426400000000159, 0.00014315300000000003, 0.00014365300000000053, 0.00014387500000000164, 0.00014465299999999806, 0.00014441700000000085, 0.00014355500000000007, 0.00014333299999999896...</msg>
<status status="PASS" starttime="20201030 10:57:51.447" endtime="20201030 10:57:51.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.464" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.462" endtime="20201030 10:57:51.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.467" level="INFO">VALUE: [0.00014426400000000159, 0.00014315300000000003, 0.00014365300000000053, 0.00014387500000000164, 0.00014465299999999806, 0.00014441700000000085, 0.00014355500000000007, 0.00014333299999999896, 0.00014404200000000048, 0.00014398599999999873, 0.00014312499999999742, 0.00014462499999999892, 0.00014387500000000164, 0.00014406999999999962, 0.0001437219999999989, 0.00014306899999999914, 0.00014476399999999862, 0.00014426399999999812, 0.0001436250000000014, 0.00014370799999999934, 0.000144138999999998, 0.00014413900000000146, 0.00014361099999999835, 0.0001438890000000012, 0.0001443060000000003, 0.00014477799999999819, 0.00014387499999999817, 0.00014394400000000002, 0.00014462499999999892, 0.00014304199999999948, 0.00014322200000000188, 0.00014473599999999948, 0.00014361099999999835, 0.0001439020000000013, 0.0001431250000000009, 0.00014330499999999982, 0.00014431999999999987, 0.00014398700000000167, 0.00014376400000000109, 0.00014463900000000196, 0.00014430500000000082, 0.00014406900000000014, 0.00014405500000000057, 0.00014304199999999948, 0.00014333299999999896, 0.0001437769999999977, 0.0001447089999999998, 0.0001435410000000005, 0.00014480500000000132, 0.0001449029999999983]</msg>
<status status="PASS" starttime="20201030 10:57:51.466" endtime="20201030 10:57:51.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.457" endtime="20201030 10:57:51.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.472" endtime="20201030 10:57:51.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.470" endtime="20201030 10:57:51.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.469" endtime="20201030 10:57:51.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.070" endtime="20201030 10:57:51.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.069" endtime="20201030 10:57:51.492"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.501" endtime="20201030 10:57:51.523"></status>
</kw>
<msg timestamp="20201030 10:57:51.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.499" endtime="20201030 10:57:51.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.525" endtime="20201030 10:57:51.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.527" endtime="20201030 10:57:51.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.497" endtime="20201030 10:57:51.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.495" endtime="20201030 10:57:51.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.536" endtime="20201030 10:57:51.822"></status>
</kw>
<msg timestamp="20201030 10:57:51.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.535" endtime="20201030 10:57:51.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.826" endtime="20201030 10:57:51.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.834" endtime="20201030 10:57:51.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.532" endtime="20201030 10:57:51.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.530" endtime="20201030 10:57:51.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.840" level="INFO">${RESULT} = [{'diff': 0.00014644499999999852}, {'diff': 0.00014512499999999942}, {'diff': 0.000145138999999999}, {'diff': 0.00014698600000000173}, {'diff': 0.00014606999999999815}, {'diff': 0.00014644499999999852...</msg>
<status status="PASS" starttime="20201030 10:57:51.837" endtime="20201030 10:57:51.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.844" level="INFO">${ACCURACY} = {'diff': [0.00014644499999999852, 0.00014512499999999942, 0.000145138999999999, 0.00014698600000000173, 0.00014606999999999815, 0.00014644499999999852, 0.0001465000000000008, 0.00014652799999999994, 0...</msg>
<status status="PASS" starttime="20201030 10:57:51.841" endtime="20201030 10:57:51.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.849" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.848" endtime="20201030 10:57:51.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.851" level="INFO">VALUE: [0.00014644499999999852, 0.00014512499999999942, 0.000145138999999999, 0.00014698600000000173, 0.00014606999999999815, 0.00014644499999999852, 0.0001465000000000008, 0.00014652799999999994, 0.0001461520000000001, 0.00014575000000000005, 0.00014567999999999873, 0.00014655599999999908, 0.00014511099999999985, 0.00014551399999999937, 0.00014509700000000028, 0.00014633300000000196, 0.00014531899999999792, 0.00014580599999999833, 0.00014504200000000148, 0.00014527799999999869, 0.00014584699999999756, 0.0001468749999999977, 0.00014630499999999935, 0.00014615299999999956, 0.0001468199999999989, 0.00014569499999999777, 0.0001467229999999979, 0.00014547200000000066, 0.0001459580000000016, 0.0001452220000000004, 0.00014519499999999727, 0.00014666699999999963, 0.00014680599999999933, 0.0001466390000000005, 0.00014592999999999898, 0.00014566599999999916, 0.000146139, 0.0001458060000000018, 0.0001457220000000009, 0.00014547300000000013, 0.00014626400000000012, 0.00014612500000000042, 0.0001466670000000031, 0.00014548600000000023, 0.00014676400000000062, 0.00014680599999999933, 0.0001469580000000026, 0.00014620800000000184, 0.0001466390000000005, 0.00014644399999999905]</msg>
<status status="PASS" starttime="20201030 10:57:51.850" endtime="20201030 10:57:51.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.845" endtime="20201030 10:57:51.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.856" endtime="20201030 10:57:51.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.855" endtime="20201030 10:57:51.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.854" endtime="20201030 10:57:51.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.493" endtime="20201030 10:57:51.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.493" endtime="20201030 10:57:51.877"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.885" endtime="20201030 10:57:51.908"></status>
</kw>
<msg timestamp="20201030 10:57:51.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.884" endtime="20201030 10:57:51.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.910" endtime="20201030 10:57:51.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.912" endtime="20201030 10:57:51.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.881" endtime="20201030 10:57:51.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.879" endtime="20201030 10:57:51.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.921" endtime="20201030 10:57:52.214"></status>
</kw>
<msg timestamp="20201030 10:57:52.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022876375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.920" endtime="20201030 10:57:52.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022876375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.222" endtime="20201030 10:57:52.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.240" endtime="20201030 10:57:52.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.917" endtime="20201030 10:57:52.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.916" endtime="20201030 10:57:52.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.254" level="INFO">${RESULT} = [{'diff': 0.00014756900000000017}, {'diff': 0.00014715300000000056}, {'diff': 0.0001488749999999997}, {'diff': 0.00014787500000000217}, {'diff': 0.00014881899999999795}, {'diff': 0.0001479859999999992...</msg>
<status status="PASS" starttime="20201030 10:57:52.247" endtime="20201030 10:57:52.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:52.263" level="INFO">${ACCURACY} = {'diff': [0.00014756900000000017, 0.00014715300000000056, 0.0001488749999999997, 0.00014787500000000217, 0.00014881899999999795, 0.00014798599999999926, 0.00014744400000000005, 0.0001471529999999971, ...</msg>
<status status="PASS" starttime="20201030 10:57:52.256" endtime="20201030 10:57:52.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.271" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 10:57:52.269" endtime="20201030 10:57:52.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.276" level="INFO">VALUE: [0.00014756900000000017, 0.00014715300000000056, 0.0001488749999999997, 0.00014787500000000217, 0.00014881899999999795, 0.00014798599999999926, 0.00014744400000000005, 0.0001471529999999971, 0.00014805600000000058, 0.000148833000000001, 0.00014725000000000155, 0.00014827800000000169, 0.00014877799999999872, 0.0001479719999999997, 0.00014834700000000006, 0.00014715300000000056, 0.0001470550000000001, 0.00014762499999999845, 0.00014848599999999976, 0.00014831900000000092, 0.00014745799999999962, 0.00014865300000000206, 0.00014866600000000216, 0.00014799999999999883, 0.00014717999999999676, 0.00014748599999999876, 0.000148139000000002, 0.000147735999999999, 0.00014705599999999958, 0.00014768000000000073, 0.00014722199999999894, 0.00014740299999999734, 0.00014852800000000194, 0.00014708299999999924, 0.0001482359999999995, 0.00014766700000000063, 0.00014798599999999926, 0.00014795800000000012, 0.00014813899999999852, 0.0001476810000000002, 0.0001480139999999984, 0.0001487229999999999, 0.0001481810000000007, 0.00014816600000000166, 0.00014722199999999894, 0.0001476810000000002, 0.00014866700000000163, 0.00014826400000000212, 0.00014772199999999944, 0.00014826400000000212]</msg>
<status status="PASS" starttime="20201030 10:57:52.274" endtime="20201030 10:57:52.277"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.264" endtime="20201030 10:57:52.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.281" endtime="20201030 10:57:52.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.280" endtime="20201030 10:57:52.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.279" endtime="20201030 10:57:52.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.878" endtime="20201030 10:57:52.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.877" endtime="20201030 10:57:52.302"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.310" endtime="20201030 10:57:52.333"></status>
</kw>
<msg timestamp="20201030 10:57:52.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.309" endtime="20201030 10:57:52.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.334" endtime="20201030 10:57:52.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.337" endtime="20201030 10:57:52.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.306" endtime="20201030 10:57:52.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.304" endtime="20201030 10:57:52.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.346" endtime="20201030 10:57:52.632"></status>
</kw>
<msg timestamp="20201030 10:57:52.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.344" endtime="20201030 10:57:52.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.636" endtime="20201030 10:57:52.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.644" endtime="20201030 10:57:52.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.342" endtime="20201030 10:57:52.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.340" endtime="20201030 10:57:52.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.650" level="INFO">${RESULT} = [{'diff': 0.00015093099999999998}, {'diff': 0.00015066599999999722}, {'diff': 0.0001493330000000015}, {'diff': 0.00015025000000000108}, {'diff': 0.00014936100000000063}, {'diff': 0.0001500000000000008...</msg>
<status status="PASS" starttime="20201030 10:57:52.647" endtime="20201030 10:57:52.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:52.655" level="INFO">${ACCURACY} = {'diff': [0.00015093099999999998, 0.00015066599999999722, 0.0001493330000000015, 0.00015025000000000108, 0.00014936100000000063, 0.00015000000000000083, 0.00015086099999999866, 0.00015000000000000083,...</msg>
<status status="PASS" starttime="20201030 10:57:52.651" endtime="20201030 10:57:52.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.660" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 10:57:52.659" endtime="20201030 10:57:52.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.662" level="INFO">VALUE: [0.00015093099999999998, 0.00015066599999999722, 0.0001493330000000015, 0.00015025000000000108, 0.00014936100000000063, 0.00015000000000000083, 0.00015086099999999866, 0.00015000000000000083, 0.00015022299999999794, 0.00015013900000000052, 0.00014934799999999707, 0.00015068099999999973, 0.00015080599999999986, 0.0001494729999999972, 0.00015056900000000317, 0.00014980499999999938, 0.00015095800000000312, 0.0001503330000000025, 0.0001491810000000017, 0.0001492360000000005, 0.00014980499999999938, 0.00015033299999999902, 0.0001493750000000002, 0.00014945800000000162, 0.00014959799999999732, 0.0001501109999999979, 0.00015094499999999955, 0.00014943099999999848, 0.00014975000000000058, 0.00015061100000000188, 0.00014930500000000235, 0.00014972199999999797, 0.00015013799999999758, 0.00015041600000000044, 0.0001500270000000005, 0.00014950000000000033, 0.00015047199999999872, 0.00014938899999999977, 0.00014936100000000063, 0.0001493750000000002, 0.0001508750000000017, 0.0001494859999999973, 0.00015022199999999847, 0.00014931899999999845, 0.00014904199999999854, 0.0001509170000000004, 0.00014902800000000244, 0.00015054100000000056, 0.00015081899999999995, 0.0001494720000000012]</msg>
<status status="PASS" starttime="20201030 10:57:52.661" endtime="20201030 10:57:52.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.656" endtime="20201030 10:57:52.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.667" endtime="20201030 10:57:52.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.666" endtime="20201030 10:57:52.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.664" endtime="20201030 10:57:52.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.303" endtime="20201030 10:57:52.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.302" endtime="20201030 10:57:52.688"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.696" endtime="20201030 10:57:52.718"></status>
</kw>
<msg timestamp="20201030 10:57:52.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.695" endtime="20201030 10:57:52.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.720" endtime="20201030 10:57:52.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.722" endtime="20201030 10:57:52.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.692" endtime="20201030 10:57:52.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.690" endtime="20201030 10:57:52.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.731" endtime="20201030 10:57:53.026"></status>
</kw>
<msg timestamp="20201030 10:57:53.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.729" endtime="20201030 10:57:53.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.036" endtime="20201030 10:57:53.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.055" endtime="20201030 10:57:53.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.727" endtime="20201030 10:57:53.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.725" endtime="20201030 10:57:53.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.072" level="INFO">${RESULT} = [{'diff': 0.00015263800000000008}, {'diff': 0.00015181900000000095}, {'diff': 0.00015220799999999743}, {'diff': 0.0001522080000000009}, {'diff': 0.0001524860000000003}, {'diff': 0.00015194400000000108...</msg>
<status status="PASS" starttime="20201030 10:57:53.064" endtime="20201030 10:57:53.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.082" level="INFO">${ACCURACY} = {'diff': [0.00015263800000000008, 0.00015181900000000095, 0.00015220799999999743, 0.0001522080000000009, 0.0001524860000000003, 0.00015194400000000108, 0.00015191599999999847, 0.00015263800000000008, ...</msg>
<status status="PASS" starttime="20201030 10:57:53.074" endtime="20201030 10:57:53.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.089" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.087" endtime="20201030 10:57:53.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.092" level="INFO">VALUE: [0.00015263800000000008, 0.00015181900000000095, 0.00015220799999999743, 0.0001522080000000009, 0.0001524860000000003, 0.00015194400000000108, 0.00015191599999999847, 0.00015263800000000008, 0.00015162499999999898, 0.0001510560000000001, 0.00015292999999999904, 0.00015207000000000068, 0.00015233399999999703, 0.00015305499999999916, 0.0001517499999999991, 0.00015131899999999698, 0.00015130500000000088, 0.00015229199999999832, 0.00015150000000000233, 0.0001511949999999998, 0.000152834000000001, 0.0001513469999999996, 0.00015280500000000238, 0.00015131900000000045, 0.00015120800000000337, 0.0001513889999999983, 0.00015173700000000248, 0.0001522499999999996, 0.000152221999999997, 0.00015279099999999934, 0.00015208400000000025, 0.00015204199999999807, 0.00015149999999999886, 0.0001524730000000002, 0.00015272200000000097, 0.00015151399999999843, 0.00015222200000000047, 0.00015197200000000022, 0.0001529170000000024, 0.0001524730000000002, 0.00015213799999999958, 0.00015137499999999873, 0.00015245800000000115, 0.000151430999999997, 0.00015163899999999855, 0.00015283399999999753, 0.00015177799999999825, 0.0001528889999999998, 0.00015280500000000238, 0.00015186099999999966]</msg>
<status status="PASS" starttime="20201030 10:57:53.090" endtime="20201030 10:57:53.093"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.084" endtime="20201030 10:57:53.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.099" endtime="20201030 10:57:53.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.097" endtime="20201030 10:57:53.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.096" endtime="20201030 10:57:53.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.688" endtime="20201030 10:57:53.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.688" endtime="20201030 10:57:53.121"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.129" endtime="20201030 10:57:53.152"></status>
</kw>
<msg timestamp="20201030 10:57:53.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.128" endtime="20201030 10:57:53.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.154" endtime="20201030 10:57:53.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.156" endtime="20201030 10:57:53.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.125" endtime="20201030 10:57:53.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.123" endtime="20201030 10:57:53.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.165" endtime="20201030 10:57:53.451"></status>
</kw>
<msg timestamp="20201030 10:57:53.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022938514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.164" endtime="20201030 10:57:53.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022938514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.456" endtime="20201030 10:57:53.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.464" endtime="20201030 10:57:53.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.161" endtime="20201030 10:57:53.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.159" endtime="20201030 10:57:53.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.470" level="INFO">${RESULT} = [{'diff': 0.00015474999999999864}, {'diff': 0.00015495899999999965}, {'diff': 0.00015301399999999993}, {'diff': 0.00015430499999999694}, {'diff': 0.0001536669999999997}, {'diff': 0.0001546390000000015...</msg>
<status status="PASS" starttime="20201030 10:57:53.467" endtime="20201030 10:57:53.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.474" level="INFO">${ACCURACY} = {'diff': [0.00015474999999999864, 0.00015495899999999965, 0.00015301399999999993, 0.00015430499999999694, 0.0001536669999999997, 0.00015463900000000155, 0.00015400000000000136, 0.00015469499999999983,...</msg>
<status status="PASS" starttime="20201030 10:57:53.471" endtime="20201030 10:57:53.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.478" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.477" endtime="20201030 10:57:53.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.481" level="INFO">VALUE: [0.00015474999999999864, 0.00015495899999999965, 0.00015301399999999993, 0.00015430499999999694, 0.0001536669999999997, 0.00015463900000000155, 0.00015400000000000136, 0.00015469499999999983, 0.00015308300000000177, 0.00015327700000000027, 0.00015430500000000041, 0.00015497199999999975, 0.00015418099999999976, 0.00015332000000000193, 0.00015483399999999953, 0.00015397199999999875, 0.00015437500000000173, 0.0001546110000000024, 0.0001549999999999989, 0.0001538609999999982, 0.00015424999999999814, 0.00015448599999999882, 0.0001540829999999993, 0.00015427800000000075, 0.00015487500000000223, 0.00015470799999999993, 0.00015455600000000014, 0.00015301399999999993, 0.00015413900000000105, 0.00015433299999999955, 0.00015474999999999864, 0.00015487499999999876, 0.00015304200000000254, 0.00015379199999999982, 0.00015312500000000048, 0.00015355499999999966, 0.00015491699999999747, 0.00015465300000000112, 0.00015398599999999832, 0.00015334800000000107, 0.00015381899999999948, 0.00015397200000000222, 0.00015355599999999914, 0.000154221999999999, 0.00015330600000000236, 0.00015315299999999962, 0.00015331999999999846, 0.0001549860000000028, 0.00015383299999999905, 0.00015440300000000087]</msg>
<status status="PASS" starttime="20201030 10:57:53.479" endtime="20201030 10:57:53.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.475" endtime="20201030 10:57:53.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.486" endtime="20201030 10:57:53.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.485" endtime="20201030 10:57:53.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.484" endtime="20201030 10:57:53.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.122" endtime="20201030 10:57:53.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.121" endtime="20201030 10:57:53.507"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.516" endtime="20201030 10:57:53.538"></status>
</kw>
<msg timestamp="20201030 10:57:53.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.514" endtime="20201030 10:57:53.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.540" endtime="20201030 10:57:53.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.542" endtime="20201030 10:57:53.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.511" endtime="20201030 10:57:53.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.509" endtime="20201030 10:57:53.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.551" endtime="20201030 10:57:53.836"></status>
</kw>
<msg timestamp="20201030 10:57:53.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.550" endtime="20201030 10:57:53.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.840" endtime="20201030 10:57:53.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.848" endtime="20201030 10:57:53.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.547" endtime="20201030 10:57:53.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.545" endtime="20201030 10:57:53.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.855" level="INFO">${RESULT} = [{'diff': 0.000155915999999999}, {'diff': 0.0001559999999999999}, {'diff': 0.00015661099999999747}, {'diff': 0.00015658400000000128}, {'diff': 0.0001559029999999989}, {'diff': 0.00015598600000000032},...</msg>
<status status="PASS" starttime="20201030 10:57:53.851" endtime="20201030 10:57:53.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.859" level="INFO">${ACCURACY} = {'diff': [0.000155915999999999, 0.0001559999999999999, 0.00015661099999999747, 0.00015658400000000128, 0.0001559029999999989, 0.00015598600000000032, 0.00015613899999999958, 0.00015597200000000075, 0....</msg>
<status status="PASS" starttime="20201030 10:57:53.856" endtime="20201030 10:57:53.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.864" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.863" endtime="20201030 10:57:53.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.866" level="INFO">VALUE: [0.000155915999999999, 0.0001559999999999999, 0.00015661099999999747, 0.00015658400000000128, 0.0001559029999999989, 0.00015598600000000032, 0.00015613899999999958, 0.00015597200000000075, 0.0001569579999999987, 0.00015631899999999851, 0.00015505600000000064, 0.00015563899999999908, 0.00015587499999999976, 0.00015515299999999815, 0.00015540300000000187, 0.00015630499999999894, 0.00015573600000000007, 0.00015582000000000096, 0.0001564029999999994, 0.00015637500000000026, 0.00015672199999999803, 0.00015577800000000225, 0.00015629200000000232, 0.00015619499999999786, 0.00015545900000000015, 0.00015647300000000072, 0.000156916, 0.00015520800000000043, 0.0001554440000000011, 0.00015562499999999951, 0.00015529199999999785, 0.00015572199999999703, 0.0001557220000000005, 0.00015554200000000157, 0.00015513899999999858, 0.00015534699999999665, 0.00015559700000000037, 0.00015644500000000158, 0.00015625000000000014, 0.00015645800000000168, 0.00015541700000000144, 0.00015645800000000168, 0.00015540300000000187, 0.00015647299999999725, 0.00015574999999999964, 0.00015501299999999898, 0.00015573600000000007, 0.0001567220000000015, 0.00015598600000000032, 0.00015647300000000072]</msg>
<status status="PASS" starttime="20201030 10:57:53.865" endtime="20201030 10:57:53.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.860" endtime="20201030 10:57:53.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.871" endtime="20201030 10:57:53.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.870" endtime="20201030 10:57:53.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.868" endtime="20201030 10:57:53.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.508" endtime="20201030 10:57:53.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.507" endtime="20201030 10:57:53.892"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.900" endtime="20201030 10:57:53.923"></status>
</kw>
<msg timestamp="20201030 10:57:53.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.899" endtime="20201030 10:57:53.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.925" endtime="20201030 10:57:53.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.927" endtime="20201030 10:57:53.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.896" endtime="20201030 10:57:53.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.894" endtime="20201030 10:57:53.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.936" endtime="20201030 10:57:54.224"></status>
</kw>
<msg timestamp="20201030 10:57:54.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02200575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:53.934" endtime="20201030 10:57:54.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02200575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:54.228" endtime="20201030 10:57:54.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.236" endtime="20201030 10:57:54.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.932" endtime="20201030 10:57:54.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.930" endtime="20201030 10:57:54.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.243" level="INFO">${RESULT} = [{'diff': 0.00015879199999999788}, {'diff': 0.0001573480000000016}, {'diff': 0.00015890199999999896}, {'diff': 0.00015762500000000151}, {'diff': 0.00015788900000000133}, {'diff': 0.0001574579999999992...</msg>
<status status="PASS" starttime="20201030 10:57:54.239" endtime="20201030 10:57:54.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:54.247" level="INFO">${ACCURACY} = {'diff': [0.00015879199999999788, 0.0001573480000000016, 0.00015890199999999896, 0.00015762500000000151, 0.00015788900000000133, 0.0001574579999999992, 0.00015716699999999972, 0.00015770899999999893, ...</msg>
<status status="PASS" starttime="20201030 10:57:54.244" endtime="20201030 10:57:54.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.251" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 10:57:54.250" endtime="20201030 10:57:54.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.253" level="INFO">VALUE: [0.00015879199999999788, 0.0001573480000000016, 0.00015890199999999896, 0.00015762500000000151, 0.00015788900000000133, 0.0001574579999999992, 0.00015716699999999972, 0.00015770899999999893, 0.00015798600000000232, 0.00015808299999999983, 0.00015747199999999878, 0.0001575139999999975, 0.00015861099999999947, 0.00015869500000000036, 0.00015733300000000255, 0.0001584030000000014, 0.00015770799999999946, 0.00015848599999999935, 0.0001584169999999975, 0.00015747299999999825, 0.00015806900000000026, 0.00015863899999999861, 0.00015723600000000157, 0.0001570419999999996, 0.00015704200000000307, 0.00015813899999999811, 0.0001573610000000017, 0.00015763900000000108, 0.00015705500000000316, 0.00015775000000000164, 0.0001587779999999983, 0.00015838900000000183, 0.0001575839999999988, 0.00015895900000000018, 0.00015780599999999992, 0.00015830500000000094, 0.00015862500000000251, 0.00015870899999999993, 0.00015797299999999875, 0.0001588200000000005, 0.00015738800000000136, 0.0001571809999999993, 0.00015793000000000057, 0.00015866699999999775, 0.00015773700000000154, 0.00015833300000000008, 0.00015813900000000158, 0.0001574579999999992, 0.0001575420000000001, 0.00015780599999999992]</msg>
<status status="PASS" starttime="20201030 10:57:54.252" endtime="20201030 10:57:54.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.247" endtime="20201030 10:57:54.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.258" endtime="20201030 10:57:54.277"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.257" endtime="20201030 10:57:54.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.256" endtime="20201030 10:57:54.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.893" endtime="20201030 10:57:54.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.892" endtime="20201030 10:57:54.279"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.287" endtime="20201030 10:57:54.311"></status>
</kw>
<msg timestamp="20201030 10:57:54.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.286" endtime="20201030 10:57:54.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.313" endtime="20201030 10:57:54.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.315" endtime="20201030 10:57:54.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.283" endtime="20201030 10:57:54.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.281" endtime="20201030 10:57:54.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.324" endtime="20201030 10:57:54.609"></status>
</kw>
<msg timestamp="20201030 10:57:54.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022988556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.323" endtime="20201030 10:57:54.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022988556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.613" endtime="20201030 10:57:54.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.621" endtime="20201030 10:57:54.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.320" endtime="20201030 10:57:54.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.318" endtime="20201030 10:57:54.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.628" level="INFO">${RESULT} = [{'diff': 0.0001602779999999998}, {'diff': 0.0001595550000000022}, {'diff': 0.00016030500000000295}, {'diff': 0.00015912499999999954}, {'diff': 0.00015920800000000096}, {'diff': 0.00015997200000000128...</msg>
<status status="PASS" starttime="20201030 10:57:54.625" endtime="20201030 10:57:54.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:54.632" level="INFO">${ACCURACY} = {'diff': [0.0001602779999999998, 0.0001595550000000022, 0.00016030500000000295, 0.00015912499999999954, 0.00015920800000000096, 0.00015997200000000128, 0.00016025000000000067, 0.00016022199999999806, ...</msg>
<status status="PASS" starttime="20201030 10:57:54.629" endtime="20201030 10:57:54.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.637" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 10:57:54.636" endtime="20201030 10:57:54.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.639" level="INFO">VALUE: [0.0001602779999999998, 0.0001595550000000022, 0.00016030500000000295, 0.00015912499999999954, 0.00015920800000000096, 0.00015997200000000128, 0.00016025000000000067, 0.00016022199999999806, 0.00015912499999999954, 0.00016045799999999874, 0.0001598339999999976, 0.00016000000000000042, 0.00016036099999999776, 0.00016031899999999905, 0.0001605970000000019, 0.00016011100000000097, 0.00016086100000000172, 0.00016036099999999776, 0.00016097300000000175, 0.00015979199999999888, 0.00015966600000000275, 0.00015984699999999769, 0.00016013900000000011, 0.00016012499999999708, 0.00015951300000000002, 0.00015963800000000014, 0.0001602909999999999, 0.00016066699999999975, 0.00015962500000000004, 0.00016070800000000246, 0.00015998600000000085, 0.00016022200000000153, 0.0001604580000000022, 0.00015915299999999868, 0.00015968099999999832, 0.0001599580000000017, 0.00016098600000000185, 0.00015955499999999873, 0.00015908299999999737, 0.00015986100000000072, 0.00015969500000000136, 0.00015998599999999738, 0.00016065300000000018, 0.00016063800000000114, 0.00015930499999999848, 0.00016083299999999912, 0.00015905600000000117, 0.0001593060000000049, 0.00016066699999999629, 0.00016045900000000168]</msg>
<status status="PASS" starttime="20201030 10:57:54.638" endtime="20201030 10:57:54.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.633" endtime="20201030 10:57:54.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.645" endtime="20201030 10:57:54.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.643" endtime="20201030 10:57:54.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.642" endtime="20201030 10:57:54.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.280" endtime="20201030 10:57:54.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.279" endtime="20201030 10:57:54.665"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.674" endtime="20201030 10:57:54.697"></status>
</kw>
<msg timestamp="20201030 10:57:54.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.673" endtime="20201030 10:57:54.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.698" endtime="20201030 10:57:54.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.701" endtime="20201030 10:57:54.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.670" endtime="20201030 10:57:54.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.668" endtime="20201030 10:57:54.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.710" endtime="20201030 10:57:54.995"></status>
</kw>
<msg timestamp="20201030 10:57:54.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.708" endtime="20201030 10:57:54.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.999" endtime="20201030 10:57:55.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.007" endtime="20201030 10:57:55.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.706" endtime="20201030 10:57:55.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.704" endtime="20201030 10:57:55.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.014" level="INFO">${RESULT} = [{'diff': 0.00016249999999999945}, {'diff': 0.00016122199999999906}, {'diff': 0.00016162499999999858}, {'diff': 0.00016170899999999946}, {'diff': 0.00016297199999999734}, {'diff': 0.000162972000000000...</msg>
<status status="PASS" starttime="20201030 10:57:55.011" endtime="20201030 10:57:55.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.019" level="INFO">${ACCURACY} = {'diff': [0.00016249999999999945, 0.00016122199999999906, 0.00016162499999999858, 0.00016170899999999946, 0.00016297199999999734, 0.0001629720000000008, 0.00016204199999999766, 0.00016198599999999938,...</msg>
<status status="PASS" starttime="20201030 10:57:55.015" endtime="20201030 10:57:55.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.023" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.022" endtime="20201030 10:57:55.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.025" level="INFO">VALUE: [0.00016249999999999945, 0.00016122199999999906, 0.00016162499999999858, 0.00016170899999999946, 0.00016297199999999734, 0.0001629720000000008, 0.00016204199999999766, 0.00016198599999999938, 0.0001628049999999985, 0.00016245800000000074, 0.00016181900000000055, 0.0001619719999999998, 0.00016230600000000095, 0.00016238799999999942, 0.00016215299999999822, 0.0001615979999999989, 0.0001629859999999969, 0.00016213900000000211, 0.00016154200000000063, 0.0001622499999999992, 0.00016202800000000156, 0.00016183300000000012, 0.00016213900000000211, 0.00016116700000000025, 0.00016299999999999995, 0.00016215199999999874, 0.00016149999999999845, 0.0001619719999999998, 0.00016181900000000055, 0.0001619719999999998, 0.00016299999999999995, 0.00016230599999999748, 0.00016223599999999963, 0.00016233300000000062, 0.000161708, 0.00016258300000000087, 0.0001626950000000009, 0.00016144499999999964, 0.00016247299999999978, 0.00016284700000000069, 0.00016149999999999845, 0.00016182000000000002, 0.00016145799999999974, 0.00016184699999999969, 0.00016279200000000188, 0.00016198600000000285, 0.0001618750000000023, 0.0001622080000000005, 0.00016201399999999852, 0.00016254200000000163]</msg>
<status status="PASS" starttime="20201030 10:57:55.024" endtime="20201030 10:57:55.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.019" endtime="20201030 10:57:55.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.030" endtime="20201030 10:57:55.050"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.029" endtime="20201030 10:57:55.050"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.028" endtime="20201030 10:57:55.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.666" endtime="20201030 10:57:55.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.666" endtime="20201030 10:57:55.051"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.061" endtime="20201030 10:57:55.085"></status>
</kw>
<msg timestamp="20201030 10:57:55.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.060" endtime="20201030 10:57:55.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.086" endtime="20201030 10:57:55.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.089" endtime="20201030 10:57:55.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.056" endtime="20201030 10:57:55.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.054" endtime="20201030 10:57:55.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.098" endtime="20201030 10:57:55.383"></status>
</kw>
<msg timestamp="20201030 10:57:55.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0240665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024230306, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:55.096" endtime="20201030 10:57:55.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0240665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024230306, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:55.387" endtime="20201030 10:57:55.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.395" endtime="20201030 10:57:55.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.094" endtime="20201030 10:57:55.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.092" endtime="20201030 10:57:55.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.401" level="INFO">${RESULT} = [{'diff': 0.00016380599999999898}, {'diff': 0.00016323599999999716}, {'diff': 0.00016433299999999915}, {'diff': 0.00016452700000000112}, {'diff': 0.00016465299999999725}, {'diff': 0.000163250000000000...</msg>
<status status="PASS" starttime="20201030 10:57:55.398" endtime="20201030 10:57:55.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.406" level="INFO">${ACCURACY} = {'diff': [0.00016380599999999898, 0.00016323599999999716, 0.00016433299999999915, 0.00016452700000000112, 0.00016465299999999725, 0.0001632500000000002, 0.00016434800000000166, 0.00016369499999999843,...</msg>
<status status="PASS" starttime="20201030 10:57:55.402" endtime="20201030 10:57:55.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.410" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.409" endtime="20201030 10:57:55.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.413" level="INFO">VALUE: [0.00016380599999999898, 0.00016323599999999716, 0.00016433299999999915, 0.00016452700000000112, 0.00016465299999999725, 0.0001632500000000002, 0.00016434800000000166, 0.00016369499999999843, 0.00016315199999999974, 0.00016433299999999915, 0.000164305, 0.0001649440000000002, 0.00016441700000000004, 0.00016455500000000026, 0.00016313800000000017, 0.0001642219999999986, 0.0001637500000000007, 0.00016318000000000235, 0.0001634309999999986, 0.00016447300000000178, 0.00016486099999999879, 0.00016481900000000008, 0.0001637639999999968, 0.00016354200000000263, 0.0001644859999999984, 0.00016419499999999893, 0.0001637500000000007, 0.00016336099999999729, 0.0001642919999999999, 0.00016404199999999966, 0.00016372299999999756, 0.00016348700000000035, 0.00016419499999999893, 0.00016463900000000115, 0.0001639439999999992, 0.00016483299999999965, 0.0001639859999999979, 0.00016430599999999948, 0.00016445799999999927, 0.00016367999999999938, 0.00016415300000000022, 0.0001634580000000052, 0.00016434700000000219, 0.0001642639999999973, 0.00016462499999999464, 0.00016347199999999784, 0.00016367999999999938, 0.00016486100000000226, 0.0001637780000000033, 0.00016363900000000015]</msg>
<status status="PASS" starttime="20201030 10:57:55.412" endtime="20201030 10:57:55.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.407" endtime="20201030 10:57:55.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.425" endtime="20201030 10:57:55.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.423" endtime="20201030 10:57:55.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.422" endtime="20201030 10:57:55.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.052" endtime="20201030 10:57:55.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.052" endtime="20201030 10:57:55.445"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.454" endtime="20201030 10:57:55.477"></status>
</kw>
<msg timestamp="20201030 10:57:55.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.452" endtime="20201030 10:57:55.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.479" endtime="20201030 10:57:55.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.481" endtime="20201030 10:57:55.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.450" endtime="20201030 10:57:55.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.448" endtime="20201030 10:57:55.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.490" endtime="20201030 10:57:55.776"></status>
</kw>
<msg timestamp="20201030 10:57:55.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023117903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.489" endtime="20201030 10:57:55.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023117903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.780" endtime="20201030 10:57:55.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.788" endtime="20201030 10:57:55.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.486" endtime="20201030 10:57:55.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.485" endtime="20201030 10:57:55.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.794" level="INFO">${RESULT} = [{'diff': 0.00016647199999999737}, {'diff': 0.00016536200000000223}, {'diff': 0.00016681999999999808}, {'diff': 0.00016620799999999755}, {'diff': 0.00016665299999999925}, {'diff': 0.000165125000000002...</msg>
<status status="PASS" starttime="20201030 10:57:55.791" endtime="20201030 10:57:55.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.798" level="INFO">${ACCURACY} = {'diff': [0.00016647199999999737, 0.00016536200000000223, 0.00016681999999999808, 0.00016620799999999755, 0.00016665299999999925, 0.00016512500000000208, 0.0001668189999999986, 0.00016576299999999933,...</msg>
<status status="PASS" starttime="20201030 10:57:55.795" endtime="20201030 10:57:55.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.803" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.802" endtime="20201030 10:57:55.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.805" level="INFO">VALUE: [0.00016647199999999737, 0.00016536200000000223, 0.00016681999999999808, 0.00016620799999999755, 0.00016665299999999925, 0.00016512500000000208, 0.0001668189999999986, 0.00016576299999999933, 0.00016549999999999898, 0.0001662220000000006, 0.00016513899999999818, 0.00016580499999999804, 0.00016530600000000048, 0.00016591700000000154, 0.00016690300000000297, 0.0001652089999999995, 0.0001664860000000004, 0.00016537499999999886, 0.00016530600000000048, 0.00016565300000000172, 0.00016609700000000047, 0.00016629199999999844, 0.0001662220000000006, 0.00016649999999999998, 0.0001662920000000019, 0.00016595800000000077, 0.00016532000000000005, 0.00016647200000000084, 0.00016595800000000077, 0.00016669399999999848, 0.00016565299999999825, 0.00016552799999999812, 0.00016666700000000229, 0.0001664310000000016, 0.00016519400000000045, 0.00016551400000000202, 0.0001655830000000004, 0.00016602699999999915, 0.0001669860000000009, 0.00016590199999999902, 0.00016563899999999868, 0.00016504200000000066, 0.0001664860000000004, 0.00016641699999999857, 0.00016594500000000068, 0.00016522299999999907, 0.00016591600000000206, 0.00016579099999999847, 0.0001660419999999982, 0.00016681999999999808]</msg>
<status status="PASS" starttime="20201030 10:57:55.804" endtime="20201030 10:57:55.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.799" endtime="20201030 10:57:55.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.811" endtime="20201030 10:57:55.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.810" endtime="20201030 10:57:55.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.808" endtime="20201030 10:57:55.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.446" endtime="20201030 10:57:55.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.446" endtime="20201030 10:57:55.832"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.840" endtime="20201030 10:57:55.862"></status>
</kw>
<msg timestamp="20201030 10:57:55.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.839" endtime="20201030 10:57:55.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.864" endtime="20201030 10:57:55.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.866" endtime="20201030 10:57:55.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.836" endtime="20201030 10:57:55.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.834" endtime="20201030 10:57:55.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.875" endtime="20201030 10:57:56.160"></status>
</kw>
<msg timestamp="20201030 10:57:56.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021559653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.874" endtime="20201030 10:57:56.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021559653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.165" endtime="20201030 10:57:56.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.173" endtime="20201030 10:57:56.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.871" endtime="20201030 10:57:56.175"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.869" endtime="20201030 10:57:56.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.179" level="INFO">${RESULT} = [{'diff': 0.0001674160000000001}, {'diff': 0.000168999999999999}, {'diff': 0.0001683749999999984}, {'diff': 0.00016813900000000118}, {'diff': 0.00016888900000000193}, {'diff': 0.00016765300000000025},...</msg>
<status status="PASS" starttime="20201030 10:57:56.176" endtime="20201030 10:57:56.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.184" level="INFO">${ACCURACY} = {'diff': [0.0001674160000000001, 0.000168999999999999, 0.0001683749999999984, 0.00016813900000000118, 0.00016888900000000193, 0.00016765300000000025, 0.00016759700000000197, 0.0001679030000000005, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:56.180" endtime="20201030 10:57:56.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.189" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.188" endtime="20201030 10:57:56.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.191" level="INFO">VALUE: [0.0001674160000000001, 0.000168999999999999, 0.0001683749999999984, 0.00016813900000000118, 0.00016888900000000193, 0.00016765300000000025, 0.00016759700000000197, 0.0001679030000000005, 0.00016791700000000007, 0.00016776299999999786, 0.00016725000000000073, 0.00016802800000000062, 0.00016902799999999815, 0.00016884699999999975, 0.00016886099999999932, 0.00016887500000000236, 0.000168999999999999, 0.00016866599999999787, 0.0001673610000000013, 0.00016880500000000104, 0.00016829199999999697, 0.00016855600000000026, 0.0001678749999999979, 0.00016830500000000054, 0.0001674860000000014, 0.00016727799999999987, 0.0001671250000000006, 0.0001671389999999967, 0.00016888899999999846, 0.00016745900000000175, 0.00016800000000000148, 0.0001677220000000021, 0.0001687359999999992, 0.00016787500000000136, 0.000167305999999999, 0.0001683190000000001, 0.00016788900000000093, 0.00016720799999999855, 0.00016813900000000118, 0.00016874999999999876, 0.00016888899999999846, 0.00016788900000000093, 0.0001677640000000008, 0.00016720799999999855, 0.0001682779999999974, 0.0001679030000000005, 0.0001678610000000018, 0.00016886099999999932, 0.0001675839999999984, 0.0001680420000000002]</msg>
<status status="PASS" starttime="20201030 10:57:56.190" endtime="20201030 10:57:56.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.185" endtime="20201030 10:57:56.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.196" endtime="20201030 10:57:56.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.194" endtime="20201030 10:57:56.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.193" endtime="20201030 10:57:56.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.832" endtime="20201030 10:57:56.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.832" endtime="20201030 10:57:56.216"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.225" endtime="20201030 10:57:56.248"></status>
</kw>
<msg timestamp="20201030 10:57:56.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.224" endtime="20201030 10:57:56.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.249" endtime="20201030 10:57:56.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.252" endtime="20201030 10:57:56.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.221" endtime="20201030 10:57:56.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.219" endtime="20201030 10:57:56.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.261" endtime="20201030 10:57:56.549"></status>
</kw>
<msg timestamp="20201030 10:57:56.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02202475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:56.259" endtime="20201030 10:57:56.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02202475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:56.553" endtime="20201030 10:57:56.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.561" endtime="20201030 10:57:56.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.257" endtime="20201030 10:57:56.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.255" endtime="20201030 10:57:56.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.567" level="INFO">${RESULT} = [{'diff': 0.0001706109999999976}, {'diff': 0.00016919500000000046}, {'diff': 0.00017072199999999815}, {'diff': 0.00017081899999999914}, {'diff': 0.00016998600000000044}, {'diff': 0.0001702779999999994...</msg>
<status status="PASS" starttime="20201030 10:57:56.564" endtime="20201030 10:57:56.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.571" level="INFO">${ACCURACY} = {'diff': [0.0001706109999999976, 0.00016919500000000046, 0.00017072199999999815, 0.00017081899999999914, 0.00016998600000000044, 0.0001702779999999994, 0.00016902799999999815, 0.00017005600000000176, ...</msg>
<status status="PASS" starttime="20201030 10:57:56.568" endtime="20201030 10:57:56.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.576" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.575" endtime="20201030 10:57:56.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.578" level="INFO">VALUE: [0.0001706109999999976, 0.00016919500000000046, 0.00017072199999999815, 0.00017081899999999914, 0.00016998600000000044, 0.0001702779999999994, 0.00016902799999999815, 0.00017005600000000176, 0.00016948699999999942, 0.00017030599999999854, 0.00016904100000000172, 0.00017, 0.0001696389999999992, 0.00016997300000000035, 0.00016998600000000044, 0.00016929100000000197, 0.00017056900000000236, 0.00016995799999999783, 0.0001699589999999973, 0.00016911099999999957, 0.00017086100000000132, 0.00017, 0.00016932000000000058, 0.0001703750000000004, 0.00016966699999999835, 0.0001706390000000002, 0.00017, 0.00017006900000000186, 0.0001694580000000008, 0.0001700689999999984, 0.00016947200000000037, 0.00016966700000000182, 0.000169306000000001, 0.00017043100000000214, 0.00016915299999999828, 0.0001705139999999966, 0.0001696389999999992, 0.00016948599999999994, 0.00017001400000000305, 0.00016998599999999697, 0.00017076400000000033, 0.0001700689999999984, 0.0001705420000000027, 0.00017044399999999876, 0.000170791, 0.00016947200000000037, 0.00017065299999999978, 0.00017036099999999735, 0.00016940299999999853, 0.00017099999999999754]</msg>
<status status="PASS" starttime="20201030 10:57:56.577" endtime="20201030 10:57:56.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.572" endtime="20201030 10:57:56.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.583" endtime="20201030 10:57:56.602"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.581" endtime="20201030 10:57:56.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.580" endtime="20201030 10:57:56.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.217" endtime="20201030 10:57:56.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.217" endtime="20201030 10:57:56.604"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.612" endtime="20201030 10:57:56.637"></status>
</kw>
<msg timestamp="20201030 10:57:56.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.611" endtime="20201030 10:57:56.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.638" endtime="20201030 10:57:56.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.641" endtime="20201030 10:57:56.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.608" endtime="20201030 10:57:56.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.606" endtime="20201030 10:57:56.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.650" endtime="20201030 10:57:56.935"></status>
</kw>
<msg timestamp="20201030 10:57:56.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02320025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:56.648" endtime="20201030 10:57:56.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02320025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:56.939" endtime="20201030 10:57:56.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.947" endtime="20201030 10:57:56.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.646" endtime="20201030 10:57:56.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.644" endtime="20201030 10:57:56.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.954" level="INFO">${RESULT} = [{'diff': 0.00017193100000000017}, {'diff': 0.00017218099999999695}, {'diff': 0.00017156999999999936}, {'diff': 0.0001719589999999993}, {'diff': 0.00017231899999999717}, {'diff': 0.0001729720000000004...</msg>
<status status="PASS" starttime="20201030 10:57:56.951" endtime="20201030 10:57:56.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.958" level="INFO">${ACCURACY} = {'diff': [0.00017193100000000017, 0.00017218099999999695, 0.00017156999999999936, 0.0001719589999999993, 0.00017231899999999717, 0.0001729720000000004, 0.00017255499999999785, 0.00017216700000000085, ...</msg>
<status status="PASS" starttime="20201030 10:57:56.955" endtime="20201030 10:57:56.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.962" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.961" endtime="20201030 10:57:56.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.964" level="INFO">VALUE: [0.00017193100000000017, 0.00017218099999999695, 0.00017156999999999936, 0.0001719589999999993, 0.00017231899999999717, 0.0001729720000000004, 0.00017255499999999785, 0.00017216700000000085, 0.0001716109999999986, 0.00017254200000000122, 0.00017281900000000114, 0.0001727499999999993, 0.000172791999999998, 0.00017194400000000026, 0.00017148600000000194, 0.00017136100000000182, 0.00017222199999999965, 0.00017291699999999813, 0.00017179200000000047, 0.00017238900000000196, 0.0001725000000000025, 0.00017168000000000044, 0.0001729720000000004, 0.00017115300000000028, 0.00017177799999999743, 0.0001725560000000008, 0.00017131899999999964, 0.00017134700000000225, 0.0001722499999999988, 0.0001710689999999994, 0.00017140300000000053, 0.00017236099999999935, 0.00017233399999999968, 0.00017193100000000017, 0.00017151400000000108, 0.0001723750000000024, 0.0001713750000000014, 0.00017179200000000047, 0.00017197299999999888, 0.00017280500000000157, 0.0001715689999999999, 0.00017163899999999774, 0.00017254200000000122, 0.00017145900000000228, 0.0001723750000000024, 0.0001727499999999993, 0.00017177800000000437, 0.00017223599999999922, 0.00017105600000000276, 0.00017223599999999922]</msg>
<status status="PASS" starttime="20201030 10:57:56.963" endtime="20201030 10:57:56.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.959" endtime="20201030 10:57:56.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.970" endtime="20201030 10:57:56.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.969" endtime="20201030 10:57:56.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.968" endtime="20201030 10:57:56.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.605" endtime="20201030 10:57:56.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.604" endtime="20201030 10:57:56.991"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.999" endtime="20201030 10:57:57.023"></status>
</kw>
<msg timestamp="20201030 10:57:57.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.998" endtime="20201030 10:57:57.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.025" endtime="20201030 10:57:57.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.027" endtime="20201030 10:57:57.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.995" endtime="20201030 10:57:57.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.993" endtime="20201030 10:57:57.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.036" endtime="20201030 10:57:57.324"></status>
</kw>
<msg timestamp="20201030 10:57:57.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.034" endtime="20201030 10:57:57.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.333" endtime="20201030 10:57:57.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.350" endtime="20201030 10:57:57.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.032" endtime="20201030 10:57:57.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.030" endtime="20201030 10:57:57.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.364" level="INFO">${RESULT} = [{'diff': 0.000174276999999997}, {'diff': 0.0001745140000000006}, {'diff': 0.000174195000000002}, {'diff': 0.00017436100000000135}, {'diff': 0.0001746379999999978}, {'diff': 0.0001739720000000014}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:57.357" endtime="20201030 10:57:57.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:57.374" level="INFO">${ACCURACY} = {'diff': [0.000174276999999997, 0.0001745140000000006, 0.000174195000000002, 0.00017436100000000135, 0.0001746379999999978, 0.0001739720000000014, 0.00017452800000000018, 0.00017307000000000086, 0.000...</msg>
<status status="PASS" starttime="20201030 10:57:57.366" endtime="20201030 10:57:57.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.383" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 10:57:57.381" endtime="20201030 10:57:57.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.388" level="INFO">VALUE: [0.000174276999999997, 0.0001745140000000006, 0.000174195000000002, 0.00017436100000000135, 0.0001746379999999978, 0.0001739720000000014, 0.00017452800000000018, 0.00017307000000000086, 0.00017409699999999806, 0.0001743890000000005, 0.00017470900000000206, 0.00017420799999999861, 0.00017369399999999854, 0.0001740829999999985, 0.00017330600000000154, 0.00017351300000000014, 0.00017381899999999867, 0.00017486099999999838, 0.0001740690000000024, 0.00017480599999999957, 0.00017412500000000067, 0.0001747500000000013, 0.000173889, 0.00017373600000000072, 0.00017392999999999922, 0.00017408400000000143, 0.00017444499999999877, 0.0001748330000000027, 0.00017437500000000092, 0.00017495799999999936, 0.00017366700000000235, 0.00017323600000000022, 0.00017427799999999993, 0.0001741379999999973, 0.00017354099999999928, 0.00017313899999999924, 0.00017369499999999802, 0.00017406899999999892, 0.00017400000000000054, 0.00017306899999999792, 0.00017370800000000158, 0.000174582999999999, 0.00017455599999999932, 0.00017322199999999718, 0.0001742089999999981, 0.00017413899999999677, 0.00017354099999999928, 0.00017333299999999774, 0.0001741110000000011, 0.00017372200000000115]</msg>
<status status="PASS" starttime="20201030 10:57:57.385" endtime="20201030 10:57:57.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.376" endtime="20201030 10:57:57.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.398" endtime="20201030 10:57:57.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.395" endtime="20201030 10:57:57.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.393" endtime="20201030 10:57:57.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.992" endtime="20201030 10:57:57.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.991" endtime="20201030 10:57:57.422"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.432" endtime="20201030 10:57:57.456"></status>
</kw>
<msg timestamp="20201030 10:57:57.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.431" endtime="20201030 10:57:57.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.457" endtime="20201030 10:57:57.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.460" endtime="20201030 10:57:57.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.428" endtime="20201030 10:57:57.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.426" endtime="20201030 10:57:57.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.469" endtime="20201030 10:57:57.756"></status>
</kw>
<msg timestamp="20201030 10:57:57.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025754389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025930681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.467" endtime="20201030 10:57:57.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025754389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025930681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.760" endtime="20201030 10:57:57.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.768" endtime="20201030 10:57:57.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.465" endtime="20201030 10:57:57.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.463" endtime="20201030 10:57:57.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.774" level="INFO">${RESULT} = [{'diff': 0.0001762920000000015}, {'diff': 0.00017669400000000154}, {'diff': 0.00017613899999999877}, {'diff': 0.0001750140000000011}, {'diff': 0.00017649999999999957}, {'diff': 0.00017568100000000045...</msg>
<status status="PASS" starttime="20201030 10:57:57.771" endtime="20201030 10:57:57.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:57.778" level="INFO">${ACCURACY} = {'diff': [0.0001762920000000015, 0.00017669400000000154, 0.00017613899999999877, 0.0001750140000000011, 0.00017649999999999957, 0.00017568100000000045, 0.000176276999999999, 0.00017620800000000061, 0....</msg>
<status status="PASS" starttime="20201030 10:57:57.775" endtime="20201030 10:57:57.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.783" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 10:57:57.782" endtime="20201030 10:57:57.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.785" level="INFO">VALUE: [0.0001762920000000015, 0.00017669400000000154, 0.00017613899999999877, 0.0001750140000000011, 0.00017649999999999957, 0.00017568100000000045, 0.000176276999999999, 0.00017620800000000061, 0.00017637499999999945, 0.00017606900000000092, 0.00017677799999999896, 0.0001761249999999992, 0.000175889000000002, 0.00017640300000000206, 0.00017587500000000242, 0.00017651399999999914, 0.0001764029999999986, 0.00017511099999999863, 0.00017587499999999895, 0.00017691599999999919, 0.00017572199999999968, 0.0001752920000000005, 0.00017530600000000007, 0.0001767090000000006, 0.00017620800000000061, 0.00017577800000000143, 0.00017647200000000043, 0.00017541700000000063, 0.00017686100000000038, 0.00017586199999999885, 0.0001760270000000022, 0.00017583300000000024, 0.00017513899999999777, 0.00017655600000000132, 0.00017580600000000057, 0.000175277999999994, 0.00017690199999999962, 0.00017520800000000308, 0.00017580600000000057, 0.00017632000000000064, 0.00017554200000000075, 0.0001754029999999976, 0.00017645800000000433, 0.00017587499999999895, 0.00017600000000000254, 0.00017602799999999474, 0.000176179999999998, 0.0001751249999999982, 0.0001756799999999975, 0.00017570799999999664]</msg>
<status status="PASS" starttime="20201030 10:57:57.784" endtime="20201030 10:57:57.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.779" endtime="20201030 10:57:57.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.790" endtime="20201030 10:57:57.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.788" endtime="20201030 10:57:57.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.787" endtime="20201030 10:57:57.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.424" endtime="20201030 10:57:57.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.423" endtime="20201030 10:57:57.810"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.819" endtime="20201030 10:57:57.843"></status>
</kw>
<msg timestamp="20201030 10:57:57.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.817" endtime="20201030 10:57:57.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.844" endtime="20201030 10:57:57.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.847" endtime="20201030 10:57:57.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.815" endtime="20201030 10:57:57.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.813" endtime="20201030 10:57:57.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.855" endtime="20201030 10:57:58.144"></status>
</kw>
<msg timestamp="20201030 10:57:58.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.854" endtime="20201030 10:57:58.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.153" endtime="20201030 10:57:58.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.171" endtime="20201030 10:57:58.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.851" endtime="20201030 10:57:58.175"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.850" endtime="20201030 10:57:58.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.184" level="INFO">${RESULT} = [{'diff': 0.0001787640000000014}, {'diff': 0.00017722199999999771}, {'diff': 0.00017730499999999913}, {'diff': 0.0001780410000000003}, {'diff': 0.00017788900000000052}, {'diff': 0.0001783470000000023}...</msg>
<status status="PASS" starttime="20201030 10:57:58.178" endtime="20201030 10:57:58.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:58.193" level="INFO">${ACCURACY} = {'diff': [0.0001787640000000014, 0.00017722199999999771, 0.00017730499999999913, 0.0001780410000000003, 0.00017788900000000052, 0.0001783470000000023, 0.00017838899999999755, 0.00017720799999999814, 0...</msg>
<status status="PASS" starttime="20201030 10:57:58.186" endtime="20201030 10:57:58.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.202" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 10:57:58.200" endtime="20201030 10:57:58.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.207" level="INFO">VALUE: [0.0001787640000000014, 0.00017722199999999771, 0.00017730499999999913, 0.0001780410000000003, 0.00017788900000000052, 0.0001783470000000023, 0.00017838899999999755, 0.00017720799999999814, 0.00017869400000000008, 0.00017800000000000107, 0.0001776250000000007, 0.00017823600000000175, 0.00017800000000000107, 0.00017877699999999802, 0.00017893100000000023, 0.00017851400000000114, 0.00017879200000000053, 0.00017780600000000257, 0.0001788060000000001, 0.0001788190000000002, 0.00017716700000000238, 0.00017744399999999882, 0.00017763900000000027, 0.00017841700000000016, 0.00017820799999999914, 0.00017722200000000118, 0.00017761099999999766, 0.0001783479999999983, 0.00017804199999999978, 0.00017780499999999963, 0.00017897199999999946, 0.00017779100000000006, 0.0001783470000000023, 0.00017772300000000116, 0.00017747299999999744, 0.00017701399999999964, 0.00017805499999999988, 0.00017706899999999845, 0.0001778059999999991, 0.00017782000000000214, 0.00017716599999999944, 0.00017769399999999907, 0.00017876399999999792, 0.00017874999999999835, 0.00017747199999999796, 0.00017704200000000225, 0.00017840200000000112, 0.00017866600000000094, 0.0001784030000000006, 0.00017801399999999717]</msg>
<status status="PASS" starttime="20201030 10:57:58.204" endtime="20201030 10:57:58.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.195" endtime="20201030 10:57:58.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.219" endtime="20201030 10:57:58.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.216" endtime="20201030 10:57:58.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.213" endtime="20201030 10:57:58.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.811" endtime="20201030 10:57:58.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.811" endtime="20201030 10:57:58.240"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.248" endtime="20201030 10:57:58.271"></status>
</kw>
<msg timestamp="20201030 10:57:58.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.247" endtime="20201030 10:57:58.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.273" endtime="20201030 10:57:58.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.275" endtime="20201030 10:57:58.277"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.244" endtime="20201030 10:57:58.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.242" endtime="20201030 10:57:58.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.284" endtime="20201030 10:57:58.570"></status>
</kw>
<msg timestamp="20201030 10:57:58.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.283" endtime="20201030 10:57:58.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.574" endtime="20201030 10:57:58.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.582" endtime="20201030 10:57:58.584"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.280" endtime="20201030 10:57:58.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.279" endtime="20201030 10:57:58.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.589" level="INFO">${RESULT} = [{'diff': 0.0001804450000000013}, {'diff': 0.00017995799999999743}, {'diff': 0.0001808329999999983}, {'diff': 0.00018032000000000117}, {'diff': 0.00017954200000000128}, {'diff': 0.000179180000000001},...</msg>
<status status="PASS" starttime="20201030 10:57:58.586" endtime="20201030 10:57:58.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:58.594" level="INFO">${ACCURACY} = {'diff': [0.0001804450000000013, 0.00017995799999999743, 0.0001808329999999983, 0.00018032000000000117, 0.00017954200000000128, 0.000179180000000001, 0.0001799580000000009, 0.00017938899999999855, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:58.590" endtime="20201030 10:57:58.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.598" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 10:57:58.597" endtime="20201030 10:57:58.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.600" level="INFO">VALUE: [0.0001804450000000013, 0.00017995799999999743, 0.0001808329999999983, 0.00018032000000000117, 0.00017954200000000128, 0.000179180000000001, 0.0001799580000000009, 0.00017938899999999855, 0.00018034699999999737, 0.00018094399999999886, 0.00018070900000000112, 0.00017966600000000194, 0.00017974999999999935, 0.00018015299999999887, 0.00018084700000000134, 0.00017991700000000166, 0.00017995900000000037, 0.00018075000000000035, 0.00018001399999999917, 0.00018080499999999916, 0.00018023600000000028, 0.00018006899999999798, 0.0001796519999999989, 0.00017934699999999984, 0.00017952799999999824, 0.0001796250000000027, 0.00018087500000000048, 0.00017934699999999984, 0.00017930499999999766, 0.00018047200000000096, 0.0001795970000000001, 0.0001802230000000002, 0.00017912499999999873, 0.00018033300000000127, 0.00018094400000000233, 0.00017920800000000014, 0.00017969400000000108, 0.00018051399999999967, 0.00018094499999999833, 0.00018054199999999881, 0.00017956900000000095, 0.00017934699999999984, 0.00017962499999999923, 0.00018032000000000117, 0.0001793479999999993, 0.00017988899999999905, 0.00017947199999999996, 0.00017995799999999743, 0.00018022200000000071, 0.00018019500000000105]</msg>
<status status="PASS" starttime="20201030 10:57:58.599" endtime="20201030 10:57:58.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.595" endtime="20201030 10:57:58.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.605" endtime="20201030 10:57:58.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.604" endtime="20201030 10:57:58.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.603" endtime="20201030 10:57:58.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.241" endtime="20201030 10:57:58.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.240" endtime="20201030 10:57:58.626"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.635" endtime="20201030 10:57:58.658"></status>
</kw>
<msg timestamp="20201030 10:57:58.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.633" endtime="20201030 10:57:58.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.660" endtime="20201030 10:57:58.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.662" endtime="20201030 10:57:58.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.630" endtime="20201030 10:57:58.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.628" endtime="20201030 10:57:58.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.671" endtime="20201030 10:57:58.962"></status>
</kw>
<msg timestamp="20201030 10:57:58.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02195025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:58.669" endtime="20201030 10:57:58.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02195025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:58.971" endtime="20201030 10:57:58.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.989" endtime="20201030 10:57:58.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.667" endtime="20201030 10:57:58.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.665" endtime="20201030 10:57:58.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.003" level="INFO">${RESULT} = [{'diff': 0.00018261100000000266}, {'diff': 0.00018197200000000247}, {'diff': 0.00018286099999999944}, {'diff': 0.00018243000000000079}, {'diff': 0.0001823749999999985}, {'diff': 0.0001827780000000015...</msg>
<status status="PASS" starttime="20201030 10:57:58.996" endtime="20201030 10:57:59.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.011" level="INFO">${ACCURACY} = {'diff': [0.00018261100000000266, 0.00018197200000000247, 0.00018286099999999944, 0.00018243000000000079, 0.0001823749999999985, 0.0001827780000000015, 0.00018163899999999733, 0.00018197300000000194, ...</msg>
<status status="PASS" starttime="20201030 10:57:59.005" endtime="20201030 10:57:59.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.020" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.018" endtime="20201030 10:57:59.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.025" level="INFO">VALUE: [0.00018261100000000266, 0.00018197200000000247, 0.00018286099999999944, 0.00018243000000000079, 0.0001823749999999985, 0.0001827780000000015, 0.00018163899999999733, 0.00018197300000000194, 0.00018241699999999722, 0.00018198600000000204, 0.00018184699999999887, 0.00018140300000000012, 0.00018270800000000018, 0.00018140200000000065, 0.00018255499999999744, 0.0001828330000000003, 0.00018279200000000106, 0.0001818060000000031, 0.00018165300000000037, 0.00018213799999999836, 0.00018243100000000026, 0.00018198599999999857, 0.00018154199999999981, 0.00018120899999999815, 0.00018261100000000266, 0.00018166600000000047, 0.00018181899999999973, 0.00018244400000000036, 0.00018301400000000217, 0.00018137500000000098, 0.00018262499999999876, 0.0001815000000000011, 0.00018198600000000204, 0.00018101400000000017, 0.00018284800000000281, 0.00018298599999999957, 0.00018277700000000202, 0.0001820139999999977, 0.00018184699999999887, 0.00018104199999999931, 0.00018229200000000056, 0.00018256999999999995, 0.0001815000000000011, 0.00018258300000000005, 0.00018269500000000008, 0.00018137500000000098, 0.0001819589999999989, 0.0001823749999999985, 0.0001819859999999951, 0.00018201400000000117]</msg>
<status status="PASS" starttime="20201030 10:57:59.022" endtime="20201030 10:57:59.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.013" endtime="20201030 10:57:59.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.035" endtime="20201030 10:57:59.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.032" endtime="20201030 10:57:59.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.030" endtime="20201030 10:57:59.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.627" endtime="20201030 10:57:59.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.626" endtime="20201030 10:57:59.057"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.065" endtime="20201030 10:57:59.090"></status>
</kw>
<msg timestamp="20201030 10:57:59.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.064" endtime="20201030 10:57:59.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.092" endtime="20201030 10:57:59.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.094" endtime="20201030 10:57:59.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.061" endtime="20201030 10:57:59.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.059" endtime="20201030 10:57:59.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.103" endtime="20201030 10:57:59.388"></status>
</kw>
<msg timestamp="20201030 10:57:59.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.102" endtime="20201030 10:57:59.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.392" endtime="20201030 10:57:59.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.400" endtime="20201030 10:57:59.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.099" endtime="20201030 10:57:59.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.098" endtime="20201030 10:57:59.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.407" level="INFO">${RESULT} = [{'diff': 0.00018458299999999858}, {'diff': 0.00018338899999999908}, {'diff': 0.0001831529999999984}, {'diff': 0.00018487499999999754}, {'diff': 0.00018477800000000003}, {'diff': 0.0001838050000000021...</msg>
<status status="PASS" starttime="20201030 10:57:59.404" endtime="20201030 10:57:59.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.411" level="INFO">${ACCURACY} = {'diff': [0.00018458299999999858, 0.00018338899999999908, 0.0001831529999999984, 0.00018487499999999754, 0.00018477800000000003, 0.00018380500000000216, 0.0001848200000000022, 0.00018331900000000123, ...</msg>
<status status="PASS" starttime="20201030 10:57:59.408" endtime="20201030 10:57:59.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.415" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.414" endtime="20201030 10:57:59.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.418" level="INFO">VALUE: [0.00018458299999999858, 0.00018338899999999908, 0.0001831529999999984, 0.00018487499999999754, 0.00018477800000000003, 0.00018380500000000216, 0.0001848200000000022, 0.00018331900000000123, 0.00018357000000000095, 0.00018336099999999994, 0.00018313899999999883, 0.00018472200000000175, 0.0001836110000000002, 0.00018363899999999933, 0.0001838339999999973, 0.0001846249999999973, 0.000184278000000003, 0.00018445800000000193, 0.00018441699999999922, 0.00018416699999999897, 0.00018397300000000047, 0.00018445799999999846, 0.0001842079999999982, 0.00018398600000000057, 0.00018430600000000213, 0.00018318099999999754, 0.0001830979999999996, 0.00018352799999999878, 0.00018416700000000244, 0.0001838200000000012, 0.00018430600000000213, 0.00018422300000000072, 0.0001840139999999997, 0.00018358300000000105, 0.00018331900000000123, 0.00018406999999999799, 0.00018400000000000014, 0.0001841529999999994, 0.0001843049999999992, 0.00018405600000000188, 0.00018490300000000015, 0.0001843750000000005, 0.00018363899999999933, 0.00018447200000000497, 0.00018440299999999965, 0.00018397200000000447, 0.0001849859999999981, 0.00018365300000000584, 0.00018415199999999993, 0.000183875]</msg>
<status status="PASS" starttime="20201030 10:57:59.416" endtime="20201030 10:57:59.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.411" endtime="20201030 10:57:59.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.423" endtime="20201030 10:57:59.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.422" endtime="20201030 10:57:59.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.421" endtime="20201030 10:57:59.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.058" endtime="20201030 10:57:59.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.057" endtime="20201030 10:57:59.444"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.452" endtime="20201030 10:57:59.476"></status>
</kw>
<msg timestamp="20201030 10:57:59.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.451" endtime="20201030 10:57:59.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.478" endtime="20201030 10:57:59.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.481" endtime="20201030 10:57:59.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.448" endtime="20201030 10:57:59.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.446" endtime="20201030 10:57:59.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.490" endtime="20201030 10:57:59.782"></status>
</kw>
<msg timestamp="20201030 10:57:59.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.489" endtime="20201030 10:57:59.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.791" endtime="20201030 10:57:59.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.808" endtime="20201030 10:57:59.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.486" endtime="20201030 10:57:59.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.484" endtime="20201030 10:57:59.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.822" level="INFO">${RESULT} = [{'diff': 0.00018508399999999856}, {'diff': 0.00018649999999999917}, {'diff': 0.00018669399999999767}, {'diff': 0.00018576399999999799}, {'diff': 0.00018663899999999886}, {'diff': 0.000185375000000001...</msg>
<status status="PASS" starttime="20201030 10:57:59.815" endtime="20201030 10:57:59.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.832" level="INFO">${ACCURACY} = {'diff': [0.00018508399999999856, 0.00018649999999999917, 0.00018669399999999767, 0.00018576399999999799, 0.00018663899999999886, 0.0001853750000000015, 0.00018697200000000053, 0.00018566700000000047,...</msg>
<status status="PASS" starttime="20201030 10:57:59.824" endtime="20201030 10:57:59.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.841" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.839" endtime="20201030 10:57:59.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.845" level="INFO">VALUE: [0.00018508399999999856, 0.00018649999999999917, 0.00018669399999999767, 0.00018576399999999799, 0.00018663899999999886, 0.0001853750000000015, 0.00018697200000000053, 0.00018566700000000047, 0.00018684699999999693, 0.00018559699999999915, 0.00018538900000000108, 0.00018642999999999785, 0.00018551399999999774, 0.00018697200000000053, 0.0001869310000000013, 0.0001861530000000014, 0.00018609799999999913, 0.00018687499999999954, 0.00018629199999999763, 0.00018624999999999892, 0.00018511200000000116, 0.00018613900000000183, 0.0001859859999999991, 0.0001856530000000009, 0.00018625000000000239, 0.0001853889999999976, 0.00018669399999999767, 0.00018604100000000137, 0.00018622199999999978, 0.00018651399999999874, 0.00018523600000000182, 0.0001866249999999993, 0.0001855279999999973, 0.0001854859999999986, 0.00018688900000000258, 0.00018561099999999872, 0.000185875000000002, 0.0001861249999999988, 0.00018697200000000053, 0.00018534700000000237, 0.0001860140000000017, 0.00018548699999999807, 0.00018559699999999915, 0.000186666000000002, 0.00018633300000000033, 0.00018590300000000115, 0.00018637499999999904, 0.00018670900000000365, 0.00018549999999999817, 0.00018606900000000398]</msg>
<status status="PASS" starttime="20201030 10:57:59.844" endtime="20201030 10:57:59.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.834" endtime="20201030 10:57:59.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.850" endtime="20201030 10:57:59.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.849" endtime="20201030 10:57:59.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.848" endtime="20201030 10:57:59.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.445" endtime="20201030 10:57:59.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.444" endtime="20201030 10:57:59.871"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.880" endtime="20201030 10:57:59.904"></status>
</kw>
<msg timestamp="20201030 10:57:59.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.878" endtime="20201030 10:57:59.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.905" endtime="20201030 10:57:59.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.908" endtime="20201030 10:57:59.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.875" endtime="20201030 10:57:59.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.873" endtime="20201030 10:57:59.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.916" endtime="20201030 10:58:00.205"></status>
</kw>
<msg timestamp="20201030 10:58:00.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.915" endtime="20201030 10:58:00.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.209" endtime="20201030 10:58:00.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.217" endtime="20201030 10:58:00.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.912" endtime="20201030 10:58:00.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.911" endtime="20201030 10:58:00.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.223" level="INFO">${RESULT} = [{'diff': 0.00018709700000000065}, {'diff': 0.00018722200000000078}, {'diff': 0.00018887499999999807}, {'diff': 0.00018713899999999936}, {'diff': 0.0001884860000000016}, {'diff': 0.0001874439999999984...</msg>
<status status="PASS" starttime="20201030 10:58:00.220" endtime="20201030 10:58:00.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:00.227" level="INFO">${ACCURACY} = {'diff': [0.00018709700000000065, 0.00018722200000000078, 0.00018887499999999807, 0.00018713899999999936, 0.0001884860000000016, 0.00018744399999999842, 0.00018845800000000246, 0.0001888340000000023, ...</msg>
<status status="PASS" starttime="20201030 10:58:00.224" endtime="20201030 10:58:00.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.232" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 10:58:00.231" endtime="20201030 10:58:00.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.234" level="INFO">VALUE: [0.00018709700000000065, 0.00018722200000000078, 0.00018887499999999807, 0.00018713899999999936, 0.0001884860000000016, 0.00018744399999999842, 0.00018845800000000246, 0.0001888340000000023, 0.00018823600000000135, 0.00018765299999999943, 0.00018844399999999942, 0.00018897200000000253, 0.00018768099999999857, 0.0001878059999999987, 0.00018708300000000108, 0.00018780499999999922, 0.00018702800000000228, 0.0001889860000000021, 0.00018792999999999935, 0.00018851399999999727, 0.000188457999999999, 0.00018768099999999857, 0.00018754200000000235, 0.0001888890000000011, 0.00018752699999999983, 0.0001871249999999998, 0.00018897200000000253, 0.00018822200000000178, 0.00018893099999999982, 0.0001870409999999989, 0.0001876530000000029, 0.00018730499999999872, 0.0001883189999999993, 0.00018831999999999877, 0.00018750000000000017, 0.00018765199999999996, 0.0001888189999999998, 0.0001879579999999985, 0.00018872200000000228, 0.00018756999999999802, 0.0001871669999999985, 0.00018866600000000053, 0.00018766700000000247, 0.00018795800000000196, 0.0001878609999999975, 0.000187666999999999, 0.00018838900000000408, 0.000188764000000001, 0.0001883189999999993, 0.0001877080000000017]</msg>
<status status="PASS" starttime="20201030 10:58:00.233" endtime="20201030 10:58:00.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.228" endtime="20201030 10:58:00.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.239" endtime="20201030 10:58:00.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.238" endtime="20201030 10:58:00.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.236" endtime="20201030 10:58:00.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.872" endtime="20201030 10:58:00.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.871" endtime="20201030 10:58:00.260"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.268" endtime="20201030 10:58:00.293"></status>
</kw>
<msg timestamp="20201030 10:58:00.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.267" endtime="20201030 10:58:00.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.295" endtime="20201030 10:58:00.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.297" endtime="20201030 10:58:00.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.264" endtime="20201030 10:58:00.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.262" endtime="20201030 10:58:00.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.306" endtime="20201030 10:58:00.600"></status>
</kw>
<msg timestamp="20201030 10:58:00.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02291325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:00.305" endtime="20201030 10:58:00.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02291325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:00.609" endtime="20201030 10:58:00.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.626" endtime="20201030 10:58:00.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.302" endtime="20201030 10:58:00.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.300" endtime="20201030 10:58:00.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.640" level="INFO">${RESULT} = [{'diff': 0.000190458000000001}, {'diff': 0.0001898890000000021}, {'diff': 0.00018988899999999864}, {'diff': 0.0001898479999999994}, {'diff': 0.00018931999999999977}, {'diff': 0.00019072300000000028},...</msg>
<status status="PASS" starttime="20201030 10:58:00.633" endtime="20201030 10:58:00.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:00.648" level="INFO">${ACCURACY} = {'diff': [0.000190458000000001, 0.0001898890000000021, 0.00018988899999999864, 0.0001898479999999994, 0.00018931999999999977, 0.00019072300000000028, 0.0001895549999999975, 0.00019088899999999964, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:00.642" endtime="20201030 10:58:00.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.656" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 10:58:00.655" endtime="20201030 10:58:00.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.658" level="INFO">VALUE: [0.000190458000000001, 0.0001898890000000021, 0.00018988899999999864, 0.0001898479999999994, 0.00018931999999999977, 0.00019072300000000028, 0.0001895549999999975, 0.00019088899999999964, 0.00018984699999999993, 0.00018938899999999814, 0.0001907779999999991, 0.0001910000000000002, 0.00018998599999999963, 0.000190458000000001, 0.00018906999999999952, 0.00018933299999999986, 0.0001905830000000011, 0.0001895280000000013, 0.00018983399999999984, 0.00019079199999999866, 0.0001899029999999982, 0.0001891120000000017, 0.00018970800000000024, 0.00019087500000000007, 0.00018973599999999938, 0.00018923599999999888, 0.00018929200000000063, 0.00018931999999999977, 0.00018962499999999882, 0.0001891670000000005, 0.0001904029999999987, 0.0001896250000000023, 0.00019001400000000224, 0.0001890280000000008, 0.00018948599999999913, 0.0001891250000000018, 0.0001898890000000021, 0.00019012499999999932, 0.00019061100000000025, 0.00019070800000000124, 0.000190458000000001, 0.00018998700000000257, 0.00018897200000000253, 0.00018984699999999993, 0.00019030499999999478, 0.0001901389999999989, 0.00019015299999999846, 0.00019038799999999967, 0.0001894719999999961, 0.0001906389999999994]</msg>
<status status="PASS" starttime="20201030 10:58:00.657" endtime="20201030 10:58:00.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.650" endtime="20201030 10:58:00.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.670" endtime="20201030 10:58:00.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.668" endtime="20201030 10:58:00.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.667" endtime="20201030 10:58:00.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.260" endtime="20201030 10:58:00.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.260" endtime="20201030 10:58:00.690"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.699" endtime="20201030 10:58:00.724"></status>
</kw>
<msg timestamp="20201030 10:58:00.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.697" endtime="20201030 10:58:00.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.726" endtime="20201030 10:58:00.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.728" endtime="20201030 10:58:00.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.695" endtime="20201030 10:58:00.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.693" endtime="20201030 10:58:00.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.737" endtime="20201030 10:58:01.022"></status>
</kw>
<msg timestamp="20201030 10:58:01.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.736" endtime="20201030 10:58:01.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.026" endtime="20201030 10:58:01.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.034" endtime="20201030 10:58:01.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.733" endtime="20201030 10:58:01.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.731" endtime="20201030 10:58:01.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.041" level="INFO">${RESULT} = [{'diff': 0.00019176400000000052}, {'diff': 0.00019201400000000077}, {'diff': 0.00019237500000000157}, {'diff': 0.00019276400000000152}, {'diff': 0.00019130499999999925}, {'diff': 0.000192736000000002...</msg>
<status status="PASS" starttime="20201030 10:58:01.038" endtime="20201030 10:58:01.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.046" level="INFO">${ACCURACY} = {'diff': [0.00019176400000000052, 0.00019201400000000077, 0.00019237500000000157, 0.00019276400000000152, 0.00019130499999999925, 0.00019273600000000238, 0.00019230599999999973, 0.00019233399999999887...</msg>
<status status="PASS" starttime="20201030 10:58:01.042" endtime="20201030 10:58:01.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.050" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.049" endtime="20201030 10:58:01.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.052" level="INFO">VALUE: [0.00019176400000000052, 0.00019201400000000077, 0.00019237500000000157, 0.00019276400000000152, 0.00019130499999999925, 0.00019273600000000238, 0.00019230599999999973, 0.00019233399999999887, 0.00019170899999999824, 0.0001911389999999999, 0.00019180499999999975, 0.0001911809999999986, 0.00019234699999999896, 0.00019188900000000064, 0.00019102799999999934, 0.00019293000000000088, 0.00019101399999999977, 0.00019155599999999898, 0.00019130599999999873, 0.00019175000000000095, 0.00019276299999999857, 0.00019143100000000232, 0.0001917780000000001, 0.0001926390000000014, 0.00019141699999999928, 0.00019194399999999945, 0.0001911670000000025, 0.00019218000000000013, 0.0001917090000000017, 0.00019132000000000177, 0.00019188899999999717, 0.00019161099999999778, 0.00019276400000000152, 0.0001926940000000002, 0.0001910419999999989, 0.0001927359999999989, 0.0001919580000000025, 0.00019281899999999685, 0.00019202800000000034, 0.00019213899999999742, 0.00019231899999999982, 0.00019106900000000204, 0.0001928199999999998, 0.0001912220000000013, 0.00019125000000000045, 0.0001913749999999971, 0.0001928190000000038, 0.0001928190000000038, 0.00019295800000000002, 0.00019233400000000234]</msg>
<status status="PASS" starttime="20201030 10:58:01.051" endtime="20201030 10:58:01.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.046" endtime="20201030 10:58:01.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.057" endtime="20201030 10:58:01.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.056" endtime="20201030 10:58:01.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.055" endtime="20201030 10:58:01.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.691" endtime="20201030 10:58:01.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.691" endtime="20201030 10:58:01.078"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.086" endtime="20201030 10:58:01.111"></status>
</kw>
<msg timestamp="20201030 10:58:01.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.085" endtime="20201030 10:58:01.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.113" endtime="20201030 10:58:01.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.115" endtime="20201030 10:58:01.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.082" endtime="20201030 10:58:01.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.080" endtime="20201030 10:58:01.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.124" endtime="20201030 10:58:01.428"></status>
</kw>
<msg timestamp="20201030 10:58:01.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.122" endtime="20201030 10:58:01.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.438" endtime="20201030 10:58:01.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.457" endtime="20201030 10:58:01.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.120" endtime="20201030 10:58:01.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.118" endtime="20201030 10:58:01.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.468" level="INFO">${RESULT} = [{'diff': 0.0001930969999999997}, {'diff': 0.00019334799999999944}, {'diff': 0.00019362499999999935}, {'diff': 0.0001945139999999998}, {'diff': 0.00019472200000000134}, {'diff': 0.00019316700000000103...</msg>
<status status="PASS" starttime="20201030 10:58:01.464" endtime="20201030 10:58:01.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.472" level="INFO">${ACCURACY} = {'diff': [0.0001930969999999997, 0.00019334799999999944, 0.00019362499999999935, 0.0001945139999999998, 0.00019472200000000134, 0.00019316700000000103, 0.0001942919999999987, 0.00019317999999999766, 0...</msg>
<status status="PASS" starttime="20201030 10:58:01.469" endtime="20201030 10:58:01.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.476" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.475" endtime="20201030 10:58:01.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.479" level="INFO">VALUE: [0.0001930969999999997, 0.00019334799999999944, 0.00019362499999999935, 0.0001945139999999998, 0.00019472200000000134, 0.00019316700000000103, 0.0001942919999999987, 0.00019317999999999766, 0.00019388899999999917, 0.00019408299999999767, 0.00019484700000000146, 0.00019363899999999892, 0.00019307000000000005, 0.00019305499999999753, 0.00019348599999999966, 0.00019395800000000102, 0.00019440299999999924, 0.00019438899999999967, 0.00019470899999999777, 0.00019316700000000103, 0.00019481900000000232, 0.00019468099999999863, 0.00019326299999999907, 0.0001932229999999993, 0.00019391599999999884, 0.00019427799999999912, 0.00019316700000000103, 0.0001942919999999987, 0.0001943750000000001, 0.00019391700000000178, 0.00019458300000000164, 0.00019316699999999756, 0.00019362500000000282, 0.00019422200000000084, 0.00019412499999999985, 0.00019381900000000132, 0.0001932359999999994, 0.0001943750000000001, 0.00019462500000000035, 0.0001933330000000004, 0.00019480500000000275, 0.0001940139999999993, 0.00019430600000000173, 0.00019466699999999906, 0.0001938619999999995, 0.00019465300000000296, 0.00019419500000000117, 0.00019412500000000332, 0.00019356900000000454, 0.00019450000000000023]</msg>
<status status="PASS" starttime="20201030 10:58:01.478" endtime="20201030 10:58:01.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.473" endtime="20201030 10:58:01.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.484" endtime="20201030 10:58:01.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.483" endtime="20201030 10:58:01.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.481" endtime="20201030 10:58:01.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.079" endtime="20201030 10:58:01.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.078" endtime="20201030 10:58:01.515"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.524" endtime="20201030 10:58:01.549"></status>
</kw>
<msg timestamp="20201030 10:58:01.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.522" endtime="20201030 10:58:01.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.551" endtime="20201030 10:58:01.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.554" endtime="20201030 10:58:01.556"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.520" endtime="20201030 10:58:01.556"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.517" endtime="20201030 10:58:01.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.563" endtime="20201030 10:58:01.850"></status>
</kw>
<msg timestamp="20201030 10:58:01.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033285472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03348225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:01.562" endtime="20201030 10:58:01.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033285472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03348225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:01.854" endtime="20201030 10:58:01.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.862" endtime="20201030 10:58:01.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.559" endtime="20201030 10:58:01.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.557" endtime="20201030 10:58:01.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.869" level="INFO">${RESULT} = [{'diff': 0.00019677799999999468}, {'diff': 0.00019616700000000403}, {'diff': 0.00019588800000000517}, {'diff': 0.0001955140000000008}, {'diff': 0.00019562499999999788}, {'diff': 0.0001964169999999973...</msg>
<status status="PASS" starttime="20201030 10:58:01.866" endtime="20201030 10:58:01.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.873" level="INFO">${ACCURACY} = {'diff': [0.00019677799999999468, 0.00019616700000000403, 0.00019588800000000517, 0.0001955140000000008, 0.00019562499999999788, 0.00019641699999999734, 0.0001961669999999971, 0.00019523599999999447, ...</msg>
<status status="PASS" starttime="20201030 10:58:01.870" endtime="20201030 10:58:01.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.878" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.877" endtime="20201030 10:58:01.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.880" level="INFO">VALUE: [0.00019677799999999468, 0.00019616700000000403, 0.00019588800000000517, 0.0001955140000000008, 0.00019562499999999788, 0.00019641699999999734, 0.0001961669999999971, 0.00019523599999999447, 0.00019554100000000046, 0.00019587499999999813, 0.00019512499999999738, 0.0001952919999999997, 0.0001953339999999984, 0.00019519399999999576, 0.00019629100000000121, 0.00019631900000000035, 0.00019611100000000575, 0.00019508299999999867, 0.00019662499999999888, 0.0001961390000000049, 0.00019575000000000148, 0.00019516700000000303, 0.00019591700000000378, 0.00019540200000000424, 0.00019520800000000227, 0.00019580599999999976, 0.000195443999999996, 0.00019568000000000363, 0.000196459000000003, 0.00019612499999999838, 0.0001966940000000042, 0.00019690299999999827, 0.00019654100000000146, 0.0001959869999999947, 0.00019587499999999813, 0.00019681900000000085, 0.00019565299999999702, 0.00019513899999999695, 0.0001967230000000028, 0.00019588799999999823, 0.00019566700000000353, 0.0001956940000000032, 0.0001969999999999958, 0.0001969720000000036, 0.000195443999999996, 0.00019583299999999942, 0.0001965560000000005, 0.00019644500000000342, 0.00019583299999999942, 0.00019520800000000227]</msg>
<status status="PASS" starttime="20201030 10:58:01.879" endtime="20201030 10:58:01.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.874" endtime="20201030 10:58:01.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.887" endtime="20201030 10:58:01.906"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.885" endtime="20201030 10:58:01.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.884" endtime="20201030 10:58:01.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.516" endtime="20201030 10:58:01.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.515" endtime="20201030 10:58:01.907"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.916" endtime="20201030 10:58:01.941"></status>
</kw>
<msg timestamp="20201030 10:58:01.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.915" endtime="20201030 10:58:01.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.943" endtime="20201030 10:58:01.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.946" endtime="20201030 10:58:01.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.912" endtime="20201030 10:58:01.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.910" endtime="20201030 10:58:01.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.955" endtime="20201030 10:58:02.241"></status>
</kw>
<msg timestamp="20201030 10:58:02.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022379833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.954" endtime="20201030 10:58:02.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022379833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.245" endtime="20201030 10:58:02.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.254" endtime="20201030 10:58:02.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.951" endtime="20201030 10:58:02.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.949" endtime="20201030 10:58:02.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.260" level="INFO">${RESULT} = [{'diff': 0.00019894500000000245}, {'diff': 0.00019881999999999886}, {'diff': 0.0001974860000000002}, {'diff': 0.00019833300000000192}, {'diff': 0.0001972499999999995}, {'diff': 0.00019879199999999972...</msg>
<status status="PASS" starttime="20201030 10:58:02.257" endtime="20201030 10:58:02.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:02.266" level="INFO">${ACCURACY} = {'diff': [0.00019894500000000245, 0.00019881999999999886, 0.0001974860000000002, 0.00019833300000000192, 0.0001972499999999995, 0.00019879199999999972, 0.00019831999999999836, 0.00019755499999999857, ...</msg>
<status status="PASS" starttime="20201030 10:58:02.261" endtime="20201030 10:58:02.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.270" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 10:58:02.269" endtime="20201030 10:58:02.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.273" level="INFO">VALUE: [0.00019894500000000245, 0.00019881999999999886, 0.0001974860000000002, 0.00019833300000000192, 0.0001972499999999995, 0.00019879199999999972, 0.00019831999999999836, 0.00019755499999999857, 0.0001987769999999972, 0.00019894499999999898, 0.00019813899999999995, 0.0001973470000000005, 0.00019805499999999907, 0.0001989170000000033, 0.00019704200000000144, 0.0001980279999999994, 0.00019729199999999822, 0.00019836199999999707, 0.00019783300000000142, 0.00019713899999999895, 0.00019836100000000106, 0.00019712499999999938, 0.00019740200000000277, 0.000197443999999998, 0.00019873600000000144, 0.0001983609999999976, 0.00019847299999999762, 0.00019884699999999852, 0.0001982080000000018, 0.00019863900000000045, 0.00019762499999999988, 0.00019761100000000031, 0.00019801399999999983, 0.00019877700000000068, 0.000198750000000001, 0.00019800000000000026, 0.00019879199999999972, 0.00019881899999999939, 0.00019765199999999955, 0.00019801399999999983, 0.00019797200000000112, 0.0001972920000000017, 0.00019822299999999737, 0.00019813899999999995, 0.00019770799999999783, 0.0001971669999999981, 0.0001980140000000033, 0.00019872200000000534, 0.0001980140000000033, 0.0001971390000000059]</msg>
<status status="PASS" starttime="20201030 10:58:02.271" endtime="20201030 10:58:02.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.267" endtime="20201030 10:58:02.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:02.278" endtime="20201030 10:58:02.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.276" endtime="20201030 10:58:02.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.275" endtime="20201030 10:58:02.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.908" endtime="20201030 10:58:02.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.908" endtime="20201030 10:58:02.299"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.308" endtime="20201030 10:58:02.333"></status>
</kw>
<msg timestamp="20201030 10:58:02.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.306" endtime="20201030 10:58:02.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.334" endtime="20201030 10:58:02.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.337" endtime="20201030 10:58:02.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.304" endtime="20201030 10:58:02.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.301" endtime="20201030 10:58:02.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.346" endtime="20201030 10:58:02.633"></status>
</kw>
<msg timestamp="20201030 10:58:02.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023085167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.345" endtime="20201030 10:58:02.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023085167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.638" endtime="20201030 10:58:02.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.646" endtime="20201030 10:58:02.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.342" endtime="20201030 10:58:02.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.340" endtime="20201030 10:58:02.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.653" level="INFO">${RESULT} = [{'diff': 0.00019962499999999841}, {'diff': 0.00020015299999999805}, {'diff': 0.0002004029999999983}, {'diff': 0.00020073599999999997}, {'diff': 0.00019961100000000231}, {'diff': 0.0001999029999999978...</msg>
<status status="PASS" starttime="20201030 10:58:02.649" endtime="20201030 10:58:02.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:02.657" level="INFO">${ACCURACY} = {'diff': [0.00019962499999999841, 0.00020015299999999805, 0.0002004029999999983, 0.00020073599999999997, 0.00019961100000000231, 0.0001999029999999978, 0.00019947199999999915, 0.00020006900000000064, ...</msg>
<status status="PASS" starttime="20201030 10:58:02.654" endtime="20201030 10:58:02.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.661" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 10:58:02.660" endtime="20201030 10:58:02.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.664" level="INFO">VALUE: [0.00019962499999999841, 0.00020015299999999805, 0.0002004029999999983, 0.00020073599999999997, 0.00019961100000000231, 0.0001999029999999978, 0.00019947199999999915, 0.00020006900000000064, 0.0002003060000000008, 0.00020062499999999941, 0.00020005600000000054, 0.00020012499999999891, 0.00020033300000000046, 0.00020095800000000108, 0.00020056900000000114, 0.00019951399999999786, 0.00020037499999999916, 0.00019937500000000163, 0.000199444, 0.00019937500000000163, 0.00019998599999999922, 0.00020051399999999886, 0.00019933299999999946, 0.00019995899999999955, 0.0002008610000000001, 0.00020044500000000048, 0.00019987500000000213, 0.00019962499999999841, 0.0001993890000000012, 0.00019987500000000213, 0.00019912500000000138, 0.00019995899999999955, 0.00019934699999999902, 0.0002002219999999999, 0.0002006939999999978, 0.00019933399999999893, 0.00020020800000000033, 0.00019916600000000062, 0.00020011099999999588, 0.0002003749999999957, 0.00020040300000000177, 0.0001992360000000054, 0.00019947199999999915, 0.0002003890000000022, 0.0001990690000000031, 0.0001992219999999989, 0.00019974999999999854, 0.00019998599999999922, 0.00020057000000000408, 0.00020069400000000126]</msg>
<status status="PASS" starttime="20201030 10:58:02.663" endtime="20201030 10:58:02.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.658" endtime="20201030 10:58:02.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:02.669" endtime="20201030 10:58:02.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.668" endtime="20201030 10:58:02.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.667" endtime="20201030 10:58:02.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.300" endtime="20201030 10:58:02.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.299" endtime="20201030 10:58:02.690"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.699" endtime="20201030 10:58:02.725"></status>
</kw>
<msg timestamp="20201030 10:58:02.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.697" endtime="20201030 10:58:02.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.727" endtime="20201030 10:58:02.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.729" endtime="20201030 10:58:02.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.695" endtime="20201030 10:58:02.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.693" endtime="20201030 10:58:02.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.739" endtime="20201030 10:58:03.025"></status>
</kw>
<msg timestamp="20201030 10:58:03.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023605847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023807861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.737" endtime="20201030 10:58:03.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023605847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023807861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.029" endtime="20201030 10:58:03.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.038" endtime="20201030 10:58:03.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.735" endtime="20201030 10:58:03.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.733" endtime="20201030 10:58:03.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.044" level="INFO">${RESULT} = [{'diff': 0.00020201400000000036}, {'diff': 0.0002021939999999993}, {'diff': 0.00020181899999999892}, {'diff': 0.00020284699999999906}, {'diff': 0.00020138899999999973}, {'diff': 0.0002018890000000002...</msg>
<status status="PASS" starttime="20201030 10:58:03.041" endtime="20201030 10:58:03.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:03.049" level="INFO">${ACCURACY} = {'diff': [0.00020201400000000036, 0.0002021939999999993, 0.00020181899999999892, 0.00020284699999999906, 0.00020138899999999973, 0.00020188900000000023, 0.00020229199999999975, 0.0002024579999999991, ...</msg>
<status status="PASS" starttime="20201030 10:58:03.045" endtime="20201030 10:58:03.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.053" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 10:58:03.052" endtime="20201030 10:58:03.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.056" level="INFO">VALUE: [0.00020201400000000036, 0.0002021939999999993, 0.00020181899999999892, 0.00020284699999999906, 0.00020138899999999973, 0.00020188900000000023, 0.00020229199999999975, 0.0002024579999999991, 0.00020163899999999998, 0.00020211099999999788, 0.00020255599999999957, 0.00020212500000000092, 0.00020129099999999928, 0.0002025000000000013, 0.000202444000000003, 0.00020215300000000005, 0.00020238900000000073, 0.0002025000000000013, 0.00020212500000000092, 0.0002027359999999985, 0.0002015000000000003, 0.00020280500000000035, 0.00020298599999999875, 0.00020120799999999786, 0.00020113899999999948, 0.0002016670000000026, 0.00020137500000000016, 0.00020268000000000022, 0.0002010700000000011, 0.00020197199999999818, 0.00020134700000000103, 0.00020120800000000133, 0.0002023749999999977, 0.00020265300000000055, 0.00020265300000000055, 0.00020280599999999635, 0.0002026519999999976, 0.00020195799999999514, 0.00020123600000000047, 0.00020186100000000456, 0.00020113899999999602, 0.00020116600000000262, 0.00020281899999999992, 0.0002010419999999985, 0.00020112499999999645, 0.00020198600000000122, 0.00020252800000000043, 0.00020188899999999677, 0.0002030000000000018, 0.00020238899999999727]</msg>
<status status="PASS" starttime="20201030 10:58:03.054" endtime="20201030 10:58:03.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.049" endtime="20201030 10:58:03.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.062" endtime="20201030 10:58:03.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.060" endtime="20201030 10:58:03.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.059" endtime="20201030 10:58:03.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.691" endtime="20201030 10:58:03.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.690" endtime="20201030 10:58:03.082"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.091" endtime="20201030 10:58:03.116"></status>
</kw>
<msg timestamp="20201030 10:58:03.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.090" endtime="20201030 10:58:03.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.117" endtime="20201030 10:58:03.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.120" endtime="20201030 10:58:03.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.087" endtime="20201030 10:58:03.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.085" endtime="20201030 10:58:03.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.129" endtime="20201030 10:58:03.414"></status>
</kw>
<msg timestamp="20201030 10:58:03.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022600042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.128" endtime="20201030 10:58:03.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022600042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.419" endtime="20201030 10:58:03.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.427" endtime="20201030 10:58:03.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.125" endtime="20201030 10:58:03.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.123" endtime="20201030 10:58:03.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.434" level="INFO">${RESULT} = [{'diff': 0.00020359799999999928}, {'diff': 0.00020320799999999986}, {'diff': 0.0002032640000000016}, {'diff': 0.00020449999999999982}, {'diff': 0.00020374999999999907}, {'diff': 0.0002042499999999995...</msg>
<status status="PASS" starttime="20201030 10:58:03.430" endtime="20201030 10:58:03.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:03.439" level="INFO">${ACCURACY} = {'diff': [0.00020359799999999928, 0.00020320799999999986, 0.0002032640000000016, 0.00020449999999999982, 0.00020374999999999907, 0.00020424999999999957, 0.00020430499999999838, 0.00020493099999999848,...</msg>
<status status="PASS" starttime="20201030 10:58:03.435" endtime="20201030 10:58:03.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.443" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 10:58:03.442" endtime="20201030 10:58:03.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.446" level="INFO">VALUE: [0.00020359799999999928, 0.00020320799999999986, 0.0002032640000000016, 0.00020449999999999982, 0.00020374999999999907, 0.00020424999999999957, 0.00020430499999999838, 0.00020493099999999848, 0.00020369399999999732, 0.0002032909999999978, 0.00020444500000000101, 0.0002038879999999993, 0.0002034580000000001, 0.00020366700000000112, 0.00020395900000000008, 0.00020483299999999802, 0.00020331900000000042, 0.00020383299999999702, 0.00020315300000000105, 0.00020306999999999964, 0.00020351300000000239, 0.00020330500000000085, 0.00020415299999999859, 0.00020322199999999943, 0.0002032640000000016, 0.0002034299999999975, 0.00020393100000000094, 0.00020404099999999856, 0.00020366700000000112, 0.00020387500000000267, 0.00020479200000000225, 0.0002043469999999971, 0.0002044580000000011, 0.00020463899999999952, 0.0002035000000000023, 0.00020416600000000215, 0.0002048750000000002, 0.00020487499999999673, 0.00020424999999999957, 0.00020500000000000032, 0.00020344500000000001, 0.00020448600000000372, 0.0002046670000000056, 0.00020448599999999678, 0.0002045829999999943, 0.00020434700000000056, 0.00020390199999999886, 0.00020312499999999845, 0.00020405600000000107, 0.00020315299999999759]</msg>
<status status="PASS" starttime="20201030 10:58:03.445" endtime="20201030 10:58:03.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.440" endtime="20201030 10:58:03.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.451" endtime="20201030 10:58:03.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.450" endtime="20201030 10:58:03.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.448" endtime="20201030 10:58:03.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.083" endtime="20201030 10:58:03.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.083" endtime="20201030 10:58:03.472"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.481" endtime="20201030 10:58:03.506"></status>
</kw>
<msg timestamp="20201030 10:58:03.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.479" endtime="20201030 10:58:03.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.507" endtime="20201030 10:58:03.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.510" endtime="20201030 10:58:03.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.477" endtime="20201030 10:58:03.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.474" endtime="20201030 10:58:03.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.519" endtime="20201030 10:58:03.809"></status>
</kw>
<msg timestamp="20201030 10:58:03.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022690097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.518" endtime="20201030 10:58:03.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022690097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.813" endtime="20201030 10:58:03.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.822" endtime="20201030 10:58:03.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.515" endtime="20201030 10:58:03.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.513" endtime="20201030 10:58:03.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.828" level="INFO">${RESULT} = [{'diff': 0.00020662499999999848}, {'diff': 0.00020604200000000003}, {'diff': 0.00020652800000000096}, {'diff': 0.00020700000000000232}, {'diff': 0.0002053200000000019}, {'diff': 0.0002059030000000003...</msg>
<status status="PASS" starttime="20201030 10:58:03.825" endtime="20201030 10:58:03.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:03.832" level="INFO">${ACCURACY} = {'diff': [0.00020662499999999848, 0.00020604200000000003, 0.00020652800000000096, 0.00020700000000000232, 0.0002053200000000019, 0.00020590300000000034, 0.00020687499999999873, 0.00020633400000000246,...</msg>
<status status="PASS" starttime="20201030 10:58:03.829" endtime="20201030 10:58:03.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.837" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 10:58:03.836" endtime="20201030 10:58:03.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.839" level="INFO">VALUE: [0.00020662499999999848, 0.00020604200000000003, 0.00020652800000000096, 0.00020700000000000232, 0.0002053200000000019, 0.00020590300000000034, 0.00020687499999999873, 0.00020633400000000246, 0.00020647299999999869, 0.00020620899999999887, 0.00020572199999999846, 0.00020615300000000059, 0.000206333999999999, 0.0002054719999999982, 0.0002069019999999984, 0.00020594399999999957, 0.00020615300000000059, 0.0002061949999999993, 0.0002059169999999999, 0.0002061659999999972, 0.00020649999999999835, 0.00020686099999999916, 0.00020647200000000268, 0.00020623599999999853, 0.00020651399999999792, 0.00020511100000000088, 0.00020619399999999982, 0.0002067499999999986, 0.00020579199999999978, 0.00020697299999999919, 0.00020680500000000088, 0.00020550000000000082, 0.00020529199999999928, 0.0002069719999999997, 0.00020550000000000082, 0.00020591600000000043, 0.00020573599999999803, 0.00020615300000000059, 0.00020697300000000265, 0.00020633300000000299, 0.0002050000000000038, 0.00020556899999999573, 0.00020651399999999792, 0.00020636100000000213, 0.0002050829999999948, 0.00020686100000000263, 0.00020633300000000299, 0.0002051949999999983, 0.0002057499999999976, 0.00020588900000000077]</msg>
<status status="PASS" starttime="20201030 10:58:03.838" endtime="20201030 10:58:03.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.833" endtime="20201030 10:58:03.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.845" endtime="20201030 10:58:03.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.843" endtime="20201030 10:58:03.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.842" endtime="20201030 10:58:03.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.473" endtime="20201030 10:58:03.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.472" endtime="20201030 10:58:03.866"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.875" endtime="20201030 10:58:03.900"></status>
</kw>
<msg timestamp="20201030 10:58:03.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.873" endtime="20201030 10:58:03.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.902" endtime="20201030 10:58:03.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.904" endtime="20201030 10:58:03.906"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.870" endtime="20201030 10:58:03.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.868" endtime="20201030 10:58:03.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.914" endtime="20201030 10:58:04.199"></status>
</kw>
<msg timestamp="20201030 10:58:04.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023384597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023593292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.912" endtime="20201030 10:58:04.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023384597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023593292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.204" endtime="20201030 10:58:04.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.212" endtime="20201030 10:58:04.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.910" endtime="20201030 10:58:04.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.908" endtime="20201030 10:58:04.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.219" level="INFO">${RESULT} = [{'diff': 0.00020869499999999833}, {'diff': 0.00020791600000000243}, {'diff': 0.00020881899999999898}, {'diff': 0.00020769400000000132}, {'diff': 0.00020851399999999992}, {'diff': 0.000207319000000000...</msg>
<status status="PASS" starttime="20201030 10:58:04.215" endtime="20201030 10:58:04.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:04.223" level="INFO">${ACCURACY} = {'diff': [0.00020869499999999833, 0.00020791600000000243, 0.00020881899999999898, 0.00020769400000000132, 0.00020851399999999992, 0.00020731900000000095, 0.0002084720000000012, 0.0002089720000000017, ...</msg>
<status status="PASS" starttime="20201030 10:58:04.220" endtime="20201030 10:58:04.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.227" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 10:58:04.226" endtime="20201030 10:58:04.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.230" level="INFO">VALUE: [0.00020869499999999833, 0.00020791600000000243, 0.00020881899999999898, 0.00020769400000000132, 0.00020851399999999992, 0.00020731900000000095, 0.0002084720000000012, 0.0002089720000000017, 0.0002088609999999977, 0.00020780599999999788, 0.00020891599999999996, 0.00020833299999999805, 0.00020748599999999978, 0.0002084720000000012, 0.00020812499999999998, 0.00020897299999999772, 0.00020809700000000084, 0.0002078609999999967, 0.00020715299999999812, 0.00020876400000000017, 0.00020722199999999996, 0.00020799999999999985, 0.00020895799999999867, 0.00020794400000000157, 0.00020765300000000209, 0.00020804100000000256, 0.0002076109999999999, 0.00020836100000000066, 0.00020869499999999833, 0.00020841600000000293, 0.00020722299999999944, 0.00020775000000000307, 0.00020779200000000178, 0.00020790300000000234, 0.00020850000000000035, 0.0002082919999999988, 0.00020781899999999798, 0.0002085829999999983, 0.0002072499999999991, 0.00020827799999999924, 0.00020727699999999877, 0.00020829099999999934, 0.00020865300000000309, 0.00020805599999999813, 0.00020762500000000295, 0.00020822200000000096, 0.00020805599999999813, 0.0002079720000000007, 0.0002081950000000013, 0.00020740199999999542]</msg>
<status status="PASS" starttime="20201030 10:58:04.229" endtime="20201030 10:58:04.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.224" endtime="20201030 10:58:04.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.236" endtime="20201030 10:58:04.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.234" endtime="20201030 10:58:04.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.233" endtime="20201030 10:58:04.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.866" endtime="20201030 10:58:04.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.866" endtime="20201030 10:58:04.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.382" endtime="20201030 10:58:04.257"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:25.312" endtime="20201030 10:58:04.262" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.272" endtime="20201030 10:58:04.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.271" endtime="20201030 10:58:04.292"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.306" endtime="20201030 10:58:04.322"></status>
</kw>
<msg timestamp="20201030 10:58:04.323" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.304" endtime="20201030 10:58:04.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.325" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.324" endtime="20201030 10:58:04.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.328" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:04.326" endtime="20201030 10:58:04.329"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:04.301" endtime="20201030 10:58:04.329"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:04.299" endtime="20201030 10:58:04.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.298" endtime="20201030 10:58:04.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:04.334" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:04.333" endtime="20201030 10:58:04.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.331" endtime="20201030 10:58:04.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.297" endtime="20201030 10:58:04.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.296" endtime="20201030 10:58:04.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.336" endtime="20201030 10:58:04.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.295" endtime="20201030 10:58:04.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.293" endtime="20201030 10:58:04.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.269" endtime="20201030 10:58:04.339"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.351" endtime="20201030 10:58:04.365"></status>
</kw>
<msg timestamp="20201030 10:58:04.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.349" endtime="20201030 10:58:04.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.367" endtime="20201030 10:58:04.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.370" endtime="20201030 10:58:04.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.345" endtime="20201030 10:58:04.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.343" endtime="20201030 10:58:04.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.380" endtime="20201030 10:58:04.666"></status>
</kw>
<msg timestamp="20201030 10:58:04.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071537556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071546611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.378" endtime="20201030 10:58:04.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071537556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071546611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.670" endtime="20201030 10:58:04.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.679" endtime="20201030 10:58:04.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.375" endtime="20201030 10:58:04.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.373" endtime="20201030 10:58:04.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.686" level="INFO">${RESULT} = [{'diff': 9.054999999993929e-06}, {'diff': 9.624999999999218e-06}, {'diff': 1.0846999999994389e-05}, {'diff': 9.042000000000772e-06}, {'diff': 9.667000000004866e-06}, {'diff': 9.041000000001298e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:58:04.682" endtime="20201030 10:58:04.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:04.690" level="INFO">${ACCURACY} = {'diff': [9.054999999993929e-06, 9.624999999999218e-06, 1.0846999999994389e-05, 9.042000000000772e-06, 9.667000000004866e-06, 9.041000000001298e-06, 9.042000000000772e-06, 1.0236000000010681e-05, 1.02...</msg>
<status status="PASS" starttime="20201030 10:58:04.687" endtime="20201030 10:58:04.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.695" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 10:58:04.694" endtime="20201030 10:58:04.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.698" level="INFO">VALUE: [9.054999999993929e-06, 9.624999999999218e-06, 1.0846999999994389e-05, 9.042000000000772e-06, 9.667000000004866e-06, 9.041000000001298e-06, 9.042000000000772e-06, 1.0236000000010681e-05, 1.0237000000010155e-05, 1.0846999999994389e-05, 1.0889000000000038e-05, 9.02800000000814e-06, 1.0250000000003312e-05, 9.653000000012235e-06, 1.0847000000008267e-05, 9.054999999993929e-06, 1.0250000000003312e-05, 1.0846999999994389e-05, 1.0249999999989434e-05, 1.0250000000003312e-05, 9.041000000001298e-06, 9.027999999994263e-06, 9.666999999990988e-06, 9.624999999999218e-06, 1.0250000000003312e-05, 1.0249999999989434e-05, 9.652999999998357e-06, 9.624999999999218e-06, 9.639000000005726e-06, 1.0250000000003312e-05, 9.055999999993403e-06, 1.0278000000002452e-05, 9.04099999998742e-06, 1.0278000000002452e-05, 1.0334000000000731e-05, 1.0250000000003312e-05, 1.0833000000001758e-05, 1.0235999999996803e-05, 9.639000000005726e-06, 1.0235999999996803e-05, 1.084800000000774e-05, 1.0861000000000898e-05, 1.084800000000774e-05, 1.0846999999994389e-05, 1.0179999999998524e-05, 9.04099999998742e-06, 1.0250000000003312e-05, 9.651999999998884e-06, 9.665999999991515e-06, 1.0250000000003312e-05]</msg>
<status status="PASS" starttime="20201030 10:58:04.696" endtime="20201030 10:58:04.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.691" endtime="20201030 10:58:04.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.703" endtime="20201030 10:58:04.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.701" endtime="20201030 10:58:04.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.700" endtime="20201030 10:58:04.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.341" endtime="20201030 10:58:04.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.341" endtime="20201030 10:58:04.724"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.733" endtime="20201030 10:58:04.749"></status>
</kw>
<msg timestamp="20201030 10:58:04.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.731" endtime="20201030 10:58:04.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.750" endtime="20201030 10:58:04.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.753" endtime="20201030 10:58:04.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.728" endtime="20201030 10:58:04.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.726" endtime="20201030 10:58:04.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.762" endtime="20201030 10:58:05.049"></status>
</kw>
<msg timestamp="20201030 10:58:05.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022966181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022977583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.761" endtime="20201030 10:58:05.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022966181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022977583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.053" endtime="20201030 10:58:05.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.062" endtime="20201030 10:58:05.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.758" endtime="20201030 10:58:05.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.756" endtime="20201030 10:58:05.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.069" level="INFO">${RESULT} = [{'diff': 1.1402000000000634e-05}, {'diff': 1.2735999999999303e-05}, {'diff': 1.2653000000001358e-05}, {'diff': 1.0833999999997762e-05}, {'diff': 1.0834000000001232e-05}, {'diff': 1.1500000000001093e-...</msg>
<status status="PASS" starttime="20201030 10:58:05.065" endtime="20201030 10:58:05.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.074" level="INFO">${ACCURACY} = {'diff': [1.1402000000000634e-05, 1.2735999999999303e-05, 1.2653000000001358e-05, 1.0833999999997762e-05, 1.0834000000001232e-05, 1.1500000000001093e-05, 1.2055000000000399e-05, 1.1444999999998817e-05...</msg>
<status status="PASS" starttime="20201030 10:58:05.070" endtime="20201030 10:58:05.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.079" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.078" endtime="20201030 10:58:05.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.081" level="INFO">VALUE: [1.1402000000000634e-05, 1.2735999999999303e-05, 1.2653000000001358e-05, 1.0833999999997762e-05, 1.0834000000001232e-05, 1.1500000000001093e-05, 1.2055000000000399e-05, 1.1444999999998817e-05, 1.1500000000001093e-05, 1.2639000000001788e-05, 1.1458000000002383e-05, 1.1444999999998817e-05, 1.2667000000000928e-05, 1.2068999999999969e-05, 1.2667000000000928e-05, 1.1444999999998817e-05, 1.2068999999999969e-05, 1.2681000000000497e-05, 1.2667000000000928e-05, 1.0861000000000898e-05, 1.1458999999998387e-05, 1.0860999999997428e-05, 1.1999999999998123e-05, 1.1528000000000233e-05, 1.2041999999996833e-05, 1.2679999999997554e-05, 1.2681000000000497e-05, 1.2083999999999012e-05, 1.1457999999998913e-05, 1.1443999999999344e-05, 1.1443999999999344e-05, 1.2055999999999872e-05, 1.2097999999998582e-05, 1.0846999999997858e-05, 1.1459000000001857e-05, 1.1486000000001523e-05, 1.2679999999997554e-05, 1.0861000000000898e-05, 1.2583999999999512e-05, 1.1458000000002383e-05, 1.2666999999997458e-05, 1.2069999999999442e-05, 1.1445000000002287e-05, 1.2069999999999442e-05, 1.1458000000002383e-05, 1.2652999999997888e-05, 1.2068999999999969e-05, 1.2055000000000399e-05, 1.0861000000000898e-05, 1.2068999999999969e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.080" endtime="20201030 10:58:05.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.075" endtime="20201030 10:58:05.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.086" endtime="20201030 10:58:05.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.084" endtime="20201030 10:58:05.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.083" endtime="20201030 10:58:05.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.724" endtime="20201030 10:58:05.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.724" endtime="20201030 10:58:05.107"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.116" endtime="20201030 10:58:05.131"></status>
</kw>
<msg timestamp="20201030 10:58:05.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.115" endtime="20201030 10:58:05.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.133" endtime="20201030 10:58:05.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.135" endtime="20201030 10:58:05.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.112" endtime="20201030 10:58:05.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.110" endtime="20201030 10:58:05.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.145" endtime="20201030 10:58:05.431"></status>
</kw>
<msg timestamp="20201030 10:58:05.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023001292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023014597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.143" endtime="20201030 10:58:05.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023001292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023014597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.436" endtime="20201030 10:58:05.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.444" endtime="20201030 10:58:05.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.141" endtime="20201030 10:58:05.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.139" endtime="20201030 10:58:05.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.451" level="INFO">${RESULT} = [{'diff': 1.3305000000001649e-05}, {'diff': 1.4500000000000624e-05}, {'diff': 1.5083999999998543e-05}, {'diff': 1.4487000000000527e-05}, {'diff': 1.3319000000001219e-05}, {'diff': 1.3929999999998804e-...</msg>
<status status="PASS" starttime="20201030 10:58:05.447" endtime="20201030 10:58:05.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.455" level="INFO">${ACCURACY} = {'diff': [1.3305000000001649e-05, 1.4500000000000624e-05, 1.5083999999998543e-05, 1.4487000000000527e-05, 1.3319000000001219e-05, 1.3929999999998804e-05, 1.3874999999999998e-05, 1.3874999999999998e-05...</msg>
<status status="PASS" starttime="20201030 10:58:05.452" endtime="20201030 10:58:05.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.460" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.459" endtime="20201030 10:58:05.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.462" level="INFO">VALUE: [1.3305000000001649e-05, 1.4500000000000624e-05, 1.5083999999998543e-05, 1.4487000000000527e-05, 1.3319000000001219e-05, 1.3929999999998804e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.327699999999904e-05, 1.327699999999904e-05, 1.2638999999998318e-05, 1.3306000000001122e-05, 1.3874999999999998e-05, 1.3263999999998943e-05, 1.3264000000002413e-05, 1.4499999999997154e-05, 1.4486000000001054e-05, 1.3278000000001983e-05, 1.3888999999999568e-05, 1.3292000000001553e-05, 1.3250000000002843e-05, 1.4486000000001054e-05, 1.3264000000002413e-05, 1.3874999999999998e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.4487000000000527e-05, 1.383299999999782e-05, 1.452700000000029e-05, 1.3305000000001649e-05, 1.5098000000001582e-05, 1.3889000000003038e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.4514000000000193e-05, 1.3888999999999568e-05, 1.3249999999999373e-05, 1.3277999999998513e-05, 1.4500000000000624e-05, 1.4527999999999763e-05, 1.3861000000000429e-05, 1.3291999999998083e-05, 1.4459000000001387e-05, 1.4457999999998444e-05, 1.330499999999818e-05, 1.2695000000000067e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.461" endtime="20201030 10:58:05.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.456" endtime="20201030 10:58:05.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.468" endtime="20201030 10:58:05.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.465" endtime="20201030 10:58:05.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.464" endtime="20201030 10:58:05.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.108" endtime="20201030 10:58:05.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.107" endtime="20201030 10:58:05.488"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.498" endtime="20201030 10:58:05.513"></status>
</kw>
<msg timestamp="20201030 10:58:05.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.496" endtime="20201030 10:58:05.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.515" endtime="20201030 10:58:05.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.518" endtime="20201030 10:58:05.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.493" endtime="20201030 10:58:05.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.491" endtime="20201030 10:58:05.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.527" endtime="20201030 10:58:05.814"></status>
</kw>
<msg timestamp="20201030 10:58:05.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023406556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023422833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.525" endtime="20201030 10:58:05.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023406556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023422833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.818" endtime="20201030 10:58:05.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.827" endtime="20201030 10:58:05.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.523" endtime="20201030 10:58:05.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.521" endtime="20201030 10:58:05.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.833" level="INFO">${RESULT} = [{'diff': 1.627700000000204e-05}, {'diff': 1.629099999999814e-05}, {'diff': 1.509699999999864e-05}, {'diff': 1.5680000000000555e-05}, {'diff': 1.5680000000000555e-05}, {'diff': 1.5694000000000125e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:05.830" endtime="20201030 10:58:05.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.838" level="INFO">${ACCURACY} = {'diff': [1.627700000000204e-05, 1.629099999999814e-05, 1.509699999999864e-05, 1.5680000000000555e-05, 1.5680000000000555e-05, 1.5694000000000125e-05, 1.508299999999907e-05, 1.5083000000002539e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:58:05.834" endtime="20201030 10:58:05.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.842" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.841" endtime="20201030 10:58:05.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.845" level="INFO">VALUE: [1.627700000000204e-05, 1.629099999999814e-05, 1.509699999999864e-05, 1.5680000000000555e-05, 1.5680000000000555e-05, 1.5694000000000125e-05, 1.508299999999907e-05, 1.5083000000002539e-05, 1.5084000000002012e-05, 1.50689999999995e-05, 1.5097999999998113e-05, 1.6306000000000653e-05, 1.6291999999997614e-05, 1.6278000000001513e-05, 1.5680000000000555e-05, 1.565299999999742e-05, 1.68889999999991e-05, 1.5763999999997974e-05, 1.6292000000001083e-05, 1.5694999999999598e-05, 1.5069999999998973e-05, 1.6249999999998904e-05, 1.686099999999996e-05, 1.5055999999999403e-05, 1.5000000000001124e-05, 1.5083000000002539e-05, 1.6292000000001083e-05, 1.5694999999999598e-05, 1.5707999999999694e-05, 1.509699999999864e-05, 1.633300000000032e-05, 1.6887999999999626e-05, 1.5097000000002109e-05, 1.6972000000000514e-05, 1.6208000000000194e-05, 1.5013999999997224e-05, 1.630500000000118e-05, 1.508299999999907e-05, 1.5070000000002443e-05, 1.5083000000002539e-05, 1.5680000000000555e-05, 1.6291999999997614e-05, 1.6292000000001083e-05, 1.5680000000000555e-05, 1.6292000000001083e-05, 1.6292000000001083e-05, 1.6901999999999195e-05, 1.629100000000161e-05, 1.5708999999999168e-05, 1.5152000000000915e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.844" endtime="20201030 10:58:05.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.839" endtime="20201030 10:58:05.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.858" endtime="20201030 10:58:05.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.856" endtime="20201030 10:58:05.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.855" endtime="20201030 10:58:05.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.489" endtime="20201030 10:58:05.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.489" endtime="20201030 10:58:05.879"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.888" endtime="20201030 10:58:05.902"></status>
</kw>
<msg timestamp="20201030 10:58:05.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.886" endtime="20201030 10:58:05.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.904" endtime="20201030 10:58:05.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.907" endtime="20201030 10:58:05.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.883" endtime="20201030 10:58:05.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.881" endtime="20201030 10:58:05.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.916" endtime="20201030 10:58:06.201"></status>
</kw>
<msg timestamp="20201030 10:58:06.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.914" endtime="20201030 10:58:06.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.205" endtime="20201030 10:58:06.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.213" endtime="20201030 10:58:06.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.912" endtime="20201030 10:58:06.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.910" endtime="20201030 10:58:06.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.220" level="INFO">${RESULT} = [{'diff': 1.7528000000002764e-05}, {'diff': 1.7500000000000154e-05}, {'diff': 1.8084000000001543e-05}, {'diff': 1.7500000000000154e-05}, {'diff': 1.809699999999817e-05}, {'diff': 1.7486000000000584e-0...</msg>
<status status="PASS" starttime="20201030 10:58:06.217" endtime="20201030 10:58:06.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:06.226" level="INFO">${ACCURACY} = {'diff': [1.7528000000002764e-05, 1.7500000000000154e-05, 1.8084000000001543e-05, 1.7500000000000154e-05, 1.809699999999817e-05, 1.7486000000000584e-05, 1.7485999999997115e-05, 1.8707999999999225e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:06.221" endtime="20201030 10:58:06.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.230" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 10:58:06.229" endtime="20201030 10:58:06.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.233" level="INFO">VALUE: [1.7528000000002764e-05, 1.7500000000000154e-05, 1.8084000000001543e-05, 1.7500000000000154e-05, 1.809699999999817e-05, 1.7486000000000584e-05, 1.7485999999997115e-05, 1.8707999999999225e-05, 1.7499999999996685e-05, 1.68889999999991e-05, 1.7500000000000154e-05, 1.7500000000000154e-05, 1.8707999999999225e-05, 1.7513999999999724e-05, 1.690299999999867e-05, 1.7513999999999724e-05, 1.8098000000001113e-05, 1.7500000000000154e-05, 1.809700000000164e-05, 1.8041999999999364e-05, 1.691699999999824e-05, 1.811100000000121e-05, 1.688900000000257e-05, 1.7513999999999724e-05, 1.7500000000000154e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.812500000000078e-05, 1.6930000000001805e-05, 1.691700000000171e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.812500000000078e-05, 1.811099999999774e-05, 1.811100000000121e-05, 1.68889999999991e-05, 1.812500000000078e-05, 1.8707999999999225e-05, 1.7500000000000154e-05, 1.7500000000000154e-05, 1.691699999999824e-05, 1.7500000000000154e-05, 1.751299999999678e-05, 1.872299999999827e-05, 1.806899999999903e-05, 1.7486000000000584e-05, 1.744499999999788e-05, 1.6987000000003027e-05, 1.7500000000000154e-05, 1.811100000000121e-05]</msg>
<status status="PASS" starttime="20201030 10:58:06.231" endtime="20201030 10:58:06.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.226" endtime="20201030 10:58:06.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.238" endtime="20201030 10:58:06.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.236" endtime="20201030 10:58:06.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.235" endtime="20201030 10:58:06.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.880" endtime="20201030 10:58:06.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.879" endtime="20201030 10:58:06.259"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.268" endtime="20201030 10:58:06.283"></status>
</kw>
<msg timestamp="20201030 10:58:06.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.266" endtime="20201030 10:58:06.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.284" endtime="20201030 10:58:06.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.287" endtime="20201030 10:58:06.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.263" endtime="20201030 10:58:06.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.261" endtime="20201030 10:58:06.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.296" endtime="20201030 10:58:06.582"></status>
</kw>
<msg timestamp="20201030 10:58:06.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.294" endtime="20201030 10:58:06.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.587" endtime="20201030 10:58:06.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.596" endtime="20201030 10:58:06.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.292" endtime="20201030 10:58:06.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.290" endtime="20201030 10:58:06.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.603" level="INFO">${RESULT} = [{'diff': 2.0457999999997506e-05}, {'diff': 2.0513999999999255e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.0528000000002294e-05}, {'diff': 1.9306000000000184e-05}, {'diff': 2.05830000000011e-05...</msg>
<status status="PASS" starttime="20201030 10:58:06.599" endtime="20201030 10:58:06.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:06.607" level="INFO">${ACCURACY} = {'diff': [2.0457999999997506e-05, 2.0513999999999255e-05, 2.0486000000000115e-05, 2.0528000000002294e-05, 1.9306000000000184e-05, 2.05830000000011e-05, 1.991700000000124e-05, 1.991700000000124e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:58:06.604" endtime="20201030 10:58:06.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.612" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 10:58:06.611" endtime="20201030 10:58:06.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.614" level="INFO">VALUE: [2.0457999999997506e-05, 2.0513999999999255e-05, 2.0486000000000115e-05, 2.0528000000002294e-05, 1.9306000000000184e-05, 2.05830000000011e-05, 1.991700000000124e-05, 1.991700000000124e-05, 1.9278000000001044e-05, 1.8707999999999225e-05, 1.9930000000001336e-05, 2.0500000000003155e-05, 1.9250000000001904e-05, 2.0513999999999255e-05, 1.991700000000124e-05, 2.0500000000003155e-05, 2.0499999999999685e-05, 1.8778000000000544e-05, 1.9264000000001474e-05, 1.9333999999999324e-05, 2.0513999999999255e-05, 1.9319999999999754e-05, 2.0513999999999255e-05, 1.870900000000217e-05, 2.051299999999978e-05, 1.987499999999906e-05, 2.0513999999999255e-05, 2.052699999999935e-05, 2.0541999999998395e-05, 1.99029999999982e-05, 1.9333999999999324e-05, 1.993099999999734e-05, 1.931900000000028e-05, 2.0513999999999255e-05, 1.9306000000000184e-05, 2.054099999999892e-05, 1.9930000000001336e-05, 1.9930000000001336e-05, 1.991700000000124e-05, 2.056899999999806e-05, 1.931900000000028e-05, 2.054099999999892e-05, 1.869499999999913e-05, 1.9930000000001336e-05, 2.052699999999935e-05, 1.9930000000001336e-05, 1.98890000000021e-05, 1.993099999999734e-05, 1.991699999999777e-05, 2.113899999999988e-05]</msg>
<status status="PASS" starttime="20201030 10:58:06.613" endtime="20201030 10:58:06.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.608" endtime="20201030 10:58:06.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.619" endtime="20201030 10:58:06.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.618" endtime="20201030 10:58:06.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.617" endtime="20201030 10:58:06.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.260" endtime="20201030 10:58:06.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.259" endtime="20201030 10:58:06.640"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.649" endtime="20201030 10:58:06.666"></status>
</kw>
<msg timestamp="20201030 10:58:06.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.648" endtime="20201030 10:58:06.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.667" endtime="20201030 10:58:06.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.670" endtime="20201030 10:58:06.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.645" endtime="20201030 10:58:06.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.643" endtime="20201030 10:58:06.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.679" endtime="20201030 10:58:06.965"></status>
</kw>
<msg timestamp="20201030 10:58:06.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023418278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023440625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.678" endtime="20201030 10:58:06.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023418278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023440625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.969" endtime="20201030 10:58:06.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.977" endtime="20201030 10:58:06.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.675" endtime="20201030 10:58:06.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.673" endtime="20201030 10:58:06.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.984" level="INFO">${RESULT} = [{'diff': 2.234699999999895e-05}, {'diff': 2.2930000000000866e-05}, {'diff': 2.234699999999895e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.1749999999997466e-05}, {'diff': 2.2320000000002754e-05...</msg>
<status status="PASS" starttime="20201030 10:58:06.981" endtime="20201030 10:58:06.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:06.988" level="INFO">${ACCURACY} = {'diff': [2.234699999999895e-05, 2.2930000000000866e-05, 2.234699999999895e-05, 2.2319999999999285e-05, 2.1749999999997466e-05, 2.2320000000002754e-05, 2.113899999999988e-05, 2.236099999999852e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:06.985" endtime="20201030 10:58:06.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.993" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 10:58:06.992" endtime="20201030 10:58:06.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.996" level="INFO">VALUE: [2.234699999999895e-05, 2.2930000000000866e-05, 2.234699999999895e-05, 2.2319999999999285e-05, 2.1749999999997466e-05, 2.2320000000002754e-05, 2.113899999999988e-05, 2.236099999999852e-05, 2.1735999999997896e-05, 2.111099999999727e-05, 2.234699999999895e-05, 2.113899999999988e-05, 2.2958000000000006e-05, 2.233299999999938e-05, 2.295899999999948e-05, 2.234699999999895e-05, 2.111100000000074e-05, 2.113899999999988e-05, 2.295899999999948e-05, 2.1764000000000505e-05, 2.231899999999981e-05, 2.234699999999895e-05, 2.1736000000001365e-05, 2.112500000000031e-05, 2.1708000000002226e-05, 2.1763999999997036e-05, 2.1750000000000935e-05, 2.111100000000074e-05, 2.111100000000074e-05, 2.2985999999999146e-05, 2.295899999999948e-05, 2.1693999999999186e-05, 2.2250000000001435e-05, 2.112500000000031e-05, 2.1708000000002226e-05, 2.170899999999823e-05, 2.1208000000001725e-05, 2.287500000000206e-05, 2.1805999999999215e-05, 2.233299999999938e-05, 2.1721999999998326e-05, 2.233300000000285e-05, 2.231899999999981e-05, 2.1721999999998326e-05, 2.111100000000074e-05, 2.29169999999973e-05, 2.2944000000000436e-05, 2.1735999999997896e-05, 2.234699999999895e-05, 2.1749999999997466e-05]</msg>
<status status="PASS" starttime="20201030 10:58:06.994" endtime="20201030 10:58:07.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.989" endtime="20201030 10:58:07.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.004" endtime="20201030 10:58:07.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.003" endtime="20201030 10:58:07.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.001" endtime="20201030 10:58:07.024"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.641" endtime="20201030 10:58:07.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.641" endtime="20201030 10:58:07.025"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.034" endtime="20201030 10:58:07.050"></status>
</kw>
<msg timestamp="20201030 10:58:07.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.032" endtime="20201030 10:58:07.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.052" endtime="20201030 10:58:07.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.054" endtime="20201030 10:58:07.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.029" endtime="20201030 10:58:07.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.027" endtime="20201030 10:58:07.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.064" endtime="20201030 10:58:07.349"></status>
</kw>
<msg timestamp="20201030 10:58:07.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.062" endtime="20201030 10:58:07.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.353" endtime="20201030 10:58:07.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.362" endtime="20201030 10:58:07.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.059" endtime="20201030 10:58:07.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.057" endtime="20201030 10:58:07.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.369" level="INFO">${RESULT} = [{'diff': 2.412499999999984e-05}, {'diff': 2.415299999999898e-05}, {'diff': 2.4750000000000466e-05}, {'diff': 2.416699999999855e-05}, {'diff': 2.416699999999855e-05}, {'diff': 2.2944000000000436e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:07.365" endtime="20201030 10:58:07.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.421" level="INFO">${ACCURACY} = {'diff': [2.412499999999984e-05, 2.415299999999898e-05, 2.4750000000000466e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.2944000000000436e-05, 2.4735999999997427e-05, 2.415299999999898e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 10:58:07.370" endtime="20201030 10:58:07.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.425" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.424" endtime="20201030 10:58:07.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.428" level="INFO">VALUE: [2.412499999999984e-05, 2.415299999999898e-05, 2.4750000000000466e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.2944000000000436e-05, 2.4735999999997427e-05, 2.415299999999898e-05, 2.2944000000000436e-05, 2.3512999999999312e-05, 2.3541999999997926e-05, 2.294499999999991e-05, 2.294499999999991e-05, 2.413900000000288e-05, 2.355500000000149e-05, 2.4707999999998287e-05, 2.415299999999898e-05, 2.293100000000034e-05, 2.2930000000000866e-05, 2.3027999999997856e-05, 2.3513999999998786e-05, 2.415299999999898e-05, 2.4750000000000466e-05, 2.4834000000001355e-05, 2.4736000000000896e-05, 2.355500000000149e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.4193999999998217e-05, 2.4750000000000466e-05, 2.3542000000001395e-05, 2.4750000000000466e-05, 2.293100000000034e-05, 2.3541999999997926e-05, 2.413900000000288e-05, 2.415299999999898e-05, 2.4165999999999077e-05, 2.413899999999941e-05, 2.3542000000001395e-05, 2.411100000000027e-05, 2.4750000000000466e-05, 2.293100000000034e-05, 2.413899999999941e-05, 2.293100000000034e-05, 2.406900000000156e-05, 2.4750000000000466e-05, 2.2930000000000866e-05, 2.413899999999941e-05, 2.2958000000000006e-05, 2.3584000000000105e-05]</msg>
<status status="PASS" starttime="20201030 10:58:07.426" endtime="20201030 10:58:07.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.421" endtime="20201030 10:58:07.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.433" endtime="20201030 10:58:07.452"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.431" endtime="20201030 10:58:07.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.430" endtime="20201030 10:58:07.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.026" endtime="20201030 10:58:07.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.025" endtime="20201030 10:58:07.454"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.463" endtime="20201030 10:58:07.478"></status>
</kw>
<msg timestamp="20201030 10:58:07.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.461" endtime="20201030 10:58:07.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.480" endtime="20201030 10:58:07.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.482" endtime="20201030 10:58:07.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.459" endtime="20201030 10:58:07.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.456" endtime="20201030 10:58:07.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.492" endtime="20201030 10:58:07.778"></status>
</kw>
<msg timestamp="20201030 10:58:07.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.491" endtime="20201030 10:58:07.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.783" endtime="20201030 10:58:07.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.791" endtime="20201030 10:58:07.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.488" endtime="20201030 10:58:07.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.486" endtime="20201030 10:58:07.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.800" level="INFO">${RESULT} = [{'diff': 2.5957999999999537e-05}, {'diff': 2.6542000000000926e-05}, {'diff': 2.5971999999999107e-05}, {'diff': 2.538899999999719e-05}, {'diff': 2.6555000000001022e-05}, {'diff': 2.594500000000291e-05...</msg>
<status status="PASS" starttime="20201030 10:58:07.797" endtime="20201030 10:58:07.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.806" level="INFO">${ACCURACY} = {'diff': [2.5957999999999537e-05, 2.6542000000000926e-05, 2.5971999999999107e-05, 2.538899999999719e-05, 2.6555000000001022e-05, 2.594500000000291e-05, 2.6583000000000162e-05, 2.663900000000191e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:07.801" endtime="20201030 10:58:07.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.811" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.809" endtime="20201030 10:58:07.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.813" level="INFO">VALUE: [2.5957999999999537e-05, 2.6542000000000926e-05, 2.5971999999999107e-05, 2.538899999999719e-05, 2.6555000000001022e-05, 2.594500000000291e-05, 2.6583000000000162e-05, 2.663900000000191e-05, 2.5346999999998482e-05, 2.4777999999999606e-05, 2.533300000000238e-05, 2.534700000000195e-05, 2.4750000000000466e-05, 2.5957999999999537e-05, 2.5957999999999537e-05, 2.5971999999999107e-05, 2.6583000000000162e-05, 2.5957999999999537e-05, 2.6583999999999636e-05, 2.5957999999999537e-05, 2.5957999999999537e-05, 2.536100000000152e-05, 2.5943999999999967e-05, 2.594499999999944e-05, 2.6541000000001452e-05, 2.6569000000000592e-05, 2.5362000000000995e-05, 2.5348000000001425e-05, 2.4764000000000036e-05, 2.5346999999998482e-05, 2.5291999999999676e-05, 2.5416000000000327e-05, 2.5348000000001425e-05, 2.536100000000152e-05, 2.6527999999997887e-05, 2.536100000000152e-05, 2.5346999999998482e-05, 2.5346999999998482e-05, 2.6542000000000926e-05, 2.5388000000001187e-05, 2.536100000000152e-05, 2.5972000000002576e-05, 2.5971999999999107e-05, 2.5305999999999246e-05, 2.4750000000000466e-05, 2.537500000000109e-05, 2.5971999999999107e-05, 2.6027000000001382e-05, 2.5957999999999537e-05, 2.6555000000001022e-05]</msg>
<status status="PASS" starttime="20201030 10:58:07.812" endtime="20201030 10:58:07.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.806" endtime="20201030 10:58:07.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.820" endtime="20201030 10:58:07.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.818" endtime="20201030 10:58:07.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.816" endtime="20201030 10:58:07.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.455" endtime="20201030 10:58:07.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.454" endtime="20201030 10:58:07.840"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.849" endtime="20201030 10:58:07.866"></status>
</kw>
<msg timestamp="20201030 10:58:07.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.848" endtime="20201030 10:58:07.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.867" endtime="20201030 10:58:07.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.870" endtime="20201030 10:58:07.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.845" endtime="20201030 10:58:07.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.843" endtime="20201030 10:58:07.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.879" endtime="20201030 10:58:08.165"></status>
</kw>
<msg timestamp="20201030 10:58:08.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.878" endtime="20201030 10:58:08.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.170" endtime="20201030 10:58:08.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.178" endtime="20201030 10:58:08.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.875" endtime="20201030 10:58:08.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.873" endtime="20201030 10:58:08.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.185" level="INFO">${RESULT} = [{'diff': 2.7777999999999137e-05}, {'diff': 2.7736000000000427e-05}, {'diff': 2.8985999999998208e-05}, {'diff': 2.716700000000155e-05}, {'diff': 2.715299999999851e-05}, {'diff': 2.7791999999998707e-05...</msg>
<status status="PASS" starttime="20201030 10:58:08.182" endtime="20201030 10:58:08.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:08.190" level="INFO">${ACCURACY} = {'diff': [2.7777999999999137e-05, 2.7736000000000427e-05, 2.8985999999998208e-05, 2.716700000000155e-05, 2.715299999999851e-05, 2.7791999999998707e-05, 2.8374999999997152e-05, 2.8986000000001677e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:08.186" endtime="20201030 10:58:08.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.195" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 10:58:08.194" endtime="20201030 10:58:08.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.197" level="INFO">VALUE: [2.7777999999999137e-05, 2.7736000000000427e-05, 2.8985999999998208e-05, 2.716700000000155e-05, 2.715299999999851e-05, 2.7791999999998707e-05, 2.8374999999997152e-05, 2.8986000000001677e-05, 2.8375000000000622e-05, 2.7805999999998277e-05, 2.8402999999999762e-05, 2.7179999999998178e-05, 2.8361000000001052e-05, 2.8375000000000622e-05, 2.7194000000001217e-05, 2.7763000000000093e-05, 2.8348000000000956e-05, 2.8375000000000622e-05, 2.8374999999997152e-05, 2.84309999999989e-05, 2.8458000000002037e-05, 2.7736000000000427e-05, 2.7763999999999567e-05, 2.7097000000000232e-05, 2.7179999999998178e-05, 2.8361000000001052e-05, 2.8971999999998638e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8361000000001052e-05, 2.772299999999686e-05, 2.8361000000001052e-05, 2.8985999999998208e-05, 2.8389000000000192e-05, 2.8361000000001052e-05, 2.89309999999994e-05, 2.715299999999851e-05, 2.716700000000155e-05, 2.8389000000000192e-05, 2.8444000000002467e-05, 2.7777999999999137e-05, 2.7749999999999997e-05, 2.8389000000000192e-05, 2.7763999999999567e-05, 2.7778000000002606e-05, 2.7777999999999137e-05, 2.8389000000000192e-05, 2.7778000000002606e-05, 2.841699999999933e-05, 2.715299999999851e-05]</msg>
<status status="PASS" starttime="20201030 10:58:08.196" endtime="20201030 10:58:08.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.191" endtime="20201030 10:58:08.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.202" endtime="20201030 10:58:08.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.201" endtime="20201030 10:58:08.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.200" endtime="20201030 10:58:08.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.841" endtime="20201030 10:58:08.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.841" endtime="20201030 10:58:08.223"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.232" endtime="20201030 10:58:08.249"></status>
</kw>
<msg timestamp="20201030 10:58:08.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.231" endtime="20201030 10:58:08.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.250" endtime="20201030 10:58:08.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.253" endtime="20201030 10:58:08.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.228" endtime="20201030 10:58:08.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.226" endtime="20201030 10:58:08.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.262" endtime="20201030 10:58:08.549"></status>
</kw>
<msg timestamp="20201030 10:58:08.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023077292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023106875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.260" endtime="20201030 10:58:08.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023077292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023106875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.554" endtime="20201030 10:58:08.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.562" endtime="20201030 10:58:08.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.258" endtime="20201030 10:58:08.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.256" endtime="20201030 10:58:08.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.569" level="INFO">${RESULT} = [{'diff': 2.9582999999999693e-05}, {'diff': 3.0181000000000652e-05}, {'diff': 3.079200000000171e-05}, {'diff': 3.0790999999998764e-05}, {'diff': 3.083400000000042e-05}, {'diff': 2.9596999999999263e-05...</msg>
<status status="PASS" starttime="20201030 10:58:08.566" endtime="20201030 10:58:08.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:08.573" level="INFO">${ACCURACY} = {'diff': [2.9582999999999693e-05, 3.0181000000000652e-05, 3.079200000000171e-05, 3.0790999999998764e-05, 3.083400000000042e-05, 2.9596999999999263e-05, 2.9583999999999167e-05, 3.077799999999867e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:08.570" endtime="20201030 10:58:08.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.578" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 10:58:08.577" endtime="20201030 10:58:08.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.580" level="INFO">VALUE: [2.9582999999999693e-05, 3.0181000000000652e-05, 3.079200000000171e-05, 3.0790999999998764e-05, 3.083400000000042e-05, 2.9596999999999263e-05, 2.9583999999999167e-05, 3.077799999999867e-05, 2.9582999999999693e-05, 3.086100000000008e-05, 2.9582999999999693e-05, 3.079100000000223e-05, 3.0235999999999458e-05, 2.89309999999994e-05, 3.080599999999781e-05, 2.8943999999999498e-05, 3.0762999999999624e-05, 3.079199999999824e-05, 3.0804999999998334e-05, 3.077799999999867e-05, 3.0180000000001178e-05, 2.9597000000002732e-05, 3.080600000000128e-05, 3.016599999999814e-05, 2.9610999999998833e-05, 3.0194000000000748e-05, 2.9528000000000887e-05, 2.8999999999997778e-05, 2.9569000000000123e-05, 2.9583000000003162e-05, 2.9610999999998833e-05, 2.8957999999999068e-05, 2.9582999999999693e-05, 3.019500000000022e-05, 2.9569999999999597e-05, 3.077799999999867e-05, 2.9598000000002206e-05, 3.0180000000001178e-05, 2.9596999999999263e-05, 2.9000000000001247e-05, 3.019500000000022e-05, 2.9597000000002732e-05, 2.9014000000000817e-05, 3.016599999999814e-05, 3.0194000000000748e-05, 2.898700000000115e-05, 2.8916999999999832e-05, 3.0180000000001178e-05, 3.079100000000223e-05, 3.0208000000000318e-05]</msg>
<status status="PASS" starttime="20201030 10:58:08.579" endtime="20201030 10:58:08.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.574" endtime="20201030 10:58:08.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.586" endtime="20201030 10:58:08.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.584" endtime="20201030 10:58:08.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.583" endtime="20201030 10:58:08.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.224" endtime="20201030 10:58:08.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.224" endtime="20201030 10:58:08.606"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.616" endtime="20201030 10:58:08.634"></status>
</kw>
<msg timestamp="20201030 10:58:08.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.614" endtime="20201030 10:58:08.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.635" endtime="20201030 10:58:08.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.638" endtime="20201030 10:58:08.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.611" endtime="20201030 10:58:08.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.609" endtime="20201030 10:58:08.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.647" endtime="20201030 10:58:08.932"></status>
</kw>
<msg timestamp="20201030 10:58:08.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024577347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024609958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.646" endtime="20201030 10:58:08.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024577347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024609958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.937" endtime="20201030 10:58:08.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.945" endtime="20201030 10:58:08.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.643" endtime="20201030 10:58:08.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.641" endtime="20201030 10:58:08.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.952" level="INFO">${RESULT} = [{'diff': 3.261100000000183e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.0790999999998764e-05}, {'diff': 3.2610999999998364e-05}, {'diff': 3.2582999999999224e-05}, {'diff': 3.200000000000078e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:08.949" endtime="20201030 10:58:08.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:08.956" level="INFO">${ACCURACY} = {'diff': [3.261100000000183e-05, 3.137500000000015e-05, 3.0790999999998764e-05, 3.2610999999998364e-05, 3.2582999999999224e-05, 3.200000000000078e-05, 3.2013000000000874e-05, 3.256999999999913e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:58:08.953" endtime="20201030 10:58:08.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.961" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 10:58:08.960" endtime="20201030 10:58:08.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.964" level="INFO">VALUE: [3.261100000000183e-05, 3.137500000000015e-05, 3.0790999999998764e-05, 3.2610999999998364e-05, 3.2582999999999224e-05, 3.200000000000078e-05, 3.2013000000000874e-05, 3.256999999999913e-05, 3.141700000000233e-05, 3.259700000000226e-05, 3.137500000000015e-05, 3.079100000000223e-05, 3.137500000000015e-05, 3.079200000000171e-05, 3.2596999999998794e-05, 3.140299999999929e-05, 3.137500000000015e-05, 3.199999999999731e-05, 3.0818999999997904e-05, 3.07639999999991e-05, 3.1444999999998e-05, 3.259800000000174e-05, 3.141700000000233e-05, 3.141699999999886e-05, 3.140199999999982e-05, 3.197199999999817e-05, 3.2610999999998364e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.200000000000078e-05, 3.259799999999827e-05, 3.140299999999929e-05, 3.140299999999929e-05, 3.138899999999972e-05, 3.200000000000078e-05, 3.07639999999991e-05, 3.200000000000078e-05, 3.199999999999731e-05, 3.261100000000183e-05, 3.141699999999886e-05, 3.261100000000183e-05, 3.26250000000014e-05, 3.255599999999956e-05, 3.201400000000035e-05, 3.261199999999784e-05, 3.259800000000174e-05, 3.140299999999929e-05, 3.201400000000035e-05, 3.261100000000183e-05, 3.202799999999992e-05]</msg>
<status status="PASS" starttime="20201030 10:58:08.962" endtime="20201030 10:58:08.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.957" endtime="20201030 10:58:08.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.970" endtime="20201030 10:58:08.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.968" endtime="20201030 10:58:08.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.967" endtime="20201030 10:58:08.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.607" endtime="20201030 10:58:08.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.607" endtime="20201030 10:58:08.990"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.999" endtime="20201030 10:58:09.016"></status>
</kw>
<msg timestamp="20201030 10:58:09.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.998" endtime="20201030 10:58:09.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.018" endtime="20201030 10:58:09.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.020" endtime="20201030 10:58:09.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.995" endtime="20201030 10:58:09.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.993" endtime="20201030 10:58:09.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.030" endtime="20201030 10:58:09.315"></status>
</kw>
<msg timestamp="20201030 10:58:09.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022514125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.028" endtime="20201030 10:58:09.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022514125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.320" endtime="20201030 10:58:09.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.328" endtime="20201030 10:58:09.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.025" endtime="20201030 10:58:09.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.024" endtime="20201030 10:58:09.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.335" level="INFO">${RESULT} = [{'diff': 3.449999999999981e-05}, {'diff': 3.319400000000028e-05}, {'diff': 3.320899999999932e-05}, {'diff': 3.320799999999985e-05}, {'diff': 3.381999999999691e-05}, {'diff': 3.319499999999975e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:09.332" endtime="20201030 10:58:09.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:09.340" level="INFO">${ACCURACY} = {'diff': [3.449999999999981e-05, 3.319400000000028e-05, 3.320899999999932e-05, 3.320799999999985e-05, 3.381999999999691e-05, 3.319499999999975e-05, 3.380600000000081e-05, 3.442999999999849e-05, 3.3221...</msg>
<status status="PASS" starttime="20201030 10:58:09.336" endtime="20201030 10:58:09.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.345" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 10:58:09.344" endtime="20201030 10:58:09.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.347" level="INFO">VALUE: [3.449999999999981e-05, 3.319400000000028e-05, 3.320899999999932e-05, 3.320799999999985e-05, 3.381999999999691e-05, 3.319499999999975e-05, 3.380600000000081e-05, 3.442999999999849e-05, 3.322199999999942e-05, 3.320799999999985e-05, 3.320799999999985e-05, 3.441599999999892e-05, 3.443100000000143e-05, 3.443000000000196e-05, 3.380600000000081e-05, 3.504200000000249e-05, 3.5026999999999975e-05, 3.316700000000061e-05, 3.380600000000081e-05, 3.3819000000000904e-05, 3.383399999999995e-05, 3.4402999999998823e-05, 3.443100000000143e-05, 3.442999999999849e-05, 3.2610999999998364e-05, 3.3819000000000904e-05, 3.3804999999997865e-05, 3.441600000000239e-05, 3.323600000000246e-05, 3.4374999999999684e-05, 3.323599999999899e-05, 3.3804999999997865e-05, 3.320799999999985e-05, 3.4361000000000114e-05, 3.443100000000143e-05, 3.379199999999777e-05, 3.441700000000186e-05, 3.322300000000236e-05, 3.442999999999849e-05, 3.3804999999997865e-05, 3.443099999999796e-05, 3.320799999999985e-05, 3.319400000000028e-05, 3.4402999999998823e-05, 3.37779999999982e-05, 3.322199999999942e-05, 3.322199999999942e-05, 3.380600000000081e-05, 3.3138999999998e-05, 3.313799999999853e-05]</msg>
<status status="PASS" starttime="20201030 10:58:09.346" endtime="20201030 10:58:09.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.341" endtime="20201030 10:58:09.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.353" endtime="20201030 10:58:09.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.351" endtime="20201030 10:58:09.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.350" endtime="20201030 10:58:09.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.991" endtime="20201030 10:58:09.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.991" endtime="20201030 10:58:09.373"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.382" endtime="20201030 10:58:09.399"></status>
</kw>
<msg timestamp="20201030 10:58:09.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.381" endtime="20201030 10:58:09.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.401" endtime="20201030 10:58:09.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.404" endtime="20201030 10:58:09.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.378" endtime="20201030 10:58:09.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.376" endtime="20201030 10:58:09.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.413" endtime="20201030 10:58:09.700"></status>
</kw>
<msg timestamp="20201030 10:58:09.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022707, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022742042, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:09.411" endtime="20201030 10:58:09.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022707, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022742042, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:09.704" endtime="20201030 10:58:09.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.713" endtime="20201030 10:58:09.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.409" endtime="20201030 10:58:09.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.407" endtime="20201030 10:58:09.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.719" level="INFO">${RESULT} = [{'diff': 3.504199999999902e-05}, {'diff': 3.622199999999895e-05}, {'diff': 3.563800000000103e-05}, {'diff': 3.500000000000031e-05}, {'diff': 3.6833000000000005e-05}, {'diff': 3.62780000000007e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:09.716" endtime="20201030 10:58:09.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:09.724" level="INFO">${ACCURACY} = {'diff': [3.504199999999902e-05, 3.622199999999895e-05, 3.563800000000103e-05, 3.500000000000031e-05, 3.6833000000000005e-05, 3.62780000000007e-05, 3.497300000000064e-05, 3.498700000000021e-05, 3.6235...</msg>
<status status="PASS" starttime="20201030 10:58:09.720" endtime="20201030 10:58:09.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.728" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 10:58:09.727" endtime="20201030 10:58:09.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.731" level="INFO">VALUE: [3.504199999999902e-05, 3.622199999999895e-05, 3.563800000000103e-05, 3.500000000000031e-05, 3.6833000000000005e-05, 3.62780000000007e-05, 3.497300000000064e-05, 3.498700000000021e-05, 3.623599999999852e-05, 3.6305000000000365e-05, 3.502799999999945e-05, 3.5040999999999545e-05, 3.625000000000156e-05, 3.5625000000000934e-05, 3.502800000000292e-05, 3.5639000000000504e-05, 3.683399999999948e-05, 3.6846999999999575e-05, 3.626400000000113e-05, 3.5554999999999615e-05, 3.622199999999895e-05, 3.504200000000249e-05, 3.6860999999999144e-05, 3.626400000000113e-05, 3.622199999999895e-05, 3.5653000000000074e-05, 3.6860999999999144e-05, 3.6153000000000574e-05, 3.568099999999921e-05, 3.6167000000000143e-05, 3.5625000000000934e-05, 3.5611000000001364e-05, 3.502799999999945e-05, 3.567999999999974e-05, 3.5666999999999643e-05, 3.5040999999999545e-05, 3.5625000000000934e-05, 3.501400000000335e-05, 3.6833000000000005e-05, 3.567999999999974e-05, 3.618000000000024e-05, 3.5610999999997894e-05, 3.624999999999809e-05, 3.501399999999988e-05, 3.623600000000199e-05, 3.501399999999988e-05, 3.623600000000199e-05, 3.623600000000199e-05, 3.623600000000199e-05, 3.5653000000000074e-05]</msg>
<status status="PASS" starttime="20201030 10:58:09.729" endtime="20201030 10:58:09.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.725" endtime="20201030 10:58:09.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.736" endtime="20201030 10:58:09.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.734" endtime="20201030 10:58:09.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.733" endtime="20201030 10:58:09.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.374" endtime="20201030 10:58:09.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.374" endtime="20201030 10:58:09.757"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.766" endtime="20201030 10:58:09.784"></status>
</kw>
<msg timestamp="20201030 10:58:09.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.764" endtime="20201030 10:58:09.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.785" endtime="20201030 10:58:09.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.788" endtime="20201030 10:58:09.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.762" endtime="20201030 10:58:09.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.759" endtime="20201030 10:58:09.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.797" endtime="20201030 10:58:10.083"></status>
</kw>
<msg timestamp="20201030 10:58:10.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023527653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.795" endtime="20201030 10:58:10.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023527653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.088" endtime="20201030 10:58:10.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.096" endtime="20201030 10:58:10.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.793" endtime="20201030 10:58:10.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.791" endtime="20201030 10:58:10.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.103" level="INFO">${RESULT} = [{'diff': 3.8055000000002115e-05}, {'diff': 3.6846999999999575e-05}, {'diff': 3.798600000000027e-05}, {'diff': 3.8054999999998645e-05}, {'diff': 3.8722999999997454e-05}, {'diff': 3.6833000000000005e-0...</msg>
<status status="PASS" starttime="20201030 10:58:10.100" endtime="20201030 10:58:10.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.107" level="INFO">${ACCURACY} = {'diff': [3.8055000000002115e-05, 3.6846999999999575e-05, 3.798600000000027e-05, 3.8054999999998645e-05, 3.8722999999997454e-05, 3.6833000000000005e-05, 3.8694999999998314e-05, 3.805600000000159e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:10.104" endtime="20201030 10:58:10.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.112" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 10:58:10.111" endtime="20201030 10:58:10.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.115" level="INFO">VALUE: [3.8055000000002115e-05, 3.6846999999999575e-05, 3.798600000000027e-05, 3.8054999999998645e-05, 3.8722999999997454e-05, 3.6833000000000005e-05, 3.8694999999998314e-05, 3.805600000000159e-05, 3.8639000000000034e-05, 3.742999999999802e-05, 3.6833000000000005e-05, 3.804199999999855e-05, 3.8040999999999076e-05, 3.8653000000003074e-05, 3.8652999999999604e-05, 3.683399999999948e-05, 3.745800000000063e-05, 3.8040999999999076e-05, 3.8040999999999076e-05, 3.804199999999855e-05, 3.805600000000159e-05, 3.7445000000000533e-05, 3.7360999999999644e-05, 3.802799999999898e-05, 3.8652999999999604e-05, 3.684800000000252e-05, 3.6833000000000005e-05, 3.6833000000000005e-05, 3.8652999999999604e-05, 3.6805000000000865e-05, 3.744400000000106e-05, 3.8666999999999174e-05, 3.6847000000003044e-05, 3.8652999999999604e-05, 3.801399999999941e-05, 3.7374999999999214e-05, 3.6833000000000005e-05, 3.683399999999948e-05, 3.8026999999999506e-05, 3.863800000000056e-05, 3.8040999999999076e-05, 3.8040999999999076e-05, 3.8040999999999076e-05, 3.74590000000001e-05, 3.7431000000000964e-05, 3.8054999999998645e-05, 3.8652999999999604e-05, 3.745800000000063e-05, 3.8667000000002644e-05, 3.681999999999991e-05]</msg>
<status status="PASS" starttime="20201030 10:58:10.113" endtime="20201030 10:58:10.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.108" endtime="20201030 10:58:10.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.120" endtime="20201030 10:58:10.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.119" endtime="20201030 10:58:10.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.118" endtime="20201030 10:58:10.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.758" endtime="20201030 10:58:10.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.757" endtime="20201030 10:58:10.141"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.150" endtime="20201030 10:58:10.167"></status>
</kw>
<msg timestamp="20201030 10:58:10.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.149" endtime="20201030 10:58:10.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.168" endtime="20201030 10:58:10.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.171" endtime="20201030 10:58:10.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.146" endtime="20201030 10:58:10.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.144" endtime="20201030 10:58:10.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.180" endtime="20201030 10:58:10.465"></status>
</kw>
<msg timestamp="20201030 10:58:10.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022852264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.179" endtime="20201030 10:58:10.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022852264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.469" endtime="20201030 10:58:10.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.478" endtime="20201030 10:58:10.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.176" endtime="20201030 10:58:10.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.174" endtime="20201030 10:58:10.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.485" level="INFO">${RESULT} = [{'diff': 3.922200000000195e-05}, {'diff': 3.925000000000109e-05}, {'diff': 4.1097000000000355e-05}, {'diff': 3.9318999999999465e-05}, {'diff': 3.9833000000003005e-05}, {'diff': 3.9861000000002145e-05...</msg>
<status status="PASS" starttime="20201030 10:58:10.481" endtime="20201030 10:58:10.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.490" level="INFO">${ACCURACY} = {'diff': [3.922200000000195e-05, 3.925000000000109e-05, 4.1097000000000355e-05, 3.9318999999999465e-05, 3.9833000000003005e-05, 3.9861000000002145e-05, 4.0486999999998774e-05, 3.9874999999998245e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:10.486" endtime="20201030 10:58:10.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.495" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 10:58:10.494" endtime="20201030 10:58:10.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.497" level="INFO">VALUE: [3.922200000000195e-05, 3.925000000000109e-05, 4.1097000000000355e-05, 3.9318999999999465e-05, 3.9833000000003005e-05, 3.9861000000002145e-05, 4.0486999999998774e-05, 3.9874999999998245e-05, 3.9861000000002145e-05, 3.8652999999999604e-05, 3.990200000000138e-05, 3.923600000000152e-05, 4.044400000000059e-05, 3.927800000000023e-05, 3.9846999999999105e-05, 3.870800000000188e-05, 4.0431000000000494e-05, 4.107000000000069e-05, 3.9874999999998245e-05, 4.0445000000000064e-05, 4.105599999999765e-05, 4.045800000000016e-05, 4.1124999999999495e-05, 4.0472999999999204e-05, 4.045800000000016e-05, 3.926400000000066e-05, 4.0445000000000064e-05, 4.1097000000000355e-05, 4.047199999999973e-05, 3.9318999999999465e-05, 4.047199999999973e-05, 4.106999999999722e-05, 4.0389000000001785e-05, 3.922199999999848e-05, 3.925000000000109e-05, 3.926400000000066e-05, 4.0458999999999634e-05, 4.104200000000155e-05, 3.925000000000109e-05, 4.047199999999973e-05, 4.045800000000016e-05, 3.926400000000066e-05, 3.9902999999997385e-05, 4.047199999999973e-05, 3.9860999999998675e-05, 3.926400000000066e-05, 3.926400000000066e-05, 3.984799999999858e-05, 3.930600000000284e-05, 3.9222999999997954e-05]</msg>
<status status="PASS" starttime="20201030 10:58:10.496" endtime="20201030 10:58:10.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.491" endtime="20201030 10:58:10.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.502" endtime="20201030 10:58:10.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.501" endtime="20201030 10:58:10.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.500" endtime="20201030 10:58:10.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.142" endtime="20201030 10:58:10.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.141" endtime="20201030 10:58:10.523"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.532" endtime="20201030 10:58:10.549"></status>
</kw>
<msg timestamp="20201030 10:58:10.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.531" endtime="20201030 10:58:10.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.551" endtime="20201030 10:58:10.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.553" endtime="20201030 10:58:10.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.528" endtime="20201030 10:58:10.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.526" endtime="20201030 10:58:10.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.562" endtime="20201030 10:58:10.851"></status>
</kw>
<msg timestamp="20201030 10:58:10.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022743667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.561" endtime="20201030 10:58:10.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022743667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.856" endtime="20201030 10:58:10.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.864" endtime="20201030 10:58:10.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.558" endtime="20201030 10:58:10.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.556" endtime="20201030 10:58:10.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.871" level="INFO">${RESULT} = [{'diff': 4.108400000000026e-05}, {'diff': 4.1097000000000355e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.1083000000000786e-05}, {'diff': 4.1139000000002535e-05}, {'diff': 4.2916999999999955e-0...</msg>
<status status="PASS" starttime="20201030 10:58:10.868" endtime="20201030 10:58:10.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.875" level="INFO">${ACCURACY} = {'diff': [4.108400000000026e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1083000000000786e-05, 4.1139000000002535e-05, 4.2916999999999955e-05, 4.2875000000001245e-05, 4.105600000000112e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:10.872" endtime="20201030 10:58:10.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.880" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 10:58:10.879" endtime="20201030 10:58:10.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.883" level="INFO">VALUE: [4.108400000000026e-05, 4.1097000000000355e-05, 4.1124999999999495e-05, 4.1083000000000786e-05, 4.1139000000002535e-05, 4.2916999999999955e-05, 4.2875000000001245e-05, 4.105600000000112e-05, 4.2874999999997776e-05, 4.227799999999976e-05, 4.1083000000000786e-05, 4.1069000000001216e-05, 4.105599999999765e-05, 4.1666999999998705e-05, 4.227799999999976e-05, 4.2930999999999525e-05, 4.1681000000001744e-05, 4.2889000000000815e-05, 4.2875000000001245e-05, 4.2860999999998206e-05, 4.227799999999976e-05, 4.108400000000026e-05, 4.227799999999976e-05, 4.16799999999988e-05, 4.2889000000000815e-05, 4.1111000000003395e-05, 4.226400000000019e-05, 4.1083000000000786e-05, 4.169400000000184e-05, 4.1680999999998275e-05, 4.1138999999999065e-05, 4.225000000000062e-05, 4.227799999999976e-05, 4.226300000000072e-05, 4.2889000000000815e-05, 4.1652999999999135e-05, 4.163800000000009e-05, 4.1055000000001646e-05, 4.1068999999997746e-05, 4.1667000000002175e-05, 4.226400000000019e-05, 4.168000000000227e-05, 4.229199999999933e-05, 4.290200000000091e-05, 4.1069000000001216e-05, 4.16660000000027e-05, 4.295799999999919e-05, 4.227699999999682e-05, 4.227799999999976e-05, 4.288800000000134e-05]</msg>
<status status="PASS" starttime="20201030 10:58:10.881" endtime="20201030 10:58:10.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.876" endtime="20201030 10:58:10.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.893" endtime="20201030 10:58:10.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.891" endtime="20201030 10:58:10.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.890" endtime="20201030 10:58:10.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.524" endtime="20201030 10:58:10.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.524" endtime="20201030 10:58:10.914"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.923" endtime="20201030 10:58:10.941"></status>
</kw>
<msg timestamp="20201030 10:58:10.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.921" endtime="20201030 10:58:10.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.942" endtime="20201030 10:58:10.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.945" endtime="20201030 10:58:10.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.918" endtime="20201030 10:58:10.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.916" endtime="20201030 10:58:10.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.954" endtime="20201030 10:58:11.240"></status>
</kw>
<msg timestamp="20201030 10:58:11.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023417431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023461444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.953" endtime="20201030 10:58:11.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023417431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023461444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.244" endtime="20201030 10:58:11.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.253" endtime="20201030 10:58:11.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.950" endtime="20201030 10:58:11.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.948" endtime="20201030 10:58:11.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.260" level="INFO">${RESULT} = [{'diff': 4.401300000000247e-05}, {'diff': 4.4695000000000845e-05}, {'diff': 4.350000000000187e-05}, {'diff': 4.470800000000094e-05}, {'diff': 4.2959000000002134e-05}, {'diff': 4.4069000000000746e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:11.256" endtime="20201030 10:58:11.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:11.264" level="INFO">${ACCURACY} = {'diff': [4.401300000000247e-05, 4.4695000000000845e-05, 4.350000000000187e-05, 4.470800000000094e-05, 4.2959000000002134e-05, 4.4069000000000746e-05, 4.4153000000001635e-05, 4.2889000000000815e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:58:11.261" endtime="20201030 10:58:11.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.269" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 10:58:11.268" endtime="20201030 10:58:11.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.271" level="INFO">VALUE: [4.401300000000247e-05, 4.4695000000000845e-05, 4.350000000000187e-05, 4.470800000000094e-05, 4.2959000000002134e-05, 4.4069000000000746e-05, 4.4153000000001635e-05, 4.2889000000000815e-05, 4.347200000000273e-05, 4.4681000000001275e-05, 4.4139000000002065e-05, 4.347199999999926e-05, 4.4096999999999886e-05, 4.406899999999728e-05, 4.4153000000001635e-05, 4.2875000000001245e-05, 4.2860999999998206e-05, 4.4083000000000316e-05, 4.3472999999998735e-05, 4.2874999999997776e-05, 4.3487000000001774e-05, 4.291600000000048e-05, 4.348599999999883e-05, 4.348599999999883e-05, 4.2888999999997346e-05, 4.4083000000000316e-05, 4.347199999999926e-05, 4.288800000000134e-05, 4.4110999999999456e-05, 4.2875000000001245e-05, 4.34999999999984e-05, 4.2903000000000385e-05, 4.348599999999883e-05, 4.4096999999999886e-05, 4.4694999999997376e-05, 4.408299999999685e-05, 4.347199999999926e-05, 4.3486999999998305e-05, 4.4709000000000415e-05, 4.4083000000000316e-05, 4.4096999999999886e-05, 4.34860000000023e-05, 4.286200000000115e-05, 4.347199999999926e-05, 4.348599999999883e-05, 4.34860000000023e-05, 4.347199999999926e-05, 4.46800000000018e-05, 4.4138999999998596e-05, 4.348599999999883e-05]</msg>
<status status="PASS" starttime="20201030 10:58:11.270" endtime="20201030 10:58:11.273"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.265" endtime="20201030 10:58:11.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.278" endtime="20201030 10:58:11.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.276" endtime="20201030 10:58:11.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.275" endtime="20201030 10:58:11.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.915" endtime="20201030 10:58:11.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.914" endtime="20201030 10:58:11.298"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.308" endtime="20201030 10:58:11.325"></status>
</kw>
<msg timestamp="20201030 10:58:11.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.306" endtime="20201030 10:58:11.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.326" endtime="20201030 10:58:11.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.329" endtime="20201030 10:58:11.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.303" endtime="20201030 10:58:11.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.301" endtime="20201030 10:58:11.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.338" endtime="20201030 10:58:11.624"></status>
</kw>
<msg timestamp="20201030 10:58:11.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.337" endtime="20201030 10:58:11.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.628" endtime="20201030 10:58:11.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.637" endtime="20201030 10:58:11.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.334" endtime="20201030 10:58:11.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.332" endtime="20201030 10:58:11.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.644" level="INFO">${RESULT} = [{'diff': 4.530599999999843e-05}, {'diff': 4.5902999999999916e-05}, {'diff': 4.530599999999843e-05}, {'diff': 4.590200000000044e-05}, {'diff': 4.5333000000001566e-05}, {'diff': 4.590200000000044e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:11.640" endtime="20201030 10:58:11.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:11.649" level="INFO">${ACCURACY} = {'diff': [4.530599999999843e-05, 4.5902999999999916e-05, 4.530599999999843e-05, 4.590200000000044e-05, 4.5333000000001566e-05, 4.590200000000044e-05, 4.529199999999886e-05, 4.533399999999757e-05, 4.65...</msg>
<status status="PASS" starttime="20201030 10:58:11.645" endtime="20201030 10:58:11.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.654" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 10:58:11.652" endtime="20201030 10:58:11.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.656" level="INFO">VALUE: [4.530599999999843e-05, 4.5902999999999916e-05, 4.530599999999843e-05, 4.590200000000044e-05, 4.5333000000001566e-05, 4.590200000000044e-05, 4.529199999999886e-05, 4.533399999999757e-05, 4.651400000000097e-05, 4.65000000000014e-05, 4.65000000000014e-05, 4.5889000000000346e-05, 4.588899999999688e-05, 4.5930999999999056e-05, 4.5902999999999916e-05, 4.469400000000137e-05, 4.527800000000276e-05, 4.591600000000001e-05, 4.531899999999853e-05, 4.46939999999979e-05, 4.529199999999886e-05, 4.5902999999999916e-05, 4.5375000000000276e-05, 4.5902999999999916e-05, 4.656899999999978e-05, 4.529200000000233e-05, 4.658399999999882e-05, 4.5319000000001997e-05, 4.58329999999986e-05, 4.590199999999697e-05, 4.533399999999757e-05, 4.530499999999896e-05, 4.651400000000097e-05, 4.53060000000019e-05, 4.5902999999999916e-05, 4.529200000000233e-05, 4.529099999999939e-05, 4.532000000000147e-05, 4.533400000000104e-05, 4.649999999999793e-05, 4.5902999999999916e-05, 4.5902999999999916e-05, 4.4680999999997806e-05, 4.5930999999999056e-05, 4.529199999999886e-05, 4.651400000000097e-05, 4.649999999999793e-05, 4.53060000000019e-05, 4.6445000000002595e-05, 4.649999999999793e-05]</msg>
<status status="PASS" starttime="20201030 10:58:11.655" endtime="20201030 10:58:11.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.650" endtime="20201030 10:58:11.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.662" endtime="20201030 10:58:11.682"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.660" endtime="20201030 10:58:11.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.659" endtime="20201030 10:58:11.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.299" endtime="20201030 10:58:11.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.299" endtime="20201030 10:58:11.684"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.693" endtime="20201030 10:58:11.709"></status>
</kw>
<msg timestamp="20201030 10:58:11.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.691" endtime="20201030 10:58:11.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.711" endtime="20201030 10:58:11.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.714" endtime="20201030 10:58:11.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.688" endtime="20201030 10:58:11.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.686" endtime="20201030 10:58:11.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.723" endtime="20201030 10:58:12.010"></status>
</kw>
<msg timestamp="20201030 10:58:12.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023349417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.721" endtime="20201030 10:58:12.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023349417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.014" endtime="20201030 10:58:12.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.023" endtime="20201030 10:58:12.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.719" endtime="20201030 10:58:12.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.717" endtime="20201030 10:58:12.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.030" level="INFO">${RESULT} = [{'diff': 4.711099999999899e-05}, {'diff': 4.7111000000002456e-05}, {'diff': 4.830500000000196e-05}, {'diff': 4.831899999999806e-05}, {'diff': 4.830600000000143e-05}, {'diff': 4.83330000000011e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:12.026" endtime="20201030 10:58:12.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.034" level="INFO">${ACCURACY} = {'diff': [4.711099999999899e-05, 4.7111000000002456e-05, 4.830500000000196e-05, 4.831899999999806e-05, 4.830600000000143e-05, 4.83330000000011e-05, 4.7111000000002456e-05, 4.769399999999743e-05, 4.832...</msg>
<status status="PASS" starttime="20201030 10:58:12.031" endtime="20201030 10:58:12.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.039" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.038" endtime="20201030 10:58:12.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.041" level="INFO">VALUE: [4.711099999999899e-05, 4.7111000000002456e-05, 4.830500000000196e-05, 4.831899999999806e-05, 4.830600000000143e-05, 4.83330000000011e-05, 4.7111000000002456e-05, 4.769399999999743e-05, 4.8320000000001e-05, 4.8931000000002056e-05, 4.831900000000153e-05, 4.711099999999899e-05, 4.8931000000002056e-05, 4.831999999999753e-05, 4.711099999999899e-05, 4.900000000000043e-05, 4.833400000000057e-05, 4.8320000000001e-05, 4.833400000000057e-05, 4.891699999999902e-05, 4.830499999999849e-05, 4.829099999999892e-05, 4.772200000000004e-05, 4.709799999999889e-05, 4.770800000000047e-05, 4.711099999999899e-05, 4.831900000000153e-05, 4.7708999999999946e-05, 4.711099999999899e-05, 4.7125000000002026e-05, 4.776399999999875e-05, 4.770800000000047e-05, 4.890199999999997e-05, 4.776399999999875e-05, 4.766699999999777e-05, 4.711099999999899e-05, 4.8320000000001e-05, 4.830499999999849e-05, 4.830600000000143e-05, 4.8917000000002486e-05, 4.770800000000047e-05, 4.7722999999999516e-05, 4.774999999999918e-05, 4.829200000000186e-05, 4.774999999999918e-05, 4.893099999999859e-05, 4.8320000000001e-05, 4.776399999999875e-05, 4.892999999999911e-05, 4.833400000000057e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.040" endtime="20201030 10:58:12.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.035" endtime="20201030 10:58:12.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.046" endtime="20201030 10:58:12.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.045" endtime="20201030 10:58:12.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.044" endtime="20201030 10:58:12.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.685" endtime="20201030 10:58:12.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.684" endtime="20201030 10:58:12.067"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.076" endtime="20201030 10:58:12.096"></status>
</kw>
<msg timestamp="20201030 10:58:12.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.074" endtime="20201030 10:58:12.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.097" endtime="20201030 10:58:12.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.100" endtime="20201030 10:58:12.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.072" endtime="20201030 10:58:12.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.070" endtime="20201030 10:58:12.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.109" endtime="20201030 10:58:12.395"></status>
</kw>
<msg timestamp="20201030 10:58:12.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023479458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023530208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.108" endtime="20201030 10:58:12.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023479458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023530208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.399" endtime="20201030 10:58:12.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.408" endtime="20201030 10:58:12.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.105" endtime="20201030 10:58:12.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.103" endtime="20201030 10:58:12.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.415" level="INFO">${RESULT} = [{'diff': 5.074999999999871e-05}, {'diff': 5.008299999999938e-05}, {'diff': 5.011099999999852e-05}, {'diff': 4.952800000000007e-05}, {'diff': 5.073599999999914e-05}, {'diff': 4.894399999999868e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:12.411" endtime="20201030 10:58:12.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.419" level="INFO">${ACCURACY} = {'diff': [5.074999999999871e-05, 5.008299999999938e-05, 5.011099999999852e-05, 4.952800000000007e-05, 5.073599999999914e-05, 4.894399999999868e-05, 5.006999999999928e-05, 4.8931000000002056e-05, 5.075...</msg>
<status status="PASS" starttime="20201030 10:58:12.416" endtime="20201030 10:58:12.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.424" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.422" endtime="20201030 10:58:12.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.426" level="INFO">VALUE: [5.074999999999871e-05, 5.008299999999938e-05, 5.011099999999852e-05, 4.952800000000007e-05, 5.073599999999914e-05, 4.894399999999868e-05, 5.006999999999928e-05, 4.8931000000002056e-05, 5.075000000000218e-05, 5.0708e-05, 4.894400000000215e-05, 5.019499999999941e-05, 5.012500000000156e-05, 5.008299999999938e-05, 4.888899999999988e-05, 5.073600000000261e-05, 5.080600000000046e-05, 4.954199999999964e-05, 4.894400000000215e-05, 5.073599999999914e-05, 5.012499999999809e-05, 4.954100000000017e-05, 4.951300000000103e-05, 5.011200000000146e-05, 5.013900000000113e-05, 5.073599999999914e-05, 4.894399999999868e-05, 5.006999999999928e-05, 5.015200000000122e-05, 5.013899999999766e-05, 5.01530000000007e-05, 4.8973000000000766e-05, 5.073599999999914e-05, 4.894399999999868e-05, 4.892999999999911e-05, 4.898600000000086e-05, 4.894499999999816e-05, 4.891599999999954e-05, 5.0736999999998617e-05, 5.013899999999766e-05, 4.954100000000017e-05, 4.952800000000007e-05, 5.011099999999852e-05, 4.952699999999713e-05, 5.012500000000156e-05, 4.950000000000093e-05, 4.891699999999902e-05, 4.951399999999703e-05, 5.012500000000156e-05, 5.076399999999828e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.425" endtime="20201030 10:58:12.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.420" endtime="20201030 10:58:12.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.432" endtime="20201030 10:58:12.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.430" endtime="20201030 10:58:12.452"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.429" endtime="20201030 10:58:12.452"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.068" endtime="20201030 10:58:12.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.067" endtime="20201030 10:58:12.453"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.462" endtime="20201030 10:58:12.478"></status>
</kw>
<msg timestamp="20201030 10:58:12.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.460" endtime="20201030 10:58:12.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.480" endtime="20201030 10:58:12.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.483" endtime="20201030 10:58:12.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.458" endtime="20201030 10:58:12.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.455" endtime="20201030 10:58:12.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.492" endtime="20201030 10:58:12.778"></status>
</kw>
<msg timestamp="20201030 10:58:12.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02259175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:12.490" endtime="20201030 10:58:12.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02259175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:12.782" endtime="20201030 10:58:12.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.791" endtime="20201030 10:58:12.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.488" endtime="20201030 10:58:12.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.486" endtime="20201030 10:58:12.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.798" level="INFO">${RESULT} = [{'diff': 5.247200000000132e-05}, {'diff': 5.25409999999997e-05}, {'diff': 5.25409999999997e-05}, {'diff': 5.195800000000125e-05}, {'diff': 5.132000000000053e-05}, {'diff': 5.195900000000073e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:12.794" endtime="20201030 10:58:12.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.803" level="INFO">${ACCURACY} = {'diff': [5.247200000000132e-05, 5.25409999999997e-05, 5.25409999999997e-05, 5.195800000000125e-05, 5.132000000000053e-05, 5.195900000000073e-05, 5.255499999999927e-05, 5.131899999999759e-05, 5.195799...</msg>
<status status="PASS" starttime="20201030 10:58:12.799" endtime="20201030 10:58:12.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.807" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.806" endtime="20201030 10:58:12.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.810" level="INFO">VALUE: [5.247200000000132e-05, 5.25409999999997e-05, 5.25409999999997e-05, 5.195800000000125e-05, 5.132000000000053e-05, 5.195900000000073e-05, 5.255499999999927e-05, 5.131899999999759e-05, 5.1957999999997784e-05, 5.1929999999998644e-05, 5.070899999999948e-05, 5.259700000000145e-05, 5.254199999999917e-05, 5.25409999999997e-05, 5.127800000000182e-05, 5.126399999999878e-05, 5.1929999999998644e-05, 5.194400000000168e-05, 5.25279999999996e-05, 5.13340000000001e-05, 5.133299999999716e-05, 5.13340000000001e-05, 5.13340000000001e-05, 5.131900000000106e-05, 5.134800000000314e-05, 5.25409999999997e-05, 5.1943999999998214e-05, 5.136099999999977e-05, 5.1915999999999074e-05, 5.136100000000324e-05, 5.195900000000073e-05, 5.25279999999996e-05, 5.25409999999997e-05, 5.131999999999706e-05, 5.073599999999914e-05, 5.079100000000142e-05, 5.136199999999924e-05, 5.127800000000182e-05, 5.133300000000063e-05, 5.133299999999716e-05, 5.25409999999997e-05, 5.195800000000125e-05, 5.082000000000003e-05, 5.1957999999997784e-05, 5.13340000000001e-05, 5.137499999999934e-05, 5.133300000000063e-05, 5.194500000000116e-05, 5.130500000000149e-05, 5.133300000000063e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.808" endtime="20201030 10:58:12.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.804" endtime="20201030 10:58:12.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.815" endtime="20201030 10:58:12.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.814" endtime="20201030 10:58:12.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.812" endtime="20201030 10:58:12.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.454" endtime="20201030 10:58:12.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.453" endtime="20201030 10:58:12.836"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.845" endtime="20201030 10:58:12.863"></status>
</kw>
<msg timestamp="20201030 10:58:12.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.843" endtime="20201030 10:58:12.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.864" endtime="20201030 10:58:12.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.867" endtime="20201030 10:58:12.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.841" endtime="20201030 10:58:12.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.838" endtime="20201030 10:58:12.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.876" endtime="20201030 10:58:13.163"></status>
</kw>
<msg timestamp="20201030 10:58:13.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.875" endtime="20201030 10:58:13.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.167" endtime="20201030 10:58:13.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.176" endtime="20201030 10:58:13.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.872" endtime="20201030 10:58:13.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.870" endtime="20201030 10:58:13.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.183" level="INFO">${RESULT} = [{'diff': 5.31669999999998e-05}, {'diff': 5.434699999999973e-05}, {'diff': 5.375000000000171e-05}, {'diff': 5.376400000000128e-05}, {'diff': 5.497299999999983e-05}, {'diff': 5.31669999999998e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:13.179" endtime="20201030 10:58:13.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:13.187" level="INFO">${ACCURACY} = {'diff': [5.31669999999998e-05, 5.434699999999973e-05, 5.375000000000171e-05, 5.376400000000128e-05, 5.497299999999983e-05, 5.31669999999998e-05, 5.5013999999999064e-05, 5.4972000000000354e-05, 5.4971...</msg>
<status status="PASS" starttime="20201030 10:58:13.184" endtime="20201030 10:58:13.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.192" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 10:58:13.191" endtime="20201030 10:58:13.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.194" level="INFO">VALUE: [5.31669999999998e-05, 5.434699999999973e-05, 5.375000000000171e-05, 5.376400000000128e-05, 5.497299999999983e-05, 5.31669999999998e-05, 5.5013999999999064e-05, 5.4972000000000354e-05, 5.4971999999996884e-05, 5.434699999999973e-05, 5.3763999999997814e-05, 5.376400000000128e-05, 5.3151999999997285e-05, 5.3749999999998244e-05, 5.375000000000171e-05, 5.315300000000023e-05, 5.3749999999998244e-05, 5.43609999999993e-05, 5.43609999999993e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.375000000000171e-05, 5.43609999999993e-05, 5.43609999999993e-05, 5.3137999999997715e-05, 5.497299999999983e-05, 5.4958000000000784e-05, 5.373600000000214e-05, 5.43470000000032e-05, 5.377800000000085e-05, 5.436100000000277e-05, 5.440300000000148e-05, 5.313900000000066e-05, 5.315300000000023e-05, 5.4985999999999924e-05, 5.312500000000109e-05, 5.318099999999937e-05, 5.375000000000171e-05, 5.3152000000000754e-05, 5.437500000000234e-05, 5.315300000000023e-05, 5.3749999999998244e-05, 5.437499999999887e-05, 5.436200000000224e-05, 5.3152000000000754e-05, 5.43609999999993e-05, 5.380500000000052e-05, 5.43609999999993e-05, 5.43609999999993e-05, 5.315300000000023e-05]</msg>
<status status="PASS" starttime="20201030 10:58:13.193" endtime="20201030 10:58:13.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.188" endtime="20201030 10:58:13.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.199" endtime="20201030 10:58:13.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.198" endtime="20201030 10:58:13.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.197" endtime="20201030 10:58:13.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.837" endtime="20201030 10:58:13.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.836" endtime="20201030 10:58:13.220"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.229" endtime="20201030 10:58:13.247"></status>
</kw>
<msg timestamp="20201030 10:58:13.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.227" endtime="20201030 10:58:13.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.249" endtime="20201030 10:58:13.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.252" endtime="20201030 10:58:13.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.225" endtime="20201030 10:58:13.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.223" endtime="20201030 10:58:13.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.261" endtime="20201030 10:58:13.549"></status>
</kw>
<msg timestamp="20201030 10:58:13.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023449792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023506542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.260" endtime="20201030 10:58:13.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023449792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023506542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.554" endtime="20201030 10:58:13.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.562" endtime="20201030 10:58:13.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.257" endtime="20201030 10:58:13.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.255" endtime="20201030 10:58:13.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.569" level="INFO">${RESULT} = [{'diff': 5.6749999999997774e-05}, {'diff': 5.6778000000000384e-05}, {'diff': 5.556899999999837e-05}, {'diff': 5.61670000000028e-05}, {'diff': 5.4944000000001214e-05}, {'diff': 5.6764000000000814e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:13.566" endtime="20201030 10:58:13.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:13.573" level="INFO">${ACCURACY} = {'diff': [5.6749999999997774e-05, 5.6778000000000384e-05, 5.556899999999837e-05, 5.61670000000028e-05, 5.4944000000001214e-05, 5.6764000000000814e-05, 5.6791999999999954e-05, 5.6222000000001604e-05, 5...</msg>
<status status="PASS" starttime="20201030 10:58:13.570" endtime="20201030 10:58:13.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.578" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 10:58:13.576" endtime="20201030 10:58:13.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.581" level="INFO">VALUE: [5.6749999999997774e-05, 5.6778000000000384e-05, 5.556899999999837e-05, 5.61670000000028e-05, 5.4944000000001214e-05, 5.6764000000000814e-05, 5.6791999999999954e-05, 5.6222000000001604e-05, 5.6778000000000384e-05, 5.6791999999999954e-05, 5.6180000000002894e-05, 5.558299999999794e-05, 5.556899999999837e-05, 5.49730000000033e-05, 5.6180000000002894e-05, 5.559699999999751e-05, 5.615299999999976e-05, 5.61670000000028e-05, 5.616699999999933e-05, 5.557000000000131e-05, 5.6778000000000384e-05, 5.6805999999999524e-05, 5.5555999999998273e-05, 5.4972000000000354e-05, 5.6221999999998135e-05, 5.4972000000000354e-05, 5.616699999999933e-05, 5.677700000000091e-05, 5.556999999999784e-05, 5.4972000000000354e-05, 5.61670000000028e-05, 5.6193999999998995e-05, 5.6165999999999855e-05, 5.556999999999784e-05, 5.557000000000131e-05, 5.556899999999837e-05, 5.615299999999976e-05, 5.556900000000184e-05, 5.556999999999784e-05, 5.557000000000131e-05, 5.557000000000131e-05, 5.556900000000184e-05, 5.616699999999933e-05, 5.6179999999999425e-05, 5.672299999999811e-05, 5.6764000000000814e-05, 5.558400000000088e-05, 5.6778000000000384e-05, 5.613900000000019e-05, 5.6778000000000384e-05]</msg>
<status status="PASS" starttime="20201030 10:58:13.579" endtime="20201030 10:58:13.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.574" endtime="20201030 10:58:13.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.586" endtime="20201030 10:58:13.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.584" endtime="20201030 10:58:13.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.583" endtime="20201030 10:58:13.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.221" endtime="20201030 10:58:13.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.220" endtime="20201030 10:58:13.607"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.615" endtime="20201030 10:58:13.633"></status>
</kw>
<msg timestamp="20201030 10:58:13.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.614" endtime="20201030 10:58:13.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.634" endtime="20201030 10:58:13.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.637" endtime="20201030 10:58:13.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.611" endtime="20201030 10:58:13.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.609" endtime="20201030 10:58:13.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.646" endtime="20201030 10:58:13.931"></status>
</kw>
<msg timestamp="20201030 10:58:13.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:13.644" endtime="20201030 10:58:13.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:13.935" endtime="20201030 10:58:13.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.943" endtime="20201030 10:58:13.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.642" endtime="20201030 10:58:13.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.640" endtime="20201030 10:58:13.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.950" level="INFO">${RESULT} = [{'diff': 5.6778000000000384e-05}, {'diff': 5.738899999999797e-05}, {'diff': 5.859700000000051e-05}, {'diff': 5.737500000000187e-05}, {'diff': 5.859700000000051e-05}, {'diff': 5.8000000000002494e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:13.947" endtime="20201030 10:58:13.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:13.955" level="INFO">${ACCURACY} = {'diff': [5.6778000000000384e-05, 5.738899999999797e-05, 5.859700000000051e-05, 5.737500000000187e-05, 5.859700000000051e-05, 5.8000000000002494e-05, 5.856900000000137e-05, 5.8056000000000774e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 10:58:13.951" endtime="20201030 10:58:13.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.959" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 10:58:13.958" endtime="20201030 10:58:13.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.962" level="INFO">VALUE: [5.6778000000000384e-05, 5.738899999999797e-05, 5.859700000000051e-05, 5.737500000000187e-05, 5.859700000000051e-05, 5.8000000000002494e-05, 5.856900000000137e-05, 5.8056000000000774e-05, 5.738900000000144e-05, 5.738900000000144e-05, 5.7999999999999025e-05, 5.7971999999999885e-05, 5.73749999999984e-05, 5.737500000000187e-05, 5.733299999999969e-05, 5.73610000000023e-05, 5.8583999999996944e-05, 5.73749999999984e-05, 5.736099999999883e-05, 5.73749999999984e-05, 5.679100000000048e-05, 5.740300000000101e-05, 5.861100000000008e-05, 5.73610000000023e-05, 5.858300000000094e-05, 5.858300000000094e-05, 5.743100000000015e-05, 5.7999999999999025e-05, 5.7999999999999025e-05, 5.7971999999999885e-05, 5.8583999999996944e-05, 5.738899999999797e-05, 5.73749999999984e-05, 5.8584000000000414e-05, 5.8000000000002494e-05, 5.8584000000000414e-05, 5.858300000000094e-05, 5.6791999999999954e-05, 5.7999999999999025e-05, 5.7971999999999885e-05, 5.8597999999999983e-05, 5.8000000000002494e-05, 5.73749999999984e-05, 5.6764000000000814e-05, 5.8042000000001204e-05, 5.737500000000187e-05, 5.8584000000000414e-05, 5.8584000000000414e-05, 5.8000000000002494e-05, 5.7985999999999455e-05]</msg>
<status status="PASS" starttime="20201030 10:58:13.960" endtime="20201030 10:58:13.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.956" endtime="20201030 10:58:13.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.967" endtime="20201030 10:58:13.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.965" endtime="20201030 10:58:13.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.964" endtime="20201030 10:58:13.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.607" endtime="20201030 10:58:13.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.607" endtime="20201030 10:58:13.987"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.996" endtime="20201030 10:58:14.014"></status>
</kw>
<msg timestamp="20201030 10:58:14.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.994" endtime="20201030 10:58:14.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.016" endtime="20201030 10:58:14.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.018" endtime="20201030 10:58:14.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.992" endtime="20201030 10:58:14.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.990" endtime="20201030 10:58:14.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.027" endtime="20201030 10:58:14.315"></status>
</kw>
<msg timestamp="20201030 10:58:14.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022389097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.025" endtime="20201030 10:58:14.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022389097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.319" endtime="20201030 10:58:14.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.327" endtime="20201030 10:58:14.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.023" endtime="20201030 10:58:14.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.021" endtime="20201030 10:58:14.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.334" level="INFO">${RESULT} = [{'diff': 6.040300000000054e-05}, {'diff': 5.979100000000001e-05}, {'diff': 5.980499999999958e-05}, {'diff': 6.045900000000229e-05}, {'diff': 6.040300000000054e-05}, {'diff': 5.916699999999886e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:14.331" endtime="20201030 10:58:14.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:14.338" level="INFO">${ACCURACY} = {'diff': [6.040300000000054e-05, 5.979100000000001e-05, 5.980499999999958e-05, 6.045900000000229e-05, 6.040300000000054e-05, 5.916699999999886e-05, 6.040300000000054e-05, 5.9805999999999054e-05, 5.919...</msg>
<status status="PASS" starttime="20201030 10:58:14.335" endtime="20201030 10:58:14.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.342" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 10:58:14.341" endtime="20201030 10:58:14.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.345" level="INFO">VALUE: [6.040300000000054e-05, 5.979100000000001e-05, 5.980499999999958e-05, 6.045900000000229e-05, 6.040300000000054e-05, 5.916699999999886e-05, 6.040300000000054e-05, 5.9805999999999054e-05, 5.9194000000001995e-05, 5.980499999999958e-05, 5.9848000000001234e-05, 6.040300000000054e-05, 6.0402000000001066e-05, 5.918099999999843e-05, 5.9833999999998194e-05, 5.977700000000044e-05, 5.979100000000001e-05, 5.922300000000061e-05, 6.040300000000054e-05, 6.037499999999793e-05, 6.038900000000097e-05, 5.9736000000001205e-05, 6.038900000000097e-05, 6.0985999999998985e-05, 5.980499999999958e-05, 5.9194000000001995e-05, 5.9208000000001565e-05, 5.920899999999757e-05, 5.9791999999999484e-05, 6.0415999999997166e-05, 5.9278000000002884e-05, 6.041700000000011e-05, 5.980499999999958e-05, 5.9208000000001565e-05, 5.922299999999714e-05, 6.1000000000002025e-05, 5.9194000000001995e-05, 5.919500000000147e-05, 6.0986000000002455e-05, 5.9207999999998095e-05, 5.9791999999999484e-05, 6.037499999999793e-05, 5.980499999999958e-05, 6.036100000000183e-05, 5.9250000000000275e-05, 6.0472000000002385e-05, 6.043099999999968e-05, 5.9791999999999484e-05, 5.9193999999998526e-05, 5.919500000000147e-05]</msg>
<status status="PASS" starttime="20201030 10:58:14.344" endtime="20201030 10:58:14.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.339" endtime="20201030 10:58:14.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.350" endtime="20201030 10:58:14.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.348" endtime="20201030 10:58:14.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.347" endtime="20201030 10:58:14.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.988" endtime="20201030 10:58:14.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.988" endtime="20201030 10:58:14.370"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.379" endtime="20201030 10:58:14.398"></status>
</kw>
<msg timestamp="20201030 10:58:14.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.377" endtime="20201030 10:58:14.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.399" endtime="20201030 10:58:14.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.402" endtime="20201030 10:58:14.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.375" endtime="20201030 10:58:14.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.373" endtime="20201030 10:58:14.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.410" endtime="20201030 10:58:14.696"></status>
</kw>
<msg timestamp="20201030 10:58:14.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022708847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.409" endtime="20201030 10:58:14.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022708847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.700" endtime="20201030 10:58:14.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.709" endtime="20201030 10:58:14.711"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.406" endtime="20201030 10:58:14.711"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.405" endtime="20201030 10:58:14.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.716" level="INFO">${RESULT} = [{'diff': 6.280599999999859e-05}, {'diff': 6.283300000000172e-05}, {'diff': 6.162499999999918e-05}, {'diff': 6.282000000000162e-05}, {'diff': 6.163899999999875e-05}, {'diff': 6.281999999999816e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:14.712" endtime="20201030 10:58:14.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:14.720" level="INFO">${ACCURACY} = {'diff': [6.280599999999859e-05, 6.283300000000172e-05, 6.162499999999918e-05, 6.282000000000162e-05, 6.163899999999875e-05, 6.281999999999816e-05, 6.283299999999825e-05, 6.223600000000024e-05, 6.2804...</msg>
<status status="PASS" starttime="20201030 10:58:14.717" endtime="20201030 10:58:14.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.724" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 10:58:14.723" endtime="20201030 10:58:14.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.727" level="INFO">VALUE: [6.280599999999859e-05, 6.283300000000172e-05, 6.162499999999918e-05, 6.282000000000162e-05, 6.163899999999875e-05, 6.281999999999816e-05, 6.283299999999825e-05, 6.223600000000024e-05, 6.280499999999911e-05, 6.161099999999961e-05, 6.280600000000205e-05, 6.219399999999806e-05, 6.222200000000067e-05, 6.0999999999998555e-05, 6.0999999999998555e-05, 6.222200000000067e-05, 6.165199999999885e-05, 6.161199999999908e-05, 6.161099999999961e-05, 6.159700000000004e-05, 6.161099999999961e-05, 6.162499999999918e-05, 6.161199999999908e-05, 6.10560000000003e-05, 6.159700000000004e-05, 6.1028000000001165e-05, 6.22499999999998e-05, 6.1028000000001165e-05, 6.222200000000067e-05, 6.162499999999918e-05, 6.1000000000002025e-05, 6.280600000000205e-05, 6.162499999999918e-05, 6.155599999999734e-05, 6.283299999999825e-05, 6.161099999999961e-05, 6.163799999999928e-05, 6.1014000000001595e-05, 6.161099999999961e-05, 6.163900000000222e-05, 6.222200000000067e-05, 6.215299999999882e-05, 6.22080000000011e-05, 6.161099999999961e-05, 6.0985999999998985e-05, 6.158399999999994e-05, 6.161099999999961e-05, 6.0986000000002455e-05, 6.161099999999961e-05, 6.281900000000215e-05]</msg>
<status status="PASS" starttime="20201030 10:58:14.725" endtime="20201030 10:58:14.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.721" endtime="20201030 10:58:14.729"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.732" endtime="20201030 10:58:14.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.731" endtime="20201030 10:58:14.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.730" endtime="20201030 10:58:14.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.371" endtime="20201030 10:58:14.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.371" endtime="20201030 10:58:14.753"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.761" endtime="20201030 10:58:14.780"></status>
</kw>
<msg timestamp="20201030 10:58:14.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.760" endtime="20201030 10:58:14.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.782" endtime="20201030 10:58:14.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.784" endtime="20201030 10:58:14.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.757" endtime="20201030 10:58:14.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.755" endtime="20201030 10:58:14.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.793" endtime="20201030 10:58:15.079"></status>
</kw>
<msg timestamp="20201030 10:58:15.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.791" endtime="20201030 10:58:15.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.083" endtime="20201030 10:58:15.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.091" endtime="20201030 10:58:15.093"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.789" endtime="20201030 10:58:15.093"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.787" endtime="20201030 10:58:15.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.097" level="INFO">${RESULT} = [{'diff': 6.401400000000113e-05}, {'diff': 6.40280000000007e-05}, {'diff': 6.33890000000005e-05}, {'diff': 6.40280000000007e-05}, {'diff': 6.279199999999902e-05}, {'diff': 6.463899999999828e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:15.094" endtime="20201030 10:58:15.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:15.102" level="INFO">${ACCURACY} = {'diff': [6.401400000000113e-05, 6.40280000000007e-05, 6.33890000000005e-05, 6.40280000000007e-05, 6.279199999999902e-05, 6.463899999999828e-05, 6.462500000000218e-05, 6.343099999999921e-05, 6.3416000...</msg>
<status status="PASS" starttime="20201030 10:58:15.098" endtime="20201030 10:58:15.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.107" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 10:58:15.106" endtime="20201030 10:58:15.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.109" level="INFO">VALUE: [6.401400000000113e-05, 6.40280000000007e-05, 6.33890000000005e-05, 6.40280000000007e-05, 6.279199999999902e-05, 6.463899999999828e-05, 6.462500000000218e-05, 6.343099999999921e-05, 6.341600000000017e-05, 6.40280000000007e-05, 6.40280000000007e-05, 6.40280000000007e-05, 6.341600000000017e-05, 6.344500000000225e-05, 6.462500000000218e-05, 6.283299999999825e-05, 6.463899999999828e-05, 6.277699999999997e-05, 6.345799999999888e-05, 6.341699999999964e-05, 6.406899999999993e-05, 6.40280000000007e-05, 6.281899999999868e-05, 6.342999999999974e-05, 6.40280000000007e-05, 6.343099999999921e-05, 6.341700000000311e-05, 6.344499999999878e-05, 6.466599999999795e-05, 6.343099999999921e-05, 6.40280000000007e-05, 6.341600000000017e-05, 6.461100000000261e-05, 6.40280000000007e-05, 6.40280000000007e-05, 6.402799999999723e-05, 6.341699999999964e-05, 6.40280000000007e-05, 6.341600000000017e-05, 6.40280000000007e-05, 6.40829999999995e-05, 6.40280000000007e-05, 6.461099999999914e-05, 6.409699999999907e-05, 6.462500000000218e-05, 6.463900000000175e-05, 6.40280000000007e-05, 6.283299999999825e-05, 6.469500000000003e-05, 6.455499999999739e-05]</msg>
<status status="PASS" starttime="20201030 10:58:15.108" endtime="20201030 10:58:15.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.103" endtime="20201030 10:58:15.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.114" endtime="20201030 10:58:15.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.112" endtime="20201030 10:58:15.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.111" endtime="20201030 10:58:15.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.754" endtime="20201030 10:58:15.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.753" endtime="20201030 10:58:15.135"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.143" endtime="20201030 10:58:15.161"></status>
</kw>
<msg timestamp="20201030 10:58:15.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.142" endtime="20201030 10:58:15.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.162" endtime="20201030 10:58:15.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.165" endtime="20201030 10:58:15.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.139" endtime="20201030 10:58:15.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.137" endtime="20201030 10:58:15.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.174" endtime="20201030 10:58:15.459"></status>
</kw>
<msg timestamp="20201030 10:58:15.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.172" endtime="20201030 10:58:15.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.464" endtime="20201030 10:58:15.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.472" endtime="20201030 10:58:15.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.170" endtime="20201030 10:58:15.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.168" endtime="20201030 10:58:15.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.478" level="INFO">${RESULT} = [{'diff': 6.52500000000028e-05}, {'diff': 6.59029999999991e-05}, {'diff': 6.52500000000028e-05}, {'diff': 6.645799999999841e-05}, {'diff': 6.645799999999841e-05}, {'diff': 6.645799999999841e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:15.475" endtime="20201030 10:58:15.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:15.482" level="INFO">${ACCURACY} = {'diff': [6.52500000000028e-05, 6.59029999999991e-05, 6.52500000000028e-05, 6.645799999999841e-05, 6.645799999999841e-05, 6.645799999999841e-05, 6.643100000000221e-05, 6.583400000000073e-05, 6.5235999...</msg>
<status status="PASS" starttime="20201030 10:58:15.479" endtime="20201030 10:58:15.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.487" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 10:58:15.486" endtime="20201030 10:58:15.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.489" level="INFO">VALUE: [6.52500000000028e-05, 6.59029999999991e-05, 6.52500000000028e-05, 6.645799999999841e-05, 6.645799999999841e-05, 6.645799999999841e-05, 6.643100000000221e-05, 6.583400000000073e-05, 6.523599999999977e-05, 6.705599999999937e-05, 6.704100000000032e-05, 6.581999999999769e-05, 6.524999999999934e-05, 6.644499999999831e-05, 6.587499999999996e-05, 6.644399999999884e-05, 6.644499999999831e-05, 6.587499999999996e-05, 6.524999999999934e-05, 6.64440000000023e-05, 6.584700000000082e-05, 6.641699999999917e-05, 6.524999999999934e-05, 6.583300000000125e-05, 6.586199999999987e-05, 6.705499999999989e-05, 6.58480000000003e-05, 6.523599999999977e-05, 6.645900000000135e-05, 6.583399999999726e-05, 6.583300000000125e-05, 6.52220000000002e-05, 6.524999999999934e-05, 6.643100000000221e-05, 6.523599999999977e-05, 6.643100000000221e-05, 6.645899999999788e-05, 6.526400000000238e-05, 6.584700000000082e-05, 6.523600000000324e-05, 6.58480000000003e-05, 6.580500000000211e-05, 6.583300000000125e-05, 6.52220000000002e-05, 6.523599999999977e-05, 6.644399999999884e-05, 6.586199999999987e-05, 6.636100000000089e-05, 6.583299999999778e-05, 6.582000000000116e-05]</msg>
<status status="PASS" starttime="20201030 10:58:15.488" endtime="20201030 10:58:15.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.483" endtime="20201030 10:58:15.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.494" endtime="20201030 10:58:15.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.492" endtime="20201030 10:58:15.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.491" endtime="20201030 10:58:15.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.135" endtime="20201030 10:58:15.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.135" endtime="20201030 10:58:15.515"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.523" endtime="20201030 10:58:15.542"></status>
</kw>
<msg timestamp="20201030 10:58:15.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.521" endtime="20201030 10:58:15.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.544" endtime="20201030 10:58:15.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.546" endtime="20201030 10:58:15.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.519" endtime="20201030 10:58:15.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.517" endtime="20201030 10:58:15.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.555" endtime="20201030 10:58:15.841"></status>
</kw>
<msg timestamp="20201030 10:58:15.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.554" endtime="20201030 10:58:15.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.846" endtime="20201030 10:58:15.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.854" endtime="20201030 10:58:15.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.551" endtime="20201030 10:58:15.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.549" endtime="20201030 10:58:15.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.860" level="INFO">${RESULT} = [{'diff': 8.29590000000005e-05}, {'diff': 8.426399999999709e-05}, {'diff': 8.327799999999913e-05}, {'diff': 8.413900000000044e-05}, {'diff': 8.444399999999949e-05}, {'diff': 8.343000000000239e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:15.857" endtime="20201030 10:58:15.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:15.864" level="INFO">${ACCURACY} = {'diff': [8.29590000000005e-05, 8.426399999999709e-05, 8.327799999999913e-05, 8.413900000000044e-05, 8.444399999999949e-05, 8.343000000000239e-05, 8.362500000000037e-05, 8.361099999999733e-05, 8.34580...</msg>
<status status="PASS" starttime="20201030 10:58:15.861" endtime="20201030 10:58:15.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.869" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 10:58:15.868" endtime="20201030 10:58:15.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.871" level="INFO">VALUE: [8.29590000000005e-05, 8.426399999999709e-05, 8.327799999999913e-05, 8.413900000000044e-05, 8.444399999999949e-05, 8.343000000000239e-05, 8.362500000000037e-05, 8.361099999999733e-05, 8.345800000000153e-05, 8.461099999999833e-05, 8.279200000000167e-05, 8.430599999999927e-05, 8.326400000000303e-05, 8.394499999999847e-05, 8.411200000000077e-05, 8.29720000000006e-05, 8.41110000000013e-05, 8.427800000000013e-05, 8.31110000000003e-05, 8.295800000000103e-05, 8.444399999999949e-05, 8.355599999999852e-05, 8.427800000000013e-05, 8.31110000000003e-05, 8.32780000000026e-05, 8.376400000000006e-05, 8.394500000000193e-05, 8.379099999999973e-05, 8.294399999999799e-05, 8.37780000000031e-05, 8.295800000000103e-05, 8.444399999999949e-05, 8.326399999999956e-05, 8.377799999999963e-05, 8.413900000000044e-05, 8.394499999999847e-05, 8.327799999999913e-05, 8.30980000000002e-05, 8.41110000000013e-05, 8.326300000000009e-05, 8.320800000000128e-05, 8.444400000000296e-05, 8.313899999999944e-05, 8.37919999999992e-05, 8.444399999999949e-05, 8.39590000000015e-05, 8.27780000000021e-05, 8.35980000000007e-05, 8.377799999999963e-05, 8.344500000000143e-05]</msg>
<status status="PASS" starttime="20201030 10:58:15.870" endtime="20201030 10:58:15.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.865" endtime="20201030 10:58:15.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.877" endtime="20201030 10:58:15.896"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.875" endtime="20201030 10:58:15.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.874" endtime="20201030 10:58:15.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.515" endtime="20201030 10:58:15.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.515" endtime="20201030 10:58:15.897"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.906" endtime="20201030 10:58:15.925"></status>
</kw>
<msg timestamp="20201030 10:58:15.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.904" endtime="20201030 10:58:15.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.926" endtime="20201030 10:58:15.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.929" endtime="20201030 10:58:15.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.902" endtime="20201030 10:58:15.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.900" endtime="20201030 10:58:15.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.937" endtime="20201030 10:58:16.223"></status>
</kw>
<msg timestamp="20201030 10:58:16.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.936" endtime="20201030 10:58:16.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.227" endtime="20201030 10:58:16.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.235" endtime="20201030 10:58:16.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.933" endtime="20201030 10:58:16.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.932" endtime="20201030 10:58:16.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.242" level="INFO">${RESULT} = [{'diff': 8.611099999999983e-05}, {'diff': 8.476400000000106e-05}, {'diff': 8.577699999999869e-05}, {'diff': 8.594400000000099e-05}, {'diff': 8.637499999999965e-05}, {'diff': 8.56110000000028e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:16.239" endtime="20201030 10:58:16.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.247" level="INFO">${ACCURACY} = {'diff': [8.611099999999983e-05, 8.476400000000106e-05, 8.577699999999869e-05, 8.594400000000099e-05, 8.637499999999965e-05, 8.56110000000028e-05, 8.643000000000192e-05, 8.544400000000049e-05, 8.61249...</msg>
<status status="PASS" starttime="20201030 10:58:16.243" endtime="20201030 10:58:16.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.251" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.250" endtime="20201030 10:58:16.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.254" level="INFO">VALUE: [8.611099999999983e-05, 8.476400000000106e-05, 8.577699999999869e-05, 8.594400000000099e-05, 8.637499999999965e-05, 8.56110000000028e-05, 8.643000000000192e-05, 8.544400000000049e-05, 8.61249999999994e-05, 8.49309999999999e-05, 8.51249999999984e-05, 8.494499999999947e-05, 8.644500000000097e-05, 8.495799999999956e-05, 8.54720000000031e-05, 8.661100000000033e-05, 8.644399999999802e-05, 8.643099999999793e-05, 8.524999999999852e-05, 8.580600000000077e-05, 8.61249999999994e-05, 8.559699999999976e-05, 8.61249999999994e-05, 8.527800000000113e-05, 8.477799999999716e-05, 8.561099999999933e-05, 8.561099999999933e-05, 8.518100000000015e-05, 8.477800000000063e-05, 8.626399999999909e-05, 8.470799999999931e-05, 8.49309999999999e-05, 8.577800000000163e-05, 8.56110000000028e-05, 8.577799999999816e-05, 8.522199999999938e-05, 8.573599999999945e-05, 8.595799999999709e-05, 8.627799999999866e-05, 8.526400000000156e-05, 8.494399999999999e-05, 8.562500000000237e-05, 8.61249999999994e-05, 8.577799999999816e-05, 8.561099999999933e-05, 8.645900000000054e-05, 8.661100000000033e-05, 8.580499999999783e-05, 8.509699999999926e-05, 8.613899999999897e-05]</msg>
<status status="PASS" starttime="20201030 10:58:16.252" endtime="20201030 10:58:16.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.248" endtime="20201030 10:58:16.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.259" endtime="20201030 10:58:16.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.257" endtime="20201030 10:58:16.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.256" endtime="20201030 10:58:16.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.898" endtime="20201030 10:58:16.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.898" endtime="20201030 10:58:16.279"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.288" endtime="20201030 10:58:16.308"></status>
</kw>
<msg timestamp="20201030 10:58:16.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.286" endtime="20201030 10:58:16.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.309" endtime="20201030 10:58:16.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.312" endtime="20201030 10:58:16.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.284" endtime="20201030 10:58:16.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.282" endtime="20201030 10:58:16.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.320" endtime="20201030 10:58:16.607"></status>
</kw>
<msg timestamp="20201030 10:58:16.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:16.319" endtime="20201030 10:58:16.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:16.611" endtime="20201030 10:58:16.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.619" endtime="20201030 10:58:16.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.316" endtime="20201030 10:58:16.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.315" endtime="20201030 10:58:16.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.626" level="INFO">${RESULT} = [{'diff': 8.67920000000022e-05}, {'diff': 8.834800000000198e-05}, {'diff': 8.861100000000233e-05}, {'diff': 8.84449999999995e-05}, {'diff': 8.729199999999923e-05}, {'diff': 8.74310000000024e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:16.623" endtime="20201030 10:58:16.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.630" level="INFO">${ACCURACY} = {'diff': [8.67920000000022e-05, 8.834800000000198e-05, 8.861100000000233e-05, 8.84449999999995e-05, 8.729199999999923e-05, 8.74310000000024e-05, 8.73050000000028e-05, 8.715299999999954e-05, 8.71110000...</msg>
<status status="PASS" starttime="20201030 10:58:16.627" endtime="20201030 10:58:16.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.634" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.633" endtime="20201030 10:58:16.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.637" level="INFO">VALUE: [8.67920000000022e-05, 8.834800000000198e-05, 8.861100000000233e-05, 8.84449999999995e-05, 8.729199999999923e-05, 8.74310000000024e-05, 8.73050000000028e-05, 8.715299999999954e-05, 8.711100000000083e-05, 8.729099999999976e-05, 8.711100000000083e-05, 8.71250000000004e-05, 8.694399999999852e-05, 8.863900000000147e-05, 8.695900000000104e-05, 8.811099999999836e-05, 8.713899999999997e-05, 8.866599999999766e-05, 8.745799999999859e-05, 8.711100000000083e-05, 8.695799999999809e-05, 8.795799999999909e-05, 8.792999999999995e-05, 8.811099999999836e-05, 8.670800000000131e-05, 8.744500000000197e-05, 8.811100000000183e-05, 8.775000000000102e-05, 8.866599999999766e-05, 8.776400000000059e-05, 8.711100000000083e-05, 8.845799999999959e-05, 8.829099999999729e-05, 8.859699999999929e-05, 8.709700000000126e-05, 8.675000000000002e-05, 8.750000000000077e-05, 8.727799999999966e-05, 8.78059999999993e-05, 8.711100000000083e-05, 8.681900000000187e-05, 8.713899999999997e-05, 8.676300000000012e-05, 8.861099999999886e-05, 8.761099999999786e-05, 8.827800000000066e-05, 8.845799999999959e-05, 8.795799999999909e-05, 8.729199999999923e-05, 8.756999999999862e-05]</msg>
<status status="PASS" starttime="20201030 10:58:16.635" endtime="20201030 10:58:16.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.631" endtime="20201030 10:58:16.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.642" endtime="20201030 10:58:16.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.640" endtime="20201030 10:58:16.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.639" endtime="20201030 10:58:16.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.280" endtime="20201030 10:58:16.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.280" endtime="20201030 10:58:16.662"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.671" endtime="20201030 10:58:16.691"></status>
</kw>
<msg timestamp="20201030 10:58:16.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.669" endtime="20201030 10:58:16.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.693" endtime="20201030 10:58:16.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.695" endtime="20201030 10:58:16.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.667" endtime="20201030 10:58:16.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.665" endtime="20201030 10:58:16.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.704" endtime="20201030 10:58:16.989"></status>
</kw>
<msg timestamp="20201030 10:58:16.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023051125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.703" endtime="20201030 10:58:16.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023051125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.993" endtime="20201030 10:58:17.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.002" endtime="20201030 10:58:17.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.700" endtime="20201030 10:58:17.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.698" endtime="20201030 10:58:17.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.008" level="INFO">${RESULT} = [{'diff': 9.061099999999739e-05}, {'diff': 8.959700000000029e-05}, {'diff': 8.973599999999998e-05}, {'diff': 8.912499999999893e-05}, {'diff': 8.961099999999986e-05}, {'diff': 8.895800000000009e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:17.005" endtime="20201030 10:58:17.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.012" level="INFO">${ACCURACY} = {'diff': [9.061099999999739e-05, 8.959700000000029e-05, 8.973599999999998e-05, 8.912499999999893e-05, 8.961099999999986e-05, 8.895800000000009e-05, 8.876299999999865e-05, 8.911100000000283e-05, 8.9278...</msg>
<status status="PASS" starttime="20201030 10:58:17.009" endtime="20201030 10:58:17.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.017" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.016" endtime="20201030 10:58:17.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.020" level="INFO">VALUE: [9.061099999999739e-05, 8.959700000000029e-05, 8.973599999999998e-05, 8.912499999999893e-05, 8.961099999999986e-05, 8.895800000000009e-05, 8.876299999999865e-05, 8.911100000000283e-05, 8.927800000000166e-05, 9.062500000000043e-05, 8.961099999999986e-05, 8.995799999999762e-05, 8.945900000000007e-05, 8.957000000000062e-05, 9.044499999999803e-05, 8.976399999999912e-05, 8.940300000000179e-05, 8.961099999999986e-05, 8.942999999999798e-05, 8.994400000000152e-05, 9.013900000000297e-05, 8.929200000000123e-05, 8.911099999999936e-05, 9.061100000000086e-05, 8.976399999999912e-05, 9.011100000000036e-05, 9.011099999999689e-05, 9.059800000000076e-05, 9.025000000000005e-05, 8.972199999999694e-05, 9.058299999999825e-05, 8.897199999999966e-05, 9.027799999999919e-05, 8.945800000000059e-05, 8.911099999999936e-05, 9.016599999999916e-05, 8.979200000000173e-05, 8.977800000000216e-05, 8.995800000000109e-05, 8.929099999999829e-05, 9.058299999999825e-05, 8.923599999999948e-05, 8.93060000000008e-05, 8.980599999999783e-05, 8.915300000000154e-05, 9.04450000000015e-05, 8.961099999999986e-05, 8.993099999999796e-05, 8.941600000000188e-05, 8.961099999999986e-05]</msg>
<status status="PASS" starttime="20201030 10:58:17.018" endtime="20201030 10:58:17.021"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.013" endtime="20201030 10:58:17.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.025" endtime="20201030 10:58:17.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.023" endtime="20201030 10:58:17.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.022" endtime="20201030 10:58:17.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.663" endtime="20201030 10:58:17.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.663" endtime="20201030 10:58:17.045"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.054" endtime="20201030 10:58:17.073"></status>
</kw>
<msg timestamp="20201030 10:58:17.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.052" endtime="20201030 10:58:17.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.074" endtime="20201030 10:58:17.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.077" endtime="20201030 10:58:17.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.050" endtime="20201030 10:58:17.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.048" endtime="20201030 10:58:17.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.086" endtime="20201030 10:58:17.370"></status>
</kw>
<msg timestamp="20201030 10:58:17.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:17.084" endtime="20201030 10:58:17.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:17.374" endtime="20201030 10:58:17.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.382" endtime="20201030 10:58:17.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.081" endtime="20201030 10:58:17.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.080" endtime="20201030 10:58:17.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.388" level="INFO">${RESULT} = [{'diff': 9.144399999999955e-05}, {'diff': 9.126400000000062e-05}, {'diff': 9.180599999999983e-05}, {'diff': 9.109800000000126e-05}, {'diff': 9.180500000000036e-05}, {'diff': 9.230500000000086e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:17.385" endtime="20201030 10:58:17.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.393" level="INFO">${ACCURACY} = {'diff': [9.144399999999955e-05, 9.126400000000062e-05, 9.180599999999983e-05, 9.109800000000126e-05, 9.180500000000036e-05, 9.230500000000086e-05, 9.127800000000019e-05, 9.144399999999955e-05, 9.1443...</msg>
<status status="PASS" starttime="20201030 10:58:17.389" endtime="20201030 10:58:17.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.398" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.397" endtime="20201030 10:58:17.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.400" level="INFO">VALUE: [9.144399999999955e-05, 9.126400000000062e-05, 9.180599999999983e-05, 9.109800000000126e-05, 9.180500000000036e-05, 9.230500000000086e-05, 9.127800000000019e-05, 9.144399999999955e-05, 9.144399999999955e-05, 9.195799999999962e-05, 9.094399999999905e-05, 9.145799999999912e-05, 9.145799999999912e-05, 9.180599999999983e-05, 9.079200000000273e-05, 9.077799999999969e-05, 9.176399999999765e-05, 9.077700000000022e-05, 9.177699999999775e-05, 9.141600000000041e-05, 9.077800000000316e-05, 9.076400000000012e-05, 9.213899999999803e-05, 9.180599999999983e-05, 9.0945000000002e-05, 9.261099999999939e-05, 9.144499999999903e-05, 9.227800000000119e-05, 9.079099999999979e-05, 9.127700000000072e-05, 9.144399999999955e-05, 9.261099999999939e-05, 9.127800000000019e-05, 9.111100000000136e-05, 9.244500000000003e-05, 9.145900000000207e-05, 9.098600000000123e-05, 9.211100000000236e-05, 9.19719999999992e-05, 9.077700000000022e-05, 9.212500000000193e-05, 9.123599999999801e-05, 9.194400000000005e-05, 9.229200000000076e-05, 9.077799999999969e-05, 9.079200000000273e-05, 9.097300000000114e-05, 9.11390000000005e-05, 9.194499999999953e-05, 9.144499999999903e-05]</msg>
<status status="PASS" starttime="20201030 10:58:17.399" endtime="20201030 10:58:17.401"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.394" endtime="20201030 10:58:17.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.405" endtime="20201030 10:58:17.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.404" endtime="20201030 10:58:17.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.403" endtime="20201030 10:58:17.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.046" endtime="20201030 10:58:17.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.046" endtime="20201030 10:58:17.426"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.434" endtime="20201030 10:58:17.454"></status>
</kw>
<msg timestamp="20201030 10:58:17.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.433" endtime="20201030 10:58:17.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.456" endtime="20201030 10:58:17.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.458" endtime="20201030 10:58:17.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.430" endtime="20201030 10:58:17.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.428" endtime="20201030 10:58:17.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.467" endtime="20201030 10:58:17.755"></status>
</kw>
<msg timestamp="20201030 10:58:17.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02195575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:17.465" endtime="20201030 10:58:17.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02195575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:17.759" endtime="20201030 10:58:17.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.768" endtime="20201030 10:58:17.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.463" endtime="20201030 10:58:17.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.461" endtime="20201030 10:58:17.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.775" level="INFO">${RESULT} = [{'diff': 9.320800000000087e-05}, {'diff': 9.411099999999742e-05}, {'diff': 9.343100000000146e-05}, {'diff': 9.309700000000032e-05}, {'diff': 9.461099999999792e-05}, {'diff': 9.427700000000025e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:17.771" endtime="20201030 10:58:17.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.779" level="INFO">${ACCURACY} = {'diff': [9.320800000000087e-05, 9.411099999999742e-05, 9.343100000000146e-05, 9.309700000000032e-05, 9.461099999999792e-05, 9.427700000000025e-05, 9.309699999999685e-05, 9.413900000000003e-05, 9.2972...</msg>
<status status="PASS" starttime="20201030 10:58:17.776" endtime="20201030 10:58:17.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.784" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.782" endtime="20201030 10:58:17.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.786" level="INFO">VALUE: [9.320800000000087e-05, 9.411099999999742e-05, 9.343100000000146e-05, 9.309700000000032e-05, 9.461099999999792e-05, 9.427700000000025e-05, 9.309699999999685e-05, 9.413900000000003e-05, 9.29720000000002e-05, 9.395800000000162e-05, 9.429199999999929e-05, 9.362499999999996e-05, 9.461100000000139e-05, 9.375000000000008e-05, 9.327799999999872e-05, 9.279200000000126e-05, 9.293100000000096e-05, 9.327699999999925e-05, 9.383299999999803e-05, 9.327800000000219e-05, 9.308300000000075e-05, 9.342999999999851e-05, 9.412499999999699e-05, 9.291700000000139e-05, 9.340300000000232e-05, 9.376399999999965e-05, 9.362499999999996e-05, 9.280500000000136e-05, 9.295800000000062e-05, 9.444399999999908e-05, 9.333400000000047e-05, 9.311099999999989e-05, 9.401300000000043e-05, 9.377800000000269e-05, 9.329199999999829e-05, 9.429200000000276e-05, 9.379199999999879e-05, 9.466699999999967e-05, 9.46530000000001e-05, 9.311099999999989e-05, 9.277800000000169e-05, 9.330599999999786e-05, 9.324999999999958e-05, 9.277799999999822e-05, 9.427799999999972e-05, 9.326399999999915e-05, 9.459800000000129e-05, 9.376300000000018e-05, 9.411099999999742e-05, 9.394400000000205e-05]</msg>
<status status="PASS" starttime="20201030 10:58:17.785" endtime="20201030 10:58:17.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.780" endtime="20201030 10:58:17.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.791" endtime="20201030 10:58:17.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.790" endtime="20201030 10:58:17.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.789" endtime="20201030 10:58:17.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.427" endtime="20201030 10:58:17.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.426" endtime="20201030 10:58:17.812"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.821" endtime="20201030 10:58:17.841"></status>
</kw>
<msg timestamp="20201030 10:58:17.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.819" endtime="20201030 10:58:17.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.843" endtime="20201030 10:58:17.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.845" endtime="20201030 10:58:17.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.817" endtime="20201030 10:58:17.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.815" endtime="20201030 10:58:17.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.855" endtime="20201030 10:58:18.141"></status>
</kw>
<msg timestamp="20201030 10:58:18.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023359792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023454903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.853" endtime="20201030 10:58:18.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023359792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023454903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.145" endtime="20201030 10:58:18.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.154" endtime="20201030 10:58:18.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.850" endtime="20201030 10:58:18.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.849" endtime="20201030 10:58:18.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.160" level="INFO">${RESULT} = [{'diff': 9.511099999999842e-05}, {'diff': 9.627800000000172e-05}, {'diff': 9.495899999999863e-05}, {'diff': 9.562500000000196e-05}, {'diff': 9.605500000000114e-05}, {'diff': 9.626399999999868e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:18.157" endtime="20201030 10:58:18.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.165" level="INFO">${ACCURACY} = {'diff': [9.511099999999842e-05, 9.627800000000172e-05, 9.495899999999863e-05, 9.562500000000196e-05, 9.605500000000114e-05, 9.626399999999868e-05, 9.548600000000226e-05, 9.579199999999732e-05, 9.6306...</msg>
<status status="PASS" starttime="20201030 10:58:18.161" endtime="20201030 10:58:18.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.169" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.168" endtime="20201030 10:58:18.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.172" level="INFO">VALUE: [9.511099999999842e-05, 9.627800000000172e-05, 9.495899999999863e-05, 9.562500000000196e-05, 9.605500000000114e-05, 9.626399999999868e-05, 9.548600000000226e-05, 9.579199999999732e-05, 9.630600000000086e-05, 9.611099999999942e-05, 9.562500000000196e-05, 9.48469999999986e-05, 9.612500000000246e-05, 9.533299999999953e-05, 9.526299999999821e-05, 9.544400000000008e-05, 9.476399999999718e-05, 9.649999999999936e-05, 9.562499999999849e-05, 9.644400000000108e-05, 9.49729999999982e-05, 9.527800000000072e-05, 9.512499999999799e-05, 9.477700000000075e-05, 9.477699999999728e-05, 9.527799999999725e-05, 9.554200000000054e-05, 9.594400000000058e-05, 9.497199999999872e-05, 9.56660000000012e-05, 9.661099999999992e-05, 9.541699999999695e-05, 9.597199999999972e-05, 9.597199999999972e-05, 9.581899999999699e-05, 9.508300000000275e-05, 9.655500000000164e-05, 9.576399999999818e-05, 9.654199999999807e-05, 9.654200000000154e-05, 9.524999999999811e-05, 9.495899999999863e-05, 9.595899999999963e-05, 9.626399999999868e-05, 9.545799999999965e-05, 9.626299999999921e-05, 9.512499999999799e-05, 9.644400000000108e-05, 9.591699999999745e-05, 9.494399999999958e-05]</msg>
<status status="PASS" starttime="20201030 10:58:18.170" endtime="20201030 10:58:18.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.166" endtime="20201030 10:58:18.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.178" endtime="20201030 10:58:18.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.176" endtime="20201030 10:58:18.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.175" endtime="20201030 10:58:18.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.813" endtime="20201030 10:58:18.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.812" endtime="20201030 10:58:18.199"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.207" endtime="20201030 10:58:18.227"></status>
</kw>
<msg timestamp="20201030 10:58:18.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.206" endtime="20201030 10:58:18.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.228" endtime="20201030 10:58:18.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.231" endtime="20201030 10:58:18.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.203" endtime="20201030 10:58:18.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.201" endtime="20201030 10:58:18.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.240" endtime="20201030 10:58:18.526"></status>
</kw>
<msg timestamp="20201030 10:58:18.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022447194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.239" endtime="20201030 10:58:18.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022447194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.530" endtime="20201030 10:58:18.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.539" endtime="20201030 10:58:18.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.236" endtime="20201030 10:58:18.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.234" endtime="20201030 10:58:18.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.546" level="INFO">${RESULT} = [{'diff': 9.845899999999866e-05}, {'diff': 9.695899999999716e-05}, {'diff': 9.708400000000075e-05}, {'diff': 9.743100000000199e-05}, {'diff': 9.726300000000021e-05}, {'diff': 9.780499999999942e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:18.542" endtime="20201030 10:58:18.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.551" level="INFO">${ACCURACY} = {'diff': [9.845899999999866e-05, 9.695899999999716e-05, 9.708400000000075e-05, 9.743100000000199e-05, 9.726300000000021e-05, 9.780499999999942e-05, 9.829100000000035e-05, 9.791599999999998e-05, 9.8111...</msg>
<status status="PASS" starttime="20201030 10:58:18.547" endtime="20201030 10:58:18.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.555" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.554" endtime="20201030 10:58:18.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.558" level="INFO">VALUE: [9.845899999999866e-05, 9.695899999999716e-05, 9.708400000000075e-05, 9.743100000000199e-05, 9.726300000000021e-05, 9.780499999999942e-05, 9.829100000000035e-05, 9.791599999999998e-05, 9.811100000000142e-05, 9.861100000000192e-05, 9.793099999999902e-05, 9.704200000000204e-05, 9.844500000000256e-05, 9.777799999999975e-05, 9.777700000000028e-05, 9.861099999999845e-05, 9.841600000000048e-05, 9.811099999999795e-05, 9.779199999999932e-05, 9.676400000000265e-05, 9.809699999999838e-05, 9.809699999999838e-05, 9.78059999999989e-05, 9.72920000000023e-05, 9.812500000000099e-05, 9.84999999999979e-05, 9.722200000000097e-05, 9.811100000000142e-05, 9.712499999999999e-05, 9.712499999999999e-05, 9.798700000000077e-05, 9.800000000000086e-05, 9.763900000000006e-05, 9.845900000000213e-05, 9.727699999999978e-05, 9.844399999999962e-05, 9.677700000000275e-05, 9.694399999999812e-05, 9.812499999999752e-05, 9.856899999999974e-05, 9.844500000000256e-05, 9.812500000000099e-05, 9.74730000000007e-05, 9.761099999999745e-05, 9.863900000000106e-05, 9.744399999999862e-05, 9.827800000000025e-05, 9.745799999999818e-05, 9.861099999999845e-05, 9.779199999999932e-05]</msg>
<status status="PASS" starttime="20201030 10:58:18.556" endtime="20201030 10:58:18.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.552" endtime="20201030 10:58:18.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.563" endtime="20201030 10:58:18.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.561" endtime="20201030 10:58:18.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.560" endtime="20201030 10:58:18.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.199" endtime="20201030 10:58:18.584"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.199" endtime="20201030 10:58:18.584"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.593" endtime="20201030 10:58:18.612"></status>
</kw>
<msg timestamp="20201030 10:58:18.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.591" endtime="20201030 10:58:18.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.614" endtime="20201030 10:58:18.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.616" endtime="20201030 10:58:18.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.588" endtime="20201030 10:58:18.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.586" endtime="20201030 10:58:18.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.626" endtime="20201030 10:58:18.915"></status>
</kw>
<msg timestamp="20201030 10:58:18.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022625542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.624" endtime="20201030 10:58:18.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022625542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.919" endtime="20201030 10:58:18.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.927" endtime="20201030 10:58:18.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.622" endtime="20201030 10:58:18.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.620" endtime="20201030 10:58:18.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.934" level="INFO">${RESULT} = [{'diff': 9.962499999999902e-05}, {'diff': 9.962499999999902e-05}, {'diff': 0.00010012499999999952}, {'diff': 9.974999999999914e-05}, {'diff': 0.00010061100000000045}, {'diff': 0.00010059700000000088}...</msg>
<status status="PASS" starttime="20201030 10:58:18.931" endtime="20201030 10:58:18.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.938" level="INFO">${ACCURACY} = {'diff': [9.962499999999902e-05, 9.962499999999902e-05, 0.00010012499999999952, 9.974999999999914e-05, 0.00010061100000000045, 0.00010059700000000088, 9.911099999999895e-05, 9.961099999999945e-05, 9.9...</msg>
<status status="PASS" starttime="20201030 10:58:18.935" endtime="20201030 10:58:18.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.943" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.942" endtime="20201030 10:58:18.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.946" level="INFO">VALUE: [9.962499999999902e-05, 9.962499999999902e-05, 0.00010012499999999952, 9.974999999999914e-05, 0.00010061100000000045, 0.00010059700000000088, 9.911099999999895e-05, 9.961099999999945e-05, 9.977799999999828e-05, 9.912500000000199e-05, 9.995900000000016e-05, 0.00010041700000000195, 9.961099999999945e-05, 9.944500000000009e-05, 9.944400000000062e-05, 0.00010044499999999762, 9.927800000000125e-05, 9.876400000000118e-05, 0.00010061100000000045, 0.00010013899999999909, 9.979200000000132e-05, 9.879200000000032e-05, 9.895899999999916e-05, 0.00010066699999999873, 9.926299999999874e-05, 0.00010044399999999815, 0.00010011099999999995, 9.961099999999945e-05, 0.00010062500000000002, 0.00010029200000000182, 9.927799999999778e-05, 9.974999999999914e-05, 9.962499999999902e-05, 9.962499999999902e-05, 9.913900000000156e-05, 9.926400000000168e-05, 9.994400000000112e-05, 0.00010001400000000243, 9.902799999999753e-05, 9.927800000000125e-05, 9.961100000000292e-05, 0.00010030599999999792, 9.877800000000075e-05, 9.894499999999959e-05, 9.977700000000228e-05, 9.992999999999808e-05, 9.927799999999778e-05, 9.961099999999945e-05, 9.973599999999957e-05, 9.911099999999895e-05]</msg>
<status status="PASS" starttime="20201030 10:58:18.944" endtime="20201030 10:58:18.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.939" endtime="20201030 10:58:18.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.951" endtime="20201030 10:58:18.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.949" endtime="20201030 10:58:18.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.948" endtime="20201030 10:58:18.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.585" endtime="20201030 10:58:18.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.584" endtime="20201030 10:58:18.972"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.980" endtime="20201030 10:58:19.002"></status>
</kw>
<msg timestamp="20201030 10:58:19.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.979" endtime="20201030 10:58:19.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.003" endtime="20201030 10:58:19.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.006" endtime="20201030 10:58:19.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.976" endtime="20201030 10:58:19.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.974" endtime="20201030 10:58:19.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.015" endtime="20201030 10:58:19.301"></status>
</kw>
<msg timestamp="20201030 10:58:19.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023780389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023881833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.014" endtime="20201030 10:58:19.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023780389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023881833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.306" endtime="20201030 10:58:19.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.314" endtime="20201030 10:58:19.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.011" endtime="20201030 10:58:19.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.009" endtime="20201030 10:58:19.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.321" level="INFO">${RESULT} = [{'diff': 0.00010144400000000262}, {'diff': 0.00010261099999999898}, {'diff': 0.00010195799999999922}, {'diff': 0.00010177800000000028}, {'diff': 0.00010109700000000138}, {'diff': 0.000101458999999998...</msg>
<status status="PASS" starttime="20201030 10:58:19.317" endtime="20201030 10:58:19.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.325" level="INFO">${ACCURACY} = {'diff': [0.00010144400000000262, 0.00010261099999999898, 0.00010195799999999922, 0.00010177800000000028, 0.00010109700000000138, 0.00010145899999999819, 0.00010151400000000046, 0.00010162500000000102...</msg>
<status status="PASS" starttime="20201030 10:58:19.322" endtime="20201030 10:58:19.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.329" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.328" endtime="20201030 10:58:19.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.332" level="INFO">VALUE: [0.00010144400000000262, 0.00010261099999999898, 0.00010195799999999922, 0.00010177800000000028, 0.00010109700000000138, 0.00010145899999999819, 0.00010151400000000046, 0.00010162500000000102, 0.00010170899999999844, 0.00010197199999999879, 0.00010111099999999748, 0.00010262499999999855, 0.00010211100000000195, 0.00010095800000000169, 0.00010116599999999976, 0.00010077799999999928, 0.00010144500000000209, 0.00010115299999999966, 0.00010097200000000126, 0.00010180499999999995, 0.00010212499999999805, 0.00010077799999999928, 0.00010211099999999848, 0.00010261100000000245, 0.00010161099999999798, 0.00010126400000000021, 0.00010227800000000078, 0.00010115299999999966, 0.00010162499999999755, 0.00010211100000000195, 0.00010180499999999995, 0.00010179199999999985, 0.00010112500000000052, 0.00010174999999999768, 0.00010227799999999732, 0.00010263899999999812, 0.00010238899999999787, 0.00010180499999999995, 0.00010126300000000074, 0.00010209700000000238, 0.00010258299999999984, 0.00010211100000000195, 0.00010227799999999732, 0.00010213900000000109, 0.00010225000000000165, 0.00010261100000000245, 0.00010122299999999751, 0.00010079099999999938, 0.00010211099999999848, 0.00010179100000000038]</msg>
<status status="PASS" starttime="20201030 10:58:19.330" endtime="20201030 10:58:19.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.326" endtime="20201030 10:58:19.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.338" endtime="20201030 10:58:19.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.336" endtime="20201030 10:58:19.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.335" endtime="20201030 10:58:19.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.973" endtime="20201030 10:58:19.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.972" endtime="20201030 10:58:19.359"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.368" endtime="20201030 10:58:19.387"></status>
</kw>
<msg timestamp="20201030 10:58:19.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.366" endtime="20201030 10:58:19.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.389" endtime="20201030 10:58:19.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.391" endtime="20201030 10:58:19.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.363" endtime="20201030 10:58:19.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.361" endtime="20201030 10:58:19.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.401" endtime="20201030 10:58:19.687"></status>
</kw>
<msg timestamp="20201030 10:58:19.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.399" endtime="20201030 10:58:19.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.691" endtime="20201030 10:58:19.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.699" endtime="20201030 10:58:19.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.396" endtime="20201030 10:58:19.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.395" endtime="20201030 10:58:19.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.706" level="INFO">${RESULT} = [{'diff': 0.00010427699999999984}, {'diff': 0.00010411100000000048}, {'diff': 0.00010429200000000236}, {'diff': 0.00010344400000000115}, {'diff': 0.00010347200000000029}, {'diff': 0.000104264000000003...</msg>
<status status="PASS" starttime="20201030 10:58:19.703" endtime="20201030 10:58:19.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.711" level="INFO">${ACCURACY} = {'diff': [0.00010427699999999984, 0.00010411100000000048, 0.00010429200000000236, 0.00010344400000000115, 0.00010347200000000029, 0.00010426400000000322, 0.00010312500000000252, 0.00010311099999999948...</msg>
<status status="PASS" starttime="20201030 10:58:19.707" endtime="20201030 10:58:19.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.716" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.715" endtime="20201030 10:58:19.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.718" level="INFO">VALUE: [0.00010427699999999984, 0.00010411100000000048, 0.00010429200000000236, 0.00010344400000000115, 0.00010347200000000029, 0.00010426400000000322, 0.00010312500000000252, 0.00010311099999999948, 0.00010361099999999998, 0.00010344499999999715, 0.00010274999999999868, 0.00010313899999999862, 0.00010392999999999861, 0.00010276399999999825, 0.00010359700000000041, 0.00010426399999999975, 0.00010377800000000229, 0.00010447300000000076, 0.00010279200000000085, 0.00010427799999999932, 0.00010276299999999877, 0.00010429099999999941, 0.00010295800000000022, 0.00010427800000000279, 0.00010327800000000179, 0.00010461100000000098, 0.00010307000000000024, 0.00010309799999999938, 0.00010327800000000179, 0.00010311099999999948, 0.00010456900000000227, 0.00010331900000000102, 0.00010297199999999979, 0.00010313899999999862, 0.00010306900000000077, 0.00010294500000000012, 0.00010377800000000229, 0.00010276400000000172, 0.00010277800000000128, 0.00010330500000000145, 0.00010327699999999884, 0.00010361099999999998, 0.00010411100000000048, 0.00010311100000000295, 0.00010325000000000265, 0.00010412500000000005, 0.00010330600000000092, 0.00010386100000000023, 0.00010363899999999912, 0.00010294400000000065]</msg>
<status status="PASS" starttime="20201030 10:58:19.717" endtime="20201030 10:58:19.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.712" endtime="20201030 10:58:19.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.723" endtime="20201030 10:58:19.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.722" endtime="20201030 10:58:19.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.721" endtime="20201030 10:58:19.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.359" endtime="20201030 10:58:19.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.359" endtime="20201030 10:58:19.744"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.753" endtime="20201030 10:58:19.772"></status>
</kw>
<msg timestamp="20201030 10:58:19.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.751" endtime="20201030 10:58:19.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.774" endtime="20201030 10:58:19.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.777" endtime="20201030 10:58:19.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.749" endtime="20201030 10:58:19.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.747" endtime="20201030 10:58:19.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.788" endtime="20201030 10:58:20.075"></status>
</kw>
<msg timestamp="20201030 10:58:20.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.786" endtime="20201030 10:58:20.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.079" endtime="20201030 10:58:20.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.087" endtime="20201030 10:58:20.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.783" endtime="20201030 10:58:20.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.781" endtime="20201030 10:58:20.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.094" level="INFO">${RESULT} = [{'diff': 0.00010497200000000179}, {'diff': 0.00010633400000000306}, {'diff': 0.00010511100000000148}, {'diff': 0.00010481999999999853}, {'diff': 0.00010598599999999889}, {'diff': 0.000105068999999999...</msg>
<status status="PASS" starttime="20201030 10:58:20.091" endtime="20201030 10:58:20.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:20.098" level="INFO">${ACCURACY} = {'diff': [0.00010497200000000179, 0.00010633400000000306, 0.00010511100000000148, 0.00010481999999999853, 0.00010598599999999889, 0.0001050689999999993, 0.00010549999999999796, 0.00010476400000000025,...</msg>
<status status="PASS" starttime="20201030 10:58:20.095" endtime="20201030 10:58:20.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.103" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 10:58:20.102" endtime="20201030 10:58:20.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.105" level="INFO">VALUE: [0.00010497200000000179, 0.00010633400000000306, 0.00010511100000000148, 0.00010481999999999853, 0.00010598599999999889, 0.0001050689999999993, 0.00010549999999999796, 0.00010476400000000025, 0.00010662499999999908, 0.00010577699999999787, 0.00010562499999999808, 0.00010626400000000175, 0.00010642999999999764, 0.00010662499999999908, 0.0001048750000000008, 0.00010580599999999996, 0.00010611099999999901, 0.00010647299999999929, 0.00010629200000000089, 0.00010591599999999757, 0.00010491600000000004, 0.00010662499999999908, 0.00010559699999999894, 0.00010476400000000025, 0.00010477799999999982, 0.00010609699999999944, 0.00010511100000000148, 0.00010511099999999801, 0.00010479099999999991, 0.00010594400000000018, 0.00010495799999999875, 0.00010629200000000089, 0.00010661099999999951, 0.00010577800000000082, 0.00010559700000000241, 0.00010561099999999851, 0.0001055559999999997, 0.00010495800000000222, 0.00010662499999999908, 0.00010561100000000198, 0.00010494400000000265, 0.00010529199999999989, 0.00010661099999999951, 0.00010547199999999882, 0.00010577800000000082, 0.0001062360000000026, 0.00010579200000000039, 0.00010627800000000132, 0.0001055689999999998, 0.00010544400000000315]</msg>
<status status="PASS" starttime="20201030 10:58:20.104" endtime="20201030 10:58:20.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.099" endtime="20201030 10:58:20.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.110" endtime="20201030 10:58:20.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.109" endtime="20201030 10:58:20.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.108" endtime="20201030 10:58:20.131"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.745" endtime="20201030 10:58:20.131"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.744" endtime="20201030 10:58:20.131"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.140" endtime="20201030 10:58:20.161"></status>
</kw>
<msg timestamp="20201030 10:58:20.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.138" endtime="20201030 10:58:20.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.163" endtime="20201030 10:58:20.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.165" endtime="20201030 10:58:20.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.136" endtime="20201030 10:58:20.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.134" endtime="20201030 10:58:20.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.175" endtime="20201030 10:58:20.461"></status>
</kw>
<msg timestamp="20201030 10:58:20.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023682583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023790667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.173" endtime="20201030 10:58:20.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023682583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023790667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.465" endtime="20201030 10:58:20.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.473" endtime="20201030 10:58:20.475"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.170" endtime="20201030 10:58:20.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.169" endtime="20201030 10:58:20.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.480" level="INFO">${RESULT} = [{'diff': 0.00010808400000000135}, {'diff': 0.00010694500000000065}, {'diff': 0.00010744500000000115}, {'diff': 0.00010827700000000037}, {'diff': 0.00010744399999999821}, {'diff': 0.000107124999999999...</msg>
<status status="PASS" starttime="20201030 10:58:20.477" endtime="20201030 10:58:20.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:20.484" level="INFO">${ACCURACY} = {'diff': [0.00010808400000000135, 0.00010694500000000065, 0.00010744500000000115, 0.00010827700000000037, 0.00010744399999999821, 0.00010712499999999958, 0.00010800000000000046, 0.00010859700000000194...</msg>
<status status="PASS" starttime="20201030 10:58:20.481" endtime="20201030 10:58:20.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.489" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 10:58:20.488" endtime="20201030 10:58:20.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.492" level="INFO">VALUE: [0.00010808400000000135, 0.00010694500000000065, 0.00010744500000000115, 0.00010827700000000037, 0.00010744399999999821, 0.00010712499999999958, 0.00010800000000000046, 0.00010859700000000194, 0.00010798600000000089, 0.00010777799999999935, 0.00010711100000000001, 0.00010776399999999978, 0.00010761100000000051, 0.00010794400000000218, 0.00010845800000000225, 0.00010844399999999921, 0.00010861099999999804, 0.00010845899999999825, 0.00010844499999999868, 0.00010747200000000082, 0.00010697200000000032, 0.00010745800000000125, 0.00010695800000000075, 0.00010729100000000241, 0.0001085829999999989, 0.0001070690000000013, 0.00010827799999999985, 0.00010843099999999911, 0.00010758400000000085, 0.00010812499999999711, 0.00010790299999999947, 0.00010697200000000032, 0.00010806899999999883, 0.00010727799999999885, 0.00010831999999999856, 0.00010694399999999771, 0.00010675000000000268, 0.00010779199999999892, 0.00010826400000000028, 0.0001075279999999991, 0.00010744399999999821, 0.00010761100000000051, 0.00010826400000000028, 0.00010861100000000151, 0.00010762500000000008, 0.00010797200000000132, 0.00010845900000000172, 0.00010713900000000262, 0.00010730499999999851, 0.00010786100000000076]</msg>
<status status="PASS" starttime="20201030 10:58:20.490" endtime="20201030 10:58:20.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.485" endtime="20201030 10:58:20.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.497" endtime="20201030 10:58:20.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.496" endtime="20201030 10:58:20.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.495" endtime="20201030 10:58:20.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.132" endtime="20201030 10:58:20.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.131" endtime="20201030 10:58:20.518"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.527" endtime="20201030 10:58:20.547"></status>
</kw>
<msg timestamp="20201030 10:58:20.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.525" endtime="20201030 10:58:20.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.549" endtime="20201030 10:58:20.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.552" endtime="20201030 10:58:20.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.523" endtime="20201030 10:58:20.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.521" endtime="20201030 10:58:20.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.561" endtime="20201030 10:58:20.846"></status>
</kw>
<msg timestamp="20201030 10:58:20.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.559" endtime="20201030 10:58:20.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.850" endtime="20201030 10:58:20.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.858" endtime="20201030 10:58:20.860"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.557" endtime="20201030 10:58:20.860"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.555" endtime="20201030 10:58:20.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.865" level="INFO">${RESULT} = [{'diff': 0.00011012499999999911}, {'diff': 0.00010962500000000208}, {'diff': 0.00010927800000000085}, {'diff': 0.00010927799999999738}, {'diff': 0.00010880600000000296}, {'diff': 0.000109624999999998...</msg>
<status status="PASS" starttime="20201030 10:58:20.862" endtime="20201030 10:58:20.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:20.870" level="INFO">${ACCURACY} = {'diff': [0.00011012499999999911, 0.00010962500000000208, 0.00010927800000000085, 0.00010927799999999738, 0.00010880600000000296, 0.00010962499999999861, 0.00011011100000000301, 0.00011063899999999918...</msg>
<status status="PASS" starttime="20201030 10:58:20.866" endtime="20201030 10:58:20.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.875" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 10:58:20.874" endtime="20201030 10:58:20.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.877" level="INFO">VALUE: [0.00011012499999999911, 0.00010962500000000208, 0.00010927800000000085, 0.00010927799999999738, 0.00010880600000000296, 0.00010962499999999861, 0.00011011100000000301, 0.00011063899999999918, 0.00010894499999999918, 0.00010944400000000021, 0.00011016700000000129, 0.00011044400000000121, 0.00011011099999999954, 0.00011044400000000121, 0.00010961099999999904, 0.00010961099999999904, 0.00010877799999999688, 0.00010994500000000018, 0.00011062500000000308, 0.0001099159999999981, 0.00011032000000000056, 0.00010969400000000046, 0.00010927800000000085, 0.00010877800000000035, 0.00011065199999999928, 0.00011044500000000068, 0.00011061100000000004, 0.00010876400000000078, 0.00010962499999999861, 0.00010994399999999724, 0.00010923600000000214, 0.00011044399999999774, 0.00011043100000000111, 0.00010943100000000011, 0.00011029199999999795, 0.00010943100000000011, 0.00011031900000000108, 0.0001092769999999979, 0.00010900000000000146, 0.00010926400000000128, 0.00010956900000000033, 0.00010911099999999854, 0.00010961100000000251, 0.00011044500000000068, 0.00011041700000000154, 0.00010927800000000085, 0.00010924999999999824, 0.00010876400000000078, 0.00010879199999999992, 0.00011061100000000004]</msg>
<status status="PASS" starttime="20201030 10:58:20.876" endtime="20201030 10:58:20.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.871" endtime="20201030 10:58:20.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.882" endtime="20201030 10:58:20.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.881" endtime="20201030 10:58:20.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.880" endtime="20201030 10:58:20.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.519" endtime="20201030 10:58:20.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.518" endtime="20201030 10:58:20.903"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.912" endtime="20201030 10:58:20.932"></status>
</kw>
<msg timestamp="20201030 10:58:20.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.910" endtime="20201030 10:58:20.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.934" endtime="20201030 10:58:20.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.937" endtime="20201030 10:58:20.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.908" endtime="20201030 10:58:20.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.906" endtime="20201030 10:58:20.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.946" endtime="20201030 10:58:21.236"></status>
</kw>
<msg timestamp="20201030 10:58:21.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.944" endtime="20201030 10:58:21.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.240" endtime="20201030 10:58:21.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.249" endtime="20201030 10:58:21.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.942" endtime="20201030 10:58:21.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.940" endtime="20201030 10:58:21.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.256" level="INFO">${RESULT} = [{'diff': 0.00011159700000000147}, {'diff': 0.00011247200000000235}, {'diff': 0.00011262500000000161}, {'diff': 0.00011093099999999814}, {'diff': 0.00011244499999999921}, {'diff': 0.000111125000000000...</msg>
<status status="PASS" starttime="20201030 10:58:21.252" endtime="20201030 10:58:21.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:21.260" level="INFO">${ACCURACY} = {'diff': [0.00011159700000000147, 0.00011247200000000235, 0.00011262500000000161, 0.00011093099999999814, 0.00011244499999999921, 0.00011112500000000011, 0.00011244499999999921, 0.00011083300000000115...</msg>
<status status="PASS" starttime="20201030 10:58:21.257" endtime="20201030 10:58:21.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.264" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 10:58:21.263" endtime="20201030 10:58:21.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.267" level="INFO">VALUE: [0.00011159700000000147, 0.00011247200000000235, 0.00011262500000000161, 0.00011093099999999814, 0.00011244499999999921, 0.00011112500000000011, 0.00011244499999999921, 0.00011083300000000115, 0.00011144400000000221, 0.00011194400000000271, 0.00011104099999999922, 0.00011179199999999945, 0.00011127799999999938, 0.00011177799999999988, 0.00011112500000000011, 0.00011144500000000168, 0.00011262500000000161, 0.0001112769999999999, 0.00011244399999999974, 0.00011243099999999964, 0.00011195799999999881, 0.00011211099999999807, 0.00011113899999999968, 0.00011261099999999857, 0.00011261099999999857, 0.00011097200000000085, 0.0001112769999999999, 0.0001112769999999999, 0.00011129199999999895, 0.00011177799999999988, 0.00011129199999999895, 0.00011212499999999764, 0.00011077800000000235, 0.00011176400000000031, 0.000111903, 0.00011198600000000142, 0.00011194399999999924, 0.00011244399999999974, 0.00011111100000000054, 0.00011115299999999925, 0.00011127799999999938, 0.00011245899999999878, 0.00011244499999999921, 0.00011077800000000235, 0.00011144399999999874, 0.00011261099999999857, 0.00011142999999999917, 0.00011130600000000199, 0.00011244399999999974, 0.00011199999999999752]</msg>
<status status="PASS" starttime="20201030 10:58:21.265" endtime="20201030 10:58:21.273"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.261" endtime="20201030 10:58:21.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.277" endtime="20201030 10:58:21.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.276" endtime="20201030 10:58:21.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.274" endtime="20201030 10:58:21.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.904" endtime="20201030 10:58:21.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.903" endtime="20201030 10:58:21.298"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.307" endtime="20201030 10:58:21.328"></status>
</kw>
<msg timestamp="20201030 10:58:21.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.305" endtime="20201030 10:58:21.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.330" endtime="20201030 10:58:21.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.332" endtime="20201030 10:58:21.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.303" endtime="20201030 10:58:21.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.301" endtime="20201030 10:58:21.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.342" endtime="20201030 10:58:21.628"></status>
</kw>
<msg timestamp="20201030 10:58:21.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023441625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023555778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.340" endtime="20201030 10:58:21.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023441625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023555778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.632" endtime="20201030 10:58:21.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.640" endtime="20201030 10:58:21.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.337" endtime="20201030 10:58:21.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.336" endtime="20201030 10:58:21.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.647" level="INFO">${RESULT} = [{'diff': 0.00011415299999999878}, {'diff': 0.00011330600000000052}, {'diff': 0.00011429200000000195}, {'diff': 0.00011429200000000195}, {'diff': 0.00011279199999999698}, {'diff': 0.000113430999999997...</msg>
<status status="PASS" starttime="20201030 10:58:21.644" endtime="20201030 10:58:21.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:21.651" level="INFO">${ACCURACY} = {'diff': [0.00011415299999999878, 0.00011330600000000052, 0.00011429200000000195, 0.00011429200000000195, 0.00011279199999999698, 0.00011343099999999717, 0.0001134299999999977, 0.0001144299999999987, ...</msg>
<status status="PASS" starttime="20201030 10:58:21.648" endtime="20201030 10:58:21.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.656" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 10:58:21.655" endtime="20201030 10:58:21.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.658" level="INFO">VALUE: [0.00011415299999999878, 0.00011330600000000052, 0.00011429200000000195, 0.00011429200000000195, 0.00011279199999999698, 0.00011343099999999717, 0.0001134299999999977, 0.0001144299999999987, 0.0001127359999999987, 0.00011311100000000254, 0.00011422200000000063, 0.00011362499999999914, 0.00011277800000000088, 0.00011429200000000195, 0.00011277800000000088, 0.0001134299999999977, 0.00011444399999999827, 0.00011295799999999981, 0.00011311100000000254, 0.00011281999999999959, 0.00011327800000000138, 0.00011377800000000188, 0.00011463800000000024, 0.0001134160000000016, 0.00011456900000000186, 0.00011444400000000174, 0.00011391700000000157, 0.00011344400000000074, 0.00011394400000000124, 0.00011343100000000064, 0.00011461100000000057, 0.00011329200000000095, 0.00011340200000000203, 0.00011395800000000081, 0.00011355499999999782, 0.00011427799999999891, 0.00011379200000000145, 0.00011324999999999877, 0.00011358299999999696, 0.00011277800000000088, 0.00011291700000000057, 0.00011444400000000174, 0.00011394400000000124, 0.0001144299999999987, 0.00011362499999999914, 0.00011361099999999957, 0.00011377800000000188, 0.00011463899999999971, 0.000113597, 0.00011443099999999817]</msg>
<status status="PASS" starttime="20201030 10:58:21.657" endtime="20201030 10:58:21.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.652" endtime="20201030 10:58:21.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.664" endtime="20201030 10:58:21.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.662" endtime="20201030 10:58:21.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.661" endtime="20201030 10:58:21.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.299" endtime="20201030 10:58:21.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.298" endtime="20201030 10:58:21.685"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.694" endtime="20201030 10:58:21.714"></status>
</kw>
<msg timestamp="20201030 10:58:21.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.692" endtime="20201030 10:58:21.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.715" endtime="20201030 10:58:21.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.718" endtime="20201030 10:58:21.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.689" endtime="20201030 10:58:21.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.687" endtime="20201030 10:58:21.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.728" endtime="20201030 10:58:22.014"></status>
</kw>
<msg timestamp="20201030 10:58:22.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:21.726" endtime="20201030 10:58:22.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:22.018" endtime="20201030 10:58:22.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.026" endtime="20201030 10:58:22.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.723" endtime="20201030 10:58:22.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.722" endtime="20201030 10:58:22.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.033" level="INFO">${RESULT} = [{'diff': 0.0001152360000000012}, {'diff': 0.00011476399999999984}, {'diff': 0.00011620799999999959}, {'diff': 0.00011526399999999687}, {'diff': 0.00011561200000000105}, {'diff': 0.0001162089999999990...</msg>
<status status="PASS" starttime="20201030 10:58:22.030" endtime="20201030 10:58:22.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.038" level="INFO">${ACCURACY} = {'diff': [0.0001152360000000012, 0.00011476399999999984, 0.00011620799999999959, 0.00011526399999999687, 0.00011561200000000105, 0.00011620899999999906, 0.00011566699999999985, 0.00011562500000000114,...</msg>
<status status="PASS" starttime="20201030 10:58:22.034" endtime="20201030 10:58:22.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.043" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.042" endtime="20201030 10:58:22.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.045" level="INFO">VALUE: [0.0001152360000000012, 0.00011476399999999984, 0.00011620799999999959, 0.00011526399999999687, 0.00011561200000000105, 0.00011620899999999906, 0.00011566699999999985, 0.00011562500000000114, 0.0001151109999999976, 0.00011476399999999984, 0.00011595899999999881, 0.00011479199999999898, 0.00011630600000000005, 0.00011611200000000155, 0.00011625000000000177, 0.00011594399999999977, 0.00011562499999999767, 0.00011530599999999905, 0.00011633399999999919, 0.00011647199999999941, 0.00011566600000000038, 0.00011512500000000064, 0.00011547200000000188, 0.00011577700000000093, 0.00011661100000000257, 0.00011509699999999803, 0.00011494399999999877, 0.00011495800000000181, 0.00011644499999999974, 0.00011497299999999738, 0.00011640300000000103, 0.000116291000000001, 0.00011644400000000027, 0.00011577700000000093, 0.00011541600000000013, 0.0001166109999999991, 0.00011659699999999953, 0.00011479199999999898, 0.00011497300000000085, 0.00011631900000000014, 0.00011511200000000055, 0.00011579099999999704, 0.0001157910000000005, 0.00011576399999999737, 0.00011651399999999812, 0.00011495800000000181, 0.00011559699999999853, 0.00011662499999999867, 0.00011559800000000148, 0.00011595799999999934]</msg>
<status status="PASS" starttime="20201030 10:58:22.044" endtime="20201030 10:58:22.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.039" endtime="20201030 10:58:22.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.050" endtime="20201030 10:58:22.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.049" endtime="20201030 10:58:22.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.047" endtime="20201030 10:58:22.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.686" endtime="20201030 10:58:22.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.685" endtime="20201030 10:58:22.071"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.080" endtime="20201030 10:58:22.100"></status>
</kw>
<msg timestamp="20201030 10:58:22.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.078" endtime="20201030 10:58:22.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.101" endtime="20201030 10:58:22.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.104" endtime="20201030 10:58:22.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.076" endtime="20201030 10:58:22.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.074" endtime="20201030 10:58:22.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.113" endtime="20201030 10:58:22.400"></status>
</kw>
<msg timestamp="20201030 10:58:22.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02257675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:22.112" endtime="20201030 10:58:22.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02257675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:22.405" endtime="20201030 10:58:22.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.413" endtime="20201030 10:58:22.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.109" endtime="20201030 10:58:22.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.107" endtime="20201030 10:58:22.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.420" level="INFO">${RESULT} = [{'diff': 0.00011827799999999944}, {'diff': 0.00011750000000000302}, {'diff': 0.00011777799999999894}, {'diff': 0.00011794500000000124}, {'diff': 0.0001181110000000006}, {'diff': 0.0001177769999999994...</msg>
<status status="PASS" starttime="20201030 10:58:22.416" endtime="20201030 10:58:22.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.424" level="INFO">${ACCURACY} = {'diff': [0.00011827799999999944, 0.00011750000000000302, 0.00011777799999999894, 0.00011794500000000124, 0.0001181110000000006, 0.00011777699999999947, 0.00011797200000000091, 0.0001171109999999996, ...</msg>
<status status="PASS" starttime="20201030 10:58:22.421" endtime="20201030 10:58:22.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.428" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.427" endtime="20201030 10:58:22.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.431" level="INFO">VALUE: [0.00011827799999999944, 0.00011750000000000302, 0.00011777799999999894, 0.00011794500000000124, 0.0001181110000000006, 0.00011777699999999947, 0.00011797200000000091, 0.0001171109999999996, 0.00011856899999999893, 0.00011740299999999856, 0.00011780600000000155, 0.00011830599999999858, 0.00011745900000000031, 0.00011808300000000146, 0.00011677699999999847, 0.00011765299999999881, 0.00011829199999999901, 0.00011829199999999901, 0.00011747299999999988, 0.00011695899999999981, 0.00011727799999999844, 0.00011808300000000146, 0.0001167499999999988, 0.00011827699999999997, 0.00011762500000000314, 0.00011827799999999944, 0.00011763900000000271, 0.00011712499999999917, 0.00011786100000000035, 0.00011711199999999908, 0.0001183049999999991, 0.00011823600000000073, 0.00011777799999999894, 0.00011727800000000191, 0.00011762499999999967, 0.00011679200000000098, 0.00011794499999999777, 0.0001186110000000011, 0.00011726399999999887, 0.00011679099999999804, 0.0001178049999999986, 0.00011679200000000098, 0.0001181110000000006, 0.00011677800000000141, 0.00011845899999999784, 0.00011762499999999967, 0.00011777799999999894, 0.00011845799999999837, 0.00011779099999999904, 0.0001181110000000006]</msg>
<status status="PASS" starttime="20201030 10:58:22.429" endtime="20201030 10:58:22.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.425" endtime="20201030 10:58:22.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.436" endtime="20201030 10:58:22.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.434" endtime="20201030 10:58:22.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.433" endtime="20201030 10:58:22.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.072" endtime="20201030 10:58:22.457"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.071" endtime="20201030 10:58:22.457"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.466" endtime="20201030 10:58:22.487"></status>
</kw>
<msg timestamp="20201030 10:58:22.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.464" endtime="20201030 10:58:22.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.488" endtime="20201030 10:58:22.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.491" endtime="20201030 10:58:22.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.461" endtime="20201030 10:58:22.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.459" endtime="20201030 10:58:22.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.500" endtime="20201030 10:58:22.786"></status>
</kw>
<msg timestamp="20201030 10:58:22.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023466889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023587, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:22.499" endtime="20201030 10:58:22.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023466889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023587, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:22.790" endtime="20201030 10:58:22.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.798" endtime="20201030 10:58:22.800"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.496" endtime="20201030 10:58:22.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.494" endtime="20201030 10:58:22.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.805" level="INFO">${RESULT} = [{'diff': 0.00012011099999999914}, {'diff': 0.00011961099999999864}, {'diff': 0.00012063900000000224}, {'diff': 0.0001194309999999997}, {'diff': 0.00011945799999999937}, {'diff': 0.0001189859999999980...</msg>
<status status="PASS" starttime="20201030 10:58:22.802" endtime="20201030 10:58:22.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.809" level="INFO">${ACCURACY} = {'diff': [0.00012011099999999914, 0.00011961099999999864, 0.00012063900000000224, 0.0001194309999999997, 0.00011945799999999937, 0.00011898599999999801, 0.00012029099999999807, 0.00012029199999999754,...</msg>
<status status="PASS" starttime="20201030 10:58:22.806" endtime="20201030 10:58:22.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.814" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.813" endtime="20201030 10:58:22.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.816" level="INFO">VALUE: [0.00012011099999999914, 0.00011961099999999864, 0.00012063900000000224, 0.0001194309999999997, 0.00011945799999999937, 0.00011898599999999801, 0.00012029099999999807, 0.00012029199999999754, 0.00011995799999999987, 0.00011961099999999864, 0.0001206249999999992, 0.00012044500000000027, 0.00011894499999999877, 0.00011934699999999882, 0.0001199440000000003, 0.00011898599999999801, 0.00012045800000000037, 0.00012029200000000101, 0.00011995900000000281, 0.00011954199999999679, 0.00011912500000000117, 0.00011881900000000264, 0.000119776999999998, 0.00011945799999999937, 0.0001191249999999977, 0.0001206249999999992, 0.00011988899999999802, 0.00012061099999999964, 0.00012000000000000205, 0.0001204310000000007, 0.00011979100000000104, 0.00011979099999999757, 0.00011930599999999958, 0.00011945799999999937, 0.00011926400000000087, 0.00011979200000000051, 0.00011894499999999877, 0.00011993000000000073, 0.00011879100000000004, 0.0001199440000000003, 0.00012011099999999914, 0.000119082999999999, 0.0001194439999999998, 0.00011891699999999963, 0.0001201249999999987, 0.00012023599999999926, 0.0001201249999999987, 0.00012013900000000174, 0.0001191110000000016, 0.0001196249999999982]</msg>
<status status="PASS" starttime="20201030 10:58:22.815" endtime="20201030 10:58:22.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.810" endtime="20201030 10:58:22.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.823" endtime="20201030 10:58:22.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.821" endtime="20201030 10:58:22.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.820" endtime="20201030 10:58:22.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.458" endtime="20201030 10:58:22.844"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.457" endtime="20201030 10:58:22.844"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.853" endtime="20201030 10:58:22.873"></status>
</kw>
<msg timestamp="20201030 10:58:22.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.851" endtime="20201030 10:58:22.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.875" endtime="20201030 10:58:22.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.877" endtime="20201030 10:58:22.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.849" endtime="20201030 10:58:22.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.846" endtime="20201030 10:58:22.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.887" endtime="20201030 10:58:23.173"></status>
</kw>
<msg timestamp="20201030 10:58:23.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.885" endtime="20201030 10:58:23.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.177" endtime="20201030 10:58:23.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.185" endtime="20201030 10:58:23.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.882" endtime="20201030 10:58:23.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.880" endtime="20201030 10:58:23.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.192" level="INFO">${RESULT} = [{'diff': 0.0001226250000000012}, {'diff': 0.00012261099999999817}, {'diff': 0.00012088899999999903}, {'diff': 0.00012194399999999883}, {'diff': 0.00012227799999999997}, {'diff': 0.0001209999999999995...</msg>
<status status="PASS" starttime="20201030 10:58:23.189" endtime="20201030 10:58:23.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:23.197" level="INFO">${ACCURACY} = {'diff': [0.0001226250000000012, 0.00012261099999999817, 0.00012088899999999903, 0.00012194399999999883, 0.00012227799999999997, 0.00012099999999999958, 0.0001207090000000001, 0.00012245899999999837, ...</msg>
<status status="PASS" starttime="20201030 10:58:23.193" endtime="20201030 10:58:23.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.202" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 10:58:23.201" endtime="20201030 10:58:23.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.204" level="INFO">VALUE: [0.0001226250000000012, 0.00012261099999999817, 0.00012088899999999903, 0.00012194399999999883, 0.00012227799999999997, 0.00012099999999999958, 0.0001207090000000001, 0.00012245899999999837, 0.0001226250000000012, 0.00012195800000000187, 0.00012169499999999805, 0.00012129199999999854, 0.00012079200000000151, 0.00012094500000000077, 0.00012177799999999947, 0.00012179199999999904, 0.000120776999999999, 0.00012129100000000254, 0.0001222640000000004, 0.00012229199999999954, 0.00012129200000000201, 0.00012111100000000014, 0.0001224449999999988, 0.00012095900000000034, 0.00012161200000000011, 0.0001225969999999986, 0.0001212769999999995, 0.00012109700000000057, 0.00012261100000000164, 0.00012227799999999997, 0.00012074999999999933, 0.00012177800000000294, 0.0001211249999999997, 0.0001216250000000002, 0.0001208050000000016, 0.00012261100000000164, 0.00012194399999999883, 0.00012113899999999928, 0.00012166599999999944, 0.0001224999999999976, 0.00012259800000000154, 0.00012161200000000011, 0.0001221250000000007, 0.00012261099999999817, 0.0001211249999999997, 0.0001220969999999981, 0.00012150000000000008, 0.0001226250000000012, 0.00012145900000000084, 0.00012095900000000034]</msg>
<status status="PASS" starttime="20201030 10:58:23.203" endtime="20201030 10:58:23.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.198" endtime="20201030 10:58:23.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.210" endtime="20201030 10:58:23.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.208" endtime="20201030 10:58:23.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.207" endtime="20201030 10:58:23.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.845" endtime="20201030 10:58:23.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.844" endtime="20201030 10:58:23.230"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.239" endtime="20201030 10:58:23.260"></status>
</kw>
<msg timestamp="20201030 10:58:23.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.238" endtime="20201030 10:58:23.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.261" endtime="20201030 10:58:23.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.264" endtime="20201030 10:58:23.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.235" endtime="20201030 10:58:23.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.233" endtime="20201030 10:58:23.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.273" endtime="20201030 10:58:23.561"></status>
</kw>
<msg timestamp="20201030 10:58:23.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.272" endtime="20201030 10:58:23.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.566" endtime="20201030 10:58:23.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.574" endtime="20201030 10:58:23.576"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.269" endtime="20201030 10:58:23.576"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.267" endtime="20201030 10:58:23.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.581" level="INFO">${RESULT} = [{'diff': 0.0001241250000000027}, {'diff': 0.00012362499999999874}, {'diff': 0.00012361100000000264}, {'diff': 0.00012294399999999983}, {'diff': 0.00012394400000000083}, {'diff': 0.0001232640000000014...</msg>
<status status="PASS" starttime="20201030 10:58:23.577" endtime="20201030 10:58:23.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:23.585" level="INFO">${ACCURACY} = {'diff': [0.0001241250000000027, 0.00012362499999999874, 0.00012361100000000264, 0.00012294399999999983, 0.00012394400000000083, 0.0001232640000000014, 0.00012379199999999757, 0.0001228189999999997, 0...</msg>
<status status="PASS" starttime="20201030 10:58:23.582" endtime="20201030 10:58:23.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.589" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 10:58:23.588" endtime="20201030 10:58:23.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.592" level="INFO">VALUE: [0.0001241250000000027, 0.00012362499999999874, 0.00012361100000000264, 0.00012294399999999983, 0.00012394400000000083, 0.0001232640000000014, 0.00012379199999999757, 0.0001228189999999997, 0.00012445900000000037, 0.00012417999999999804, 0.00012337499999999849, 0.00012438899999999906, 0.00012394400000000083, 0.00012294399999999983, 0.0001242779999999985, 0.00012441700000000167, 0.0001243190000000012, 0.00012295900000000234, 0.00012412499999999924, 0.00012397199999999997, 0.0001246389999999993, 0.0001236250000000022, 0.0001244580000000009, 0.00012362499999999874, 0.0001230969999999991, 0.00012283300000000275, 0.0001239450000000003, 0.0001234579999999999, 0.00012377800000000147, 0.0001238060000000006, 0.0001230969999999991, 0.00012369500000000005, 0.00012462499999999974, 0.00012379199999999757, 0.00012277800000000047, 0.00012329100000000107, 0.00012380500000000114, 0.00012361100000000264, 0.00012331999999999968, 0.0001241389999999988, 0.00012279200000000004, 0.00012359799999999907, 0.0001230420000000003, 0.00012293000000000026, 0.00012311100000000214, 0.00012394400000000083, 0.00012277800000000047, 0.00012379200000000104, 0.00012362499999999874, 0.00012429200000000154]</msg>
<status status="PASS" starttime="20201030 10:58:23.590" endtime="20201030 10:58:23.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.586" endtime="20201030 10:58:23.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.597" endtime="20201030 10:58:23.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.596" endtime="20201030 10:58:23.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.594" endtime="20201030 10:58:23.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.231" endtime="20201030 10:58:23.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.231" endtime="20201030 10:58:23.618"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.627" endtime="20201030 10:58:23.649"></status>
</kw>
<msg timestamp="20201030 10:58:23.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.625" endtime="20201030 10:58:23.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.650" endtime="20201030 10:58:23.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.653" endtime="20201030 10:58:23.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.623" endtime="20201030 10:58:23.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.620" endtime="20201030 10:58:23.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.662" endtime="20201030 10:58:23.947"></status>
</kw>
<msg timestamp="20201030 10:58:23.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023542333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023668792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.661" endtime="20201030 10:58:23.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023542333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023668792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.951" endtime="20201030 10:58:23.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.960" endtime="20201030 10:58:23.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.658" endtime="20201030 10:58:23.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.656" endtime="20201030 10:58:23.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.967" level="INFO">${RESULT} = [{'diff': 0.00012645900000000238}, {'diff': 0.00012512500000000024}, {'diff': 0.0001259169999999997}, {'diff': 0.00012562499999999727}, {'diff': 0.00012612500000000124}, {'diff': 0.0001250969999999976...</msg>
<status status="PASS" starttime="20201030 10:58:23.963" endtime="20201030 10:58:23.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:23.971" level="INFO">${ACCURACY} = {'diff': [0.00012645900000000238, 0.00012512500000000024, 0.0001259169999999997, 0.00012562499999999727, 0.00012612500000000124, 0.00012509699999999763, 0.0001249299999999988, 0.00012495900000000087, ...</msg>
<status status="PASS" starttime="20201030 10:58:23.968" endtime="20201030 10:58:23.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.975" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 10:58:23.974" endtime="20201030 10:58:23.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.979" level="INFO">VALUE: [0.00012645900000000238, 0.00012512500000000024, 0.0001259169999999997, 0.00012562499999999727, 0.00012612500000000124, 0.00012509699999999763, 0.0001249299999999988, 0.00012495900000000087, 0.00012662499999999827, 0.00012479199999999857, 0.00012645900000000238, 0.0001247909999999991, 0.00012626400000000093, 0.00012561100000000117, 0.00012479199999999857, 0.00012561100000000117, 0.0001256109999999977, 0.0001266390000000013, 0.0001254589999999979, 0.0001261109999999982, 0.00012627799999999703, 0.0001262499999999979, 0.00012638900000000106, 0.000125778, 0.0001259450000000023, 0.00012562500000000074, 0.00012612500000000124, 0.00012645799999999943, 0.00012641600000000072, 0.0001259299999999998, 0.00012626400000000093, 0.00012526399999999993, 0.00012626400000000093, 0.00012595900000000188, 0.0001259589999999984, 0.0001266390000000013, 0.0001263199999999992, 0.00012576400000000043, 0.00012594399999999936, 0.00012538900000000006, 0.00012630599999999964, 0.00012629200000000007, 0.00012544499999999834, 0.00012595799999999893, 0.00012511100000000067, 0.00012544400000000233, 0.0001250970000000011, 0.00012643100000000324, 0.00012544499999999834, 0.0001252779999999995]</msg>
<status status="PASS" starttime="20201030 10:58:23.976" endtime="20201030 10:58:23.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.971" endtime="20201030 10:58:23.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.984" endtime="20201030 10:58:24.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.982" endtime="20201030 10:58:24.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.981" endtime="20201030 10:58:24.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.619" endtime="20201030 10:58:24.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.618" endtime="20201030 10:58:24.005"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.014" endtime="20201030 10:58:24.035"></status>
</kw>
<msg timestamp="20201030 10:58:24.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.012" endtime="20201030 10:58:24.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.036" endtime="20201030 10:58:24.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.039" endtime="20201030 10:58:24.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.009" endtime="20201030 10:58:24.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.007" endtime="20201030 10:58:24.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.048" endtime="20201030 10:58:24.334"></status>
</kw>
<msg timestamp="20201030 10:58:24.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.047" endtime="20201030 10:58:24.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.338" endtime="20201030 10:58:24.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.346" endtime="20201030 10:58:24.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.044" endtime="20201030 10:58:24.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.042" endtime="20201030 10:58:24.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.353" level="INFO">${RESULT} = [{'diff': 0.00012780599999999767}, {'diff': 0.00012726399999999846}, {'diff': 0.0001271109999999992}, {'diff': 0.00012813899999999934}, {'diff': 0.00012745800000000043}, {'diff': 0.0001272909999999981...</msg>
<status status="PASS" starttime="20201030 10:58:24.350" endtime="20201030 10:58:24.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:24.358" level="INFO">${ACCURACY} = {'diff': [0.00012780599999999767, 0.00012726399999999846, 0.0001271109999999992, 0.00012813899999999934, 0.00012745800000000043, 0.00012729099999999813, 0.0001285829999999981, 0.0001286529999999994, 0...</msg>
<status status="PASS" starttime="20201030 10:58:24.354" endtime="20201030 10:58:24.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.363" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 10:58:24.361" endtime="20201030 10:58:24.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.365" level="INFO">VALUE: [0.00012780599999999767, 0.00012726399999999846, 0.0001271109999999992, 0.00012813899999999934, 0.00012745800000000043, 0.00012729099999999813, 0.0001285829999999981, 0.0001286529999999994, 0.000127569000000001, 0.00012744400000000086, 0.00012826399999999946, 0.00012844500000000134, 0.00012855599999999842, 0.00012745800000000043, 0.00012812499999999977, 0.00012792999999999832, 0.00012829200000000207, 0.00012749999999999914, 0.00012780600000000114, 0.0001282780000000025, 0.00012779099999999863, 0.00012845799999999796, 0.00012812499999999977, 0.00012695799999999993, 0.00012745800000000043, 0.00012795799999999746, 0.00012776399999999896, 0.00012781900000000124, 0.00012729200000000107, 0.00012745800000000043, 0.0001272910000000016, 0.00012709699999999963, 0.00012677799999999753, 0.00012743100000000077, 0.0001272780000000015, 0.0001281110000000002, 0.0001277919999999981, 0.00012680500000000067, 0.000128472000000001, 0.0001276109999999997, 0.0001274300000000013, 0.0001277919999999981, 0.000127165999999998, 0.0001282919999999986, 0.00012712500000000224, 0.00012745800000000043, 0.00012842999999999882, 0.00012804100000000235, 0.00012672199999999925, 0.00012837500000000002]</msg>
<status status="PASS" starttime="20201030 10:58:24.364" endtime="20201030 10:58:24.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.359" endtime="20201030 10:58:24.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.370" endtime="20201030 10:58:24.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.369" endtime="20201030 10:58:24.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.367" endtime="20201030 10:58:24.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.006" endtime="20201030 10:58:24.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.005" endtime="20201030 10:58:24.391"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.400" endtime="20201030 10:58:24.421"></status>
</kw>
<msg timestamp="20201030 10:58:24.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.398" endtime="20201030 10:58:24.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.423" endtime="20201030 10:58:24.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.425" endtime="20201030 10:58:24.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.396" endtime="20201030 10:58:24.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.393" endtime="20201030 10:58:24.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.435" endtime="20201030 10:58:24.724"></status>
</kw>
<msg timestamp="20201030 10:58:24.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.433" endtime="20201030 10:58:24.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.728" endtime="20201030 10:58:24.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.737" endtime="20201030 10:58:24.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.430" endtime="20201030 10:58:24.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.429" endtime="20201030 10:58:24.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.743" level="INFO">${RESULT} = [{'diff': 0.0001302920000000006}, {'diff': 0.000130472999999999}, {'diff': 0.00012959799999999813}, {'diff': 0.00013026400000000146}, {'diff': 0.0001295829999999991}, {'diff': 0.00013059699999999966},...</msg>
<status status="PASS" starttime="20201030 10:58:24.740" endtime="20201030 10:58:24.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:24.747" level="INFO">${ACCURACY} = {'diff': [0.0001302920000000006, 0.000130472999999999, 0.00012959799999999813, 0.00013026400000000146, 0.0001295829999999991, 0.00013059699999999966, 0.00012987499999999805, 0.0001301249999999983, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:24.744" endtime="20201030 10:58:24.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.752" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 10:58:24.751" endtime="20201030 10:58:24.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.755" level="INFO">VALUE: [0.0001302920000000006, 0.000130472999999999, 0.00012959799999999813, 0.00013026400000000146, 0.0001295829999999991, 0.00013059699999999966, 0.00012987499999999805, 0.0001301249999999983, 0.00012962500000000127, 0.0001302920000000006, 0.00012877799999999953, 0.0001306119999999987, 0.00013012500000000177, 0.00012962500000000127, 0.00013030600000000017, 0.0001288339999999978, 0.0001292919999999996, 0.0001294590000000019, 0.000128778000000003, 0.00012895799999999846, 0.0001297769999999976, 0.0001306110000000027, 0.00012927800000000003, 0.00012962500000000127, 0.0001296530000000004, 0.00012880599999999867, 0.00012977800000000053, 0.0001304440000000004, 0.00012927700000000056, 0.00013045800000000343, 0.00012895800000000193, 0.0001291529999999999, 0.0001296110000000017, 0.0001304310000000003, 0.000130263999999998, 0.00012961200000000117, 0.00012895799999999846, 0.0001293330000000023, 0.00012962500000000127, 0.00012990300000000066, 0.00013009700000000263, 0.000130263999999998, 0.00012940300000000016, 0.00012895800000000193, 0.00013033299999999984, 0.0001292919999999996, 0.00012945799999999896, 0.0001293890000000006, 0.0001289309999999988, 0.0001302920000000006]</msg>
<status status="PASS" starttime="20201030 10:58:24.753" endtime="20201030 10:58:24.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.748" endtime="20201030 10:58:24.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.760" endtime="20201030 10:58:24.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.758" endtime="20201030 10:58:24.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.757" endtime="20201030 10:58:24.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.392" endtime="20201030 10:58:24.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.391" endtime="20201030 10:58:24.780"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.790" endtime="20201030 10:58:24.812"></status>
</kw>
<msg timestamp="20201030 10:58:24.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.788" endtime="20201030 10:58:24.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.814" endtime="20201030 10:58:24.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.816" endtime="20201030 10:58:24.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.785" endtime="20201030 10:58:24.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.783" endtime="20201030 10:58:24.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.826" endtime="20201030 10:58:25.112"></status>
</kw>
<msg timestamp="20201030 10:58:25.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023695389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023826194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.824" endtime="20201030 10:58:25.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023695389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023826194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.116" endtime="20201030 10:58:25.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.124" endtime="20201030 10:58:25.126"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.821" endtime="20201030 10:58:25.126"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.820" endtime="20201030 10:58:25.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.131" level="INFO">${RESULT} = [{'diff': 0.00013080499999999773}, {'diff': 0.00013229099999999966}, {'diff': 0.00013147200000000053}, {'diff': 0.00013077800000000153}, {'diff': 0.00013141699999999826}, {'diff': 0.000131111000000003...</msg>
<status status="PASS" starttime="20201030 10:58:25.128" endtime="20201030 10:58:25.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:25.135" level="INFO">${ACCURACY} = {'diff': [0.00013080499999999773, 0.00013229099999999966, 0.00013147200000000053, 0.00013077800000000153, 0.00013141699999999826, 0.0001311110000000032, 0.000131166000000002, 0.00013166599999999903, 0...</msg>
<status status="PASS" starttime="20201030 10:58:25.132" endtime="20201030 10:58:25.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.140" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 10:58:25.139" endtime="20201030 10:58:25.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.142" level="INFO">VALUE: [0.00013080499999999773, 0.00013229099999999966, 0.00013147200000000053, 0.00013077800000000153, 0.00013141699999999826, 0.0001311110000000032, 0.000131166000000002, 0.00013166599999999903, 0.0001311379999999994, 0.00013211100000000073, 0.0001314440000000014, 0.00013127799999999856, 0.00013227799999999956, 0.00013244500000000187, 0.00013094500000000037, 0.00013077800000000153, 0.0001321120000000002, 0.00013225000000000042, 0.00013168100000000155, 0.00013263900000000037, 0.0001323059999999987, 0.00013127799999999856, 0.0001308050000000012, 0.0001319449999999979, 0.00013093000000000132, 0.0001316249999999998, 0.00013195800000000146, 0.00013111099999999973, 0.00013143099999999783, 0.00013177800000000253, 0.00013182000000000124, 0.0001317920000000021, 0.00013129100000000213, 0.0001318470000000009, 0.00013127799999999856, 0.00013161100000000023, 0.0001307639999999985, 0.00013111099999999973, 0.000131473, 0.00013204199999999888, 0.00013079100000000163, 0.00013230499999999923, 0.0001320969999999977, 0.00013161099999999676, 0.00013145900000000044, 0.00013077800000000153, 0.00013145900000000044, 0.00013240200000000021, 0.0001322770000000001, 0.00013229099999999966]</msg>
<status status="PASS" starttime="20201030 10:58:25.141" endtime="20201030 10:58:25.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.136" endtime="20201030 10:58:25.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.148" endtime="20201030 10:58:25.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.147" endtime="20201030 10:58:25.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.145" endtime="20201030 10:58:25.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.781" endtime="20201030 10:58:25.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.781" endtime="20201030 10:58:25.169"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.178" endtime="20201030 10:58:25.200"></status>
</kw>
<msg timestamp="20201030 10:58:25.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.176" endtime="20201030 10:58:25.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.201" endtime="20201030 10:58:25.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.204" endtime="20201030 10:58:25.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.174" endtime="20201030 10:58:25.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.171" endtime="20201030 10:58:25.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.213" endtime="20201030 10:58:25.498"></status>
</kw>
<msg timestamp="20201030 10:58:25.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.212" endtime="20201030 10:58:25.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.503" endtime="20201030 10:58:25.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.511" endtime="20201030 10:58:25.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.209" endtime="20201030 10:58:25.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.207" endtime="20201030 10:58:25.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.518" level="INFO">${RESULT} = [{'diff': 0.0001336250000000018}, {'diff': 0.000133958}, {'diff': 0.00013327800000000056}, {'diff': 0.00013376399999999802}, {'diff': 0.00013311100000000173}, {'diff': 0.0001338190000000003}, {'diff':...</msg>
<status status="PASS" starttime="20201030 10:58:25.514" endtime="20201030 10:58:25.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:25.523" level="INFO">${ACCURACY} = {'diff': [0.0001336250000000018, 0.000133958, 0.00013327800000000056, 0.00013376399999999802, 0.00013311100000000173, 0.0001338190000000003, 0.00013391600000000128, 0.00013377699999999812, 0.000133430...</msg>
<status status="PASS" starttime="20201030 10:58:25.519" endtime="20201030 10:58:25.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.527" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 10:58:25.526" endtime="20201030 10:58:25.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.530" level="INFO">VALUE: [0.0001336250000000018, 0.000133958, 0.00013327800000000056, 0.00013376399999999802, 0.00013311100000000173, 0.0001338190000000003, 0.00013391600000000128, 0.00013377699999999812, 0.00013343000000000035, 0.00013427800000000156, 0.00013325000000000142, 0.0001336250000000018, 0.00013461099999999976, 0.00013444400000000092, 0.0001345970000000002, 0.00013279100000000016, 0.00013447200000000006, 0.00013362499999999833, 0.0001341800000000011, 0.00013308400000000206, 0.00013441700000000126, 0.00013365300000000094, 0.0001331250000000013, 0.00013280499999999973, 0.00013444399999999745, 0.00013337500000000155, 0.00013313799999999792, 0.0001345840000000001, 0.0001336380000000019, 0.00013374999999999845, 0.00013430500000000123, 0.000132957999999999, 0.00013465300000000194, 0.0001344580000000005, 0.00013422199999999981, 0.00013327800000000056, 0.00013311100000000173, 0.00013441600000000178, 0.00013294399999999942, 0.00013422199999999981, 0.0001332779999999971, 0.00013343099999999983, 0.00013361100000000223, 0.0001344999999999992, 0.00013444400000000092, 0.00013347199999999906, 0.00013344399999999992, 0.00013465299999999847, 0.00013427800000000156, 0.00013445899999999997]</msg>
<status status="PASS" starttime="20201030 10:58:25.528" endtime="20201030 10:58:25.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.523" endtime="20201030 10:58:25.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.535" endtime="20201030 10:58:25.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.533" endtime="20201030 10:58:25.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.532" endtime="20201030 10:58:25.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.170" endtime="20201030 10:58:25.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.169" endtime="20201030 10:58:25.556"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.565" endtime="20201030 10:58:25.586"></status>
</kw>
<msg timestamp="20201030 10:58:25.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.563" endtime="20201030 10:58:25.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.587" endtime="20201030 10:58:25.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.590" endtime="20201030 10:58:25.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.560" endtime="20201030 10:58:25.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.558" endtime="20201030 10:58:25.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.599" endtime="20201030 10:58:25.886"></status>
</kw>
<msg timestamp="20201030 10:58:25.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022390375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.598" endtime="20201030 10:58:25.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022390375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.891" endtime="20201030 10:58:25.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.899" endtime="20201030 10:58:25.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.595" endtime="20201030 10:58:25.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.593" endtime="20201030 10:58:25.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.906" level="INFO">${RESULT} = [{'diff': 0.0001352779999999991}, {'diff': 0.0001352779999999991}, {'diff': 0.00013579199999999916}, {'diff': 0.00013595799999999852}, {'diff': 0.0001352779999999991}, {'diff': 0.00013579199999999916}...</msg>
<status status="PASS" starttime="20201030 10:58:25.902" endtime="20201030 10:58:25.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:25.910" level="INFO">${ACCURACY} = {'diff': [0.0001352779999999991, 0.0001352779999999991, 0.00013579199999999916, 0.00013595799999999852, 0.0001352779999999991, 0.00013579199999999916, 0.00013629199999999966, 0.00013562500000000033, 0...</msg>
<status status="PASS" starttime="20201030 10:58:25.907" endtime="20201030 10:58:25.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.914" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 10:58:25.913" endtime="20201030 10:58:25.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.917" level="INFO">VALUE: [0.0001352779999999991, 0.0001352779999999991, 0.00013579199999999916, 0.00013595799999999852, 0.0001352779999999991, 0.00013579199999999916, 0.00013629199999999966, 0.00013562500000000033, 0.0001347640000000025, 0.00013509800000000016, 0.00013561100000000076, 0.0001347909999999987, 0.00013545799999999802, 0.00013530599999999823, 0.0001347779999999986, 0.0001362780000000001, 0.0001355000000000002, 0.000134958000000001, 0.00013591599999999981, 0.0001347779999999986, 0.0001354580000000015, 0.00013495799999999752, 0.00013562500000000033, 0.00013629199999999966, 0.00013662500000000133, 0.0001349030000000022, 0.00013569499999999818, 0.00013495799999999752, 0.00013645799999999902, 0.00013543100000000183, 0.0001357779999999996, 0.00013662500000000133, 0.0001360000000000007, 0.0001366109999999983, 0.00013512499999999983, 0.00013594399999999895, 0.00013662500000000133, 0.0001364589999999985, 0.0001366109999999983, 0.00013470900000000022, 0.00013512499999999983, 0.000135264000000003, 0.0001352779999999991, 0.00013594400000000242, 0.00013565299999999947, 0.00013562500000000033, 0.00013594499999999843, 0.00013548600000000063, 0.00013572199999999784, 0.00013611100000000126]</msg>
<status status="PASS" starttime="20201030 10:58:25.916" endtime="20201030 10:58:25.918"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.911" endtime="20201030 10:58:25.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.922" endtime="20201030 10:58:25.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.921" endtime="20201030 10:58:25.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.919" endtime="20201030 10:58:25.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.557" endtime="20201030 10:58:25.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.556" endtime="20201030 10:58:25.943"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.952" endtime="20201030 10:58:25.974"></status>
</kw>
<msg timestamp="20201030 10:58:25.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.950" endtime="20201030 10:58:25.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.975" endtime="20201030 10:58:25.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.978" endtime="20201030 10:58:25.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.947" endtime="20201030 10:58:25.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.945" endtime="20201030 10:58:25.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.987" endtime="20201030 10:58:26.273"></status>
</kw>
<msg timestamp="20201030 10:58:26.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023517569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023654542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.986" endtime="20201030 10:58:26.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023517569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023654542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.277" endtime="20201030 10:58:26.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.286" endtime="20201030 10:58:26.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.983" endtime="20201030 10:58:26.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.981" endtime="20201030 10:58:26.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.292" level="INFO">${RESULT} = [{'diff': 0.00013697300000000204}, {'diff': 0.0001382780000000021}, {'diff': 0.00013849999999999973}, {'diff': 0.0001384720000000006}, {'diff': 0.0001374719999999996}, {'diff': 0.00013802800000000184}...</msg>
<status status="PASS" starttime="20201030 10:58:26.289" endtime="20201030 10:58:26.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:26.297" level="INFO">${ACCURACY} = {'diff': [0.00013697300000000204, 0.0001382780000000021, 0.00013849999999999973, 0.0001384720000000006, 0.0001374719999999996, 0.00013802800000000184, 0.0001381109999999998, 0.0001377780000000016, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:26.293" endtime="20201030 10:58:26.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.301" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 10:58:26.300" endtime="20201030 10:58:26.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.304" level="INFO">VALUE: [0.00013697300000000204, 0.0001382780000000021, 0.00013849999999999973, 0.0001384720000000006, 0.0001374719999999996, 0.00013802800000000184, 0.0001381109999999998, 0.0001377780000000016, 0.00013712499999999836, 0.00013716699999999707, 0.00013761100000000276, 0.00013794399999999749, 0.00013827799999999862, 0.00013740299999999775, 0.0001371109999999988, 0.00013694499999999943, 0.00013694499999999943, 0.00013812499999999936, 0.0001374719999999996, 0.00013866700000000204, 0.00013765300000000147, 0.0001376109999999993, 0.0001377780000000016, 0.00013758399999999962, 0.00013744499999999993, 0.0001381109999999998, 0.00013743000000000088, 0.00013863899999999943, 0.00013679200000000016, 0.0001373199999999998, 0.00013862499999999986, 0.00013812499999999936, 0.00013862499999999986, 0.00013712499999999836, 0.00013862499999999986, 0.0001371109999999988, 0.00013681899999999983, 0.00013722199999999934, 0.00013813899999999893, 0.00013711200000000173, 0.00013677700000000112, 0.00013795800000000052, 0.00013762499999999886, 0.00013829200000000166, 0.00013779200000000116, 0.00013824999999999948, 0.00013784699999999997, 0.0001372910000000012, 0.0001381529999999985, 0.00013712499999999836]</msg>
<status status="PASS" starttime="20201030 10:58:26.302" endtime="20201030 10:58:26.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.297" endtime="20201030 10:58:26.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.315" endtime="20201030 10:58:26.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.313" endtime="20201030 10:58:26.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.312" endtime="20201030 10:58:26.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.944" endtime="20201030 10:58:26.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.943" endtime="20201030 10:58:26.335"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.344" endtime="20201030 10:58:26.366"></status>
</kw>
<msg timestamp="20201030 10:58:26.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.343" endtime="20201030 10:58:26.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.368" endtime="20201030 10:58:26.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.371" endtime="20201030 10:58:26.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.340" endtime="20201030 10:58:26.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.338" endtime="20201030 10:58:26.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.380" endtime="20201030 10:58:26.665"></status>
</kw>
<msg timestamp="20201030 10:58:26.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.378" endtime="20201030 10:58:26.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.670" endtime="20201030 10:58:26.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.678" endtime="20201030 10:58:26.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.376" endtime="20201030 10:58:26.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.374" endtime="20201030 10:58:26.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.685" level="INFO">${RESULT} = [{'diff': 0.00013994500000000243}, {'diff': 0.00013906999999999808}, {'diff': 0.00013994499999999896}, {'diff': 0.0001388049999999988}, {'diff': 0.00013974999999999752}, {'diff': 0.0001402779999999971...</msg>
<status status="PASS" starttime="20201030 10:58:26.681" endtime="20201030 10:58:26.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:26.690" level="INFO">${ACCURACY} = {'diff': [0.00013994500000000243, 0.00013906999999999808, 0.00013994499999999896, 0.0001388049999999988, 0.00013974999999999752, 0.00014027799999999715, 0.00013977800000000012, 0.0001390139999999998, ...</msg>
<status status="PASS" starttime="20201030 10:58:26.686" endtime="20201030 10:58:26.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.694" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 10:58:26.693" endtime="20201030 10:58:26.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.697" level="INFO">VALUE: [0.00013994500000000243, 0.00013906999999999808, 0.00013994499999999896, 0.0001388049999999988, 0.00013974999999999752, 0.00014027799999999715, 0.00013977800000000012, 0.0001390139999999998, 0.00014019399999999974, 0.00013962500000000086, 0.00013929099999999972, 0.00013944399999999899, 0.00013941599999999985, 0.00013888899999999968, 0.00013927799999999962, 0.00013977800000000012, 0.00013927799999999962, 0.00013912500000000036, 0.00013984700000000197, 0.00013877699999999965, 0.00014025000000000148, 0.00013973600000000141, 0.0001397919999999997, 0.00013944499999999846, 0.00014012500000000136, 0.00013961099999999782, 0.00014045799999999956, 0.0001396110000000013, 0.00013942999999999942, 0.00013879200000000216, 0.0001406249999999984, 0.00014030599999999976, 0.00013907000000000155, 0.00013981900000000283, 0.0001396249999999974, 0.00013930600000000223, 0.00014027799999999715, 0.00013952799999999987, 0.00014045899999999903, 0.00013929200000000266, 0.00013994399999999949, 0.00014044399999999999, 0.0001404859999999987, 0.00013879200000000216, 0.00014012500000000136, 0.00013927799999999962, 0.00014011099999999832, 0.00013902799999999937, 0.00013912500000000036, 0.00014044399999999999]</msg>
<status status="PASS" starttime="20201030 10:58:26.695" endtime="20201030 10:58:26.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.690" endtime="20201030 10:58:26.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.702" endtime="20201030 10:58:26.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.700" endtime="20201030 10:58:26.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.699" endtime="20201030 10:58:26.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.336" endtime="20201030 10:58:26.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.336" endtime="20201030 10:58:26.723"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.732" endtime="20201030 10:58:26.753"></status>
</kw>
<msg timestamp="20201030 10:58:26.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.730" endtime="20201030 10:58:26.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.755" endtime="20201030 10:58:26.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.757" endtime="20201030 10:58:26.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.727" endtime="20201030 10:58:26.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.725" endtime="20201030 10:58:26.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.767" endtime="20201030 10:58:27.055"></status>
</kw>
<msg timestamp="20201030 10:58:27.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.765" endtime="20201030 10:58:27.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.059" endtime="20201030 10:58:27.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.067" endtime="20201030 10:58:27.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.762" endtime="20201030 10:58:27.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.761" endtime="20201030 10:58:27.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.074" level="INFO">${RESULT} = [{'diff': 0.0001411249999999989}, {'diff': 0.00014072199999999938}, {'diff': 0.00014127799999999816}, {'diff': 0.00014125000000000248}, {'diff': 0.00014079099999999775}, {'diff': 0.0001409719999999996...</msg>
<status status="PASS" starttime="20201030 10:58:27.071" endtime="20201030 10:58:27.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.078" level="INFO">${ACCURACY} = {'diff': [0.0001411249999999989, 0.00014072199999999938, 0.00014127799999999816, 0.00014125000000000248, 0.00014079099999999775, 0.00014097199999999963, 0.000142444999999998, 0.00014179199999999823, 0...</msg>
<status status="PASS" starttime="20201030 10:58:27.075" endtime="20201030 10:58:27.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.083" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.082" endtime="20201030 10:58:27.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.085" level="INFO">VALUE: [0.0001411249999999989, 0.00014072199999999938, 0.00014127799999999816, 0.00014125000000000248, 0.00014079099999999775, 0.00014097199999999963, 0.000142444999999998, 0.00014179199999999823, 0.0001416249999999994, 0.00014147200000000013, 0.0001415279999999984, 0.00014111099999999932, 0.00014079100000000122, 0.0001421249999999999, 0.00014211100000000032, 0.00014127799999999816, 0.00014124999999999902, 0.00014145900000000003, 0.00014116700000000107, 0.0001426669999999991, 0.00014095800000000006, 0.00014111099999999932, 0.00014161099999999982, 0.00014159700000000025, 0.00014257000000000158, 0.00014083299999999993, 0.00014111200000000226, 0.00014211100000000032, 0.0001416249999999994, 0.00014095800000000006, 0.00014111099999999932, 0.00014211100000000032, 0.00014123599999999945, 0.0001411119999999988, 0.00014077700000000165, 0.00014076400000000155, 0.00014161099999999982, 0.0001416249999999994, 0.00014145799999999709, 0.00014161099999999982, 0.00014109799999999922, 0.00014095800000000006, 0.00014144400000000099, 0.0001411249999999989, 0.00014147200000000013, 0.00014179199999999823, 0.00014227800000000262, 0.00014161099999999982, 0.00014147200000000013, 0.00014195800000000106]</msg>
<status status="PASS" starttime="20201030 10:58:27.084" endtime="20201030 10:58:27.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.079" endtime="20201030 10:58:27.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.090" endtime="20201030 10:58:27.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.089" endtime="20201030 10:58:27.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.088" endtime="20201030 10:58:27.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.724" endtime="20201030 10:58:27.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.723" endtime="20201030 10:58:27.111"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.120" endtime="20201030 10:58:27.142"></status>
</kw>
<msg timestamp="20201030 10:58:27.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.118" endtime="20201030 10:58:27.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.144" endtime="20201030 10:58:27.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.146" endtime="20201030 10:58:27.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.116" endtime="20201030 10:58:27.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.114" endtime="20201030 10:58:27.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.156" endtime="20201030 10:58:27.442"></status>
</kw>
<msg timestamp="20201030 10:58:27.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023365667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023509611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.154" endtime="20201030 10:58:27.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023365667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023509611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.446" endtime="20201030 10:58:27.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.454" endtime="20201030 10:58:27.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.151" endtime="20201030 10:58:27.457"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.150" endtime="20201030 10:58:27.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.461" level="INFO">${RESULT} = [{'diff': 0.00014394400000000002}, {'diff': 0.00014430599999999683}, {'diff': 0.000144445}, {'diff': 0.00014362499999999792}, {'diff': 0.00014345799999999909}, {'diff': 0.00014333299999999896}, {'diff...</msg>
<status status="PASS" starttime="20201030 10:58:27.458" endtime="20201030 10:58:27.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.465" level="INFO">${ACCURACY} = {'diff': [0.00014394400000000002, 0.00014430599999999683, 0.000144445, 0.00014362499999999792, 0.00014345799999999909, 0.00014333299999999896, 0.00014344399999999952, 0.0001436250000000014, 0.00014379...</msg>
<status status="PASS" starttime="20201030 10:58:27.462" endtime="20201030 10:58:27.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.470" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.469" endtime="20201030 10:58:27.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.473" level="INFO">VALUE: [0.00014394400000000002, 0.00014430599999999683, 0.000144445, 0.00014362499999999792, 0.00014345799999999909, 0.00014333299999999896, 0.00014344399999999952, 0.0001436250000000014, 0.00014379200000000023, 0.00014408400000000265, 0.0001439449999999995, 0.0001427920000000027, 0.00014412499999999842, 0.0001428890000000002, 0.00014468100000000067, 0.00014412499999999842, 0.0001446800000000012, 0.00014429200000000073, 0.00014336100000000157, 0.00014377700000000118, 0.00014362499999999792, 0.0001436250000000014, 0.00014445800000000009, 0.00014425000000000202, 0.0001444730000000026, 0.00014297199999999816, 0.00014330499999999982, 0.00014394400000000002, 0.00014368099999999967, 0.00014329199999999973, 0.00014429199999999726, 0.0001438890000000012, 0.00014369399999999977, 0.00014313900000000046, 0.0001442769999999982, 0.00014445800000000009, 0.00014301400000000034, 0.00014361099999999835, 0.00014393099999999992, 0.00014277799999999966, 0.00014380499999999685, 0.0001431669999999996, 0.00014445800000000009, 0.00014411099999999885, 0.0001427920000000027, 0.00014461099999999935, 0.00014286100000000107, 0.00014429100000000125, 0.00014461099999999935, 0.00014394400000000002]</msg>
<status status="PASS" starttime="20201030 10:58:27.471" endtime="20201030 10:58:27.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.466" endtime="20201030 10:58:27.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.478" endtime="20201030 10:58:27.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.477" endtime="20201030 10:58:27.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.476" endtime="20201030 10:58:27.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.112" endtime="20201030 10:58:27.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.111" endtime="20201030 10:58:27.499"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.508" endtime="20201030 10:58:27.530"></status>
</kw>
<msg timestamp="20201030 10:58:27.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.507" endtime="20201030 10:58:27.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.531" endtime="20201030 10:58:27.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.534" endtime="20201030 10:58:27.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.504" endtime="20201030 10:58:27.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.502" endtime="20201030 10:58:27.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.544" endtime="20201030 10:58:27.829"></status>
</kw>
<msg timestamp="20201030 10:58:27.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.542" endtime="20201030 10:58:27.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022673889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.833" endtime="20201030 10:58:27.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.842" endtime="20201030 10:58:27.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.539" endtime="20201030 10:58:27.844"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.537" endtime="20201030 10:58:27.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.848" level="INFO">${RESULT} = [{'diff': 0.00014575000000000005}, {'diff': 0.00014545900000000056}, {'diff': 0.000146139}, {'diff': 0.0001459450000000015}, {'diff': 0.00014659700000000178}, {'diff': 0.00014527800000000216}, {'diff'...</msg>
<status status="PASS" starttime="20201030 10:58:27.845" endtime="20201030 10:58:27.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.853" level="INFO">${ACCURACY} = {'diff': [0.00014575000000000005, 0.00014545900000000056, 0.000146139, 0.0001459450000000015, 0.00014659700000000178, 0.00014527800000000216, 0.00014562499999999992, 0.00014611099999999738, 0.00014529...</msg>
<status status="PASS" starttime="20201030 10:58:27.849" endtime="20201030 10:58:27.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.858" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.857" endtime="20201030 10:58:27.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.861" level="INFO">VALUE: [0.00014575000000000005, 0.00014545900000000056, 0.000146139, 0.0001459450000000015, 0.00014659700000000178, 0.00014527800000000216, 0.00014562499999999992, 0.00014611099999999738, 0.00014529200000000173, 0.00014529200000000173, 0.0001466939999999993, 0.00014575000000000005, 0.00014529099999999878, 0.000145138999999999, 0.00014562499999999992, 0.00014611099999999738, 0.00014611099999999738, 0.00014613800000000052, 0.00014545800000000109, 0.00014495800000000059, 0.00014629199999999926, 0.00014527799999999869, 0.0001449450000000005, 0.00014561099999999688, 0.00014630500000000282, 0.00014555500000000207, 0.0001448190000000009, 0.00014497200000000016, 0.00014529200000000173, 0.00014645900000000156, 0.00014611099999999738, 0.00014612500000000042, 0.0001456389999999995, 0.00014592999999999898, 0.00014594399999999855, 0.00014611100000000085, 0.00014645900000000156, 0.00014561100000000035, 0.0001451939999999978, 0.00014661099999999788, 0.00014511099999999985, 0.00014627799999999969, 0.00014515299999999856, 0.00014588899999999974, 0.00014661100000000135, 0.00014479200000000123, 0.00014647200000000166, 0.00014565300000000253, 0.0001448060000000008, 0.00014551399999999937]</msg>
<status status="PASS" starttime="20201030 10:58:27.859" endtime="20201030 10:58:27.861"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.854" endtime="20201030 10:58:27.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.866" endtime="20201030 10:58:27.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.864" endtime="20201030 10:58:27.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.863" endtime="20201030 10:58:27.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.500" endtime="20201030 10:58:27.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.499" endtime="20201030 10:58:27.886"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.896" endtime="20201030 10:58:27.919"></status>
</kw>
<msg timestamp="20201030 10:58:27.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.894" endtime="20201030 10:58:27.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.921" endtime="20201030 10:58:27.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.924" endtime="20201030 10:58:27.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.891" endtime="20201030 10:58:27.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.889" endtime="20201030 10:58:27.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.933" endtime="20201030 10:58:28.223"></status>
</kw>
<msg timestamp="20201030 10:58:28.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023001431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023148194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.931" endtime="20201030 10:58:28.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023001431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023148194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.227" endtime="20201030 10:58:28.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.236" endtime="20201030 10:58:28.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.929" endtime="20201030 10:58:28.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.927" endtime="20201030 10:58:28.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.242" level="INFO">${RESULT} = [{'diff': 0.00014676300000000114}, {'diff': 0.00014727799999999722}, {'diff': 0.0001477919999999973}, {'diff': 0.00014751299999999842}, {'diff': 0.00014679199999999976}, {'diff': 0.0001486249999999994...</msg>
<status status="PASS" starttime="20201030 10:58:28.239" endtime="20201030 10:58:28.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:28.246" level="INFO">${ACCURACY} = {'diff': [0.00014676300000000114, 0.00014727799999999722, 0.0001477919999999973, 0.00014751299999999842, 0.00014679199999999976, 0.00014862499999999945, 0.0001480550000000011, 0.0001476390000000015, 0...</msg>
<status status="PASS" starttime="20201030 10:58:28.243" endtime="20201030 10:58:28.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.251" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 10:58:28.250" endtime="20201030 10:58:28.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.254" level="INFO">VALUE: [0.00014676300000000114, 0.00014727799999999722, 0.0001477919999999973, 0.00014751299999999842, 0.00014679199999999976, 0.00014862499999999945, 0.0001480550000000011, 0.0001476390000000015, 0.00014712500000000142, 0.0001477919999999973, 0.00014772199999999944, 0.00014680599999999933, 0.00014730599999999983, 0.00014698599999999826, 0.00014862499999999945, 0.00014813899999999852, 0.00014811099999999938, 0.00014862500000000292, 0.00014797299999999916, 0.00014862499999999945, 0.00014761199999999836, 0.0001474719999999992, 0.00014763899999999802, 0.00014745799999999962, 0.00014680599999999933, 0.00014834700000000006, 0.00014712499999999795, 0.00014811199999999886, 0.00014748600000000223, 0.00014780499999999738, 0.00014697200000000216, 0.00014711099999999838, 0.00014694499999999902, 0.00014763799999999855, 0.00014859799999999979, 0.00014843000000000148, 0.00014829100000000178, 0.00014827800000000169, 0.00014827800000000169, 0.00014794500000000002, 0.00014695900000000206, 0.0001469589999999986, 0.00014762500000000192, 0.00014730500000000035, 0.0001467220000000019, 0.00014680599999999933, 0.00014794500000000002, 0.00014780600000000033, 0.0001469450000000025, 0.00014861099999999988]</msg>
<status status="PASS" starttime="20201030 10:58:28.252" endtime="20201030 10:58:28.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.247" endtime="20201030 10:58:28.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.259" endtime="20201030 10:58:28.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.257" endtime="20201030 10:58:28.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.256" endtime="20201030 10:58:28.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.887" endtime="20201030 10:58:28.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.887" endtime="20201030 10:58:28.279"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.289" endtime="20201030 10:58:28.312"></status>
</kw>
<msg timestamp="20201030 10:58:28.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.287" endtime="20201030 10:58:28.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.313" endtime="20201030 10:58:28.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.316" endtime="20201030 10:58:28.318"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.284" endtime="20201030 10:58:28.318"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.282" endtime="20201030 10:58:28.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.325" endtime="20201030 10:58:28.612"></status>
</kw>
<msg timestamp="20201030 10:58:28.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023876319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024025292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.324" endtime="20201030 10:58:28.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023876319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024025292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.616" endtime="20201030 10:58:28.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.624" endtime="20201030 10:58:28.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.321" endtime="20201030 10:58:28.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.319" endtime="20201030 10:58:28.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.631" level="INFO">${RESULT} = [{'diff': 0.00014897300000000016}, {'diff': 0.00015011100000000138}, {'diff': 0.0001501530000000001}, {'diff': 0.00014911100000000038}, {'diff': 0.0001501109999999979}, {'diff': 0.00014877800000000219...</msg>
<status status="PASS" starttime="20201030 10:58:28.628" endtime="20201030 10:58:28.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:28.635" level="INFO">${ACCURACY} = {'diff': [0.00014897300000000016, 0.00015011100000000138, 0.0001501530000000001, 0.00014911100000000038, 0.0001501109999999979, 0.00014877800000000219, 0.00014981899999999895, 0.00014912499999999995, ...</msg>
<status status="PASS" starttime="20201030 10:58:28.632" endtime="20201030 10:58:28.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.640" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 10:58:28.639" endtime="20201030 10:58:28.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.642" level="INFO">VALUE: [0.00014897300000000016, 0.00015011100000000138, 0.0001501530000000001, 0.00014911100000000038, 0.0001501109999999979, 0.00014877800000000219, 0.00014981899999999895, 0.00014912499999999995, 0.0001491949999999978, 0.00014944500000000152, 0.00014912499999999995, 0.00015058299999999927, 0.00014895800000000112, 0.00014912499999999995, 0.00015062499999999798, 0.00015045899999999862, 0.00014911199999999986, 0.00014912499999999995, 0.0001496109999999974, 0.00014995799999999865, 0.0001497919999999993, 0.00014977799999999972, 0.0001489590000000006, 0.00015062499999999798, 0.00014944400000000205, 0.00014894400000000155, 0.00015030599999999936, 0.00015012499999999748, 0.00015030600000000283, 0.00015062499999999798, 0.0001489590000000006, 0.0001502910000000003, 0.00014884800000000004, 0.0001497919999999993, 0.00014927799999999922, 0.00014897300000000016, 0.00014959800000000079, 0.00014911199999999986, 0.00014927699999999974, 0.00014879100000000228, 0.0001488619999999996, 0.00014958300000000174, 0.0001494590000000011, 0.00015011100000000138, 0.00015011199999999739, 0.0001494720000000012, 0.00015013899999999705, 0.00014894399999999808, 0.00015033399999999503, 0.0001492090000000043]</msg>
<status status="PASS" starttime="20201030 10:58:28.641" endtime="20201030 10:58:28.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.636" endtime="20201030 10:58:28.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.648" endtime="20201030 10:58:28.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.647" endtime="20201030 10:58:28.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.646" endtime="20201030 10:58:28.669"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.280" endtime="20201030 10:58:28.669"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.280" endtime="20201030 10:58:28.669"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.678" endtime="20201030 10:58:28.700"></status>
</kw>
<msg timestamp="20201030 10:58:28.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.676" endtime="20201030 10:58:28.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.702" endtime="20201030 10:58:28.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.704" endtime="20201030 10:58:28.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.674" endtime="20201030 10:58:28.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.672" endtime="20201030 10:58:28.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.714" endtime="20201030 10:58:29.001"></status>
</kw>
<msg timestamp="20201030 10:58:29.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.712" endtime="20201030 10:58:29.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.005" endtime="20201030 10:58:29.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.013" endtime="20201030 10:58:29.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.709" endtime="20201030 10:58:29.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.708" endtime="20201030 10:58:29.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.020" level="INFO">${RESULT} = [{'diff': 0.00015129099999999784}, {'diff': 0.00015179199999999782}, {'diff': 0.0001524439999999981}, {'diff': 0.00015247200000000072}, {'diff': 0.0001522920000000018}, {'diff': 0.00015093099999999998...</msg>
<status status="PASS" starttime="20201030 10:58:29.017" endtime="20201030 10:58:29.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.025" level="INFO">${ACCURACY} = {'diff': [0.00015129099999999784, 0.00015179199999999782, 0.0001524439999999981, 0.00015247200000000072, 0.0001522920000000018, 0.00015093099999999998, 0.00015262499999999998, 0.00015245800000000115, ...</msg>
<status status="PASS" starttime="20201030 10:58:29.021" endtime="20201030 10:58:29.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.030" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.029" endtime="20201030 10:58:29.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.032" level="INFO">VALUE: [0.00015129099999999784, 0.00015179199999999782, 0.0001524439999999981, 0.00015247200000000072, 0.0001522920000000018, 0.00015093099999999998, 0.00015262499999999998, 0.00015245800000000115, 0.00015145800000000015, 0.0001518059999999974, 0.00015141699999999744, 0.00015127799999999775, 0.00015130499999999741, 0.00015177699999999877, 0.00015230500000000188, 0.00015077800000000072, 0.0001517920000000013, 0.0001526110000000004, 0.00015212499999999948, 0.00015112499999999848, 0.00015195800000000065, 0.00015212499999999948, 0.00015245800000000115, 0.0001507920000000003, 0.00015143100000000048, 0.00015176399999999868, 0.0001526119999999999, 0.0001509019999999979, 0.00015144400000000058, 0.00015134800000000254, 0.0001511109999999989, 0.00015244500000000105, 0.00015163899999999855, 0.00015095899999999912, 0.0001512910000000013, 0.00015145800000000015, 0.000152430000000002, 0.00015144400000000058, 0.0001526110000000004, 0.00015111100000000238, 0.00015112500000000195, 0.00015195800000000065, 0.0001521109999999999, 0.00015227800000000222, 0.00015076400000000115, 0.00015127800000000122, 0.00015227800000000222, 0.00015113900000000152, 0.0001512910000000013, 0.0001509300000000005]</msg>
<status status="PASS" starttime="20201030 10:58:29.031" endtime="20201030 10:58:29.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.026" endtime="20201030 10:58:29.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.037" endtime="20201030 10:58:29.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.036" endtime="20201030 10:58:29.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.035" endtime="20201030 10:58:29.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.670" endtime="20201030 10:58:29.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.669" endtime="20201030 10:58:29.058"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.067" endtime="20201030 10:58:29.090"></status>
</kw>
<msg timestamp="20201030 10:58:29.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.066" endtime="20201030 10:58:29.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.091" endtime="20201030 10:58:29.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.094" endtime="20201030 10:58:29.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.063" endtime="20201030 10:58:29.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.061" endtime="20201030 10:58:29.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.103" endtime="20201030 10:58:29.390"></status>
</kw>
<msg timestamp="20201030 10:58:29.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.101" endtime="20201030 10:58:29.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.394" endtime="20201030 10:58:29.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.403" endtime="20201030 10:58:29.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.099" endtime="20201030 10:58:29.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.097" endtime="20201030 10:58:29.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.409" level="INFO">${RESULT} = [{'diff': 0.0001529439999999986}, {'diff': 0.0001531110000000009}, {'diff': 0.0001536249999999975}, {'diff': 0.00015391699999999994}, {'diff': 0.00015429099999999737}, {'diff': 0.00015362500000000098}...</msg>
<status status="PASS" starttime="20201030 10:58:29.406" endtime="20201030 10:58:29.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.414" level="INFO">${ACCURACY} = {'diff': [0.0001529439999999986, 0.0001531110000000009, 0.0001536249999999975, 0.00015391699999999994, 0.00015429099999999737, 0.00015362500000000098, 0.00015315299999999962, 0.0001536249999999975, 0....</msg>
<status status="PASS" starttime="20201030 10:58:29.410" endtime="20201030 10:58:29.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.418" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.417" endtime="20201030 10:58:29.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.421" level="INFO">VALUE: [0.0001529439999999986, 0.0001531110000000009, 0.0001536249999999975, 0.00015391699999999994, 0.00015429099999999737, 0.00015362500000000098, 0.00015315299999999962, 0.0001536249999999975, 0.00015444500000000305, 0.00015429199999999685, 0.00015444499999999958, 0.00015412500000000148, 0.0001532500000000006, 0.00015279199999999882, 0.00015412499999999801, 0.0001543059999999999, 0.00015429200000000032, 0.00015463900000000155, 0.0001545829999999998, 0.00015279099999999934, 0.0001536110000000014, 0.00015427799999999728, 0.00015395900000000212, 0.00015394499999999908, 0.00015381899999999948, 0.00015380499999999991, 0.00015327799999999975, 0.00015412499999999801, 0.00015377800000000025, 0.0001532639999999967, 0.00015331899999999898, 0.00015362500000000098, 0.0001536110000000014, 0.00015345800000000215, 0.00015311099999999744, 0.00015445899999999915, 0.00015429200000000032, 0.0001539439999999996, 0.00015295799999999818, 0.00015345799999999868, 0.00015411099999999844, 0.00015412500000000148, 0.0001531110000000009, 0.00015409799999999835, 0.00015463900000000155, 0.000153124999999997, 0.00015427800000000075, 0.00015462499999999851, 0.00015313900000000005, 0.00015445899999999915]</msg>
<status status="PASS" starttime="20201030 10:58:29.419" endtime="20201030 10:58:29.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.414" endtime="20201030 10:58:29.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.426" endtime="20201030 10:58:29.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.424" endtime="20201030 10:58:29.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.423" endtime="20201030 10:58:29.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.059" endtime="20201030 10:58:29.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.058" endtime="20201030 10:58:29.447"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.456" endtime="20201030 10:58:29.478"></status>
</kw>
<msg timestamp="20201030 10:58:29.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.454" endtime="20201030 10:58:29.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.480" endtime="20201030 10:58:29.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.483" endtime="20201030 10:58:29.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.451" endtime="20201030 10:58:29.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.449" endtime="20201030 10:58:29.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.492" endtime="20201030 10:58:29.778"></status>
</kw>
<msg timestamp="20201030 10:58:29.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023763819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023919778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.491" endtime="20201030 10:58:29.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023763819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023919778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.782" endtime="20201030 10:58:29.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.791" endtime="20201030 10:58:29.792"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.488" endtime="20201030 10:58:29.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.486" endtime="20201030 10:58:29.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.797" level="INFO">${RESULT} = [{'diff': 0.00015595900000000065}, {'diff': 0.00015579199999999835}, {'diff': 0.00015609799999999688}, {'diff': 0.00015497199999999975}, {'diff': 0.00015529100000000184}, {'diff': 0.000156277999999999...</msg>
<status status="PASS" starttime="20201030 10:58:29.794" endtime="20201030 10:58:29.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.802" level="INFO">${ACCURACY} = {'diff': [0.00015595900000000065, 0.00015579199999999835, 0.00015609799999999688, 0.00015497199999999975, 0.00015529100000000184, 0.00015627799999999928, 0.00015662500000000051, 0.00015545900000000015...</msg>
<status status="PASS" starttime="20201030 10:58:29.798" endtime="20201030 10:58:29.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.806" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.805" endtime="20201030 10:58:29.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.809" level="INFO">VALUE: [0.00015595900000000065, 0.00015579199999999835, 0.00015609799999999688, 0.00015497199999999975, 0.00015529100000000184, 0.00015627799999999928, 0.00015662500000000051, 0.00015545900000000015, 0.00015643099999999854, 0.00015645800000000168, 0.0001562769999999998, 0.00015612500000000001, 0.00015648600000000082, 0.0001562639999999997, 0.00015495899999999965, 0.00015645900000000115, 0.00015594399999999814, 0.00015512499999999901, 0.00015565300000000212, 0.0001556670000000017, 0.00015513899999999858, 0.00015623600000000057, 0.00015580499999999844, 0.00015530499999999794, 0.00015561099999999994, 0.00015661099999999747, 0.00015547200000000025, 0.00015527799999999828, 0.00015662500000000051, 0.00015512499999999901, 0.00015537499999999926, 0.00015661100000000094, 0.0001566939999999989, 0.00015577800000000225, 0.00015580599999999792, 0.00015569500000000083, 0.00015580500000000191, 0.00015561099999999994, 0.00015527800000000175, 0.00015579200000000182, 0.00015662500000000051, 0.000155431000000001, 0.00015579099999999887, 0.00015629100000000284, 0.00015477800000000125, 0.00015479199999999735, 0.00015497200000000322, 0.0001558060000000014, 0.00015562499999999951, 0.00015563899999999908]</msg>
<status status="PASS" starttime="20201030 10:58:29.807" endtime="20201030 10:58:29.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.802" endtime="20201030 10:58:29.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.815" endtime="20201030 10:58:29.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.813" endtime="20201030 10:58:29.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.812" endtime="20201030 10:58:29.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.448" endtime="20201030 10:58:29.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.447" endtime="20201030 10:58:29.835"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.844" endtime="20201030 10:58:29.867"></status>
</kw>
<msg timestamp="20201030 10:58:29.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.843" endtime="20201030 10:58:29.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.868" endtime="20201030 10:58:29.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.871" endtime="20201030 10:58:29.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.840" endtime="20201030 10:58:29.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.838" endtime="20201030 10:58:29.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.880" endtime="20201030 10:58:30.167"></status>
</kw>
<msg timestamp="20201030 10:58:30.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.879" endtime="20201030 10:58:30.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.171" endtime="20201030 10:58:30.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.179" endtime="20201030 10:58:30.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.876" endtime="20201030 10:58:30.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.874" endtime="20201030 10:58:30.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.186" level="INFO">${RESULT} = [{'diff': 0.0001577770000000013}, {'diff': 0.00015675000000000064}, {'diff': 0.00015751400000000096}, {'diff': 0.00015783299999999958}, {'diff': 0.00015729200000000332}, {'diff': 0.0001586109999999994...</msg>
<status status="PASS" starttime="20201030 10:58:30.183" endtime="20201030 10:58:30.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:30.191" level="INFO">${ACCURACY} = {'diff': [0.0001577770000000013, 0.00015675000000000064, 0.00015751400000000096, 0.00015783299999999958, 0.00015729200000000332, 0.00015861099999999947, 0.0001579449999999996, 0.0001574579999999992, 0...</msg>
<status status="PASS" starttime="20201030 10:58:30.187" endtime="20201030 10:58:30.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.196" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 10:58:30.195" endtime="20201030 10:58:30.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.198" level="INFO">VALUE: [0.0001577770000000013, 0.00015675000000000064, 0.00015751400000000096, 0.00015783299999999958, 0.00015729200000000332, 0.00015861099999999947, 0.0001579449999999996, 0.0001574579999999992, 0.0001569579999999987, 0.00015727800000000028, 0.00015727800000000028, 0.00015715299999999668, 0.00015845899999999968, 0.00015677799999999978, 0.00015812500000000201, 0.00015729100000000037, 0.00015808299999999983, 0.00015763899999999761, 0.0001578610000000022, 0.00015834700000000312, 0.0001572770000000008, 0.00015844399999999717, 0.00015730599999999942, 0.00015854100000000163, 0.00015862500000000251, 0.00015697299999999775, 0.00015779100000000088, 0.00015862499999999904, 0.0001577640000000012, 0.00015698599999999785, 0.00015713900000000058, 0.0001577779999999973, 0.00015795899999999918, 0.0001574579999999992, 0.00015736099999999822, 0.00015747199999999878, 0.00015847199999999978, 0.00015762500000000151, 0.0001574449999999991, 0.00015729100000000037, 0.0001584580000000002, 0.00015813900000000158, 0.0001580420000000006, 0.00015834699999999965, 0.00015729199999999985, 0.00015713799999999764, 0.0001575830000000028, 0.00015797200000000275, 0.00015813900000000158, 0.0001576809999999998]</msg>
<status status="PASS" starttime="20201030 10:58:30.197" endtime="20201030 10:58:30.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.192" endtime="20201030 10:58:30.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.204" endtime="20201030 10:58:30.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.202" endtime="20201030 10:58:30.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.201" endtime="20201030 10:58:30.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.836" endtime="20201030 10:58:30.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.836" endtime="20201030 10:58:30.224"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.233" endtime="20201030 10:58:30.256"></status>
</kw>
<msg timestamp="20201030 10:58:30.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.232" endtime="20201030 10:58:30.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.258" endtime="20201030 10:58:30.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.260" endtime="20201030 10:58:30.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.229" endtime="20201030 10:58:30.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.227" endtime="20201030 10:58:30.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.270" endtime="20201030 10:58:30.556"></status>
</kw>
<msg timestamp="20201030 10:58:30.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022980972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.268" endtime="20201030 10:58:30.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022980972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.561" endtime="20201030 10:58:30.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.569" endtime="20201030 10:58:30.571"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.266" endtime="20201030 10:58:30.571"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.264" endtime="20201030 10:58:30.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.576" level="INFO">${RESULT} = [{'diff': 0.00016062499999999758}, {'diff': 0.0001599299999999991}, {'diff': 0.00015913900000000258}, {'diff': 0.00015947300000000025}, {'diff': 0.00016013900000000011}, {'diff': 0.0001592910000000023...</msg>
<status status="PASS" starttime="20201030 10:58:30.573" endtime="20201030 10:58:30.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:30.580" level="INFO">${ACCURACY} = {'diff': [0.00016062499999999758, 0.0001599299999999991, 0.00015913900000000258, 0.00015947300000000025, 0.00016013900000000011, 0.00015929100000000238, 0.0001589580000000007, 0.00015944399999999817, ...</msg>
<status status="PASS" starttime="20201030 10:58:30.577" endtime="20201030 10:58:30.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.585" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 10:58:30.583" endtime="20201030 10:58:30.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.587" level="INFO">VALUE: [0.00016062499999999758, 0.0001599299999999991, 0.00015913900000000258, 0.00015947300000000025, 0.00016013900000000011, 0.00015929100000000238, 0.0001589580000000007, 0.00015944399999999817, 0.00015913899999999911, 0.00015927800000000228, 0.00016012500000000054, 0.00016011200000000045, 0.00015944399999999817, 0.00015962500000000004, 0.00015909699999999694, 0.00015945799999999774, 0.00015949999999999992, 0.00015880500000000145, 0.00016013900000000011, 0.00016011100000000097, 0.0001587779999999983, 0.0001602779999999998, 0.00016000000000000042, 0.0001597779999999993, 0.00015962500000000004, 0.00015963899999999961, 0.00015962500000000004, 0.00015929200000000185, 0.00015897200000000028, 0.00015897299999999975, 0.00015995900000000118, 0.0001594719999999973, 0.00015994399999999867, 0.00015929199999999838, 0.0001600970000000014, 0.00016030599999999895, 0.00015944499999999764, 0.00016061200000000095, 0.00015994400000000214, 0.00015962500000000004, 0.00016013900000000011, 0.00015913899999999911, 0.00015877800000000178, 0.00016011199999999698, 0.0001587909999999984, 0.00015927699999999934, 0.00016063900000000061, 0.00015912499999999954, 0.00015962500000000004, 0.00015947300000000025]</msg>
<status status="PASS" starttime="20201030 10:58:30.586" endtime="20201030 10:58:30.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.581" endtime="20201030 10:58:30.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.592" endtime="20201030 10:58:30.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.591" endtime="20201030 10:58:30.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.589" endtime="20201030 10:58:30.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.225" endtime="20201030 10:58:30.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.225" endtime="20201030 10:58:30.613"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.622" endtime="20201030 10:58:30.646"></status>
</kw>
<msg timestamp="20201030 10:58:30.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.620" endtime="20201030 10:58:30.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.648" endtime="20201030 10:58:30.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.650" endtime="20201030 10:58:30.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.618" endtime="20201030 10:58:30.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.616" endtime="20201030 10:58:30.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.660" endtime="20201030 10:58:30.946"></status>
</kw>
<msg timestamp="20201030 10:58:30.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023837417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023998528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.658" endtime="20201030 10:58:30.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023837417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023998528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.950" endtime="20201030 10:58:30.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.959" endtime="20201030 10:58:30.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.655" endtime="20201030 10:58:30.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.654" endtime="20201030 10:58:30.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.966" level="INFO">${RESULT} = [{'diff': 0.00016111100000000197}, {'diff': 0.00016229200000000138}, {'diff': 0.00016079099999999694}, {'diff': 0.0001619719999999998}, {'diff': 0.0001617919999999974}, {'diff': 0.0001621109999999995}...</msg>
<status status="PASS" starttime="20201030 10:58:30.963" endtime="20201030 10:58:30.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:30.970" level="INFO">${ACCURACY} = {'diff': [0.00016111100000000197, 0.00016229200000000138, 0.00016079099999999694, 0.0001619719999999998, 0.0001617919999999974, 0.0001621109999999995, 0.00016112500000000154, 0.00016245899999999674, 0...</msg>
<status status="PASS" starttime="20201030 10:58:30.967" endtime="20201030 10:58:30.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.975" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 10:58:30.974" endtime="20201030 10:58:30.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.978" level="INFO">VALUE: [0.00016111100000000197, 0.00016229200000000138, 0.00016079099999999694, 0.0001619719999999998, 0.0001617919999999974, 0.0001621109999999995, 0.00016112500000000154, 0.00016245899999999674, 0.00016245800000000074, 0.00016212499999999908, 0.00016111100000000197, 0.00016112499999999808, 0.00016112500000000154, 0.00016080600000000292, 0.0001619719999999998, 0.000162611, 0.00016183300000000012, 0.00016113900000000111, 0.0001619719999999998, 0.00016147299999999878, 0.0001623889999999989, 0.0001612910000000009, 0.00016161100000000247, 0.00016144400000000017, 0.00016266699999999829, 0.00016194500000000014, 0.00016197299999999928, 0.00016111199999999798, 0.00016162499999999858, 0.0001609719999999988, 0.0001620970000000034, 0.00016212500000000254, 0.00016079199999999988, 0.00016245900000000021, 0.00016162500000000204, 0.00016227700000000234, 0.00016134799999999866, 0.00016111100000000197, 0.00016095899999999871, 0.00016197299999999928, 0.00016145799999999974, 0.00016154099999999769, 0.0001614170000000005, 0.00016162499999999858, 0.00016159699999999944, 0.00016231900000000105, 0.00016195900000000318, 0.000162611, 0.00016186099999999926, 0.00016144400000000364]</msg>
<status status="PASS" starttime="20201030 10:58:30.976" endtime="20201030 10:58:30.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.971" endtime="20201030 10:58:30.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.983" endtime="20201030 10:58:31.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.982" endtime="20201030 10:58:31.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.980" endtime="20201030 10:58:31.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.614" endtime="20201030 10:58:31.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.613" endtime="20201030 10:58:31.004"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.013" endtime="20201030 10:58:31.036"></status>
</kw>
<msg timestamp="20201030 10:58:31.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.011" endtime="20201030 10:58:31.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.037" endtime="20201030 10:58:31.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.040" endtime="20201030 10:58:31.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.009" endtime="20201030 10:58:31.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.007" endtime="20201030 10:58:31.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.049" endtime="20201030 10:58:31.335"></status>
</kw>
<msg timestamp="20201030 10:58:31.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022791889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.048" endtime="20201030 10:58:31.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022791889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.339" endtime="20201030 10:58:31.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.348" endtime="20201030 10:58:31.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.045" endtime="20201030 10:58:31.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.043" endtime="20201030 10:58:31.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.355" level="INFO">${RESULT} = [{'diff': 0.00016277799999999884}, {'diff': 0.0001632919999999989}, {'diff': 0.000164305}, {'diff': 0.00016312500000000008}, {'diff': 0.00016322200000000106}, {'diff': 0.00016326399999999977}, {'diff'...</msg>
<status status="PASS" starttime="20201030 10:58:31.351" endtime="20201030 10:58:31.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:31.360" level="INFO">${ACCURACY} = {'diff': [0.00016277799999999884, 0.0001632919999999989, 0.000164305, 0.00016312500000000008, 0.00016322200000000106, 0.00016326399999999977, 0.00016376400000000027, 0.0001632780000000028, 0.000163612...</msg>
<status status="PASS" starttime="20201030 10:58:31.356" endtime="20201030 10:58:31.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.365" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 10:58:31.363" endtime="20201030 10:58:31.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.367" level="INFO">VALUE: [0.00016277799999999884, 0.0001632919999999989, 0.000164305, 0.00016312500000000008, 0.00016322200000000106, 0.00016326399999999977, 0.00016376400000000027, 0.0001632780000000028, 0.00016361200000000048, 0.00016298600000000038, 0.00016279099999999894, 0.0001629439999999982, 0.00016351300000000055, 0.00016276399999999927, 0.00016413900000000065, 0.00016345899999999774, 0.00016379099999999994, 0.00016445799999999927, 0.00016412500000000108, 0.00016423599999999816, 0.00016411099999999804, 0.00016294499999999768, 0.00016362500000000058, 0.00016427800000000034, 0.00016319399999999845, 0.0001627919999999984, 0.00016404199999999966, 0.00016345900000000121, 0.0001646249999999981, 0.00016334700000000119, 0.00016445800000000274, 0.0001641110000000015, 0.00016311099999999704, 0.00016313899999999965, 0.00016362500000000058, 0.00016312500000000008, 0.00016330500000000248, 0.00016430599999999948, 0.00016332000000000152, 0.00016395899999999825, 0.00016362500000000058, 0.0001629720000000008, 0.00016445799999999927, 0.00016345800000000174, 0.0001627780000000023, 0.00016445899999999875, 0.00016361099999999754, 0.00016409700000000194, 0.0001634300000000026, 0.0001629720000000008]</msg>
<status status="PASS" starttime="20201030 10:58:31.366" endtime="20201030 10:58:31.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.361" endtime="20201030 10:58:31.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.379" endtime="20201030 10:58:31.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.378" endtime="20201030 10:58:31.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.376" endtime="20201030 10:58:31.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.005" endtime="20201030 10:58:31.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.004" endtime="20201030 10:58:31.400"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.409" endtime="20201030 10:58:31.431"></status>
</kw>
<msg timestamp="20201030 10:58:31.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.407" endtime="20201030 10:58:31.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.433" endtime="20201030 10:58:31.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.435" endtime="20201030 10:58:31.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.405" endtime="20201030 10:58:31.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.402" endtime="20201030 10:58:31.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.445" endtime="20201030 10:58:31.735"></status>
</kw>
<msg timestamp="20201030 10:58:31.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022942944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.443" endtime="20201030 10:58:31.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022942944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.739" endtime="20201030 10:58:31.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.748" endtime="20201030 10:58:31.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.441" endtime="20201030 10:58:31.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.439" endtime="20201030 10:58:31.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.755" level="INFO">${RESULT} = [{'diff': 0.0001666250000000001}, {'diff': 0.00016573599999999966}, {'diff': 0.00016561099999999954}, {'diff': 0.00016595800000000077}, {'diff': 0.00016545899999999975}, {'diff': 0.0001652780000000013...</msg>
<status status="PASS" starttime="20201030 10:58:31.751" endtime="20201030 10:58:31.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:31.759" level="INFO">${ACCURACY} = {'diff': [0.0001666250000000001, 0.00016573599999999966, 0.00016561099999999954, 0.00016595800000000077, 0.00016545899999999975, 0.00016527800000000134, 0.0001656249999999991, 0.0001659440000000012, 0...</msg>
<status status="PASS" starttime="20201030 10:58:31.756" endtime="20201030 10:58:31.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.764" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 10:58:31.763" endtime="20201030 10:58:31.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.766" level="INFO">VALUE: [0.0001666250000000001, 0.00016573599999999966, 0.00016561099999999954, 0.00016595800000000077, 0.00016545899999999975, 0.00016527800000000134, 0.0001656249999999991, 0.0001659440000000012, 0.00016477800000000084, 0.0001652920000000009, 0.0001657920000000014, 0.000165305999999997, 0.00016574999999999923, 0.00016542999999999766, 0.00016611100000000004, 0.00016656899999999836, 0.00016629199999999844, 0.0001651249999999986, 0.00016497199999999934, 0.00016545800000000027, 0.0001659440000000012, 0.0001656249999999991, 0.00016512500000000208, 0.00016611100000000004, 0.00016644500000000118, 0.00016479100000000094, 0.00016511099999999904, 0.00016500000000000195, 0.0001661249999999996, 0.00016511099999999904, 0.0001659859999999999, 0.0001664159999999991, 0.0001654859999999994, 0.0001653189999999971, 0.00016565299999999825, 0.0001656249999999991, 0.00016602799999999862, 0.00016545900000000321, 0.00016551399999999855, 0.00016659700000000097, 0.00016473599999999866, 0.00016494499999999968, 0.00016561099999999954, 0.00016645900000000075, 0.0001654440000000007, 0.00016529100000000144, 0.00016530600000000048, 0.00016648599999999694, 0.00016561099999999954, 0.00016547199999999984]</msg>
<status status="PASS" starttime="20201030 10:58:31.765" endtime="20201030 10:58:31.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.760" endtime="20201030 10:58:31.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.771" endtime="20201030 10:58:31.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.770" endtime="20201030 10:58:31.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.769" endtime="20201030 10:58:31.792"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.401" endtime="20201030 10:58:31.792"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.400" endtime="20201030 10:58:31.792"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.801" endtime="20201030 10:58:31.824"></status>
</kw>
<msg timestamp="20201030 10:58:31.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.800" endtime="20201030 10:58:31.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.826" endtime="20201030 10:58:31.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.829" endtime="20201030 10:58:31.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.797" endtime="20201030 10:58:31.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.795" endtime="20201030 10:58:31.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.838" endtime="20201030 10:58:32.123"></status>
</kw>
<msg timestamp="20201030 10:58:32.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023541806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023708931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.836" endtime="20201030 10:58:32.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023541806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023708931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.128" endtime="20201030 10:58:32.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.136" endtime="20201030 10:58:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.834" endtime="20201030 10:58:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.832" endtime="20201030 10:58:32.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.143" level="INFO">${RESULT} = [{'diff': 0.0001671250000000006}, {'diff': 0.0001673189999999991}, {'diff': 0.00016679099999999947}, {'diff': 0.00016679199999999894}, {'diff': 0.0001674579999999988}, {'diff': 0.00016737500000000086}...</msg>
<status status="PASS" starttime="20201030 10:58:32.139" endtime="20201030 10:58:32.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.147" level="INFO">${ACCURACY} = {'diff': [0.0001671250000000006, 0.0001673189999999991, 0.00016679099999999947, 0.00016679199999999894, 0.0001674579999999988, 0.00016737500000000086, 0.00016827800000000087, 0.00016694399999999873, 0...</msg>
<status status="PASS" starttime="20201030 10:58:32.144" endtime="20201030 10:58:32.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.151" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.150" endtime="20201030 10:58:32.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.154" level="INFO">VALUE: [0.0001671250000000006, 0.0001673189999999991, 0.00016679099999999947, 0.00016679199999999894, 0.0001674579999999988, 0.00016737500000000086, 0.00016827800000000087, 0.00016694399999999873, 0.0001670830000000019, 0.00016829200000000044, 0.00016679199999999894, 0.0001668059999999985, 0.00016680499999999904, 0.00016729099999999997, 0.00016779100000000047, 0.0001684169999999971, 0.00016761099999999807, 0.00016763900000000068, 0.00016727799999999987, 0.00016845800000000327, 0.00016692999999999916, 0.00016729199999999944, 0.00016843100000000014, 0.00016845899999999928, 0.00016745899999999828, 0.00016816700000000032, 0.00016862499999999864, 0.0001684579999999998, 0.000168306, 0.00016695900000000125, 0.0001684449999999997, 0.00016862499999999864, 0.00016732000000000205, 0.00016830500000000054, 0.00016862499999999864, 0.0001676250000000011, 0.00016679199999999894, 0.00016727799999999987, 0.00016697200000000134, 0.0001676250000000011, 0.00016713900000000018, 0.00016761100000000154, 0.00016777800000000037, 0.0001679589999999953, 0.0001679299999999967, 0.00016680499999999904, 0.00016794399999999626, 0.00016815299999999728, 0.00016811099999999857, 0.00016829200000000044]</msg>
<status status="PASS" starttime="20201030 10:58:32.153" endtime="20201030 10:58:32.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.148" endtime="20201030 10:58:32.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.160" endtime="20201030 10:58:32.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.158" endtime="20201030 10:58:32.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.157" endtime="20201030 10:58:32.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.793" endtime="20201030 10:58:32.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.793" endtime="20201030 10:58:32.181"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.190" endtime="20201030 10:58:32.213"></status>
</kw>
<msg timestamp="20201030 10:58:32.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.188" endtime="20201030 10:58:32.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.214" endtime="20201030 10:58:32.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.217" endtime="20201030 10:58:32.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.185" endtime="20201030 10:58:32.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.183" endtime="20201030 10:58:32.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.226" endtime="20201030 10:58:32.513"></status>
</kw>
<msg timestamp="20201030 10:58:32.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022657236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.225" endtime="20201030 10:58:32.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022657236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.517" endtime="20201030 10:58:32.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.525" endtime="20201030 10:58:32.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.222" endtime="20201030 10:58:32.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.220" endtime="20201030 10:58:32.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.532" level="INFO">${RESULT} = [{'diff': 0.0001696389999999992}, {'diff': 0.0001702779999999994}, {'diff': 0.00016917999999999794}, {'diff': 0.0001694450000000007}, {'diff': 0.00016959799999999997}, {'diff': 0.00016894400000000073}...</msg>
<status status="PASS" starttime="20201030 10:58:32.528" endtime="20201030 10:58:32.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.537" level="INFO">${ACCURACY} = {'diff': [0.0001696389999999992, 0.0001702779999999994, 0.00016917999999999794, 0.0001694450000000007, 0.00016959799999999997, 0.00016894400000000073, 0.00016994399999999826, 0.0001699580000000013, 0....</msg>
<status status="PASS" starttime="20201030 10:58:32.533" endtime="20201030 10:58:32.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.541" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.540" endtime="20201030 10:58:32.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.544" level="INFO">VALUE: [0.0001696389999999992, 0.0001702779999999994, 0.00016917999999999794, 0.0001694450000000007, 0.00016959799999999997, 0.00016894400000000073, 0.00016994399999999826, 0.0001699580000000013, 0.0001694999999999995, 0.00017059699999999803, 0.00016927800000000187, 0.000169790999999999, 0.00017034700000000125, 0.0001704580000000018, 0.0001689580000000003, 0.0001690839999999999, 0.0001687779999999979, 0.000169790999999999, 0.0001692909999999985, 0.00016979199999999847, 0.0001689450000000002, 0.00016891700000000107, 0.00017047300000000085, 0.0001696389999999992, 0.00017047200000000137, 0.00016895799999999683, 0.00016911199999999904, 0.0001687779999999979, 0.00017029199999999897, 0.00016995799999999783, 0.00017062500000000064, 0.00017043000000000266, 0.00016940299999999853, 0.0001696389999999992, 0.00016979199999999847, 0.00017044499999999824, 0.0001694580000000008, 0.0001702909999999995, 0.0001706390000000002, 0.00017062500000000064, 0.00017045900000000128, 0.00016948599999999994, 0.0001691250000000026, 0.00017044400000000223, 0.00016933400000000015, 0.00016961100000000007, 0.00016979199999999847, 0.0001703190000000021, 0.0001696250000000031, 0.0001687640000000018]</msg>
<status status="PASS" starttime="20201030 10:58:32.543" endtime="20201030 10:58:32.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.538" endtime="20201030 10:58:32.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.549" endtime="20201030 10:58:32.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.548" endtime="20201030 10:58:32.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.546" endtime="20201030 10:58:32.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.182" endtime="20201030 10:58:32.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.181" endtime="20201030 10:58:32.570"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.579" endtime="20201030 10:58:32.602"></status>
</kw>
<msg timestamp="20201030 10:58:32.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.577" endtime="20201030 10:58:32.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.604" endtime="20201030 10:58:32.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.606" endtime="20201030 10:58:32.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.575" endtime="20201030 10:58:32.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.572" endtime="20201030 10:58:32.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.615" endtime="20201030 10:58:32.901"></status>
</kw>
<msg timestamp="20201030 10:58:32.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022447472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.614" endtime="20201030 10:58:32.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022447472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.906" endtime="20201030 10:58:32.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.914" endtime="20201030 10:58:32.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.611" endtime="20201030 10:58:32.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.609" endtime="20201030 10:58:32.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.920" level="INFO">${RESULT} = [{'diff': 0.00017180600000000004}, {'diff': 0.0001724589999999998}, {'diff': 0.00017162499999999817}, {'diff': 0.00017170900000000253}, {'diff': 0.00017180500000000057}, {'diff': 0.0001716109999999986...</msg>
<status status="PASS" starttime="20201030 10:58:32.917" endtime="20201030 10:58:32.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.925" level="INFO">${ACCURACY} = {'diff': [0.00017180600000000004, 0.0001724589999999998, 0.00017162499999999817, 0.00017170900000000253, 0.00017180500000000057, 0.0001716109999999986, 0.0001707779999999999, 0.00017212499999999867, 0...</msg>
<status status="PASS" starttime="20201030 10:58:32.921" endtime="20201030 10:58:32.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.929" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.928" endtime="20201030 10:58:32.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.932" level="INFO">VALUE: [0.00017180600000000004, 0.0001724589999999998, 0.00017162499999999817, 0.00017170900000000253, 0.00017180500000000057, 0.0001716109999999986, 0.0001707779999999999, 0.00017212499999999867, 0.00017073700000000067, 0.0001712910000000005, 0.00017244400000000076, 0.00017212499999999867, 0.00017144499999999924, 0.00017129199999999997, 0.00017212499999999867, 0.0001709580000000023, 0.000170791, 0.00017263899999999874, 0.0001724719999999999, 0.00017212499999999867, 0.0001712910000000005, 0.00017195799999999983, 0.00017147200000000237, 0.0001719170000000006, 0.0001726390000000022, 0.0001717780000000009, 0.0001722919999999975, 0.00017112500000000114, 0.00017131899999999964, 0.0001719719999999994, 0.00017179200000000047, 0.00017262499999999917, 0.00017097300000000135, 0.000171000000000001, 0.00017180500000000057, 0.0001724719999999999, 0.00017129199999999997, 0.0001716109999999986, 0.00017148599999999847, 0.000171791000000001, 0.0001712910000000005, 0.0001718329999999997, 0.0001711109999999981, 0.0001714450000000027, 0.00017113800000000123, 0.0001721390000000017, 0.0001715689999999999, 0.0001722780000000014, 0.0001724580000000038, 0.00017112500000000114]</msg>
<status status="PASS" starttime="20201030 10:58:32.930" endtime="20201030 10:58:32.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.925" endtime="20201030 10:58:32.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.937" endtime="20201030 10:58:32.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.935" endtime="20201030 10:58:32.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.934" endtime="20201030 10:58:32.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.571" endtime="20201030 10:58:32.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.570" endtime="20201030 10:58:32.957"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.967" endtime="20201030 10:58:32.990"></status>
</kw>
<msg timestamp="20201030 10:58:32.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.965" endtime="20201030 10:58:32.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.992" endtime="20201030 10:58:32.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.995" endtime="20201030 10:58:32.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.962" endtime="20201030 10:58:32.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.960" endtime="20201030 10:58:32.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.004" endtime="20201030 10:58:33.290"></status>
</kw>
<msg timestamp="20201030 10:58:33.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023769958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.002" endtime="20201030 10:58:33.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023769958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.294" endtime="20201030 10:58:33.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.302" endtime="20201030 10:58:33.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.000" endtime="20201030 10:58:33.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.998" endtime="20201030 10:58:33.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:33.309" level="INFO">${RESULT} = [{'diff': 0.0001734720000000009}, {'diff': 0.0001742500000000008}, {'diff': 0.0001733200000000011}, {'diff': 0.0001735690000000019}, {'diff': 0.000173582999999998}, {'diff': 0.00017327799999999893}, {...</msg>
<status status="PASS" starttime="20201030 10:58:33.306" endtime="20201030 10:58:33.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:33.313" level="INFO">${ACCURACY} = {'diff': [0.0001734720000000009, 0.0001742500000000008, 0.0001733200000000011, 0.0001735690000000019, 0.000173582999999998, 0.00017327799999999893, 0.0001729720000000004, 0.0001736110000000006, 0.0001...</msg>
<status status="PASS" starttime="20201030 10:58:33.310" endtime="20201030 10:58:33.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.318" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 10:58:33.317" endtime="20201030 10:58:33.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.320" level="INFO">VALUE: [0.0001734720000000009, 0.0001742500000000008, 0.0001733200000000011, 0.0001735690000000019, 0.000173582999999998, 0.00017327799999999893, 0.0001729720000000004, 0.0001736110000000006, 0.00017337499999999992, 0.00017286099999999985, 0.00017279200000000147, 0.00017380600000000204, 0.0001737780000000029, 0.00017295800000000083, 0.00017377799999999943, 0.00017280599999999757, 0.00017276400000000233, 0.0001733330000000012, 0.00017327700000000293, 0.00017463900000000074, 0.00017394400000000226, 0.0001739309999999987, 0.00017462500000000117, 0.00017345899999999734, 0.00017291599999999865, 0.00017299999999999954, 0.00017411099999999763, 0.0001732919999999985, 0.00017377799999999943, 0.0001744729999999979, 0.00017326399999999936, 0.00017312499999999967, 0.00017342999999999872, 0.00017359700000000103, 0.00017294500000000074, 0.0001744590000000018, 0.0001727780000000019, 0.00017395800000000183, 0.0001742919999999995, 0.00017369399999999854, 0.0001731110000000001, 0.0001732919999999985, 0.00017294499999999727, 0.0001737500000000003, 0.0001728049999999981, 0.0001744720000000019, 0.0001739590000000013, 0.0001743750000000044, 0.0001743469999999983, 0.00017327799999999893]</msg>
<status status="PASS" starttime="20201030 10:58:33.319" endtime="20201030 10:58:33.322"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.314" endtime="20201030 10:58:33.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:33.327" endtime="20201030 10:58:33.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.325" endtime="20201030 10:58:33.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.324" endtime="20201030 10:58:33.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.958" endtime="20201030 10:58:33.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.958" endtime="20201030 10:58:33.347"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.356" endtime="20201030 10:58:33.380"></status>
</kw>
<msg timestamp="20201030 10:58:33.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.355" endtime="20201030 10:58:33.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.382" endtime="20201030 10:58:33.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.384" endtime="20201030 10:58:33.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.352" endtime="20201030 10:58:33.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.350" endtime="20201030 10:58:33.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.396" endtime="20201030 10:58:33.682"></status>
</kw>
<msg timestamp="20201030 10:58:33.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.394" endtime="20201030 10:58:33.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.687" endtime="20201030 10:58:33.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.695" endtime="20201030 10:58:33.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.389" endtime="20201030 10:58:33.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.388" endtime="20201030 10:58:33.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:33.702" level="INFO">${RESULT} = [{'diff': 0.00017493000000000022}, {'diff': 0.00017518099999999995}, {'diff': 0.0001749720000000024}, {'diff': 0.0001751110000000021}, {'diff': 0.0001752920000000005}, {'diff': 0.0001754440000000003},...</msg>
<status status="PASS" starttime="20201030 10:58:33.699" endtime="20201030 10:58:33.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:33.707" level="INFO">${ACCURACY} = {'diff': [0.00017493000000000022, 0.00017518099999999995, 0.0001749720000000024, 0.0001751110000000021, 0.0001752920000000005, 0.0001754440000000003, 0.00017597199999999993, 0.00017545799999999986, 0....</msg>
<status status="PASS" starttime="20201030 10:58:33.703" endtime="20201030 10:58:33.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.712" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 10:58:33.710" endtime="20201030 10:58:33.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.714" level="INFO">VALUE: [0.00017493000000000022, 0.00017518099999999995, 0.0001749720000000024, 0.0001751110000000021, 0.0001752920000000005, 0.0001754440000000003, 0.00017597199999999993, 0.00017545799999999986, 0.0001751249999999982, 0.0001764729999999999, 0.0001761249999999992, 0.00017531900000000017, 0.000176276999999999, 0.00017527800000000093, 0.00017509699999999906, 0.0001754590000000028, 0.0001766249999999997, 0.00017663899999999927, 0.00017615299999999834, 0.0001749439999999998, 0.000174792, 0.0001756110000000026, 0.00017512500000000167, 0.00017591600000000165, 0.00017493000000000022, 0.0001748339999999987, 0.00017595800000000036, 0.00017530600000000007, 0.00017495899999999884, 0.0001752500000000018, 0.0001756249999999987, 0.00017661100000000013, 0.0001756249999999987, 0.000174792, 0.00017509799999999853, 0.0001766249999999997, 0.0001766249999999997, 0.00017543000000000072, 0.00017570800000000011, 0.00017629199999999803, 0.00017544499999999977, 0.000175276999999998, 0.00017649999999999957, 0.000175792000000001, 0.0001753469999999993, 0.00017511099999999863, 0.00017545899999999934, 0.00017494399999999632, 0.00017530499999999366, 0.00017659700000000056]</msg>
<status status="PASS" starttime="20201030 10:58:33.713" endtime="20201030 10:58:33.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.708" endtime="20201030 10:58:33.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:33.719" endtime="20201030 10:58:33.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.718" endtime="20201030 10:58:33.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.716" endtime="20201030 10:58:33.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.348" endtime="20201030 10:58:33.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.348" endtime="20201030 10:58:33.740"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.749" endtime="20201030 10:58:33.772"></status>
</kw>
<msg timestamp="20201030 10:58:33.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.747" endtime="20201030 10:58:33.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.774" endtime="20201030 10:58:33.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.776" endtime="20201030 10:58:33.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.745" endtime="20201030 10:58:33.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.743" endtime="20201030 10:58:33.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.786" endtime="20201030 10:58:34.072"></status>
</kw>
<msg timestamp="20201030 10:58:34.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.784" endtime="20201030 10:58:34.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.076" endtime="20201030 10:58:34.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.085" endtime="20201030 10:58:34.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.781" endtime="20201030 10:58:34.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.780" endtime="20201030 10:58:34.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.091" level="INFO">${RESULT} = [{'diff': 0.00017706999999999792}, {'diff': 0.00017809799999999806}, {'diff': 0.0001771250000000002}, {'diff': 0.0001784579999999994}, {'diff': 0.0001779579999999989}, {'diff': 0.00017794500000000227}...</msg>
<status status="PASS" starttime="20201030 10:58:34.088" endtime="20201030 10:58:34.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.095" level="INFO">${ACCURACY} = {'diff': [0.00017706999999999792, 0.00017809799999999806, 0.0001771250000000002, 0.0001784579999999994, 0.0001779579999999989, 0.00017794500000000227, 0.00017732000000000164, 0.000178583999999999, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:34.092" endtime="20201030 10:58:34.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.100" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.099" endtime="20201030 10:58:34.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.103" level="INFO">VALUE: [0.00017706999999999792, 0.00017809799999999806, 0.0001771250000000002, 0.0001784579999999994, 0.0001779579999999989, 0.00017794500000000227, 0.00017732000000000164, 0.000178583999999999, 0.00017844399999999982, 0.0001769860000000005, 0.0001771250000000002, 0.00017747200000000143, 0.0001774730000000009, 0.00017695900000000084, 0.00017745800000000186, 0.00017819500000000252, 0.0001777640000000004, 0.00017762499999999723, 0.00017748599999999753, 0.00017727799999999946, 0.00017750000000000057, 0.0001769579999999979, 0.00017847199999999896, 0.00017851399999999767, 0.00017845899999999887, 0.00017779100000000006, 0.00017823599999999828, 0.00017729199999999903, 0.00017844399999999982, 0.00017781999999999867, 0.0001781250000000012, 0.00017847200000000243, 0.0001781250000000012, 0.00017868099999999998, 0.0001773340000000012, 0.0001778059999999991, 0.0001769449999999978, 0.0001771250000000002, 0.0001779579999999989, 0.00017795800000000236, 0.00017845900000000234, 0.00017861100000000213, 0.00017797199999999846, 0.00017847199999999896, 0.00017768100000000245, 0.0001779579999999989, 0.0001769720000000044, 0.00017845899999999887, 0.00017758400000000146, 0.00017812499999999426]</msg>
<status status="PASS" starttime="20201030 10:58:34.101" endtime="20201030 10:58:34.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.096" endtime="20201030 10:58:34.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.108" endtime="20201030 10:58:34.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.106" endtime="20201030 10:58:34.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.105" endtime="20201030 10:58:34.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.741" endtime="20201030 10:58:34.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.740" endtime="20201030 10:58:34.128"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.137" endtime="20201030 10:58:34.162"></status>
</kw>
<msg timestamp="20201030 10:58:34.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.136" endtime="20201030 10:58:34.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.164" endtime="20201030 10:58:34.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.166" endtime="20201030 10:58:34.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.133" endtime="20201030 10:58:34.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.131" endtime="20201030 10:58:34.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.176" endtime="20201030 10:58:34.462"></status>
</kw>
<msg timestamp="20201030 10:58:34.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023385736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.174" endtime="20201030 10:58:34.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023385736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.466" endtime="20201030 10:58:34.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.474" endtime="20201030 10:58:34.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.171" endtime="20201030 10:58:34.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.170" endtime="20201030 10:58:34.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.481" level="INFO">${RESULT} = [{'diff': 0.00018011100000000016}, {'diff': 0.00017965300000000184}, {'diff': 0.000180277999999999}, {'diff': 0.00017895899999999937}, {'diff': 0.00018012499999999973}, {'diff': 0.00017894400000000033...</msg>
<status status="PASS" starttime="20201030 10:58:34.478" endtime="20201030 10:58:34.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.485" level="INFO">${ACCURACY} = {'diff': [0.00018011100000000016, 0.00017965300000000184, 0.000180277999999999, 0.00017895899999999937, 0.00018012499999999973, 0.00017894400000000033, 0.00018062500000000023, 0.00018011100000000016, ...</msg>
<status status="PASS" starttime="20201030 10:58:34.482" endtime="20201030 10:58:34.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.490" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.489" endtime="20201030 10:58:34.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.493" level="INFO">VALUE: [0.00018011100000000016, 0.00017965300000000184, 0.000180277999999999, 0.00017895899999999937, 0.00018012499999999973, 0.00017894400000000033, 0.00018062500000000023, 0.00018011100000000016, 0.00018012499999999973, 0.00017995900000000037, 0.0001804580000000014, 0.00017911099999999916, 0.00018012499999999973, 0.0001798060000000011, 0.00017879200000000053, 0.00017929200000000103, 0.00017891599999999772, 0.00018062500000000023, 0.00017962499999999923, 0.00017947199999999996, 0.0001804169999999987, 0.00017994499999999733, 0.0001801389999999993, 0.00017947199999999996, 0.0001801389999999993, 0.00017929199999999756, 0.00017995900000000037, 0.00017948599999999953, 0.00017944400000000083, 0.00018012499999999973, 0.000179486999999999, 0.00017979200000000153, 0.00017891700000000066, 0.0001803610000000004, 0.0001806809999999985, 0.00017948599999999953, 0.00017917999999999754, 0.00018011100000000016, 0.0001799450000000008, 0.00017944400000000083, 0.00017920899999999962, 0.00018044400000000183, 0.00017970800000000065, 0.00018045799999999446, 0.00017943000000000126, 0.00018047200000000096, 0.0001791250000000022, 0.00017915300000000134, 0.000179277999999998, 0.0001791250000000022]</msg>
<status status="PASS" starttime="20201030 10:58:34.491" endtime="20201030 10:58:34.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.486" endtime="20201030 10:58:34.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.498" endtime="20201030 10:58:34.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.497" endtime="20201030 10:58:34.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.495" endtime="20201030 10:58:34.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.129" endtime="20201030 10:58:34.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.129" endtime="20201030 10:58:34.519"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.528" endtime="20201030 10:58:34.552"></status>
</kw>
<msg timestamp="20201030 10:58:34.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.526" endtime="20201030 10:58:34.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.554" endtime="20201030 10:58:34.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.556" endtime="20201030 10:58:34.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.524" endtime="20201030 10:58:34.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.521" endtime="20201030 10:58:34.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.565" endtime="20201030 10:58:34.851"></status>
</kw>
<msg timestamp="20201030 10:58:34.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809444, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:34.564" endtime="20201030 10:58:34.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809444, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:34.855" endtime="20201030 10:58:34.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.863" endtime="20201030 10:58:34.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.561" endtime="20201030 10:58:34.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.559" endtime="20201030 10:58:34.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.870" level="INFO">${RESULT} = [{'diff': 0.00018194400000000333}, {'diff': 0.00018162499999999776}, {'diff': 0.00018079199999999906}, {'diff': 0.0001821109999999987}, {'diff': 0.00018095900000000137}, {'diff': 0.0001807639999999999...</msg>
<status status="PASS" starttime="20201030 10:58:34.867" endtime="20201030 10:58:34.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.875" level="INFO">${ACCURACY} = {'diff': [0.00018194400000000333, 0.00018162499999999776, 0.00018079199999999906, 0.0001821109999999987, 0.00018095900000000137, 0.00018076399999999992, 0.0001817910000000006, 0.00018179200000000006, ...</msg>
<status status="PASS" starttime="20201030 10:58:34.871" endtime="20201030 10:58:34.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.880" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.879" endtime="20201030 10:58:34.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.882" level="INFO">VALUE: [0.00018194400000000333, 0.00018162499999999776, 0.00018079199999999906, 0.0001821109999999987, 0.00018095900000000137, 0.00018076399999999992, 0.0001817910000000006, 0.00018179200000000006, 0.00018195799999999943, 0.00018212499999999826, 0.00018079199999999906, 0.00018211100000000216, 0.0001807909999999996, 0.00018079199999999906, 0.0001824719999999995, 0.00018212499999999826, 0.0001809589999999979, 0.00018195799999999943, 0.00018195799999999943, 0.0001821109999999987, 0.0001810000000000006, 0.00018262500000000223, 0.00018161200000000113, 0.00018169499999999908, 0.00018130499999999966, 0.00018079199999999906, 0.00018229200000000056, 0.0001814589999999984, 0.00018195799999999943, 0.00018212500000000173, 0.0001814580000000024, 0.00018188900000000105, 0.0001819589999999989, 0.00018254199999999735, 0.00018094400000000233, 0.00018079199999999906, 0.00018229200000000056, 0.00018079199999999906, 0.00018180599999999963, 0.00018240299999999765, 0.0001822910000000011, 0.00018161100000000166, 0.00018179200000000006, 0.00018126400000000042, 0.00018229200000000056, 0.0001817770000000045, 0.00018230500000000066, 0.00018125000000000085, 0.00018179200000000006, 0.00018145899999999493]</msg>
<status status="PASS" starttime="20201030 10:58:34.881" endtime="20201030 10:58:34.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.876" endtime="20201030 10:58:34.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.887" endtime="20201030 10:58:34.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.886" endtime="20201030 10:58:34.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.885" endtime="20201030 10:58:34.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.520" endtime="20201030 10:58:34.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.519" endtime="20201030 10:58:34.908"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.917" endtime="20201030 10:58:34.941"></status>
</kw>
<msg timestamp="20201030 10:58:34.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.915" endtime="20201030 10:58:34.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.942" endtime="20201030 10:58:34.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.945" endtime="20201030 10:58:34.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.913" endtime="20201030 10:58:34.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.910" endtime="20201030 10:58:34.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.955" endtime="20201030 10:58:35.244"></status>
</kw>
<msg timestamp="20201030 10:58:35.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.953" endtime="20201030 10:58:35.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.248" endtime="20201030 10:58:35.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.257" endtime="20201030 10:58:35.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.950" endtime="20201030 10:58:35.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.948" endtime="20201030 10:58:35.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:35.263" level="INFO">${RESULT} = [{'diff': 0.0001844309999999988}, {'diff': 0.0001834590000000004}, {'diff': 0.00018295800000000043}, {'diff': 0.00018427799999999953}, {'diff': 0.00018379200000000206}, {'diff': 0.00018275000000000236...</msg>
<status status="PASS" starttime="20201030 10:58:35.260" endtime="20201030 10:58:35.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:35.267" level="INFO">${ACCURACY} = {'diff': [0.0001844309999999988, 0.0001834590000000004, 0.00018295800000000043, 0.00018427799999999953, 0.00018379200000000206, 0.00018275000000000236, 0.0001842919999999991, 0.0001829589999999999, 0....</msg>
<status status="PASS" starttime="20201030 10:58:35.264" endtime="20201030 10:58:35.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.272" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 10:58:35.271" endtime="20201030 10:58:35.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.275" level="INFO">VALUE: [0.0001844309999999988, 0.0001834590000000004, 0.00018295800000000043, 0.00018427799999999953, 0.00018379200000000206, 0.00018275000000000236, 0.0001842919999999991, 0.0001829589999999999, 0.00018362499999999976, 0.0001828049999999977, 0.0001832919999999981, 0.00018344500000000083, 0.00018379200000000206, 0.0001837919999999986, 0.00018295800000000043, 0.00018377799999999903, 0.00018362499999999976, 0.00018344500000000083, 0.0001836390000000028, 0.0001844439999999989, 0.00018392999999999882, 0.00018312500000000273, 0.0001829439999999974, 0.0001839590000000009, 0.0001843049999999992, 0.0001834720000000005, 0.00018345800000000093, 0.00018384800000000034, 0.00018462500000000076, 0.00018279200000000106, 0.00018463800000000086, 0.00018444400000000236, 0.0001840139999999997, 0.0001831390000000023, 0.00018380599999999817, 0.00018344500000000083, 0.00018312499999999926, 0.00018309700000000012, 0.00018412500000000026, 0.00018357000000000095, 0.00018461099999999772, 0.00018462500000000076, 0.0001844720000000015, 0.00018281900000000073, 0.00018445800000000193, 0.00018341699999999822, 0.00018379200000000206, 0.00018330500000000166, 0.00018463900000000033, 0.00018433400000000127]</msg>
<status status="PASS" starttime="20201030 10:58:35.273" endtime="20201030 10:58:35.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.268" endtime="20201030 10:58:35.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:35.280" endtime="20201030 10:58:35.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.278" endtime="20201030 10:58:35.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.277" endtime="20201030 10:58:35.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.909" endtime="20201030 10:58:35.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.908" endtime="20201030 10:58:35.300"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.309" endtime="20201030 10:58:35.335"></status>
</kw>
<msg timestamp="20201030 10:58:35.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.308" endtime="20201030 10:58:35.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.336" endtime="20201030 10:58:35.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.339" endtime="20201030 10:58:35.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.305" endtime="20201030 10:58:35.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.303" endtime="20201030 10:58:35.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.348" endtime="20201030 10:58:35.635"></status>
</kw>
<msg timestamp="20201030 10:58:35.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023474514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023660139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.347" endtime="20201030 10:58:35.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023474514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023660139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.639" endtime="20201030 10:58:35.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.647" endtime="20201030 10:58:35.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.344" endtime="20201030 10:58:35.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.342" endtime="20201030 10:58:35.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:35.654" level="INFO">${RESULT} = [{'diff': 0.00018562500000000176}, {'diff': 0.00018544499999999936}, {'diff': 0.00018577799999999756}, {'diff': 0.0001851530000000004}, {'diff': 0.00018629099999999815}, {'diff': 0.0001866250000000027...</msg>
<status status="PASS" starttime="20201030 10:58:35.651" endtime="20201030 10:58:35.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:35.658" level="INFO">${ACCURACY} = {'diff': [0.00018562500000000176, 0.00018544499999999936, 0.00018577799999999756, 0.0001851530000000004, 0.00018629099999999815, 0.00018662500000000276, 0.00018530599999999967, 0.0001856249999999983, ...</msg>
<status status="PASS" starttime="20201030 10:58:35.655" endtime="20201030 10:58:35.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.663" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 10:58:35.662" endtime="20201030 10:58:35.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.665" level="INFO">VALUE: [0.00018562500000000176, 0.00018544499999999936, 0.00018577799999999756, 0.0001851530000000004, 0.00018629099999999815, 0.00018662500000000276, 0.00018530599999999967, 0.0001856249999999983, 0.0001851119999999977, 0.00018559699999999915, 0.00018577800000000103, 0.0001847919999999996, 0.00018527800000000053, 0.00018513900000000083, 0.0001856249999999983, 0.0001859859999999991, 0.0001847919999999996, 0.0001856249999999983, 0.0001847919999999996, 0.00018495899999999843, 0.00018497199999999853, 0.0001853050000000002, 0.00018545799999999946, 0.00018580600000000017, 0.00018645899999999993, 0.00018477699999999708, 0.00018579100000000112, 0.00018513900000000083, 0.00018629199999999763, 0.00018545899999999893, 0.00018580600000000017, 0.0001866249999999993, 0.0001850689999999995, 0.0001856249999999983, 0.0001861249999999988, 0.00018629199999999763, 0.00018547199999999903, 0.00018597199999999953, 0.0001849439999999994, 0.0001847919999999996, 0.0001858059999999967, 0.0001860000000000056, 0.00018492999999999982, 0.0001852910000000041, 0.00018608300000000355, 0.00018563900000000133, 0.00018547199999999903, 0.00018497199999999853, 0.00018630500000000466, 0.00018562499999999482]</msg>
<status status="PASS" starttime="20201030 10:58:35.664" endtime="20201030 10:58:35.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.659" endtime="20201030 10:58:35.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:35.671" endtime="20201030 10:58:35.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.670" endtime="20201030 10:58:35.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.669" endtime="20201030 10:58:35.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.301" endtime="20201030 10:58:35.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.301" endtime="20201030 10:58:35.692"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.701" endtime="20201030 10:58:35.725"></status>
</kw>
<msg timestamp="20201030 10:58:35.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.700" endtime="20201030 10:58:35.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.727" endtime="20201030 10:58:35.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.729" endtime="20201030 10:58:35.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.697" endtime="20201030 10:58:35.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.695" endtime="20201030 10:58:35.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.738" endtime="20201030 10:58:36.025"></status>
</kw>
<msg timestamp="20201030 10:58:36.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.737" endtime="20201030 10:58:36.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.030" endtime="20201030 10:58:36.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.038" endtime="20201030 10:58:36.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.734" endtime="20201030 10:58:36.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.732" endtime="20201030 10:58:36.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.045" level="INFO">${RESULT} = [{'diff': 0.00018679100000000212}, {'diff': 0.00018729099999999915}, {'diff': 0.00018712500000000326}, {'diff': 0.00018779199999999913}, {'diff': 0.00018848599999999813}, {'diff': 0.000188000000000000...</msg>
<status status="PASS" starttime="20201030 10:58:36.041" endtime="20201030 10:58:36.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.050" level="INFO">${ACCURACY} = {'diff': [0.00018679100000000212, 0.00018729099999999915, 0.00018712500000000326, 0.00018779199999999913, 0.00018848599999999813, 0.00018800000000000067, 0.00018741700000000222, 0.00018759699999999768...</msg>
<status status="PASS" starttime="20201030 10:58:36.046" endtime="20201030 10:58:36.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.054" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.053" endtime="20201030 10:58:36.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.057" level="INFO">VALUE: [0.00018679100000000212, 0.00018729099999999915, 0.00018712500000000326, 0.00018779199999999913, 0.00018848599999999813, 0.00018800000000000067, 0.00018741700000000222, 0.00018759699999999768, 0.00018677800000000203, 0.00018727800000000253, 0.0001886250000000013, 0.00018704199999999838, 0.00018744399999999842, 0.0001871249999999998, 0.0001881250000000008, 0.00018812499999999732, 0.0001881250000000008, 0.00018723599999999688, 0.0001879440000000024, 0.00018745900000000093, 0.00018745900000000093, 0.00018779199999999913, 0.00018827800000000006, 0.0001871249999999998, 0.00018794399999999892, 0.000187764, 0.00018847299999999803, 0.0001874440000000019, 0.0001867920000000016, 0.00018695800000000096, 0.00018794500000000186, 0.0001881250000000008, 0.00018845899999999846, 0.00018713899999999936, 0.0001881250000000008, 0.0001876250000000003, 0.00018695899999999696, 0.00018677799999999856, 0.00018865300000000043, 0.00018711100000000022, 0.00018797200000000153, 0.00018677799999999856, 0.00018845899999999846, 0.00018695900000000043, 0.00018679099999999518, 0.00018779099999999965, 0.00018744399999999495, 0.00018681999999999727, 0.00018809799999999766, 0.00018866699999999653]</msg>
<status status="PASS" starttime="20201030 10:58:36.056" endtime="20201030 10:58:36.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.051" endtime="20201030 10:58:36.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.062" endtime="20201030 10:58:36.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.061" endtime="20201030 10:58:36.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.059" endtime="20201030 10:58:36.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.693" endtime="20201030 10:58:36.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.693" endtime="20201030 10:58:36.083"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.092" endtime="20201030 10:58:36.116"></status>
</kw>
<msg timestamp="20201030 10:58:36.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.090" endtime="20201030 10:58:36.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.118" endtime="20201030 10:58:36.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.120" endtime="20201030 10:58:36.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.088" endtime="20201030 10:58:36.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.085" endtime="20201030 10:58:36.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.130" endtime="20201030 10:58:36.417"></status>
</kw>
<msg timestamp="20201030 10:58:36.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.128" endtime="20201030 10:58:36.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.421" endtime="20201030 10:58:36.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.430" endtime="20201030 10:58:36.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.126" endtime="20201030 10:58:36.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.124" endtime="20201030 10:58:36.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.437" level="INFO">${RESULT} = [{'diff': 0.00018894399999999992}, {'diff': 0.00018931999999999977}, {'diff': 0.00018895899999999896}, {'diff': 0.00019047200000000056}, {'diff': 0.0001906389999999994}, {'diff': 0.0001895969999999996...</msg>
<status status="PASS" starttime="20201030 10:58:36.433" endtime="20201030 10:58:36.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.441" level="INFO">${ACCURACY} = {'diff': [0.00018894399999999992, 0.00018931999999999977, 0.00018895899999999896, 0.00019047200000000056, 0.0001906389999999994, 0.00018959699999999968, 0.00019011099999999975, 0.00018997200000000006,...</msg>
<status status="PASS" starttime="20201030 10:58:36.438" endtime="20201030 10:58:36.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.445" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.444" endtime="20201030 10:58:36.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.448" level="INFO">VALUE: [0.00018894399999999992, 0.00018931999999999977, 0.00018895899999999896, 0.00019047200000000056, 0.0001906389999999994, 0.00018959699999999968, 0.00019011099999999975, 0.00018997200000000006, 0.00018973599999999938, 0.00018980499999999775, 0.00019062499999999982, 0.00018913900000000136, 0.00019043099999999785, 0.00019017999999999813, 0.00018982000000000027, 0.00019044399999999795, 0.000189458, 0.00018929200000000063, 0.00018980599999999723, 0.00018995899999999996, 0.0001891250000000018, 0.00019012499999999932, 0.00019013900000000236, 0.00019062499999999982, 0.00018995899999999996, 0.00018955500000000097, 0.00018879099999999718, 0.00018979099999999818, 0.00019041699999999828, 0.00019062499999999982, 0.00018961099999999925, 0.0001889579999999995, 0.0001887219999999988, 0.0001893060000000002, 0.0001889579999999995, 0.00018979199999999766, 0.00018897199999999906, 0.00019018100000000107, 0.00019044399999999795, 0.0001894449999999999, 0.00019061100000000025, 0.0001888189999999998, 0.00019011099999999975, 0.00019062499999999982, 0.0001901389999999989, 0.00018894499999999592, 0.00018979200000000113, 0.0001898060000000007, 0.00018877700000000108, 0.00018930500000000072]</msg>
<status status="PASS" starttime="20201030 10:58:36.446" endtime="20201030 10:58:36.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.442" endtime="20201030 10:58:36.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.458" endtime="20201030 10:58:36.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.457" endtime="20201030 10:58:36.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.455" endtime="20201030 10:58:36.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.084" endtime="20201030 10:58:36.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.083" endtime="20201030 10:58:36.479"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.488" endtime="20201030 10:58:36.513"></status>
</kw>
<msg timestamp="20201030 10:58:36.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.487" endtime="20201030 10:58:36.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.515" endtime="20201030 10:58:36.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.517" endtime="20201030 10:58:36.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.484" endtime="20201030 10:58:36.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.482" endtime="20201030 10:58:36.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.527" endtime="20201030 10:58:36.813"></status>
</kw>
<msg timestamp="20201030 10:58:36.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023413667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.525" endtime="20201030 10:58:36.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023413667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.817" endtime="20201030 10:58:36.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.825" endtime="20201030 10:58:36.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.522" endtime="20201030 10:58:36.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.521" endtime="20201030 10:58:36.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.832" level="INFO">${RESULT} = [{'diff': 0.00019212500000000132}, {'diff': 0.0001907779999999991}, {'diff': 0.00019134699999999796}, {'diff': 0.00019147200000000156}, {'diff': 0.00019141699999999928}, {'diff': 0.0001926390000000014...</msg>
<status status="PASS" starttime="20201030 10:58:36.829" endtime="20201030 10:58:36.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.836" level="INFO">${ACCURACY} = {'diff': [0.00019212500000000132, 0.0001907779999999991, 0.00019134699999999796, 0.00019147200000000156, 0.00019141699999999928, 0.0001926390000000014, 0.00019229200000000016, 0.000192458999999999, 0....</msg>
<status status="PASS" starttime="20201030 10:58:36.833" endtime="20201030 10:58:36.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.841" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.840" endtime="20201030 10:58:36.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.843" level="INFO">VALUE: [0.00019212500000000132, 0.0001907779999999991, 0.00019134699999999796, 0.00019147200000000156, 0.00019141699999999928, 0.0001926390000000014, 0.00019229200000000016, 0.000192458999999999, 0.00019229100000000068, 0.00019111100000000075, 0.000191361000000001, 0.00019213899999999742, 0.00019177700000000061, 0.00019248599999999866, 0.0001922780000000006, 0.00019262500000000182, 0.00019263899999999792, 0.00019195900000000196, 0.00019190200000000074, 0.00019162500000000082, 0.00019252799999999737, 0.0001911389999999999, 0.00019147300000000103, 0.0001912779999999996, 0.00019162499999999735, 0.00019261099999999878, 0.0001918060000000027, 0.00019080599999999823, 0.00019079199999999866, 0.0001909580000000015, 0.0001919580000000025, 0.00019144399999999895, 0.00019129199999999916, 0.00019262500000000182, 0.00019077699999999961, 0.00019129099999999968, 0.00019265300000000096, 0.00019182000000000227, 0.0001909450000000014, 0.00019248599999999866, 0.00019129100000000315, 0.00019095800000000496, 0.00019095799999999802, 0.00019144499999999842, 0.00019079200000000213, 0.00019230499999999678, 0.0001924719999999991, 0.00019211099999999481, 0.00019145799999999852, 0.00019081899999999485]</msg>
<status status="PASS" starttime="20201030 10:58:36.842" endtime="20201030 10:58:36.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.837" endtime="20201030 10:58:36.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.849" endtime="20201030 10:58:36.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.848" endtime="20201030 10:58:36.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.847" endtime="20201030 10:58:36.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.480" endtime="20201030 10:58:36.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.479" endtime="20201030 10:58:36.870"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.879" endtime="20201030 10:58:36.903"></status>
</kw>
<msg timestamp="20201030 10:58:36.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.878" endtime="20201030 10:58:36.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.905" endtime="20201030 10:58:36.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.907" endtime="20201030 10:58:36.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.875" endtime="20201030 10:58:36.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.873" endtime="20201030 10:58:36.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.916" endtime="20201030 10:58:37.202"></status>
</kw>
<msg timestamp="20201030 10:58:37.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.915" endtime="20201030 10:58:37.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.206" endtime="20201030 10:58:37.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.214" endtime="20201030 10:58:37.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.912" endtime="20201030 10:58:37.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.910" endtime="20201030 10:58:37.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.221" level="INFO">${RESULT} = [{'diff': 0.0001945139999999998}, {'diff': 0.00019361199999999926}, {'diff': 0.00019277700000000161}, {'diff': 0.00019388899999999917}, {'diff': 0.0001937919999999982}, {'diff': 0.00019349999999999923...</msg>
<status status="PASS" starttime="20201030 10:58:37.218" endtime="20201030 10:58:37.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:37.226" level="INFO">${ACCURACY} = {'diff': [0.0001945139999999998, 0.00019361199999999926, 0.00019277700000000161, 0.00019388899999999917, 0.0001937919999999982, 0.00019349999999999923, 0.00019279200000000066, 0.00019329099999999821, ...</msg>
<status status="PASS" starttime="20201030 10:58:37.222" endtime="20201030 10:58:37.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.231" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 10:58:37.230" endtime="20201030 10:58:37.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.233" level="INFO">VALUE: [0.0001945139999999998, 0.00019361199999999926, 0.00019277700000000161, 0.00019388899999999917, 0.0001937919999999982, 0.00019349999999999923, 0.00019279200000000066, 0.00019329099999999821, 0.00019312499999999885, 0.0001941940000000017, 0.00019412499999999985, 0.0001942780000000026, 0.00019399999999999973, 0.00019277699999999814, 0.00019394399999999798, 0.00019462500000000035, 0.000193459, 0.00019362499999999935, 0.00019345800000000052, 0.00019462500000000035, 0.00019330600000000073, 0.0001932780000000016, 0.00019458400000000112, 0.00019329099999999821, 0.00019379099999999871, 0.00019295800000000002, 0.00019307000000000005, 0.000193459, 0.00019313899999999842, 0.00019372200000000034, 0.00019362500000000282, 0.00019280600000000023, 0.00019445899999999752, 0.00019361200000000273, 0.00019443000000000238, 0.0001934720000000001, 0.0001932919999999977, 0.00019273699999999838, 0.0001934720000000001, 0.00019394399999999798, 0.00019413899999999942, 0.00019329200000000116, 0.00019391700000000178, 0.00019444500000000142, 0.00019312500000000232, 0.00019311099999999581, 0.00019377799999999862, 0.00019362499999999588, 0.0001929589999999995, 0.00019394500000000092]</msg>
<status status="PASS" starttime="20201030 10:58:37.232" endtime="20201030 10:58:37.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.227" endtime="20201030 10:58:37.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.239" endtime="20201030 10:58:37.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.237" endtime="20201030 10:58:37.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.236" endtime="20201030 10:58:37.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.871" endtime="20201030 10:58:37.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.870" endtime="20201030 10:58:37.259"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.268" endtime="20201030 10:58:37.293"></status>
</kw>
<msg timestamp="20201030 10:58:37.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.267" endtime="20201030 10:58:37.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.295" endtime="20201030 10:58:37.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.297" endtime="20201030 10:58:37.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.264" endtime="20201030 10:58:37.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.262" endtime="20201030 10:58:37.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.307" endtime="20201030 10:58:37.594"></status>
</kw>
<msg timestamp="20201030 10:58:37.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.305" endtime="20201030 10:58:37.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.598" endtime="20201030 10:58:37.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.607" endtime="20201030 10:58:37.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.303" endtime="20201030 10:58:37.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.301" endtime="20201030 10:58:37.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.613" level="INFO">${RESULT} = [{'diff': 0.00019497199999999812}, {'diff': 0.00019529100000000021}, {'diff': 0.00019563899999999745}, {'diff': 0.00019644499999999995}, {'diff': 0.00019562500000000135}, {'diff': 0.000195818999999999...</msg>
<status status="PASS" starttime="20201030 10:58:37.610" endtime="20201030 10:58:37.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:37.617" level="INFO">${ACCURACY} = {'diff': [0.00019497199999999812, 0.00019529100000000021, 0.00019563899999999745, 0.00019644499999999995, 0.00019562500000000135, 0.00019581899999999985, 0.00019472200000000134, 0.00019577800000000062...</msg>
<status status="PASS" starttime="20201030 10:58:37.614" endtime="20201030 10:58:37.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.622" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 10:58:37.621" endtime="20201030 10:58:37.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.625" level="INFO">VALUE: [0.00019497199999999812, 0.00019529100000000021, 0.00019563899999999745, 0.00019644499999999995, 0.00019562500000000135, 0.00019581899999999985, 0.00019472200000000134, 0.00019577800000000062, 0.0001949720000000016, 0.00019595899999999902, 0.00019495899999999802, 0.00019495799999999855, 0.00019579099999999725, 0.00019495799999999855, 0.00019586099999999856, 0.00019627800000000112, 0.00019545799999999905, 0.00019500000000000073, 0.00019663899999999845, 0.00019577799999999715, 0.00019495899999999802, 0.00019530499999999978, 0.00019512500000000085, 0.00019645800000000005, 0.00019562499999999788, 0.00019562500000000135, 0.00019601399999999783, 0.00019647199999999962, 0.00019583299999999942, 0.0001962920000000007, 0.00019493099999999888, 0.00019563900000000092, 0.00019548600000000166, 0.00019533299999999892, 0.00019630600000000026, 0.00019645899999999952, 0.00019497300000000106, 0.00019480500000000275, 0.00019494399999999898, 0.00019544399999999948, 0.00019513900000000042, 0.00019547300000000156, 0.00019512499999999738, 0.00019580499999999335, 0.00019595799999999608, 0.00019527800000000012, 0.00019627800000000112, 0.0001947919999999992, 0.00019542999999999644, 0.00019629100000000121]</msg>
<status status="PASS" starttime="20201030 10:58:37.623" endtime="20201030 10:58:37.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.618" endtime="20201030 10:58:37.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.630" endtime="20201030 10:58:37.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.628" endtime="20201030 10:58:37.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.627" endtime="20201030 10:58:37.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.260" endtime="20201030 10:58:37.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.260" endtime="20201030 10:58:37.650"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.659" endtime="20201030 10:58:37.685"></status>
</kw>
<msg timestamp="20201030 10:58:37.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.658" endtime="20201030 10:58:37.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.686" endtime="20201030 10:58:37.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.689" endtime="20201030 10:58:37.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.655" endtime="20201030 10:58:37.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.653" endtime="20201030 10:58:37.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.698" endtime="20201030 10:58:37.984"></status>
</kw>
<msg timestamp="20201030 10:58:37.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023453458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.697" endtime="20201030 10:58:37.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023453458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.988" endtime="20201030 10:58:37.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.996" endtime="20201030 10:58:37.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.694" endtime="20201030 10:58:37.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.692" endtime="20201030 10:58:37.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:38.003" level="INFO">${RESULT} = [{'diff': 0.00019863900000000045}, {'diff': 0.000197153000000002}, {'diff': 0.00019762499999999988}, {'diff': 0.0001976660000000026}, {'diff': 0.0001972920000000017}, {'diff': 0.00019811099999999734},...</msg>
<status status="PASS" starttime="20201030 10:58:38.000" endtime="20201030 10:58:38.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:38.007" level="INFO">${ACCURACY} = {'diff': [0.00019863900000000045, 0.000197153000000002, 0.00019762499999999988, 0.0001976660000000026, 0.0001972920000000017, 0.00019811099999999734, 0.0001981950000000017, 0.00019695800000000055, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:38.004" endtime="20201030 10:58:38.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.012" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 10:58:38.011" endtime="20201030 10:58:38.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.015" level="INFO">VALUE: [0.00019863900000000045, 0.000197153000000002, 0.00019762499999999988, 0.0001976660000000026, 0.0001972920000000017, 0.00019811099999999734, 0.0001981950000000017, 0.00019695800000000055, 0.00019795899999999755, 0.0001967920000000012, 0.00019863900000000045, 0.00019762499999999988, 0.00019695800000000055, 0.00019755599999999804, 0.00019713899999999895, 0.00019745800000000105, 0.00019747200000000062, 0.00019749999999999976, 0.00019712499999999938, 0.00019830600000000226, 0.0001986120000000008, 0.00019829099999999975, 0.00019679199999999772, 0.0001972920000000017, 0.00019762499999999988, 0.00019865199999999708, 0.00019729099999999875, 0.00019795799999999808, 0.00019795799999999808, 0.00019795899999999755, 0.0001982370000000004, 0.00019727699999999918, 0.00019679100000000171, 0.00019727799999999865, 0.00019826400000000008, 0.00019827799999999965, 0.00019730499999999832, 0.0001980829999999982, 0.0001977920000000022, 0.00019711099999999981, 0.00019844499999999848, 0.0001967920000000012, 0.00019763899999999945, 0.0001971669999999981, 0.0001975270000000029, 0.00019829199999999575, 0.0001981669999999991, 0.00019795799999999808, 0.00019763899999999945, 0.00019712499999999938]</msg>
<status status="PASS" starttime="20201030 10:58:38.013" endtime="20201030 10:58:38.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.008" endtime="20201030 10:58:38.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:38.021" endtime="20201030 10:58:38.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.019" endtime="20201030 10:58:38.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.018" endtime="20201030 10:58:38.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.651" endtime="20201030 10:58:38.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.651" endtime="20201030 10:58:38.041"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.051" endtime="20201030 10:58:38.076"></status>
</kw>
<msg timestamp="20201030 10:58:38.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.049" endtime="20201030 10:58:38.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.078" endtime="20201030 10:58:38.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.080" endtime="20201030 10:58:38.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.046" endtime="20201030 10:58:38.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.044" endtime="20201030 10:58:38.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.090" endtime="20201030 10:58:38.375"></status>
</kw>
<msg timestamp="20201030 10:58:38.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:38.088" endtime="20201030 10:58:38.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:38.379" endtime="20201030 10:58:38.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.387" endtime="20201030 10:58:38.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.086" endtime="20201030 10:58:38.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.084" endtime="20201030 10:58:38.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:38.394" level="INFO">${RESULT} = [{'diff': 0.00019995800000000008}, {'diff': 0.00020061099999999985}, {'diff': 0.00019879199999999972}, {'diff': 0.00019979099999999778}, {'diff': 0.00020031900000000089}, {'diff': 0.000200292000000001...</msg>
<status status="PASS" starttime="20201030 10:58:38.391" endtime="20201030 10:58:38.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:38.399" level="INFO">${ACCURACY} = {'diff': [0.00019995800000000008, 0.00020061099999999985, 0.00019879199999999972, 0.00019979099999999778, 0.00020031900000000089, 0.00020029200000000122, 0.00019981999999999986, 0.00019945899999999905...</msg>
<status status="PASS" starttime="20201030 10:58:38.395" endtime="20201030 10:58:38.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.404" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 10:58:38.403" endtime="20201030 10:58:38.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.406" level="INFO">VALUE: [0.00019995800000000008, 0.00020061099999999985, 0.00019879199999999972, 0.00019979099999999778, 0.00020031900000000089, 0.00020029200000000122, 0.00019981999999999986, 0.00019945899999999905, 0.00020047200000000015, 0.00019962499999999841, 0.00020048599999999972, 0.00019995899999999955, 0.00019966600000000112, 0.00019929200000000022, 0.00019879100000000025, 0.00019895799999999908, 0.000199444, 0.00020001400000000183, 0.00019948599999999872, 0.00020029099999999828, 0.00019877800000000015, 0.00020062499999999941, 0.00019879199999999972, 0.00020062499999999941, 0.00020045800000000058, 0.00020029199999999775, 0.00019893100000000288, 0.00019962500000000188, 0.00020044500000000048, 0.00019912499999999791, 0.00019895800000000255, 0.00019912500000000138, 0.00019995899999999955, 0.00019962500000000188, 0.00019927700000000118, 0.00020062500000000288, 0.00019962500000000188, 0.00020063900000000245, 0.00019995899999999955, 0.00019947199999999915, 0.00019879099999999678, 0.00020012500000000238, 0.00020012500000000238, 0.00020047299999999962, 0.00020062500000000288, 0.00019912500000000138, 0.00019947199999999915, 0.00019901299999999789, 0.00020019400000000076, 0.00019994499999999998]</msg>
<status status="PASS" starttime="20201030 10:58:38.405" endtime="20201030 10:58:38.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.400" endtime="20201030 10:58:38.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:38.411" endtime="20201030 10:58:38.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.410" endtime="20201030 10:58:38.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.408" endtime="20201030 10:58:38.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.042" endtime="20201030 10:58:38.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.042" endtime="20201030 10:58:38.432"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.441" endtime="20201030 10:58:38.465"></status>
</kw>
<msg timestamp="20201030 10:58:38.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.439" endtime="20201030 10:58:38.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.467" endtime="20201030 10:58:38.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.469" endtime="20201030 10:58:38.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.437" endtime="20201030 10:58:38.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.435" endtime="20201030 10:58:38.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.479" endtime="20201030 10:58:38.767"></status>
</kw>
<msg timestamp="20201030 10:58:38.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.477" endtime="20201030 10:58:38.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.772" endtime="20201030 10:58:38.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.780" endtime="20201030 10:58:38.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.474" endtime="20201030 10:58:38.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.473" endtime="20201030 10:58:38.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:38.787" level="INFO">${RESULT} = [{'diff': 0.00020212500000000092}, {'diff': 0.00020194500000000198}, {'diff': 0.00020195800000000208}, {'diff': 0.00020212500000000092}, {'diff': 0.00020097200000000065}, {'diff': 0.000201959000000001...</msg>
<status status="PASS" starttime="20201030 10:58:38.783" endtime="20201030 10:58:38.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:38.791" level="INFO">${ACCURACY} = {'diff': [0.00020212500000000092, 0.00020194500000000198, 0.00020195800000000208, 0.00020212500000000092, 0.00020097200000000065, 0.00020195900000000155, 0.00020151399999999986, 0.00020206899999999917...</msg>
<status status="PASS" starttime="20201030 10:58:38.788" endtime="20201030 10:58:38.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.795" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 10:58:38.794" endtime="20201030 10:58:38.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.798" level="INFO">VALUE: [0.00020212500000000092, 0.00020194500000000198, 0.00020195800000000208, 0.00020212500000000092, 0.00020097200000000065, 0.00020195900000000155, 0.00020151399999999986, 0.00020206899999999917, 0.00020194399999999904, 0.00020147199999999768, 0.0002011939999999983, 0.00020147300000000062, 0.0002014579999999981, 0.0002007769999999992, 0.00020106899999999817, 0.00020094500000000098, 0.00020234699999999856, 0.00020180499999999935, 0.00020162500000000042, 0.00020261100000000185, 0.00020229199999999975, 0.00020161100000000085, 0.00020211200000000082, 0.0002024579999999991, 0.00020166699999999912, 0.0002024579999999991, 0.00020129200000000222, 0.00020179199999999925, 0.00020079099999999878, 0.00020262500000000142, 0.00020095800000000108, 0.00020162500000000042, 0.0002026380000000015, 0.0002007769999999992, 0.00020211099999999788, 0.000201235999999997, 0.00020179200000000272, 0.00020109800000000025, 0.00020148600000000072, 0.00020212500000000092, 0.00020161100000000085, 0.00020130599999999832, 0.00020130599999999832, 0.00020180499999999935, 0.00020161099999999738, 0.00020212499999999745, 0.00020212500000000438, 0.00020172299999999393, 0.00020113799999999654, 0.00020262499999999795]</msg>
<status status="PASS" starttime="20201030 10:58:38.797" endtime="20201030 10:58:38.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.792" endtime="20201030 10:58:38.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:38.803" endtime="20201030 10:58:38.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.801" endtime="20201030 10:58:38.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.800" endtime="20201030 10:58:38.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.433" endtime="20201030 10:58:38.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.432" endtime="20201030 10:58:38.824"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.833" endtime="20201030 10:58:38.858"></status>
</kw>
<msg timestamp="20201030 10:58:38.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.831" endtime="20201030 10:58:38.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.860" endtime="20201030 10:58:38.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.862" endtime="20201030 10:58:38.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.829" endtime="20201030 10:58:38.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.826" endtime="20201030 10:58:38.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.871" endtime="20201030 10:58:39.157"></status>
</kw>
<msg timestamp="20201030 10:58:39.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023357361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023561972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.870" endtime="20201030 10:58:39.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023357361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023561972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.161" endtime="20201030 10:58:39.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.170" endtime="20201030 10:58:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.867" endtime="20201030 10:58:39.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.865" endtime="20201030 10:58:39.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.176" level="INFO">${RESULT} = [{'diff': 0.00020461100000000038}, {'diff': 0.00020411099999999988}, {'diff': 0.00020347299999999915}, {'diff': 0.00020463899999999952}, {'diff': 0.00020294400000000004}, {'diff': 0.000203458000000000...</msg>
<status status="PASS" starttime="20201030 10:58:39.173" endtime="20201030 10:58:39.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.180" level="INFO">${ACCURACY} = {'diff': [0.00020461100000000038, 0.00020411099999999988, 0.00020347299999999915, 0.00020463899999999952, 0.00020294400000000004, 0.0002034580000000001, 0.00020311100000000235, 0.00020463899999999952,...</msg>
<status status="PASS" starttime="20201030 10:58:39.177" endtime="20201030 10:58:39.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.185" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.184" endtime="20201030 10:58:39.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.188" level="INFO">VALUE: [0.00020461100000000038, 0.00020411099999999988, 0.00020347299999999915, 0.00020463899999999952, 0.00020294400000000004, 0.0002034580000000001, 0.00020311100000000235, 0.00020463899999999952, 0.00020395900000000008, 0.00020272199999999893, 0.0002032640000000016, 0.00020413899999999902, 0.00020279200000000025, 0.00020429199999999828, 0.00020330500000000085, 0.00020447200000000068, 0.0002039580000000006, 0.00020372199999999993, 0.00020416599999999868, 0.00020331900000000042, 0.0002034580000000001, 0.00020440299999999884, 0.00020444500000000101, 0.00020313900000000149, 0.00020462499999999995, 0.00020279100000000078, 0.00020379199999999778, 0.00020330600000000032, 0.00020329199999999728, 0.00020329200000000075, 0.0002034169999999974, 0.00020377800000000168, 0.00020287500000000167, 0.00020362499999999895, 0.00020345899999999958, 0.00020362499999999895, 0.00020313900000000149, 0.00020424999999999957, 0.00020279200000000025, 0.0002027640000000011, 0.0002027640000000011, 0.00020436100000000013, 0.00020429200000000175, 0.00020462499999999995, 0.00020461199999999985, 0.000203444000000004, 0.00020398600000000322, 0.00020412499999999945, 0.00020445900000000405, 0.00020348599999999578]</msg>
<status status="PASS" starttime="20201030 10:58:39.186" endtime="20201030 10:58:39.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.181" endtime="20201030 10:58:39.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.194" endtime="20201030 10:58:39.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.192" endtime="20201030 10:58:39.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.191" endtime="20201030 10:58:39.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.825" endtime="20201030 10:58:39.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.824" endtime="20201030 10:58:39.214"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.223" endtime="20201030 10:58:39.249"></status>
</kw>
<msg timestamp="20201030 10:58:39.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.222" endtime="20201030 10:58:39.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.250" endtime="20201030 10:58:39.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.253" endtime="20201030 10:58:39.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.219" endtime="20201030 10:58:39.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.217" endtime="20201030 10:58:39.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.262" endtime="20201030 10:58:39.549"></status>
</kw>
<msg timestamp="20201030 10:58:39.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022896417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.261" endtime="20201030 10:58:39.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022896417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.553" endtime="20201030 10:58:39.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.561" endtime="20201030 10:58:39.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.258" endtime="20201030 10:58:39.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.256" endtime="20201030 10:58:39.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.568" level="INFO">${RESULT} = [{'diff': 0.00020562500000000095}, {'diff': 0.00020661199999999838}, {'diff': 0.00020612500000000145}, {'diff': 0.00020613900000000102}, {'diff': 0.00020562499999999748}, {'diff': 0.000205305999999998...</msg>
<status status="PASS" starttime="20201030 10:58:39.565" endtime="20201030 10:58:39.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.573" level="INFO">${ACCURACY} = {'diff': [0.00020562500000000095, 0.00020661199999999838, 0.00020612500000000145, 0.00020613900000000102, 0.00020562499999999748, 0.00020530599999999885, 0.00020495900000000108, 0.00020530499999999938...</msg>
<status status="PASS" starttime="20201030 10:58:39.569" endtime="20201030 10:58:39.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.578" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.577" endtime="20201030 10:58:39.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.580" level="INFO">VALUE: [0.00020562500000000095, 0.00020661199999999838, 0.00020612500000000145, 0.00020613900000000102, 0.00020562499999999748, 0.00020530599999999885, 0.00020495900000000108, 0.00020530499999999938, 0.00020629200000000028, 0.00020586099999999816, 0.00020504199999999903, 0.00020612500000000145, 0.00020594399999999957, 0.00020662500000000195, 0.0002059580000000026, 0.00020645899999999912, 0.00020493100000000194, 0.00020665300000000109, 0.0002060140000000009, 0.00020597200000000218, 0.00020597299999999819, 0.00020666600000000118, 0.00020563900000000052, 0.0002049719999999977, 0.00020595799999999914, 0.00020643099999999998, 0.00020594499999999905, 0.0002055140000000004, 0.0002055970000000018, 0.00020630599999999985, 0.00020579199999999978, 0.00020580499999999988, 0.00020505499999999913, 0.00020479199999999878, 0.00020594399999999957, 0.00020529199999999928, 0.0002055140000000004, 0.00020662499999999848, 0.00020562500000000095, 0.00020630600000000332, 0.00020545899999999812, 0.00020580500000000335, 0.00020594399999999957, 0.00020594399999999957, 0.00020479200000000225, 0.0002047919999999953, 0.00020549999999999735, 0.00020630500000000385, 0.00020613900000000102, 0.0002052919999999958]</msg>
<status status="PASS" starttime="20201030 10:58:39.579" endtime="20201030 10:58:39.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.574" endtime="20201030 10:58:39.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.585" endtime="20201030 10:58:39.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.584" endtime="20201030 10:58:39.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.583" endtime="20201030 10:58:39.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.215" endtime="20201030 10:58:39.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.215" endtime="20201030 10:58:39.606"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.615" endtime="20201030 10:58:39.640"></status>
</kw>
<msg timestamp="20201030 10:58:39.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.613" endtime="20201030 10:58:39.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.641" endtime="20201030 10:58:39.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.644" endtime="20201030 10:58:39.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.611" endtime="20201030 10:58:39.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.609" endtime="20201030 10:58:39.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.654" endtime="20201030 10:58:39.941"></status>
</kw>
<msg timestamp="20201030 10:58:39.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023088528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.652" endtime="20201030 10:58:39.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023088528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.945" endtime="20201030 10:58:39.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.953" endtime="20201030 10:58:39.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.650" endtime="20201030 10:58:39.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.648" endtime="20201030 10:58:39.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.960" level="INFO">${RESULT} = [{'diff': 0.00020862500000000048}, {'diff': 0.00020862500000000048}, {'diff': 0.00020795800000000114}, {'diff': 0.000206930000000001}, {'diff': 0.00020680600000000035}, {'diff': 0.00020830599999999838...</msg>
<status status="PASS" starttime="20201030 10:58:39.957" endtime="20201030 10:58:39.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.964" level="INFO">${ACCURACY} = {'diff': [0.00020862500000000048, 0.00020862500000000048, 0.00020795800000000114, 0.000206930000000001, 0.00020680600000000035, 0.00020830599999999838, 0.00020755599999999763, 0.00020730500000000138, ...</msg>
<status status="PASS" starttime="20201030 10:58:39.961" endtime="20201030 10:58:39.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.969" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.968" endtime="20201030 10:58:39.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.971" level="INFO">VALUE: [0.00020862500000000048, 0.00020862500000000048, 0.00020795800000000114, 0.000206930000000001, 0.00020680600000000035, 0.00020830599999999838, 0.00020755599999999763, 0.00020730500000000138, 0.00020829200000000228, 0.00020695800000000014, 0.00020762499999999948, 0.00020836100000000066, 0.00020751399999999892, 0.00020797199999999724, 0.0002074439999999976, 0.00020795900000000062, 0.00020843100000000198, 0.0002076109999999999, 0.00020762499999999948, 0.00020862500000000048, 0.00020834699999999762, 0.00020762499999999948, 0.0002084720000000012, 0.00020736100000000313, 0.00020863900000000005, 0.0002072780000000017, 0.00020711199999999888, 0.00020770900000000037, 0.0002077780000000022, 0.00020713899999999855, 0.00020833300000000152, 0.0002079720000000007, 0.00020695800000000014, 0.0002074720000000002, 0.0002074720000000002, 0.00020679200000000078, 0.00020747299999999969, 0.00020762499999999948, 0.00020787499999999626, 0.0002074579999999937, 0.00020844500000000155, 0.00020747299999999969, 0.00020694400000000057, 0.00020761099999999644, 0.00020680599999999688, 0.0002082919999999988, 0.00020695899999999962, 0.00020827699999999977, 0.00020829099999999934, 0.0002077919999999983]</msg>
<status status="PASS" starttime="20201030 10:58:39.970" endtime="20201030 10:58:39.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.965" endtime="20201030 10:58:39.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.977" endtime="20201030 10:58:39.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.975" endtime="20201030 10:58:39.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.974" endtime="20201030 10:58:39.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.607" endtime="20201030 10:58:39.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.606" endtime="20201030 10:58:39.997"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.006" endtime="20201030 10:58:40.032"></status>
</kw>
<msg timestamp="20201030 10:58:40.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.005" endtime="20201030 10:58:40.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.034" endtime="20201030 10:58:40.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.036" endtime="20201030 10:58:40.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.002" endtime="20201030 10:58:40.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.000" endtime="20201030 10:58:40.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.045" endtime="20201030 10:58:40.331"></status>
</kw>
<msg timestamp="20201030 10:58:40.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023792917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.044" endtime="20201030 10:58:40.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023792917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.336" endtime="20201030 10:58:40.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.344" endtime="20201030 10:58:40.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.041" endtime="20201030 10:58:40.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.039" endtime="20201030 10:58:40.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.351" level="INFO">${RESULT} = [{'diff': 0.0002097920000000003}, {'diff': 0.00020879099999999984}, {'diff': 0.0002101249999999985}, {'diff': 0.00020991700000000044}, {'diff': 0.00021031999999999995}, {'diff': 0.00021012500000000198...</msg>
<status status="PASS" starttime="20201030 10:58:40.347" endtime="20201030 10:58:40.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.355" level="INFO">${ACCURACY} = {'diff': [0.0002097920000000003, 0.00020879099999999984, 0.0002101249999999985, 0.00020991700000000044, 0.00021031999999999995, 0.00021012500000000198, 0.0002094439999999996, 0.00020945799999999917, 0...</msg>
<status status="PASS" starttime="20201030 10:58:40.352" endtime="20201030 10:58:40.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.359" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.358" endtime="20201030 10:58:40.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.362" level="INFO">VALUE: [0.0002097920000000003, 0.00020879099999999984, 0.0002101249999999985, 0.00020991700000000044, 0.00021031999999999995, 0.00021012500000000198, 0.0002094439999999996, 0.00020945799999999917, 0.0002096110000000019, 0.0002088890000000003, 0.00020941699999999994, 0.0002102630000000022, 0.00020915299999999665, 0.00021011099999999894, 0.00021012500000000198, 0.0002101249999999985, 0.00021045800000000017, 0.00020962500000000148, 0.00020880600000000235, 0.000210624999999999, 0.00021013900000000155, 0.00021069500000000033, 0.0002096110000000019, 0.00021061099999999944, 0.00021045899999999965, 0.00021015199999999817, 0.0002088049999999994, 0.00020929100000000034, 0.0002101670000000007, 0.000209624999999998, 0.00020962500000000148, 0.00020977700000000127, 0.00021015300000000112, 0.00020895799999999867, 0.00020977799999999727, 0.00021041700000000094, 0.00020992999999999706, 0.00020994399999999663, 0.00020898600000000128, 0.00021045900000000312, 0.0002088049999999994, 0.00021013899999999808, 0.00021048600000000278, 0.0002091249999999975, 0.000210624999999999, 0.0002101379999999986, 0.00021045800000000364, 0.00021065300000000509, 0.000209624999999998, 0.00020945900000000212]</msg>
<status status="PASS" starttime="20201030 10:58:40.361" endtime="20201030 10:58:40.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.356" endtime="20201030 10:58:40.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.368" endtime="20201030 10:58:40.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.366" endtime="20201030 10:58:40.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.365" endtime="20201030 10:58:40.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.998" endtime="20201030 10:58:40.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.998" endtime="20201030 10:58:40.389"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.398" endtime="20201030 10:58:40.422"></status>
</kw>
<msg timestamp="20201030 10:58:40.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.396" endtime="20201030 10:58:40.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.424" endtime="20201030 10:58:40.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.426" endtime="20201030 10:58:40.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.393" endtime="20201030 10:58:40.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.391" endtime="20201030 10:58:40.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.436" endtime="20201030 10:58:40.722"></status>
</kw>
<msg timestamp="20201030 10:58:40.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:40.434" endtime="20201030 10:58:40.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:40.726" endtime="20201030 10:58:40.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.734" endtime="20201030 10:58:40.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.431" endtime="20201030 10:58:40.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.430" endtime="20201030 10:58:40.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.741" level="INFO">${RESULT} = [{'diff': 0.00021183299999999808}, {'diff': 0.0002121250000000005}, {'diff': 0.000211625}, {'diff': 0.00021229199999999934}, {'diff': 0.00021177800000000274}, {'diff': 0.00021177800000000274}, {'diff'...</msg>
<status status="PASS" starttime="20201030 10:58:40.738" endtime="20201030 10:58:40.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.746" level="INFO">${ACCURACY} = {'diff': [0.00021183299999999808, 0.0002121250000000005, 0.000211625, 0.00021229199999999934, 0.00021177800000000274, 0.00021177800000000274, 0.0002124440000000026, 0.0002121250000000005, 0.0002124719...</msg>
<status status="PASS" starttime="20201030 10:58:40.742" endtime="20201030 10:58:40.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.751" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.749" endtime="20201030 10:58:40.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.753" level="INFO">VALUE: [0.00021183299999999808, 0.0002121250000000005, 0.000211625, 0.00021229199999999934, 0.00021177800000000274, 0.00021177800000000274, 0.0002124440000000026, 0.0002121250000000005, 0.00021247199999999827, 0.0002117920000000023, 0.00021213900000000008, 0.00021229099999999987, 0.0002119579999999982, 0.00021229199999999934, 0.00021197200000000124, 0.00021179199999999884, 0.0002109579999999972, 0.00021132000000000095, 0.00021127799999999877, 0.0002122640000000002, 0.00021079199999999784, 0.0002114440000000016, 0.0002112920000000018, 0.00021130600000000138, 0.00021195900000000115, 0.00021113900000000255, 0.00021201399999999995, 0.00021147200000000074, 0.00021077800000000174, 0.0002124449999999986, 0.00021155599999999816, 0.00021076400000000217, 0.00021083400000000002, 0.00021263900000000058, 0.0002107920000000013, 0.00021262499999999754, 0.00021097200000000024, 0.00021097200000000024, 0.00021261099999999797, 0.0002121250000000005, 0.0002111379999999996, 0.0002118050000000024, 0.00021147199999999727, 0.00021197199999999777, 0.0002121250000000005, 0.00021215200000000017, 0.0002123050000000029, 0.0002112920000000018, 0.000212625000000001, 0.00021180600000000188]</msg>
<status status="PASS" starttime="20201030 10:58:40.752" endtime="20201030 10:58:40.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.747" endtime="20201030 10:58:40.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.758" endtime="20201030 10:58:40.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.757" endtime="20201030 10:58:40.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.756" endtime="20201030 10:58:40.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.390" endtime="20201030 10:58:40.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.389" endtime="20201030 10:58:40.779"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.788" endtime="20201030 10:58:40.813"></status>
</kw>
<msg timestamp="20201030 10:58:40.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.786" endtime="20201030 10:58:40.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.815" endtime="20201030 10:58:40.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.818" endtime="20201030 10:58:40.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.784" endtime="20201030 10:58:40.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.781" endtime="20201030 10:58:40.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.827" endtime="20201030 10:58:41.114"></status>
</kw>
<msg timestamp="20201030 10:58:41.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.825" endtime="20201030 10:58:41.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.118" endtime="20201030 10:58:41.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.127" endtime="20201030 10:58:41.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.823" endtime="20201030 10:58:41.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.821" endtime="20201030 10:58:41.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.133" level="INFO">${RESULT} = [{'diff': 0.00021362499999999854}, {'diff': 0.00021344400000000013}, {'diff': 0.00021447200000000027}, {'diff': 0.00021462499999999954}, {'diff': 0.0002141250000000025}, {'diff': 0.0002137910000000013...</msg>
<status status="PASS" starttime="20201030 10:58:41.130" endtime="20201030 10:58:41.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.138" level="INFO">${ACCURACY} = {'diff': [0.00021362499999999854, 0.00021344400000000013, 0.00021447200000000027, 0.00021462499999999954, 0.0002141250000000025, 0.00021379100000000137, 0.00021362499999999854, 0.00021462499999999954,...</msg>
<status status="PASS" starttime="20201030 10:58:41.135" endtime="20201030 10:58:41.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.142" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.141" endtime="20201030 10:58:41.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.145" level="INFO">VALUE: [0.00021362499999999854, 0.00021344400000000013, 0.00021447200000000027, 0.00021462499999999954, 0.0002141250000000025, 0.00021379100000000137, 0.00021362499999999854, 0.00021462499999999954, 0.00021361099999999897, 0.00021462499999999954, 0.00021465299999999868, 0.00021397199999999977, 0.0002133059999999999, 0.00021362499999999854, 0.0002131250000000015, 0.0002137359999999991, 0.00021379199999999737, 0.00021315300000000065, 0.00021461099999999997, 0.00021377699999999833, 0.00021444399999999766, 0.0002131250000000015, 0.00021429200000000134, 0.0002133059999999999, 0.00021376399999999823, 0.00021280499999999994, 0.0002142359999999996, 0.00021312499999999804, 0.0002144999999999994, 0.0002144580000000007, 0.00021297199999999877, 0.0002139580000000002, 0.00021426399999999873, 0.00021445900000000018, 0.00021462499999999954, 0.00021324999999999816, 0.0002128059999999994, 0.00021448599999999984, 0.00021397299999999925, 0.0002144580000000007, 0.00021394400000000063, 0.0002144580000000007, 0.00021365300000000115, 0.0002137920000000043, 0.00021363900000000158, 0.0002137909999999979, 0.00021463900000000258, 0.00021413900000000208, 0.00021366600000000124, 0.00021402799999999805]</msg>
<status status="PASS" starttime="20201030 10:58:41.143" endtime="20201030 10:58:41.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.139" endtime="20201030 10:58:41.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.150" endtime="20201030 10:58:41.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.148" endtime="20201030 10:58:41.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.147" endtime="20201030 10:58:41.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.780" endtime="20201030 10:58:41.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.779" endtime="20201030 10:58:41.171"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.180" endtime="20201030 10:58:41.206"></status>
</kw>
<msg timestamp="20201030 10:58:41.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.178" endtime="20201030 10:58:41.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.207" endtime="20201030 10:58:41.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.210" endtime="20201030 10:58:41.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.176" endtime="20201030 10:58:41.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.173" endtime="20201030 10:58:41.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.219" endtime="20201030 10:58:41.504"></status>
</kw>
<msg timestamp="20201030 10:58:41.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023545111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023761736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.218" endtime="20201030 10:58:41.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023545111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023761736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.509" endtime="20201030 10:58:41.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.517" endtime="20201030 10:58:41.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.215" endtime="20201030 10:58:41.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.213" endtime="20201030 10:58:41.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.524" level="INFO">${RESULT} = [{'diff': 0.00021662499999999807}, {'diff': 0.0002150970000000009}, {'diff': 0.00021547299999999728}, {'diff': 0.00021598600000000134}, {'diff': 0.00021593000000000306}, {'diff': 0.0002161249999999975...</msg>
<status status="PASS" starttime="20201030 10:58:41.521" endtime="20201030 10:58:41.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.528" level="INFO">${ACCURACY} = {'diff': [0.00021662499999999807, 0.0002150970000000009, 0.00021547299999999728, 0.00021598600000000134, 0.00021593000000000306, 0.00021612499999999757, 0.00021626400000000073, 0.00021662499999999807,...</msg>
<status status="PASS" starttime="20201030 10:58:41.525" endtime="20201030 10:58:41.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.533" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.531" endtime="20201030 10:58:41.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.536" level="INFO">VALUE: [0.00021662499999999807, 0.0002150970000000009, 0.00021547299999999728, 0.00021598600000000134, 0.00021593000000000306, 0.00021612499999999757, 0.00021626400000000073, 0.00021662499999999807, 0.00021641600000000052, 0.00021495799999999773, 0.00021666700000000025, 0.0002164719999999988, 0.0002149999999999999, 0.00021627700000000083, 0.00021508299999999786, 0.00021661100000000197, 0.00021661100000000197, 0.00021532000000000148, 0.00021513800000000013, 0.0002166390000000011, 0.00021661100000000197, 0.00021612500000000104, 0.0002154589999999977, 0.00021627700000000083, 0.00021579199999999937, 0.00021601399999999701, 0.00021597200000000177, 0.00021557000000000173, 0.00021483300000000108, 0.0002152909999999994, 0.00021511100000000047, 0.0002147779999999988, 0.0002147779999999988, 0.00021597200000000177, 0.0002157909999999999, 0.00021580600000000588, 0.000216625000000005, 0.0002147909999999989, 0.0002152909999999994, 0.00021544400000000213, 0.00021530599999999844, 0.0002156109999999975, 0.000215625000000004, 0.00021530499999999897, 0.00021563899999999664, 0.00021662499999999807, 0.00021495900000000068, 0.00021613799999999767, 0.00021480499999999847, 0.00021480599999999794]</msg>
<status status="PASS" starttime="20201030 10:58:41.534" endtime="20201030 10:58:41.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.529" endtime="20201030 10:58:41.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.546" endtime="20201030 10:58:41.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.545" endtime="20201030 10:58:41.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.543" endtime="20201030 10:58:41.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.172" endtime="20201030 10:58:41.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.171" endtime="20201030 10:58:41.567"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.576" endtime="20201030 10:58:41.601"></status>
</kw>
<msg timestamp="20201030 10:58:41.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.574" endtime="20201030 10:58:41.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.603" endtime="20201030 10:58:41.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.605" endtime="20201030 10:58:41.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.572" endtime="20201030 10:58:41.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.569" endtime="20201030 10:58:41.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.615" endtime="20201030 10:58:41.902"></status>
</kw>
<msg timestamp="20201030 10:58:41.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022468597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.613" endtime="20201030 10:58:41.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022468597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.906" endtime="20201030 10:58:41.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.915" endtime="20201030 10:58:41.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.610" endtime="20201030 10:58:41.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.609" endtime="20201030 10:58:41.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.921" level="INFO">${RESULT} = [{'diff': 0.0002179590000000002}, {'diff': 0.00021765300000000168}, {'diff': 0.000218111}, {'diff': 0.00021762499999999907}, {'diff': 0.0002174589999999997}, {'diff': 0.00021862500000000007}, {'diff':...</msg>
<status status="PASS" starttime="20201030 10:58:41.918" endtime="20201030 10:58:41.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.926" level="INFO">${ACCURACY} = {'diff': [0.0002179590000000002, 0.00021765300000000168, 0.000218111, 0.00021762499999999907, 0.0002174589999999997, 0.00021862500000000007, 0.00021759699999999993, 0.0002177780000000018, 0.0002173480...</msg>
<status status="PASS" starttime="20201030 10:58:41.922" endtime="20201030 10:58:41.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.931" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.930" endtime="20201030 10:58:41.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.933" level="INFO">VALUE: [0.0002179590000000002, 0.00021765300000000168, 0.000218111, 0.00021762499999999907, 0.0002174589999999997, 0.00021862500000000007, 0.00021759699999999993, 0.0002177780000000018, 0.00021734800000000262, 0.00021699999999999844, 0.00021779099999999843, 0.00021777700000000233, 0.0002181529999999987, 0.00021730600000000044, 0.00021797299999999978, 0.00021779099999999843, 0.0002171390000000016, 0.00021848600000000037, 0.00021801299999999954, 0.0002178330000000006, 0.00021845799999999777, 0.00021747299999999928, 0.0002176109999999995, 0.00021713899999999814, 0.00021811199999999947, 0.0002179720000000003, 0.0002176390000000021, 0.00021697200000000277, 0.0002174589999999997, 0.0002177919999999979, 0.00021762500000000254, 0.00021745800000000023, 0.00021762499999999907, 0.00021715300000000118, 0.0002176520000000022, 0.00021830500000000197, 0.00021679200000000037, 0.0002179720000000003, 0.00021731899999999707, 0.0002186529999999992, 0.0002176109999999995, 0.00021819499999999742, 0.00021845899999999724, 0.00021845899999999724, 0.0002167910000000009, 0.000218320000000001, 0.00021712499999999857, 0.0002178200000000005, 0.00021744499999999667, 0.00021863899999999964]</msg>
<status status="PASS" starttime="20201030 10:58:41.932" endtime="20201030 10:58:41.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.927" endtime="20201030 10:58:41.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.939" endtime="20201030 10:58:41.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.937" endtime="20201030 10:58:41.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.936" endtime="20201030 10:58:41.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.568" endtime="20201030 10:58:41.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.567" endtime="20201030 10:58:41.959"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.968" endtime="20201030 10:58:41.994"></status>
</kw>
<msg timestamp="20201030 10:58:41.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.967" endtime="20201030 10:58:41.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.995" endtime="20201030 10:58:41.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.998" endtime="20201030 10:58:41.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.964" endtime="20201030 10:58:42.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.962" endtime="20201030 10:58:42.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.007" endtime="20201030 10:58:42.295"></status>
</kw>
<msg timestamp="20201030 10:58:42.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.006" endtime="20201030 10:58:42.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.299" endtime="20201030 10:58:42.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.308" endtime="20201030 10:58:42.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.003" endtime="20201030 10:58:42.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.001" endtime="20201030 10:58:42.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.314" level="INFO">${RESULT} = [{'diff': 0.00021930600000000244}, {'diff': 0.0002188200000000015}, {'diff': 0.00021930599999999897}, {'diff': 0.00021945799999999877}, {'diff': 0.0002189439999999987}, {'diff': 0.00022047199999999934...</msg>
<status status="PASS" starttime="20201030 10:58:42.311" endtime="20201030 10:58:42.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.319" level="INFO">${ACCURACY} = {'diff': [0.00021930600000000244, 0.0002188200000000015, 0.00021930599999999897, 0.00021945799999999877, 0.0002189439999999987, 0.00022047199999999934, 0.00021945899999999824, 0.0002189720000000013, 0...</msg>
<status status="PASS" starttime="20201030 10:58:42.315" endtime="20201030 10:58:42.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.323" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.322" endtime="20201030 10:58:42.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.326" level="INFO">VALUE: [0.00021930600000000244, 0.0002188200000000015, 0.00021930599999999897, 0.00021945799999999877, 0.0002189439999999987, 0.00022047199999999934, 0.00021945899999999824, 0.0002189720000000013, 0.00021979100000000043, 0.00022012500000000157, 0.0002197919999999999, 0.00021900000000000044, 0.000219805, 0.0002203050000000005, 0.00021961099999999803, 0.00021941699999999953, 0.000220111000000002, 0.00021929099999999993, 0.00021895800000000173, 0.00021897199999999784, 0.00022011099999999853, 0.00022013900000000114, 0.00021879099999999943, 0.00021912500000000057, 0.00021995799999999927, 0.00021947300000000128, 0.0002202920000000004, 0.0002206530000000012, 0.0002196249999999976, 0.00021895800000000173, 0.00021927799999999983, 0.00022015200000000124, 0.00021981900000000304, 0.00021913900000000014, 0.00021944499999999867, 0.00022000000000000144, 0.0002201249999999981, 0.0002191249999999971, 0.00021945799999999877, 0.00022065200000000174, 0.00021894499999999817, 0.00022030500000000397, 0.00022015299999999377, 0.00021979200000000337, 0.00022029200000000387, 0.00021952800000000355, 0.00022059700000000293, 0.00022063900000000164, 0.00021962500000000107, 0.0002192639999999968]</msg>
<status status="PASS" starttime="20201030 10:58:42.324" endtime="20201030 10:58:42.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.319" endtime="20201030 10:58:42.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.331" endtime="20201030 10:58:42.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.329" endtime="20201030 10:58:42.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.328" endtime="20201030 10:58:42.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.960" endtime="20201030 10:58:42.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.960" endtime="20201030 10:58:42.351"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.361" endtime="20201030 10:58:42.388"></status>
</kw>
<msg timestamp="20201030 10:58:42.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.359" endtime="20201030 10:58:42.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.389" endtime="20201030 10:58:42.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.392" endtime="20201030 10:58:42.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.356" endtime="20201030 10:58:42.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.354" endtime="20201030 10:58:42.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.401" endtime="20201030 10:58:42.687"></status>
</kw>
<msg timestamp="20201030 10:58:42.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023978069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024199028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.400" endtime="20201030 10:58:42.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023978069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024199028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.691" endtime="20201030 10:58:42.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.699" endtime="20201030 10:58:42.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.397" endtime="20201030 10:58:42.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.395" endtime="20201030 10:58:42.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.706" level="INFO">${RESULT} = [{'diff': 0.00022095899999999974}, {'diff': 0.0002212920000000014}, {'diff': 0.00022129100000000193}, {'diff': 0.00022093000000000113}, {'diff': 0.0002207920000000009}, {'diff': 0.00022247299999999734...</msg>
<status status="PASS" starttime="20201030 10:58:42.703" endtime="20201030 10:58:42.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.710" level="INFO">${ACCURACY} = {'diff': [0.00022095899999999974, 0.0002212920000000014, 0.00022129100000000193, 0.00022093000000000113, 0.0002207920000000009, 0.00022247299999999734, 0.00022192999999999866, 0.00022208299999999792, ...</msg>
<status status="PASS" starttime="20201030 10:58:42.707" endtime="20201030 10:58:42.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.715" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.714" endtime="20201030 10:58:42.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.718" level="INFO">VALUE: [0.00022095899999999974, 0.0002212920000000014, 0.00022129100000000193, 0.00022093000000000113, 0.0002207920000000009, 0.00022247299999999734, 0.00022192999999999866, 0.00022208299999999792, 0.00022161100000000003, 0.00022161100000000003, 0.0002211249999999991, 0.0002221250000000001, 0.0002216249999999996, 0.0002216249999999996, 0.0002221799999999989, 0.00022227799999999936, 0.00022163899999999917, 0.00022124999999999923, 0.00022247199999999787, 0.00022263900000000017, 0.00022111200000000247, 0.0002224440000000022, 0.00022129199999999793, 0.00022112500000000257, 0.00022095899999999974, 0.00022077700000000186, 0.00022180499999999853, 0.00022129199999999793, 0.00022077800000000133, 0.00022215199999999977, 0.00022151400000000251, 0.00022231900000000207, 0.00022145800000000077, 0.0002219730000000003, 0.00022258299999999842, 0.00022202799999999911, 0.00022097199999999984, 0.00022079199999999743, 0.000221111000000003, 0.0002214440000000012, 0.00022195800000000127, 0.000220805999999997, 0.00022112500000000257, 0.00022113900000000214, 0.00022113900000000214, 0.00022072199999999959, 0.00022112500000000257, 0.0002211660000000018, 0.0002218189999999981, 0.00022145799999999383]</msg>
<status status="PASS" starttime="20201030 10:58:42.716" endtime="20201030 10:58:42.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.711" endtime="20201030 10:58:42.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.724" endtime="20201030 10:58:42.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.722" endtime="20201030 10:58:42.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.721" endtime="20201030 10:58:42.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.352" endtime="20201030 10:58:42.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.352" endtime="20201030 10:58:42.744"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.753" endtime="20201030 10:58:42.780"></status>
</kw>
<msg timestamp="20201030 10:58:42.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.752" endtime="20201030 10:58:42.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.781" endtime="20201030 10:58:42.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.784" endtime="20201030 10:58:42.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.749" endtime="20201030 10:58:42.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.747" endtime="20201030 10:58:42.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.793" endtime="20201030 10:58:43.079"></status>
</kw>
<msg timestamp="20201030 10:58:43.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023020278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023243264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.792" endtime="20201030 10:58:43.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023020278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023243264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.084" endtime="20201030 10:58:43.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.092" endtime="20201030 10:58:43.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.789" endtime="20201030 10:58:43.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.787" endtime="20201030 10:58:43.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.099" level="INFO">${RESULT} = [{'diff': 0.00022298599999999794}, {'diff': 0.00022329199999999993}, {'diff': 0.00022412499999999863}, {'diff': 0.00022329100000000046}, {'diff': 0.00022295800000000227}, {'diff': 0.000223972999999998...</msg>
<status status="PASS" starttime="20201030 10:58:43.095" endtime="20201030 10:58:43.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.104" level="INFO">${ACCURACY} = {'diff': [0.00022298599999999794, 0.00022329199999999993, 0.00022412499999999863, 0.00022329100000000046, 0.00022295800000000227, 0.00022397299999999884, 0.00022397199999999937, 0.0002236389999999977,...</msg>
<status status="PASS" starttime="20201030 10:58:43.100" endtime="20201030 10:58:43.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.108" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.107" endtime="20201030 10:58:43.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.111" level="INFO">VALUE: [0.00022298599999999794, 0.00022329199999999993, 0.00022412499999999863, 0.00022329100000000046, 0.00022295800000000227, 0.00022397299999999884, 0.00022397199999999937, 0.0002236389999999977, 0.0002241389999999982, 0.00022447199999999987, 0.00022347299999999834, 0.00022451399999999858, 0.00022362499999999813, 0.00022329199999999993, 0.0002239579999999998, 0.00022420800000000005, 0.00022412499999999863, 0.00022338900000000092, 0.0002227920000000029, 0.00022379200000000044, 0.0002246800000000014, 0.0002234579999999993, 0.00022363900000000117, 0.0002243060000000005, 0.00022277799999999987, 0.0002229579999999988, 0.00022423599999999919, 0.0002232640000000008, 0.00022467999999999794, 0.00022311099999999806, 0.000222805000000003, 0.00022362499999999813, 0.00022287499999999738, 0.00022311100000000153, 0.00022383299999999967, 0.00022379100000000096, 0.0002236389999999977, 0.00022329199999999993, 0.0002229730000000013, 0.00022279200000000637, 0.00022311099999999806, 0.00022362500000000507, 0.0002233059999999995, 0.0002243060000000005, 0.00022345799999999583, 0.0002229440000000027, 0.00022279199999999943, 0.0002239860000000024, 0.00022427800000000137, 0.00022416700000000428]</msg>
<status status="PASS" starttime="20201030 10:58:43.110" endtime="20201030 10:58:43.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.105" endtime="20201030 10:58:43.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.116" endtime="20201030 10:58:43.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.115" endtime="20201030 10:58:43.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.113" endtime="20201030 10:58:43.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.745" endtime="20201030 10:58:43.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.745" endtime="20201030 10:58:43.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.340" endtime="20201030 10:58:43.137"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:04.266" endtime="20201030 10:58:43.138" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:57:19.297" endtime="20201030 10:58:43.144"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.200" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:58:43.208" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:58:44.308" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:58:43.199" endtime="20201030 10:58:44.308"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.311" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:58:44.309" endtime="20201030 10:58:44.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.197" endtime="20201030 10:58:44.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.314" endtime="20201030 10:58:44.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.313" endtime="20201030 10:58:44.500"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.513" endtime="20201030 10:58:44.529"></status>
</kw>
<msg timestamp="20201030 10:58:44.530" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], '...</msg>
<status status="PASS" starttime="20201030 10:58:44.511" endtime="20201030 10:58:44.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.533" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], '...</msg>
<status status="PASS" starttime="20201030 10:58:44.531" endtime="20201030 10:58:44.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.536" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:44.534" endtime="20201030 10:58:44.536"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:44.509" endtime="20201030 10:58:44.537"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:44.507" endtime="20201030 10:58:44.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.505" endtime="20201030 10:58:44.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:44.542" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:44.541" endtime="20201030 10:58:44.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.539" endtime="20201030 10:58:44.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.505" endtime="20201030 10:58:44.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.504" endtime="20201030 10:58:44.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.544" endtime="20201030 10:58:44.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.503" endtime="20201030 10:58:44.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.546" endtime="20201030 10:58:44.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.501" endtime="20201030 10:58:44.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.196" endtime="20201030 10:58:44.549"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.556" endtime="20201030 10:58:44.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.554" endtime="20201030 10:58:44.578"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.607" endtime="20201030 10:58:44.628"></status>
</kw>
<msg timestamp="20201030 10:58:44.629" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.604" endtime="20201030 10:58:44.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.635" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.632" endtime="20201030 10:58:44.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.643" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:44.637" endtime="20201030 10:58:44.644"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:44.598" endtime="20201030 10:58:44.646"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:44.592" endtime="20201030 10:58:44.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.590" endtime="20201030 10:58:44.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:44.656" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:44.654" endtime="20201030 10:58:44.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.650" endtime="20201030 10:58:44.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.588" endtime="20201030 10:58:44.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.586" endtime="20201030 10:58:44.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.659" endtime="20201030 10:58:44.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.583" endtime="20201030 10:58:44.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.580" endtime="20201030 10:58:44.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.553" endtime="20201030 10:58:44.665"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.674" endtime="20201030 10:58:56.898"></status>
</kw>
<msg timestamp="20201030 10:58:56.899" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.673" endtime="20201030 10:58:56.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.901" endtime="20201030 10:58:56.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.907" endtime="20201030 10:58:56.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.670" endtime="20201030 10:58:56.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.668" endtime="20201030 10:58:56.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:56.918" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:58:56.914" endtime="20201030 10:58:56.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.928" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:58:56.925" endtime="20201030 10:58:56.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.932" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:58:56.930" endtime="20201030 10:58:56.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.920" endtime="20201030 10:58:56.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.942" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:58:56.940" endtime="20201030 10:58:56.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.947" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:58:56.945" endtime="20201030 10:58:56.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.935" endtime="20201030 10:58:56.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.957" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:58:56.955" endtime="20201030 10:58:56.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.962" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 10:58:56.960" endtime="20201030 10:58:56.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.950" endtime="20201030 10:58:56.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.978" endtime="20201030 10:58:57.283"></status>
</kw>
<msg timestamp="20201030 10:58:57.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.109412944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.309463625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.975" endtime="20201030 10:58:57.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.109412944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.309463625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.287" endtime="20201030 10:58:57.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.295" endtime="20201030 10:58:57.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.969" endtime="20201030 10:58:57.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.965" endtime="20201030 10:58:57.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:58:57.302" level="INFO">${FILTERED} = [{'diff': 0.200050681}, {'diff': 0.200018264}, {'diff': 0.200022445}, {'diff': 0.20002245799999996}, {'diff': 0.20002242999999997}, {'diff': 0.20002247200000012}, {'diff': 0.200022417}, {'diff': 0.200...</msg>
<status status="PASS" starttime="20201030 10:58:57.299" endtime="20201030 10:58:57.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:57.306" level="INFO">${RESULT} = {'diff': [0.200050681, 0.200018264, 0.200022445, 0.20002245799999996, 0.20002242999999997, 0.20002247200000012, 0.200022417, 0.20002243100000006, 0.200022417, 0.20002245800000007, 0.2000224300000002, ...</msg>
<status status="PASS" starttime="20201030 10:58:57.303" endtime="20201030 10:58:57.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.310" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:58:57.309" endtime="20201030 10:58:57.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.313" level="INFO">VALUE: [0.200050681, 0.200018264, 0.200022445, 0.20002245799999996, 0.20002242999999997, 0.20002247200000012, 0.200022417, 0.20002243100000006, 0.200022417, 0.20002245800000007, 0.2000224300000002, 0.20002243100000028, 0.2000224450000001, 0.20002244400000002, 0.20002241599999993, 0.2000224300000002, 0.20002242999999975, 0.200022347, 0.20002236099999982, 0.2000223339999998, 0.20002231999999953, 0.2000223340000007, 0.20002229199999988, 0.20002230500000007, 0.20002231899999945, 0.20002230500000007, 0.2000222909999998, 0.20002230500000007, 0.200022347, 0.20002233299999972, 0.20002231999999953, 0.2000223330000006, 0.2000223339999998, 0.2000223339999998, 0.20002229199999988, 0.20002232000000042, 0.20002234800000007, 0.20002237500000053, 0.200022347, 0.200022347, 0.20002234700000088, 0.2000223330000015, 0.20002237499999964, 0.20002234700000088, 0.20002230500000096, 0.20002231900000034, 0.20002233299999972, 0.20002231900000034, 0.2000223469999991, 0.20002236100000026, 0.20002234700000088]</msg>
<status status="PASS" starttime="20201030 10:58:57.311" endtime="20201030 10:58:57.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.307" endtime="20201030 10:58:57.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.666" endtime="20201030 10:58:57.315"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:44.550" endtime="20201030 10:58:57.320" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:57.327" endtime="20201030 10:58:57.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.326" endtime="20201030 10:58:57.347"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.362" endtime="20201030 10:58:57.378"></status>
</kw>
<msg timestamp="20201030 10:58:57.378" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.360" endtime="20201030 10:58:57.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.381" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.379" endtime="20201030 10:58:57.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.384" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:57.382" endtime="20201030 10:58:57.384"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:57.357" endtime="20201030 10:58:57.385"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:57.355" endtime="20201030 10:58:57.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.353" endtime="20201030 10:58:57.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:57.390" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:57.389" endtime="20201030 10:58:57.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.387" endtime="20201030 10:58:57.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.352" endtime="20201030 10:58:57.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.351" endtime="20201030 10:58:57.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.391" endtime="20201030 10:58:57.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.350" endtime="20201030 10:58:57.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.348" endtime="20201030 10:58:57.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.324" endtime="20201030 10:58:57.394"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.404" endtime="20201030 10:59:09.627"></status>
</kw>
<msg timestamp="20201030 10:59:09.628" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.402" endtime="20201030 10:59:09.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.633" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.630" endtime="20201030 10:59:09.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.636" endtime="20201030 10:59:09.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.399" endtime="20201030 10:59:09.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.397" endtime="20201030 10:59:09.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:09.648" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:59:09.643" endtime="20201030 10:59:09.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.657" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:09.654" endtime="20201030 10:59:09.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.661" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:09.659" endtime="20201030 10:59:09.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.649" endtime="20201030 10:59:09.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.674" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:09.669" endtime="20201030 10:59:09.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.678" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:09.676" endtime="20201030 10:59:09.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.665" endtime="20201030 10:59:09.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.689" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:09.687" endtime="20201030 10:59:09.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.693" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 10:59:09.691" endtime="20201030 10:59:09.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.682" endtime="20201030 10:59:09.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.709" endtime="20201030 10:59:10.014"></status>
</kw>
<msg timestamp="20201030 10:59:10.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066857181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.266990097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.706" endtime="20201030 10:59:10.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066857181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.266990097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.018" endtime="20201030 10:59:10.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.027" endtime="20201030 10:59:10.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.700" endtime="20201030 10:59:10.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.696" endtime="20201030 10:59:10.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:10.033" level="INFO">${FILTERED} = [{'diff': 0.200132916}, {'diff': 0.20005833300000003}, {'diff': 0.19990545799999998}, {'diff': 0.20002033400000008}, {'diff': 0.2000223339999999}, {'diff': 0.2000223339999998}, {'diff': 0.200022306000...</msg>
<status status="PASS" starttime="20201030 10:59:10.030" endtime="20201030 10:59:10.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:10.037" level="INFO">${RESULT} = {'diff': [0.200132916, 0.20005833300000003, 0.19990545799999998, 0.20002033400000008, 0.2000223339999999, 0.2000223339999998, 0.20002230600000015, 0.20002234800000007, 0.20002237500000009, 0.200022333...</msg>
<status status="PASS" starttime="20201030 10:59:10.034" endtime="20201030 10:59:10.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.042" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:10.041" endtime="20201030 10:59:10.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.045" level="INFO">VALUE: [0.200132916, 0.20005833300000003, 0.19990545799999998, 0.20002033400000008, 0.2000223339999999, 0.2000223339999998, 0.20002230600000015, 0.20002234800000007, 0.20002237500000009, 0.2000223339999998, 0.2000222230000004, 0.20002219399999976, 0.20002222199999986, 0.20002217999999994, 0.20002220800000003, 0.20002220800000003, 0.20002242999999975, 0.20002251400000004, 0.2000224580000003, 0.2000224580000003, 0.20002243100000072, 0.2000224029999993, 0.20002240300000018, 0.20002244400000002, 0.20002248700000003, 0.20002244400000002, 0.20002242999999975, 0.20002244400000002, 0.20002244400000002, 0.20002242999999975, 0.20002244400000002, 0.20002242999999975, 0.2000224450000001, 0.20002245900000037, 0.2000224579999994, 0.20002243099999983, 0.20002244400000002, 0.2000224450000001, 0.2000224589999995, 0.20002243099999983, 0.2000224589999995, 0.2000224579999994, 0.20002248599999994, 0.20002242999999886, 0.20002244400000002, 0.20002244400000002, 0.20002244400000002, 0.2000224579999994, 0.20002244400000002, 0.2000224579999994, 0.20002247200000056]</msg>
<status status="PASS" starttime="20201030 10:59:10.044" endtime="20201030 10:59:10.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.038" endtime="20201030 10:59:10.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.395" endtime="20201030 10:59:10.047"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:57.322" endtime="20201030 10:59:10.048" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:10.055" endtime="20201030 10:59:10.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.054" endtime="20201030 10:59:10.075"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.089" endtime="20201030 10:59:10.105"></status>
</kw>
<msg timestamp="20201030 10:59:10.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.087" endtime="20201030 10:59:10.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.106" endtime="20201030 10:59:10.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.111" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:10.109" endtime="20201030 10:59:10.111"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:10.084" endtime="20201030 10:59:10.112"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:10.082" endtime="20201030 10:59:10.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.081" endtime="20201030 10:59:10.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:10.117" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:10.116" endtime="20201030 10:59:10.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.114" endtime="20201030 10:59:10.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.080" endtime="20201030 10:59:10.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.079" endtime="20201030 10:59:10.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.119" endtime="20201030 10:59:10.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.078" endtime="20201030 10:59:10.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.076" endtime="20201030 10:59:10.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.052" endtime="20201030 10:59:10.121"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.134" endtime="20201030 10:59:22.357"></status>
</kw>
<msg timestamp="20201030 10:59:22.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.129" endtime="20201030 10:59:22.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.364" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.361" endtime="20201030 10:59:22.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.367" endtime="20201030 10:59:22.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.126" endtime="20201030 10:59:22.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.124" endtime="20201030 10:59:22.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:22.378" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:59:22.374" endtime="20201030 10:59:22.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.387" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:22.385" endtime="20201030 10:59:22.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.392" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:22.390" endtime="20201030 10:59:22.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.380" endtime="20201030 10:59:22.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.402" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:22.400" endtime="20201030 10:59:22.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.407" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:22.404" endtime="20201030 10:59:22.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.395" endtime="20201030 10:59:22.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.417" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:22.415" endtime="20201030 10:59:22.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.421" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 10:59:22.419" endtime="20201030 10:59:22.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.410" endtime="20201030 10:59:22.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.436" endtime="20201030 10:59:22.732"></status>
</kw>
<msg timestamp="20201030 10:59:22.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069123417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.269355486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.434" endtime="20201030 10:59:22.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069123417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.269355486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.737" endtime="20201030 10:59:22.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.745" endtime="20201030 10:59:22.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.428" endtime="20201030 10:59:22.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.425" endtime="20201030 10:59:22.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:22.752" level="INFO">${FILTERED} = [{'diff': 0.20023206899999996}, {'diff': 0.20007690299999997}, {'diff': 0.199792778}, {'diff': 0.20002244400000002}, {'diff': 0.20002242999999997}, {'diff': 0.20002242999999997}, {'diff': 0.2000224299...</msg>
<status status="PASS" starttime="20201030 10:59:22.748" endtime="20201030 10:59:22.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:22.757" level="INFO">${RESULT} = {'diff': [0.20023206899999996, 0.20007690299999997, 0.199792778, 0.20002244400000002, 0.20002242999999997, 0.20002242999999997, 0.20002242999999997, 0.20002248599999994, 0.20002244400000002, 0.2000224...</msg>
<status status="PASS" starttime="20201030 10:59:22.753" endtime="20201030 10:59:22.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.761" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:22.760" endtime="20201030 10:59:22.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.763" level="INFO">VALUE: [0.20023206899999996, 0.20007690299999997, 0.199792778, 0.20002244400000002, 0.20002242999999997, 0.20002242999999997, 0.20002242999999997, 0.20002248599999994, 0.20002244400000002, 0.20002244400000024, 0.2000223189999999, 0.20002230499999962, 0.20002230500000007, 0.20002237500000009, 0.20002233300000016, 0.20002233299999972, 0.200022347, 0.20002231900000034, 0.20002233299999972, 0.20002230499999962, 0.20002232000000042, 0.20002233299999972, 0.20002230600000015, 0.2000223339999998, 0.20002236100000026, 0.20002231999999953, 0.20002243099999983, 0.20002233299999972, 0.200022347, 0.20002233299999972, 0.20002236100000026, 0.200022347, 0.2000223339999998, 0.2000223339999998, 0.20002234800000007, 0.20002236099999937, 0.20002233299999972, 0.20002233299999972, 0.20002236100000026, 0.20002236200000034, 0.20002237499999964, 0.20002231899999856, 0.20002233299999972, 0.20002233400000158, 0.20002236100000026, 0.20002233299999972, 0.20002237499999964, 0.2000224020000001, 0.20002236100000026, 0.20002236100000026, 0.20002234700000088]</msg>
<status status="PASS" starttime="20201030 10:59:22.762" endtime="20201030 10:59:22.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.757" endtime="20201030 10:59:22.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.122" endtime="20201030 10:59:22.765"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:10.050" endtime="20201030 10:59:22.766" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:22.775" endtime="20201030 10:59:22.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.773" endtime="20201030 10:59:22.795"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.808" endtime="20201030 10:59:22.825"></status>
</kw>
<msg timestamp="20201030 10:59:22.825" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.807" endtime="20201030 10:59:22.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.826" endtime="20201030 10:59:22.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.832" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:22.829" endtime="20201030 10:59:22.832"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:22.804" endtime="20201030 10:59:22.833"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:22.802" endtime="20201030 10:59:22.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.800" endtime="20201030 10:59:22.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:22.838" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:22.837" endtime="20201030 10:59:22.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.835" endtime="20201030 10:59:22.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.800" endtime="20201030 10:59:22.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.799" endtime="20201030 10:59:22.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.839" endtime="20201030 10:59:22.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.797" endtime="20201030 10:59:22.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.795" endtime="20201030 10:59:22.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.772" endtime="20201030 10:59:22.842"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.851" endtime="20201030 10:59:35.075"></status>
</kw>
<msg timestamp="20201030 10:59:35.076" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.850" endtime="20201030 10:59:35.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.082" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.078" endtime="20201030 10:59:35.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.084" endtime="20201030 10:59:35.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.847" endtime="20201030 10:59:35.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.845" endtime="20201030 10:59:35.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:35.096" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:59:35.092" endtime="20201030 10:59:35.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.105" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:35.102" endtime="20201030 10:59:35.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.109" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:35.107" endtime="20201030 10:59:35.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.097" endtime="20201030 10:59:35.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.119" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:35.117" endtime="20201030 10:59:35.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.124" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:35.122" endtime="20201030 10:59:35.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.112" endtime="20201030 10:59:35.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.134" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:35.132" endtime="20201030 10:59:35.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.139" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 10:59:35.137" endtime="20201030 10:59:35.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.127" endtime="20201030 10:59:35.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.155" endtime="20201030 10:59:35.456"></status>
</kw>
<msg timestamp="20201030 10:59:35.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067637375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.268022139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.152" endtime="20201030 10:59:35.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067637375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.268022139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.460" endtime="20201030 10:59:35.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.468" endtime="20201030 10:59:35.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.146" endtime="20201030 10:59:35.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.142" endtime="20201030 10:59:35.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:35.475" level="INFO">${FILTERED} = [{'diff': 0.200384764}, {'diff': 0.200078445}, {'diff': 0.19964343100000004}, {'diff': 0.20002234800000007}, {'diff': 0.20002233299999994}, {'diff': 0.200022347}, {'diff': 0.20002236100000004}, {'diff...</msg>
<status status="PASS" starttime="20201030 10:59:35.472" endtime="20201030 10:59:35.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:35.479" level="INFO">${RESULT} = {'diff': [0.200384764, 0.200078445, 0.19964343100000004, 0.20002234800000007, 0.20002233299999994, 0.200022347, 0.20002236100000004, 0.2000223189999999, 0.20002236100000004, 0.2000223470000002, 0.2000...</msg>
<status status="PASS" starttime="20201030 10:59:35.476" endtime="20201030 10:59:35.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.483" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:35.482" endtime="20201030 10:59:35.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.486" level="INFO">VALUE: [0.200384764, 0.200078445, 0.19964343100000004, 0.20002234800000007, 0.20002233299999994, 0.200022347, 0.20002236100000004, 0.2000223189999999, 0.20002236100000004, 0.2000223470000002, 0.20002222199999986, 0.20002223600000013, 0.20002223600000013, 0.20002220800000003, 0.20002224999999996, 0.20002229199999988, 0.20002223600000013, 0.20002226399999978, 0.20002226400000023, 0.2000222359999997, 0.20002226400000023, 0.20002224999999996, 0.20002226400000023, 0.20002230500000007, 0.20002226299999926, 0.2000222359999997, 0.20002224999999996, 0.20002224999999996, 0.20002224999999996, 0.20002222199999942, 0.20002224999999996, 0.20002224999999996, 0.20002223600000058, 0.20002222199999942, 0.20002244400000002, 0.20002251400000048, 0.20002254200000014, 0.20002247199999967, 0.20002248600000083, 0.2000225139999996, 0.20002248599999994, 0.20002249999999933, 0.20002249999999933, 0.20002251400000048, 0.20002251400000048, 0.20002247200000056, 0.20002248599999994, 0.20002248599999994, 0.20002251400000048, 0.2000225000000011, 0.20002249999999933]</msg>
<status status="PASS" starttime="20201030 10:59:35.485" endtime="20201030 10:59:35.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.480" endtime="20201030 10:59:35.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.843" endtime="20201030 10:59:35.488"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:22.769" endtime="20201030 10:59:35.489" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:35.498" endtime="20201030 10:59:35.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.496" endtime="20201030 10:59:35.518"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.532" endtime="20201030 10:59:35.548"></status>
</kw>
<msg timestamp="20201030 10:59:35.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.530" endtime="20201030 10:59:35.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.551" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.550" endtime="20201030 10:59:35.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.554" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:35.552" endtime="20201030 10:59:35.555"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:35.528" endtime="20201030 10:59:35.555"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:35.524" endtime="20201030 10:59:35.556"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.523" endtime="20201030 10:59:35.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:35.560" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:35.559" endtime="20201030 10:59:35.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.557" endtime="20201030 10:59:35.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.522" endtime="20201030 10:59:35.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.521" endtime="20201030 10:59:35.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.562" endtime="20201030 10:59:35.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.520" endtime="20201030 10:59:35.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.518" endtime="20201030 10:59:35.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.494" endtime="20201030 10:59:35.565"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.574" endtime="20201030 10:59:47.798"></status>
</kw>
<msg timestamp="20201030 10:59:47.799" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.572" endtime="20201030 10:59:47.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.804" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.801" endtime="20201030 10:59:47.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.807" endtime="20201030 10:59:47.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.569" endtime="20201030 10:59:47.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.567" endtime="20201030 10:59:47.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:47.819" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:59:47.815" endtime="20201030 10:59:47.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.828" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:47.826" endtime="20201030 10:59:47.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.832" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:47.830" endtime="20201030 10:59:47.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.820" endtime="20201030 10:59:47.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.839" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:47.838" endtime="20201030 10:59:47.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.841" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:47.840" endtime="20201030 10:59:47.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.835" endtime="20201030 10:59:47.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.846" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:47.845" endtime="20201030 10:59:47.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.849" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 10:59:47.847" endtime="20201030 10:59:47.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.842" endtime="20201030 10:59:47.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.857" endtime="20201030 10:59:48.154"></status>
</kw>
<msg timestamp="20201030 10:59:48.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067068278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.267644819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.855" endtime="20201030 10:59:48.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067068278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.267644819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.158" endtime="20201030 10:59:48.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.166" endtime="20201030 10:59:48.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.852" endtime="20201030 10:59:48.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.851" endtime="20201030 10:59:48.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:48.173" level="INFO">${FILTERED} = [{'diff': 0.200576541}, {'diff': 0.20009002799999998}, {'diff': 0.20009254099999996}, {'diff': 0.199377417}, {'diff': 0.20002247200000012}, {'diff': 0.20002245800000007}, {'diff': 0.20002248599999994}...</msg>
<status status="PASS" starttime="20201030 10:59:48.170" endtime="20201030 10:59:48.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:48.177" level="INFO">${RESULT} = {'diff': [0.200576541, 0.20009002799999998, 0.20009254099999996, 0.199377417, 0.20002247200000012, 0.20002245800000007, 0.20002248599999994, 0.20002247200000012, 0.20002251400000004, 0.200022487000000...</msg>
<status status="PASS" starttime="20201030 10:59:48.174" endtime="20201030 10:59:48.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.181" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:48.180" endtime="20201030 10:59:48.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.185" level="INFO">VALUE: [0.200576541, 0.20009002799999998, 0.20009254099999996, 0.199377417, 0.20002247200000012, 0.20002245800000007, 0.20002248599999994, 0.20002247200000012, 0.20002251400000004, 0.20002248700000003, 0.20002233299999972, 0.20002243100000028, 0.20002237500000009, 0.20002240299999974, 0.20002238900000036, 0.200022347, 0.20002237500000009, 0.20002240300000018, 0.20002237500000009, 0.20002236099999937, 0.20002234700000088, 0.200022347, 0.20002237499999964, 0.20002237500000053, 0.200022347, 0.20002236200000034, 0.200022347, 0.20002237500000053, 0.20002234800000007, 0.20002243099999983, 0.20002236099999937, 0.20002236100000026, 0.2000224029999993, 0.2000224020000001, 0.20002237499999964, 0.20002237499999964, 0.20002237500000053, 0.20002241700000045, 0.20002240300000018, 0.20002237499999964, 0.20002238800000072, 0.20002236100000026, 0.20002238899999902, 0.20002236100000026, 0.20002240300000018, 0.2000223890000008, 0.20002237499999964, 0.2000223890000008, 0.20002238800000072, 0.20002240300000018, 0.20002238899999902]</msg>
<status status="PASS" starttime="20201030 10:59:48.183" endtime="20201030 10:59:48.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.178" endtime="20201030 10:59:48.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.566" endtime="20201030 10:59:48.187"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:35.491" endtime="20201030 10:59:48.187" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:48.195" endtime="20201030 10:59:48.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.193" endtime="20201030 10:59:48.215"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.228" endtime="20201030 10:59:48.245"></status>
</kw>
<msg timestamp="20201030 10:59:48.245" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.227" endtime="20201030 10:59:48.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.248" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.246" endtime="20201030 10:59:48.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.251" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:48.249" endtime="20201030 10:59:48.251"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:48.224" endtime="20201030 10:59:48.252"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:48.221" endtime="20201030 10:59:48.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.220" endtime="20201030 10:59:48.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:48.257" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:48.256" endtime="20201030 10:59:48.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.254" endtime="20201030 10:59:48.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.219" endtime="20201030 10:59:48.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.219" endtime="20201030 10:59:48.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.258" endtime="20201030 10:59:48.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.217" endtime="20201030 10:59:48.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.216" endtime="20201030 10:59:48.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.192" endtime="20201030 10:59:48.261"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.271" endtime="20201030 11:00:00.495"></status>
</kw>
<msg timestamp="20201030 11:00:00.496" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.269" endtime="20201030 11:00:00.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.502" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:00.499" endtime="20201030 11:00:00.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.504" endtime="20201030 11:00:00.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.266" endtime="20201030 11:00:00.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.264" endtime="20201030 11:00:00.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:00.516" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:00.512" endtime="20201030 11:00:00.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.525" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:00.523" endtime="20201030 11:00:00.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.530" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:00.528" endtime="20201030 11:00:00.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.518" endtime="20201030 11:00:00.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.540" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:00.538" endtime="20201030 11:00:00.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.545" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:00.542" endtime="20201030 11:00:00.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.533" endtime="20201030 11:00:00.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.555" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:00.553" endtime="20201030 11:00:00.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.559" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 11:00:00.557" endtime="20201030 11:00:00.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.548" endtime="20201030 11:00:00.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.576" endtime="20201030 11:00:00.880"></status>
</kw>
<msg timestamp="20201030 11:00:00.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067714875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.268543694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:00.572" endtime="20201030 11:00:00.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067714875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.268543694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:00.885" endtime="20201030 11:00:00.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:00.893" endtime="20201030 11:00:00.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.567" endtime="20201030 11:00:00.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.563" endtime="20201030 11:00:00.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:00.900" level="INFO">${FILTERED} = [{'diff': 0.200828819}, {'diff': 0.20010009700000003}, {'diff': 0.20010386100000005}, {'diff': 0.19910704099999998}, {'diff': 0.20002434700000005}, {'diff': 0.200022347}, {'diff': 0.20002237499999986}...</msg>
<status status="PASS" starttime="20201030 11:00:00.896" endtime="20201030 11:00:00.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:00.905" level="INFO">${RESULT} = {'diff': [0.200828819, 0.20010009700000003, 0.20010386100000005, 0.19910704099999998, 0.20002434700000005, 0.200022347, 0.20002237499999986, 0.200022347, 0.20002240300000018, 0.20002237500000009, 0.20...</msg>
<status status="PASS" starttime="20201030 11:00:00.900" endtime="20201030 11:00:00.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.909" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:00.908" endtime="20201030 11:00:00.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:00.911" level="INFO">VALUE: [0.200828819, 0.20010009700000003, 0.20010386100000005, 0.19910704099999998, 0.20002434700000005, 0.200022347, 0.20002237499999986, 0.200022347, 0.20002240300000018, 0.20002237500000009, 0.20002236099999982, 0.20002237499999964, 0.20002237500000009, 0.20002237500000009, 0.20002229199999988, 0.20002220800000003, 0.20002224999999996, 0.20002224999999996, 0.20002222199999986, 0.20002224999999996, 0.2000222359999997, 0.20002224999999996, 0.20002224999999996, 0.20002224999999996, 0.2000222359999997, 0.20002222199999942, 0.20002227699999953, 0.20002224999999996, 0.2000222779999996, 0.20002224999999996, 0.20002222199999942, 0.20002223700000066, 0.2000222780000005, 0.20002230500000007, 0.2000222220000003, 0.2000222780000005, 0.20002226399999934, 0.20002226400000023, 0.20002224999999996, 0.2000222359999997, 0.2000222909999998, 0.20002226399999934, 0.20002227700000041, 0.20002226399999934, 0.20002227700000041, 0.20002226399999934, 0.20002226399999934, 0.20002227799999872, 0.2000222780000005, 0.20002224999999996, 0.2000222780000005]</msg>
<status status="PASS" starttime="20201030 11:00:00.910" endtime="20201030 11:00:00.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:00.906" endtime="20201030 11:00:00.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.262" endtime="20201030 11:00:00.913"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:48.189" endtime="20201030 11:00:00.914" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:58:43.154" endtime="20201030 11:00:00.923"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201030 10:56:34.768" endtime="20201030 11:00:00.957"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
