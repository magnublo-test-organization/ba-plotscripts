<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 10:56:49.722" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.294" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:50.303" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:51.589" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:50.293" endtime="20201030 10:56:51.590"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.592" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:51.591" endtime="20201030 10:56:51.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.291" endtime="20201030 10:56:51.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:51.595" endtime="20201030 10:56:51.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.594" endtime="20201030 10:56:51.781"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.794" endtime="20201030 10:56:51.810"></status>
</kw>
<msg timestamp="20201030 10:56:51.811" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.792" endtime="20201030 10:56:51.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.813" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.812" endtime="20201030 10:56:51.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.817" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:51.815" endtime="20201030 10:56:51.817"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:51.790" endtime="20201030 10:56:51.818"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:51.788" endtime="20201030 10:56:51.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.786" endtime="20201030 10:56:51.819"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:51.825" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:51.822" endtime="20201030 10:56:51.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.820" endtime="20201030 10:56:51.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.786" endtime="20201030 10:56:51.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.785" endtime="20201030 10:56:51.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.827" endtime="20201030 10:56:51.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.783" endtime="20201030 10:56:51.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.829" endtime="20201030 10:56:51.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.782" endtime="20201030 10:56:51.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.289" endtime="20201030 10:56:51.832"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:51.838" endtime="20201030 10:56:51.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.837" endtime="20201030 10:56:51.858"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.873" endtime="20201030 10:56:51.892"></status>
</kw>
<msg timestamp="20201030 10:56:51.893" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.871" endtime="20201030 10:56:51.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.899" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.896" endtime="20201030 10:56:51.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.906" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:51.901" endtime="20201030 10:56:51.906"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:51.868" endtime="20201030 10:56:51.908"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:51.866" endtime="20201030 10:56:51.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.864" endtime="20201030 10:56:51.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:51.918" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:51.917" endtime="20201030 10:56:51.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.912" endtime="20201030 10:56:51.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.863" endtime="20201030 10:56:51.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.862" endtime="20201030 10:56:51.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.922" endtime="20201030 10:56:51.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.861" endtime="20201030 10:56:51.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.859" endtime="20201030 10:56:51.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.836" endtime="20201030 10:56:51.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.946" endtime="20201030 10:56:51.960"></status>
</kw>
<msg timestamp="20201030 10:56:51.961" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.942" endtime="20201030 10:56:51.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.966" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.963" endtime="20201030 10:56:51.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.969" endtime="20201030 10:56:51.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.935" endtime="20201030 10:56:51.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.930" endtime="20201030 10:56:51.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.980" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 10:56:51.979" endtime="20201030 10:56:51.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.982" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 10:56:51.981" endtime="20201030 10:56:51.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.976" endtime="20201030 10:56:51.983"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:51.832" endtime="20201030 10:56:51.984" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:56:49.836" endtime="20201030 10:56:51.987"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.041" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:52.050" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:53.392" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:52.040" endtime="20201030 10:56:53.393"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.395" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:53.394" endtime="20201030 10:56:53.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.038" endtime="20201030 10:56:53.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:53.398" endtime="20201030 10:56:53.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.397" endtime="20201030 10:56:53.685"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.698" endtime="20201030 10:56:53.714"></status>
</kw>
<msg timestamp="20201030 10:56:53.714" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.696" endtime="20201030 10:56:53.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.717" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.715" endtime="20201030 10:56:53.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.720" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:53.718" endtime="20201030 10:56:53.721"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:53.694" endtime="20201030 10:56:53.721"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:53.691" endtime="20201030 10:56:53.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.690" endtime="20201030 10:56:53.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:53.726" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:53.725" endtime="20201030 10:56:53.726"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.723" endtime="20201030 10:56:53.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.689" endtime="20201030 10:56:53.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.689" endtime="20201030 10:56:53.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.728" endtime="20201030 10:56:53.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.688" endtime="20201030 10:56:53.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.731" endtime="20201030 10:56:53.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.686" endtime="20201030 10:56:53.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.037" endtime="20201030 10:56:53.733"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:53.740" endtime="20201030 10:56:53.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.738" endtime="20201030 10:56:53.760"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.774" endtime="20201030 10:56:53.790"></status>
</kw>
<msg timestamp="20201030 10:56:53.791" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.772" endtime="20201030 10:56:53.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.793" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.792" endtime="20201030 10:56:53.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.797" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:53.795" endtime="20201030 10:56:53.797"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:53.770" endtime="20201030 10:56:53.798"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:53.767" endtime="20201030 10:56:53.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.766" endtime="20201030 10:56:53.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:53.802" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:53.802" endtime="20201030 10:56:53.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.799" endtime="20201030 10:56:53.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.765" endtime="20201030 10:56:53.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.764" endtime="20201030 10:56:53.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.804" endtime="20201030 10:56:53.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.763" endtime="20201030 10:56:53.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.761" endtime="20201030 10:56:53.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.736" endtime="20201030 10:56:53.807"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.817" endtime="20201030 10:56:53.827"></status>
</kw>
<msg timestamp="20201030 10:56:53.827" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.815" endtime="20201030 10:56:53.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.828" endtime="20201030 10:56:53.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.831" endtime="20201030 10:56:53.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.812" endtime="20201030 10:56:53.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.810" endtime="20201030 10:56:53.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.840" endtime="20201030 10:56:54.110"></status>
</kw>
<msg timestamp="20201030 10:56:54.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067396889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067397431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:53.839" endtime="20201030 10:56:54.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067396889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067397431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:54.113" endtime="20201030 10:56:54.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.119" endtime="20201030 10:56:54.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.836" endtime="20201030 10:56:54.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.834" endtime="20201030 10:56:54.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:54.125" level="INFO">${RESULT} = [{'diff': 5.419999999922709e-07}, {'diff': 2.847000000000266e-06}, {'diff': 2.805000000008495e-06}, {'diff': 3.360999999993397e-06}, {'diff': 3.4450000000046943e-06}, {'diff': 3.2089999999901364e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:54.122" endtime="20201030 10:56:54.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:54.129" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999922709e-07, 2.847000000000266e-06, 2.805000000008495e-06, 3.360999999993397e-06, 3.4450000000046943e-06, 3.2089999999901364e-06, 3.1809999999909966e-06, 2.9720000000038604e-06, 3....</msg>
<status status="PASS" starttime="20201030 10:56:54.127" endtime="20201030 10:56:54.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.133" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:54.132" endtime="20201030 10:56:54.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.136" level="INFO">VALUE: [5.419999999922709e-07, 2.847000000000266e-06, 2.805000000008495e-06, 3.360999999993397e-06, 3.4450000000046943e-06, 3.2089999999901364e-06, 3.1809999999909966e-06, 2.9720000000038604e-06, 3.0139999999956313e-06, 3.4440000000052207e-06, 2.987000000009843e-06, 3.361000000007275e-06, 2.9029999999985456e-06, 3.388999999992537e-06, 2.5689999999939372e-06, 3.1939999999980317e-06, 3.3890000000064147e-06, 3.041999999994771e-06, 2.8890000000059146e-06, 3.473000000003834e-06, 3.0410000000091753e-06, 2.750000000009689e-06, 3.4170000000055545e-06, 2.750000000009689e-06, 2.8620000000062484e-06]</msg>
<status status="PASS" starttime="20201030 10:56:54.135" endtime="20201030 10:56:54.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.130" endtime="20201030 10:56:54.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.809" endtime="20201030 10:56:54.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.809" endtime="20201030 10:56:54.137"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.145" endtime="20201030 10:56:54.155"></status>
</kw>
<msg timestamp="20201030 10:56:54.156" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.144" endtime="20201030 10:56:54.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.158" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.157" endtime="20201030 10:56:54.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.159" endtime="20201030 10:56:54.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.141" endtime="20201030 10:56:54.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.139" endtime="20201030 10:56:54.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.170" endtime="20201030 10:56:54.456"></status>
</kw>
<msg timestamp="20201030 10:56:54.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067396889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067397431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:54.168" endtime="20201030 10:56:54.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067396889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067397431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:54.460" endtime="20201030 10:56:54.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.468" endtime="20201030 10:56:54.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.165" endtime="20201030 10:56:54.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.163" endtime="20201030 10:56:54.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:54.475" level="INFO">${RESULT} = [{'diff': 5.419999999922709e-07}, {'diff': 2.847000000000266e-06}, {'diff': 2.805000000008495e-06}, {'diff': 3.360999999993397e-06}, {'diff': 3.4450000000046943e-06}, {'diff': 3.2089999999901364e-06},...</msg>
<status status="PASS" starttime="20201030 10:56:54.472" endtime="20201030 10:56:54.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:54.479" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999922709e-07, 2.847000000000266e-06, 2.805000000008495e-06, 3.360999999993397e-06, 3.4450000000046943e-06, 3.2089999999901364e-06, 3.1809999999909966e-06, 2.9720000000038604e-06, 3....</msg>
<status status="PASS" starttime="20201030 10:56:54.476" endtime="20201030 10:56:54.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.484" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:54.483" endtime="20201030 10:56:54.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.487" level="INFO">VALUE: [5.419999999922709e-07, 2.847000000000266e-06, 2.805000000008495e-06, 3.360999999993397e-06, 3.4450000000046943e-06, 3.2089999999901364e-06, 3.1809999999909966e-06, 2.9720000000038604e-06, 3.0139999999956313e-06, 3.4440000000052207e-06, 2.987000000009843e-06, 3.361000000007275e-06, 2.9029999999985456e-06, 3.388999999992537e-06, 2.5689999999939372e-06, 3.1939999999980317e-06, 3.3890000000064147e-06, 3.041999999994771e-06, 2.8890000000059146e-06, 3.473000000003834e-06, 3.0410000000091753e-06, 2.750000000009689e-06, 3.4170000000055545e-06, 2.750000000009689e-06, 2.8620000000062484e-06, 0.31851898599999995, 3.0279999999605067e-06, 3.055000000029562e-06, 3.4309999999981855e-06, 2.8049999999946174e-06, 2.8609999999651414e-06, 3.097000000007455e-06, 3.2779999999954512e-06, 2.986000000038125e-06, 2.471999999975605e-06, 3.4589999999834475e-06, 3.069999999993911e-06, 2.7080000000179183e-06, 3.083000000014824e-06, 3.15300000003349e-06, 3.291000000016364e-06, 3.098000000034684e-06, 2.9579999999973516e-06, 2.8890000000059146e-06, 3.4170000000055545e-06, 2.6800000000326563e-06, 3.3609999999795193e-06, 3.0829999999593127e-06, 2.9309999999838077e-06, 2.8329999999798794e-06, 3.236000000017558e-06]</msg>
<status status="PASS" starttime="20201030 10:56:54.485" endtime="20201030 10:56:54.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.480" endtime="20201030 10:56:54.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.138" endtime="20201030 10:56:54.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.138" endtime="20201030 10:56:54.488"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.496" endtime="20201030 10:56:54.505"></status>
</kw>
<msg timestamp="20201030 10:56:54.506" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.495" endtime="20201030 10:56:54.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.508" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.507" endtime="20201030 10:56:54.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.509" endtime="20201030 10:56:54.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.492" endtime="20201030 10:56:54.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.490" endtime="20201030 10:56:54.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.518" endtime="20201030 10:56:54.812"></status>
</kw>
<msg timestamp="20201030 10:56:54.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067470556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.067473847, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:54.517" endtime="20201030 10:56:54.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067470556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.067473847, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:54.817" endtime="20201030 10:56:54.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.827" endtime="20201030 10:56:54.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.514" endtime="20201030 10:56:54.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.512" endtime="20201030 10:56:54.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:54.834" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.388999999992537e-06}, {'diff': 2.5689999999939372e-06}, {'diff': 3.1939999999980317e-06}, {'diff': 3.3890000000064147e-06}, {'diff': 3.041999999994771e-06}, {'diff': 2.8890000...</msg>
<status status="PASS" starttime="20201030 10:56:54.831" endtime="20201030 10:56:54.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:54.839" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.388999999992537e-06, 2.5689999999939372e-06, 3.1939999999980317e-06, 3.3890000000064147e-06, 3.041999999994771e-06, 2.8890000000059146e-06, 3.473000000003834e-06, 3.0410000000091753e-06...</msg>
<status status="PASS" starttime="20201030 10:56:54.835" endtime="20201030 10:56:54.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.844" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:54.843" endtime="20201030 10:56:54.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.847" level="INFO">VALUE: [0, 3.388999999992537e-06, 2.5689999999939372e-06, 3.1939999999980317e-06, 3.3890000000064147e-06, 3.041999999994771e-06, 2.8890000000059146e-06, 3.473000000003834e-06, 3.0410000000091753e-06, 2.750000000009689e-06, 3.4170000000055545e-06, 2.750000000009689e-06, 2.8620000000062484e-06, 0.31851898599999995, 3.0279999999605067e-06, 3.055000000029562e-06, 3.4309999999981855e-06, 2.8049999999946174e-06, 2.8609999999651414e-06, 3.097000000007455e-06, 3.2779999999954512e-06, 2.986000000038125e-06, 2.471999999975605e-06, 3.4589999999834475e-06, 3.069999999993911e-06, 2.7080000000179183e-06, 3.083000000014824e-06, 3.15300000003349e-06, 3.291000000016364e-06, 3.098000000034684e-06, 2.9579999999973516e-06, 2.8890000000059146e-06, 3.4170000000055545e-06, 2.6800000000326563e-06, 3.3609999999795193e-06, 3.0829999999593127e-06, 2.9309999999838077e-06, 2.8329999999798794e-06, 3.236000000017558e-06, 5.420000001032932e-07, 3.069000000022193e-06, 2.527000000029922e-06, 3.305000000008995e-06, 2.7910000000019863e-06, 3.041000000036931e-06, 2.7910000000019863e-06, 2.9719999999899827e-06, 3.235999999962047e-06, 3.5000000000451337e-06, 2.5700000000350443e-06, 3.112000000027315e-06, 2.7780000000365845e-06, 2.665999999984514e-06, 2.8749999999577724e-06, 3.111000000055597e-06, 3.250000000010189e-06, 3.4030000000129235e-06, 3.4720000000598716e-06, 2.7499999999403e-06, 2.8610000000206526e-06, 3.138999999929837e-06, 3.3059999999807133e-06, 2.6250000000338503e-06, 2.8469999999725104e-06]</msg>
<status status="PASS" starttime="20201030 10:56:54.845" endtime="20201030 10:56:54.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.840" endtime="20201030 10:56:54.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.489" endtime="20201030 10:56:54.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.489" endtime="20201030 10:56:54.848"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.856" endtime="20201030 10:56:54.865"></status>
</kw>
<msg timestamp="20201030 10:56:54.866" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.854" endtime="20201030 10:56:54.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.868" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.867" endtime="20201030 10:56:54.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.869" endtime="20201030 10:56:54.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.852" endtime="20201030 10:56:54.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.850" endtime="20201030 10:56:54.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.878" endtime="20201030 10:56:55.179"></status>
</kw>
<msg timestamp="20201030 10:56:55.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.38613975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.386142833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:54.876" endtime="20201030 10:56:55.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.38613975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.386142833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:55.184" endtime="20201030 10:56:55.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.194" endtime="20201030 10:56:55.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.874" endtime="20201030 10:56:55.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.872" endtime="20201030 10:56:55.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:55.201" level="INFO">${RESULT} = [{'diff': 3.083000000014824e-06}, {'diff': 3.15300000003349e-06}, {'diff': 3.291000000016364e-06}, {'diff': 3.098000000034684e-06}, {'diff': 2.9579999999973516e-06}, {'diff': 2.8890000000059146e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:56:55.197" endtime="20201030 10:56:55.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:55.205" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.083000000014824e-06, 3.15300000003349e-06, 3.291000000016364e-06, 3.098000000034684e-06, 2.9579999999973516e-06, 2.8890000000059146e-06, 3.4170000000055545e-06, 2.6800000000326563e-06, 3.3...</msg>
<status status="PASS" starttime="20201030 10:56:55.202" endtime="20201030 10:56:55.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.210" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:55.209" endtime="20201030 10:56:55.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.212" level="INFO">VALUE: [3.083000000014824e-06, 3.15300000003349e-06, 3.291000000016364e-06, 3.098000000034684e-06, 2.9579999999973516e-06, 2.8890000000059146e-06, 3.4170000000055545e-06, 2.6800000000326563e-06, 3.3609999999795193e-06, 3.0829999999593127e-06, 2.9309999999838077e-06, 2.8329999999798794e-06, 3.236000000017558e-06, 5.420000001032932e-07, 3.069000000022193e-06, 2.527000000029922e-06, 3.305000000008995e-06, 2.7910000000019863e-06, 3.041000000036931e-06, 2.7910000000019863e-06, 2.9719999999899827e-06, 3.235999999962047e-06, 3.5000000000451337e-06, 2.5700000000350443e-06, 3.112000000027315e-06, 2.7780000000365845e-06, 2.665999999984514e-06, 2.8749999999577724e-06, 3.111000000055597e-06, 3.250000000010189e-06, 3.4030000000129235e-06, 3.4720000000598716e-06, 2.7499999999403e-06, 2.8610000000206526e-06, 3.138999999929837e-06, 3.3059999999807133e-06, 2.6250000000338503e-06, 2.8469999999725104e-06, 0.3476703189999999, 2.889000000116937e-06, 2.87499999984675e-06, 2.945000000087461e-06, 2.945000000087461e-06, 3.3059999999807133e-06, 3.3329999999942572e-06, 3.3470000000423994e-06, 2.7920000000847267e-06, 2.459000000065714e-06, 2.8750000000687947e-06, 3.1250000001037392e-06, 2.7499999999403e-06, 3.194999999900361e-06, 3.2360000001840916e-06, 3.360999999868497e-06, 3.042000000119671e-06, 2.555000000015184e-06, 2.8750000000687947e-06, 3.167000000026121e-06, 2.638999999859948e-06, 2.9169999999911767e-06, 3.2910000000718753e-06, 3.4440000000746096e-06, 2.8469999999725104e-06, 2.8610000000206526e-06]</msg>
<status status="PASS" starttime="20201030 10:56:55.211" endtime="20201030 10:56:55.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.207" endtime="20201030 10:56:55.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.849" endtime="20201030 10:56:55.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.848" endtime="20201030 10:56:55.214"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.222" endtime="20201030 10:56:55.232"></status>
</kw>
<msg timestamp="20201030 10:56:55.233" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.220" endtime="20201030 10:56:55.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.235" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.234" endtime="20201030 10:56:55.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.236" endtime="20201030 10:56:55.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.218" endtime="20201030 10:56:55.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.216" endtime="20201030 10:56:55.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.245" endtime="20201030 10:56:55.548"></status>
</kw>
<msg timestamp="20201030 10:56:55.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.727559292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.727562167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:55.243" endtime="20201030 10:56:55.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.727559292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.727562167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:55.552" endtime="20201030 10:56:55.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.562" endtime="20201030 10:56:55.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.241" endtime="20201030 10:56:55.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.239" endtime="20201030 10:56:55.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:55.569" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.665999999984514e-06}, {'diff': 2.8749999999577724e-06}, {'diff': 3.111000000055597e-06}, {'diff': 3.250000000010189e-06}, {'diff': 3.4030000000129235e-06}, {'diff': 3.47200000...</msg>
<status status="PASS" starttime="20201030 10:56:55.566" endtime="20201030 10:56:55.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:55.574" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.665999999984514e-06, 2.8749999999577724e-06, 3.111000000055597e-06, 3.250000000010189e-06, 3.4030000000129235e-06, 3.4720000000598716e-06, 2.7499999999403e-06, 2.8610000000206526e-06, 3...</msg>
<status status="PASS" starttime="20201030 10:56:55.570" endtime="20201030 10:56:55.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.579" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:55.578" endtime="20201030 10:56:55.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.582" level="INFO">VALUE: [0, 2.665999999984514e-06, 2.8749999999577724e-06, 3.111000000055597e-06, 3.250000000010189e-06, 3.4030000000129235e-06, 3.4720000000598716e-06, 2.7499999999403e-06, 2.8610000000206526e-06, 3.138999999929837e-06, 3.3059999999807133e-06, 2.6250000000338503e-06, 2.8469999999725104e-06, 0.3476703189999999, 2.889000000116937e-06, 2.87499999984675e-06, 2.945000000087461e-06, 2.945000000087461e-06, 3.3059999999807133e-06, 3.3329999999942572e-06, 3.3470000000423994e-06, 2.7920000000847267e-06, 2.459000000065714e-06, 2.8750000000687947e-06, 3.1250000001037392e-06, 2.7499999999403e-06, 3.194999999900361e-06, 3.2360000001840916e-06, 3.360999999868497e-06, 3.042000000119671e-06, 2.555000000015184e-06, 2.8750000000687947e-06, 3.167000000026121e-06, 2.638999999859948e-06, 2.9169999999911767e-06, 3.2910000000718753e-06, 3.4440000000746096e-06, 2.8469999999725104e-06, 2.8610000000206526e-06, 5.419999999922709e-07, 2.9999999999752447e-06, 3.4859999999969915e-06, 2.8889999998948923e-06, 3.041000000036931e-06, 3.208999999948503e-06, 2.7220000000660605e-06, 3.3050000001200175e-06, 3.4859999999969915e-06, 2.5689999998412816e-06, 2.596999999937566e-06, 2.6520000000473942e-06, 3.097000000007455e-06, 2.7499999999403e-06, 2.903000000165079e-06, 3.3329999999942572e-06, 2.7920000000847267e-06, 2.818999999876226e-06, 2.9859999999271025e-06, 2.9859999999271025e-06, 2.693999999969776e-06, 2.9719999998789604e-06, 2.7910000000019863e-06, 2.8050000000501285e-06, 3.4030000000129235e-06]</msg>
<status status="PASS" starttime="20201030 10:56:55.580" endtime="20201030 10:56:55.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.576" endtime="20201030 10:56:55.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.215" endtime="20201030 10:56:55.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.214" endtime="20201030 10:56:55.583"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.591" endtime="20201030 10:56:55.601"></status>
</kw>
<msg timestamp="20201030 10:56:55.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.589" endtime="20201030 10:56:55.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.603" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.602" endtime="20201030 10:56:55.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.605" endtime="20201030 10:56:55.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.587" endtime="20201030 10:56:55.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.585" endtime="20201030 10:56:55.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.613" endtime="20201030 10:56:55.918"></status>
</kw>
<msg timestamp="20201030 10:56:55.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.075373806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.075377097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:55.612" endtime="20201030 10:56:55.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.075373806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.075377097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:55.923" endtime="20201030 10:56:55.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.933" endtime="20201030 10:56:55.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.609" endtime="20201030 10:56:55.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.608" endtime="20201030 10:56:55.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:55.940" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.194999999900361e-06}, {'diff': 3.2360000001840916e-06}, {'diff': 3.360999999868497e-06}, {'diff': 3.042000000119671e-06}, {'diff': 2.555000000015184e-06}, {'diff': 2.875000000...</msg>
<status status="PASS" starttime="20201030 10:56:55.936" endtime="20201030 10:56:55.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:55.946" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.194999999900361e-06, 3.2360000001840916e-06, 3.360999999868497e-06, 3.042000000119671e-06, 2.555000000015184e-06, 2.8750000000687947e-06, 3.167000000026121e-06, 2.638999999859948e-06, 2...</msg>
<status status="PASS" starttime="20201030 10:56:55.941" endtime="20201030 10:56:55.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.951" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:55.950" endtime="20201030 10:56:55.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.954" level="INFO">VALUE: [0, 3.194999999900361e-06, 3.2360000001840916e-06, 3.360999999868497e-06, 3.042000000119671e-06, 2.555000000015184e-06, 2.8750000000687947e-06, 3.167000000026121e-06, 2.638999999859948e-06, 2.9169999999911767e-06, 3.2910000000718753e-06, 3.4440000000746096e-06, 2.8469999999725104e-06, 2.8610000000206526e-06, 5.419999999922709e-07, 2.9999999999752447e-06, 3.4859999999969915e-06, 2.8889999998948923e-06, 3.041000000036931e-06, 3.208999999948503e-06, 2.7220000000660605e-06, 3.3050000001200175e-06, 3.4859999999969915e-06, 2.5689999998412816e-06, 2.596999999937566e-06, 2.6520000000473942e-06, 3.097000000007455e-06, 2.7499999999403e-06, 2.903000000165079e-06, 3.3329999999942572e-06, 2.7920000000847267e-06, 2.818999999876226e-06, 2.9859999999271025e-06, 2.9859999999271025e-06, 2.693999999969776e-06, 2.9719999998789604e-06, 2.7910000000019863e-06, 2.8050000000501285e-06, 3.4030000000129235e-06, 0.35890337500000014, 2.6249999998118057e-06, 3.4730000000315897e-06, 2.9999999999752447e-06, 2.6809999997823297e-06, 3.0139999998013423e-06, 2.9299999999565784e-06, 3.0689999999111706e-06, 3.1250000001037392e-06, 2.666999999956232e-06, 2.9020000000823387e-06, 2.8329999999243682e-06, 2.903000000165079e-06, 3.221999999913905e-06, 3.194000000039665e-06, 3.2229999999966452e-06, 3.5419999999675156e-06, 2.7360000001142026e-06, 3.0829999999593127e-06, 2.9029999999430345e-06, 2.9999999999752447e-06, 2.6810000000043743e-06, 2.9580000000528628e-06, 2.9029999999430345e-06, 3.2080000000878073e-06]</msg>
<status status="PASS" starttime="20201030 10:56:55.952" endtime="20201030 10:56:55.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.948" endtime="20201030 10:56:55.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.584" endtime="20201030 10:56:55.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.583" endtime="20201030 10:56:55.955"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.963" endtime="20201030 10:56:55.971"></status>
</kw>
<msg timestamp="20201030 10:56:55.972" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.961" endtime="20201030 10:56:55.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.974" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.973" endtime="20201030 10:56:55.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.975" endtime="20201030 10:56:55.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.959" endtime="20201030 10:56:55.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.957" endtime="20201030 10:56:55.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.984" endtime="20201030 10:56:56.288"></status>
</kw>
<msg timestamp="20201030 10:56:56.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.430435597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.430438694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:55.983" endtime="20201030 10:56:56.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.430435597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.430438694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:56.293" endtime="20201030 10:56:56.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.303" endtime="20201030 10:56:56.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.980" endtime="20201030 10:56:56.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.979" endtime="20201030 10:56:56.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:56.310" level="INFO">${RESULT} = [{'diff': 3.097000000007455e-06}, {'diff': 2.7499999999403e-06}, {'diff': 2.903000000165079e-06}, {'diff': 3.3329999999942572e-06}, {'diff': 2.7920000000847267e-06}, {'diff': 2.818999999876226e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:56:56.306" endtime="20201030 10:56:56.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:56.315" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.097000000007455e-06, 2.7499999999403e-06, 2.903000000165079e-06, 3.3329999999942572e-06, 2.7920000000847267e-06, 2.818999999876226e-06, 2.9859999999271025e-06, 2.9859999999271025e-06, 2.69...</msg>
<status status="PASS" starttime="20201030 10:56:56.311" endtime="20201030 10:56:56.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.319" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:56.318" endtime="20201030 10:56:56.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.322" level="INFO">VALUE: [3.097000000007455e-06, 2.7499999999403e-06, 2.903000000165079e-06, 3.3329999999942572e-06, 2.7920000000847267e-06, 2.818999999876226e-06, 2.9859999999271025e-06, 2.9859999999271025e-06, 2.693999999969776e-06, 2.9719999998789604e-06, 2.7910000000019863e-06, 2.8050000000501285e-06, 3.4030000000129235e-06, 0.35890337500000014, 2.6249999998118057e-06, 3.4730000000315897e-06, 2.9999999999752447e-06, 2.6809999997823297e-06, 3.0139999998013423e-06, 2.9299999999565784e-06, 3.0689999999111706e-06, 3.1250000001037392e-06, 2.666999999956232e-06, 2.9020000000823387e-06, 2.8329999999243682e-06, 2.903000000165079e-06, 3.221999999913905e-06, 3.194000000039665e-06, 3.2229999999966452e-06, 3.5419999999675156e-06, 2.7360000001142026e-06, 3.0829999999593127e-06, 2.9029999999430345e-06, 2.9999999999752447e-06, 2.6810000000043743e-06, 2.9580000000528628e-06, 2.9029999999430345e-06, 3.2080000000878073e-06, 0.36173662500000003, 2.4170000001433323e-06, 3.1950000001224055e-06, 2.986000000149147e-06, 2.87499999984675e-06, 3.3329999999942572e-06, 2.9030000003871237e-06, 2.7919999996406375e-06, 2.77799999981454e-06, 3.1110000002776417e-06, 3.277999999884429e-06, 3.167000000026121e-06, 2.9580000000528628e-06, 3.0690000003552598e-06, 2.9030000003871237e-06, 2.9440000002267652e-06, 2.6109999997636635e-06, 3.66700000009601e-06, 3.5000000000451337e-06, 2.5830000001114684e-06, 3.138999999929837e-06, 2.9029999999430345e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, 2.889000000116937e-06, 2.846999999750466e-06]</msg>
<status status="PASS" starttime="20201030 10:56:56.320" endtime="20201030 10:56:56.322"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.316" endtime="20201030 10:56:56.322"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.956" endtime="20201030 10:56:56.323"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.955" endtime="20201030 10:56:56.323"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.332" endtime="20201030 10:56:56.341"></status>
</kw>
<msg timestamp="20201030 10:56:56.342" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.330" endtime="20201030 10:56:56.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.343" endtime="20201030 10:56:56.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.345" endtime="20201030 10:56:56.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.327" endtime="20201030 10:56:56.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.325" endtime="20201030 10:56:56.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.354" endtime="20201030 10:56:56.659"></status>
</kw>
<msg timestamp="20201030 10:56:56.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.789488847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.78949175, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201030 10:56:56.353" endtime="20201030 10:56:56.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.789488847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.78949175, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201030 10:56:56.664" endtime="20201030 10:56:56.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.674" endtime="20201030 10:56:56.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.350" endtime="20201030 10:56:56.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.348" endtime="20201030 10:56:56.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:56.681" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.221999999913905e-06}, {'diff': 3.194000000039665e-06}, {'diff': 3.2229999999966452e-06}, {'diff': 3.5419999999675156e-06}, {'diff': 2.7360000001142026e-06}, {'diff': 3.0829999...</msg>
<status status="PASS" starttime="20201030 10:56:56.677" endtime="20201030 10:56:56.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:56.687" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.221999999913905e-06, 3.194000000039665e-06, 3.2229999999966452e-06, 3.5419999999675156e-06, 2.7360000001142026e-06, 3.0829999999593127e-06, 2.9029999999430345e-06, 2.9999999999752447e-0...</msg>
<status status="PASS" starttime="20201030 10:56:56.682" endtime="20201030 10:56:56.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.691" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:56.690" endtime="20201030 10:56:56.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.693" level="INFO">VALUE: [0, 3.221999999913905e-06, 3.194000000039665e-06, 3.2229999999966452e-06, 3.5419999999675156e-06, 2.7360000001142026e-06, 3.0829999999593127e-06, 2.9029999999430345e-06, 2.9999999999752447e-06, 2.6810000000043743e-06, 2.9580000000528628e-06, 2.9029999999430345e-06, 3.2080000000878073e-06, 0.36173662500000003, 2.4170000001433323e-06, 3.1950000001224055e-06, 2.986000000149147e-06, 2.87499999984675e-06, 3.3329999999942572e-06, 2.9030000003871237e-06, 2.7919999996406375e-06, 2.77799999981454e-06, 3.1110000002776417e-06, 3.277999999884429e-06, 3.167000000026121e-06, 2.9580000000528628e-06, 3.0690000003552598e-06, 2.9030000003871237e-06, 2.9440000002267652e-06, 2.6109999997636635e-06, 3.66700000009601e-06, 3.5000000000451337e-06, 2.5830000001114684e-06, 3.138999999929837e-06, 2.9029999999430345e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, 2.889000000116937e-06, 2.846999999750466e-06, 5.409999999095305e-07, 2.7079999997958737e-06, 3.3059999999807133e-06, 3.1110000002776417e-06, 2.9999999999752447e-06, 3.319999999806811e-06, 3.055000000085073e-06, 2.555000000015184e-06, 3.3480000003471844e-06, 2.6380000002212967e-06, 3.2370000000447874e-06, 2.6950000000525165e-06, 2.7499999997182556e-06, 2.778000000258629e-06, 3.097000000007455e-06, 3.181000000296308e-06, 2.846999999750466e-06, 2.763000000349791e-06, 2.8610000000206526e-06, 3.6250000001736282e-06, 2.8610000000206526e-06, 2.9720000003230496e-06, 3.0830000001813573e-06, 2.916999999769132e-06, 3.3469999998203548e-06]</msg>
<status status="PASS" starttime="20201030 10:56:56.692" endtime="20201030 10:56:56.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.687" endtime="20201030 10:56:56.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.324" endtime="20201030 10:56:56.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.323" endtime="20201030 10:56:56.695"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.702" endtime="20201030 10:56:56.712"></status>
</kw>
<msg timestamp="20201030 10:56:56.712" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.701" endtime="20201030 10:56:56.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.715" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.713" endtime="20201030 10:56:56.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.716" endtime="20201030 10:56:56.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.698" endtime="20201030 10:56:56.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.697" endtime="20201030 10:56:56.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.725" endtime="20201030 10:56:57.031"></status>
</kw>
<msg timestamp="20201030 10:56:57.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.151373889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.151376958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:56.723" endtime="20201030 10:56:57.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.151373889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.151376958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.036" endtime="20201030 10:56:57.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.046" endtime="20201030 10:56:57.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.721" endtime="20201030 10:56:57.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.719" endtime="20201030 10:56:57.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:57.053" level="INFO">${RESULT} = [{'diff': 3.0690000003552598e-06}, {'diff': 2.9030000003871237e-06}, {'diff': 2.9440000002267652e-06}, {'diff': 2.6109999997636635e-06}, {'diff': 3.66700000009601e-06}, {'diff': 3.5000000000451337e-06...</msg>
<status status="PASS" starttime="20201030 10:56:57.050" endtime="20201030 10:56:57.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:57.059" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.0690000003552598e-06, 2.9030000003871237e-06, 2.9440000002267652e-06, 2.6109999997636635e-06, 3.66700000009601e-06, 3.5000000000451337e-06, 2.5830000001114684e-06, 3.138999999929837e-06, 2...</msg>
<status status="PASS" starttime="20201030 10:56:57.054" endtime="20201030 10:56:57.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.063" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:57.062" endtime="20201030 10:56:57.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.066" level="INFO">VALUE: [3.0690000003552598e-06, 2.9030000003871237e-06, 2.9440000002267652e-06, 2.6109999997636635e-06, 3.66700000009601e-06, 3.5000000000451337e-06, 2.5830000001114684e-06, 3.138999999929837e-06, 2.9029999999430345e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, 2.889000000116937e-06, 2.846999999750466e-06, 5.409999999095305e-07, 2.7079999997958737e-06, 3.3059999999807133e-06, 3.1110000002776417e-06, 2.9999999999752447e-06, 3.319999999806811e-06, 3.055000000085073e-06, 2.555000000015184e-06, 3.3480000003471844e-06, 2.6380000002212967e-06, 3.2370000000447874e-06, 2.6950000000525165e-06, 2.7499999997182556e-06, 2.778000000258629e-06, 3.097000000007455e-06, 3.181000000296308e-06, 2.846999999750466e-06, 2.763000000349791e-06, 2.8610000000206526e-06, 3.6250000001736282e-06, 2.8610000000206526e-06, 2.9720000003230496e-06, 3.0830000001813573e-06, 2.916999999769132e-06, 3.3469999998203548e-06, 0.36047852800000024, 2.8610000000206526e-06, 2.985999999705058e-06, 2.7220000000660605e-06, 2.901999999860294e-06, 3.2499999997881446e-06, 2.9999999999752447e-06, 2.596999999937566e-06, 3.0409999998148862e-06, 2.6250000000338503e-06, 3.167000000026121e-06, 2.9300000004006677e-06, 2.693999999969776e-06, 2.778000000258629e-06, 3.167000000026121e-06, 2.7920000000847267e-06, 2.8610000000206526e-06, 2.804999999828084e-06, 3.2910000000718753e-06, 2.87499999984675e-06, 3.0560000001678134e-06, 3.1379999998470964e-06, 2.750000000162345e-06, 2.5839999997501195e-06, 3.1950000001224055e-06, 3.02799999962744e-06]</msg>
<status status="PASS" starttime="20201030 10:56:57.064" endtime="20201030 10:56:57.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.060" endtime="20201030 10:56:57.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.695" endtime="20201030 10:56:57.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.695" endtime="20201030 10:56:57.067"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.075" endtime="20201030 10:56:57.084"></status>
</kw>
<msg timestamp="20201030 10:56:57.085" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.073" endtime="20201030 10:56:57.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.086" endtime="20201030 10:56:57.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.088" endtime="20201030 10:56:57.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.071" endtime="20201030 10:56:57.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.069" endtime="20201030 10:56:57.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.098" endtime="20201030 10:56:57.406"></status>
</kw>
<msg timestamp="20201030 10:56:57.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.509609167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.509612528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:57.096" endtime="20201030 10:56:57.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.509609167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.509612528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:57.411" endtime="20201030 10:56:57.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.421" endtime="20201030 10:56:57.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.093" endtime="20201030 10:56:57.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.091" endtime="20201030 10:56:57.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:57.428" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.778000000258629e-06}, {'diff': 3.097000000007455e-06}, {'diff': 3.181000000296308e-06}, {'diff': 2.846999999750466e-06}, {'diff': 2.763000000349791e-06}, {'diff': 2.8610000000...</msg>
<status status="PASS" starttime="20201030 10:56:57.424" endtime="20201030 10:56:57.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:57.433" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.778000000258629e-06, 3.097000000007455e-06, 3.181000000296308e-06, 2.846999999750466e-06, 2.763000000349791e-06, 2.8610000000206526e-06, 3.6250000001736282e-06, 2.8610000000206526e-06, ...</msg>
<status status="PASS" starttime="20201030 10:56:57.429" endtime="20201030 10:56:57.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.437" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:57.436" endtime="20201030 10:56:57.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.440" level="INFO">VALUE: [0, 2.778000000258629e-06, 3.097000000007455e-06, 3.181000000296308e-06, 2.846999999750466e-06, 2.763000000349791e-06, 2.8610000000206526e-06, 3.6250000001736282e-06, 2.8610000000206526e-06, 2.9720000003230496e-06, 3.0830000001813573e-06, 2.916999999769132e-06, 3.3469999998203548e-06, 0.36047852800000024, 2.8610000000206526e-06, 2.985999999705058e-06, 2.7220000000660605e-06, 2.901999999860294e-06, 3.2499999997881446e-06, 2.9999999999752447e-06, 2.596999999937566e-06, 3.0409999998148862e-06, 2.6250000000338503e-06, 3.167000000026121e-06, 2.9300000004006677e-06, 2.693999999969776e-06, 2.778000000258629e-06, 3.167000000026121e-06, 2.7920000000847267e-06, 2.8610000000206526e-06, 2.804999999828084e-06, 3.2910000000718753e-06, 2.87499999984675e-06, 3.0560000001678134e-06, 3.1379999998470964e-06, 2.750000000162345e-06, 2.5839999997501195e-06, 3.1950000001224055e-06, 3.02799999962744e-06, 5.409999999095305e-07, 3.3340000000769976e-06, 2.9029999999430345e-06, 2.8059999999108243e-06, 2.87499999984675e-06, 3.6250000001736282e-06, 2.9449999998654164e-06, 3.389000000186826e-06, 3.0139999998013423e-06, 2.7639999999884424e-06, 3.152000000117283e-06, 2.7370000004189876e-06, 3.1950000001224055e-06, 3.319999999806811e-06, 3.1109999998335525e-06, 2.555000000015184e-06, 3.1250000001037392e-06, 2.6800000001436786e-06, 3.0139999998013423e-06, 2.986000000149147e-06, 2.943999999782676e-06, 2.8610000000206526e-06, 2.8329999999243682e-06, 3.0140000002454315e-06, 2.931000000039319e-06]</msg>
<status status="PASS" starttime="20201030 10:56:57.438" endtime="20201030 10:56:57.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.434" endtime="20201030 10:56:57.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.068" endtime="20201030 10:56:57.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.068" endtime="20201030 10:56:57.442"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.450" endtime="20201030 10:56:57.459"></status>
</kw>
<msg timestamp="20201030 10:56:57.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.448" endtime="20201030 10:56:57.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.462" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.460" endtime="20201030 10:56:57.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.463" endtime="20201030 10:56:57.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.445" endtime="20201030 10:56:57.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.444" endtime="20201030 10:56:57.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.472" endtime="20201030 10:56:57.781"></status>
</kw>
<msg timestamp="20201030 10:56:57.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.870236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.870238778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:56:57.470" endtime="20201030 10:56:57.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.870236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.870238778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:56:57.786" endtime="20201030 10:56:57.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.796" endtime="20201030 10:56:57.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.468" endtime="20201030 10:56:57.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.466" endtime="20201030 10:56:57.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:57.803" level="INFO">${RESULT} = [{'diff': 2.778000000258629e-06}, {'diff': 3.167000000026121e-06}, {'diff': 2.7920000000847267e-06}, {'diff': 2.8610000000206526e-06}, {'diff': 2.804999999828084e-06}, {'diff': 3.2910000000718753e-06}...</msg>
<status status="PASS" starttime="20201030 10:56:57.799" endtime="20201030 10:56:57.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:57.809" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.778000000258629e-06, 3.167000000026121e-06, 2.7920000000847267e-06, 2.8610000000206526e-06, 2.804999999828084e-06, 3.2910000000718753e-06, 2.87499999984675e-06, 3.0560000001678134e-06, 3.1...</msg>
<status status="PASS" starttime="20201030 10:56:57.804" endtime="20201030 10:56:57.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.813" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:57.812" endtime="20201030 10:56:57.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.815" level="INFO">VALUE: [2.778000000258629e-06, 3.167000000026121e-06, 2.7920000000847267e-06, 2.8610000000206526e-06, 2.804999999828084e-06, 3.2910000000718753e-06, 2.87499999984675e-06, 3.0560000001678134e-06, 3.1379999998470964e-06, 2.750000000162345e-06, 2.5839999997501195e-06, 3.1950000001224055e-06, 3.02799999962744e-06, 5.409999999095305e-07, 3.3340000000769976e-06, 2.9029999999430345e-06, 2.8059999999108243e-06, 2.87499999984675e-06, 3.6250000001736282e-06, 2.9449999998654164e-06, 3.389000000186826e-06, 3.0139999998013423e-06, 2.7639999999884424e-06, 3.152000000117283e-06, 2.7370000004189876e-06, 3.1950000001224055e-06, 3.319999999806811e-06, 3.1109999998335525e-06, 2.555000000015184e-06, 3.1250000001037392e-06, 2.6800000001436786e-06, 3.0139999998013423e-06, 2.986000000149147e-06, 2.943999999782676e-06, 2.8610000000206526e-06, 2.8329999999243682e-06, 3.0140000002454315e-06, 2.931000000039319e-06, 0.3641099999999997, 2.1670000003304324e-06, 2.7769999997317996e-06, 3.2919999997105265e-06, 2.7499999997182556e-06, 2.8750000002908394e-06, 3.028000000071529e-06, 2.9999999999752447e-06, 3.1809999998522187e-06, 2.9020000003043833e-06, 3.0560000001678134e-06, 3.486000000219036e-06, 3.347000000264444e-06, 2.9719999998789604e-06, 2.862000000103393e-06, 2.87499999984675e-06, 3.055999999723724e-06, 3.2220000001359494e-06, 3.055000000085073e-06, 3.0410000002589754e-06, 2.6530000001301346e-06, 2.8190000000982707e-06, 3.0689999999111706e-06, 2.889000000116937e-06, 2.9999999999752447e-06, 2.8750000002908394e-06]</msg>
<status status="PASS" starttime="20201030 10:56:57.814" endtime="20201030 10:56:57.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.809" endtime="20201030 10:56:57.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.443" endtime="20201030 10:56:57.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.442" endtime="20201030 10:56:57.817"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.825" endtime="20201030 10:56:57.834"></status>
</kw>
<msg timestamp="20201030 10:56:57.835" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.823" endtime="20201030 10:56:57.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.837" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.836" endtime="20201030 10:56:57.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.838" endtime="20201030 10:56:57.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.820" endtime="20201030 10:56:57.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.819" endtime="20201030 10:56:57.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.847" endtime="20201030 10:56:58.154"></status>
</kw>
<msg timestamp="20201030 10:56:58.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.233127403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.233130597, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:57.845" endtime="20201030 10:56:58.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.233127403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.233130597, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:58.160" endtime="20201030 10:56:58.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.170" endtime="20201030 10:56:58.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.843" endtime="20201030 10:56:58.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.841" endtime="20201030 10:56:58.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:58.177" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.319999999806811e-06}, {'diff': 3.1109999998335525e-06}, {'diff': 2.555000000015184e-06}, {'diff': 3.1250000001037392e-06}, {'diff': 2.6800000001436786e-06}, {'diff': 3.0139999...</msg>
<status status="PASS" starttime="20201030 10:56:58.173" endtime="20201030 10:56:58.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:58.182" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.319999999806811e-06, 3.1109999998335525e-06, 2.555000000015184e-06, 3.1250000001037392e-06, 2.6800000001436786e-06, 3.0139999998013423e-06, 2.986000000149147e-06, 2.943999999782676e-06,...</msg>
<status status="PASS" starttime="20201030 10:56:58.178" endtime="20201030 10:56:58.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.186" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:58.185" endtime="20201030 10:56:58.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.189" level="INFO">VALUE: [0, 3.319999999806811e-06, 3.1109999998335525e-06, 2.555000000015184e-06, 3.1250000001037392e-06, 2.6800000001436786e-06, 3.0139999998013423e-06, 2.986000000149147e-06, 2.943999999782676e-06, 2.8610000000206526e-06, 2.8329999999243682e-06, 3.0140000002454315e-06, 2.931000000039319e-06, 0.3641099999999997, 2.1670000003304324e-06, 2.7769999997317996e-06, 3.2919999997105265e-06, 2.7499999997182556e-06, 2.8750000002908394e-06, 3.028000000071529e-06, 2.9999999999752447e-06, 3.1809999998522187e-06, 2.9020000003043833e-06, 3.0560000001678134e-06, 3.486000000219036e-06, 3.347000000264444e-06, 2.9719999998789604e-06, 2.862000000103393e-06, 2.87499999984675e-06, 3.055999999723724e-06, 3.2220000001359494e-06, 3.055000000085073e-06, 3.0410000002589754e-06, 2.6530000001301346e-06, 2.8190000000982707e-06, 3.0689999999111706e-06, 2.889000000116937e-06, 2.9999999999752447e-06, 2.8750000002908394e-06, 5.410000003536197e-07, 2.708000000239963e-06, 3.3609999996464524e-06, 2.7220000000660605e-06, 2.986000000149147e-06, 2.6950000000525165e-06, 3.0419999998976266e-06, 2.9580000000528628e-06, 3.1250000001037392e-06, 2.847999999833206e-06, 3.2920000001546157e-06, 3.1809999998522187e-06, 2.9580000000528628e-06, 2.4440000001568762e-06, 2.8889999996728477e-06, 3.3329999999942572e-06, 3.0409999998148862e-06, 3.1250000001037392e-06, 3.3750000003607283e-06, 3.0830000001813573e-06, 2.7920000000847267e-06, 3.194000000039665e-06, 2.986000000149147e-06, 3.3340000000769976e-06, 2.9580000000528628e-06]</msg>
<status status="PASS" starttime="20201030 10:56:58.187" endtime="20201030 10:56:58.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.183" endtime="20201030 10:56:58.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.818" endtime="20201030 10:56:58.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.817" endtime="20201030 10:56:58.190"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.199" endtime="20201030 10:56:58.208"></status>
</kw>
<msg timestamp="20201030 10:56:58.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.197" endtime="20201030 10:56:58.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.211" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.210" endtime="20201030 10:56:58.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.212" endtime="20201030 10:56:58.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.194" endtime="20201030 10:56:58.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.192" endtime="20201030 10:56:58.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.221" endtime="20201030 10:56:58.530"></status>
</kw>
<msg timestamp="20201030 10:56:58.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.597384403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.597387375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.220" endtime="20201030 10:56:58.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.597384403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.597387375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.535" endtime="20201030 10:56:58.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.545" endtime="20201030 10:56:58.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.217" endtime="20201030 10:56:58.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.216" endtime="20201030 10:56:58.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:58.552" level="INFO">${RESULT} = [{'diff': 2.9719999998789604e-06}, {'diff': 2.862000000103393e-06}, {'diff': 2.87499999984675e-06}, {'diff': 3.055999999723724e-06}, {'diff': 3.2220000001359494e-06}, {'diff': 3.055000000085073e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:56:58.549" endtime="20201030 10:56:58.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:58.557" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.9719999998789604e-06, 2.862000000103393e-06, 2.87499999984675e-06, 3.055999999723724e-06, 3.2220000001359494e-06, 3.055000000085073e-06, 3.0410000002589754e-06, 2.6530000001301346e-06, 2.8...</msg>
<status status="PASS" starttime="20201030 10:56:58.553" endtime="20201030 10:56:58.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.562" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:58.561" endtime="20201030 10:56:58.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.564" level="INFO">VALUE: [2.9719999998789604e-06, 2.862000000103393e-06, 2.87499999984675e-06, 3.055999999723724e-06, 3.2220000001359494e-06, 3.055000000085073e-06, 3.0410000002589754e-06, 2.6530000001301346e-06, 2.8190000000982707e-06, 3.0689999999111706e-06, 2.889000000116937e-06, 2.9999999999752447e-06, 2.8750000002908394e-06, 5.410000003536197e-07, 2.708000000239963e-06, 3.3609999996464524e-06, 2.7220000000660605e-06, 2.986000000149147e-06, 2.6950000000525165e-06, 3.0419999998976266e-06, 2.9580000000528628e-06, 3.1250000001037392e-06, 2.847999999833206e-06, 3.2920000001546157e-06, 3.1809999998522187e-06, 2.9580000000528628e-06, 2.4440000001568762e-06, 2.8889999996728477e-06, 3.3329999999942572e-06, 3.0409999998148862e-06, 3.1250000001037392e-06, 3.3750000003607283e-06, 3.0830000001813573e-06, 2.7920000000847267e-06, 3.194000000039665e-06, 2.986000000149147e-06, 3.3340000000769976e-06, 2.9580000000528628e-06, 0.3647348890000002, 2.8480000002772954e-06, 3.1940000004837543e-06, 3.3190000001681597e-06, 2.750000000162345e-06, 2.8469999993063766e-06, 3.097000000451544e-06, 3.235999999517958e-06, 3.3610000000905416e-06, 3.3610000000905416e-06, 2.931000000039319e-06, 2.6799999996995894e-06, 2.9579999996087736e-06, 2.7640000004325316e-06, 2.847000000194555e-06, 3.3189999992799812e-06, 3.3469999998203548e-06, 2.8060000003549135e-06, 3.513999999427142e-06, 3.1250000001037392e-06, 3.0560000006119026e-06, 3.2919999997105265e-06, 2.9579999996087736e-06, 3.2360000004061362e-06, 2.7640000004325316e-06, 2.6950000000525165e-06]</msg>
<status status="PASS" starttime="20201030 10:56:58.563" endtime="20201030 10:56:58.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.558" endtime="20201030 10:56:58.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.191" endtime="20201030 10:56:58.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.191" endtime="20201030 10:56:58.566"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.573" endtime="20201030 10:56:58.583"></status>
</kw>
<msg timestamp="20201030 10:56:58.583" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.572" endtime="20201030 10:56:58.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.586" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.584" endtime="20201030 10:56:58.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.587" endtime="20201030 10:56:58.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.569" endtime="20201030 10:56:58.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.568" endtime="20201030 10:56:58.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.596" endtime="20201030 10:56:58.907"></status>
</kw>
<msg timestamp="20201030 10:56:58.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.961738611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.961741653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:58.594" endtime="20201030 10:56:58.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.961738611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.961741653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:58.912" endtime="20201030 10:56:58.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.922" endtime="20201030 10:56:58.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.591" endtime="20201030 10:56:58.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.590" endtime="20201030 10:56:58.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:58.929" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.4440000001568762e-06}, {'diff': 2.8889999996728477e-06}, {'diff': 3.3329999999942572e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 3.1250000001037392e-06}, {'diff': 3.37500...</msg>
<status status="PASS" starttime="20201030 10:56:58.925" endtime="20201030 10:56:58.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:58.935" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.4440000001568762e-06, 2.8889999996728477e-06, 3.3329999999942572e-06, 3.0409999998148862e-06, 3.1250000001037392e-06, 3.3750000003607283e-06, 3.0830000001813573e-06, 2.7920000000847267e...</msg>
<status status="PASS" starttime="20201030 10:56:58.930" endtime="20201030 10:56:58.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.939" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:58.938" endtime="20201030 10:56:58.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.941" level="INFO">VALUE: [0, 2.4440000001568762e-06, 2.8889999996728477e-06, 3.3329999999942572e-06, 3.0409999998148862e-06, 3.1250000001037392e-06, 3.3750000003607283e-06, 3.0830000001813573e-06, 2.7920000000847267e-06, 3.194000000039665e-06, 2.986000000149147e-06, 3.3340000000769976e-06, 2.9580000000528628e-06, 0.3647348890000002, 2.8480000002772954e-06, 3.1940000004837543e-06, 3.3190000001681597e-06, 2.750000000162345e-06, 2.8469999993063766e-06, 3.097000000451544e-06, 3.235999999517958e-06, 3.3610000000905416e-06, 3.3610000000905416e-06, 2.931000000039319e-06, 2.6799999996995894e-06, 2.9579999996087736e-06, 2.7640000004325316e-06, 2.847000000194555e-06, 3.3189999992799812e-06, 3.3469999998203548e-06, 2.8060000003549135e-06, 3.513999999427142e-06, 3.1250000001037392e-06, 3.0560000006119026e-06, 3.2919999997105265e-06, 2.9579999996087736e-06, 3.2360000004061362e-06, 2.7640000004325316e-06, 2.6950000000525165e-06, 5.419999995481817e-07, 2.8609999995765634e-06, 2.6110000002077527e-06, 3.097000000451544e-06, 3.1940000004837543e-06, 2.5560000000979244e-06, 3.0560000006119026e-06, 3.3889999997427367e-06, 3.2770000002457778e-06, 3.000000000419334e-06, 3.2640000000583314e-06, 2.6799999996995894e-06, 2.9999999995311555e-06, 2.77799999981454e-06, 3.0830000001813573e-06, 2.6809999997823297e-06, 2.931000000039319e-06, 3.0560000006119026e-06, 3.0689999999111706e-06, 3.0419999994535374e-06, 3.3200000002509e-06, 3.2919999997105265e-06, 3.042000000341716e-06, 3.1529999997559344e-06, 3.3199999993627216e-06]</msg>
<status status="PASS" starttime="20201030 10:56:58.940" endtime="20201030 10:56:58.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.935" endtime="20201030 10:56:58.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.566" endtime="20201030 10:56:58.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.566" endtime="20201030 10:56:58.943"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.950" endtime="20201030 10:56:58.960"></status>
</kw>
<msg timestamp="20201030 10:56:58.960" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.949" endtime="20201030 10:56:58.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.963" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.961" endtime="20201030 10:56:58.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.964" endtime="20201030 10:56:58.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.946" endtime="20201030 10:56:58.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.945" endtime="20201030 10:56:58.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.973" endtime="20201030 10:56:59.289"></status>
</kw>
<msg timestamp="20201030 10:56:59.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.326620361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.326623486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:58.971" endtime="20201030 10:56:59.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.326620361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.326623486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:56:59.294" endtime="20201030 10:56:59.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.305" endtime="20201030 10:56:59.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.969" endtime="20201030 10:56:59.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.967" endtime="20201030 10:56:59.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:59.311" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.7640000004325316e-06}, {'diff': 2.847000000194555e-06}, {'diff': 3.3189999992799812e-06}, {'diff': 3.3469999998203548e-06}, {'diff': 2.8060000003549135e-06}, {'diff': 3.513999...</msg>
<status status="PASS" starttime="20201030 10:56:59.308" endtime="20201030 10:56:59.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:59.316" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.7640000004325316e-06, 2.847000000194555e-06, 3.3189999992799812e-06, 3.3469999998203548e-06, 2.8060000003549135e-06, 3.513999999427142e-06, 3.1250000001037392e-06, 3.0560000006119026e-0...</msg>
<status status="PASS" starttime="20201030 10:56:59.312" endtime="20201030 10:56:59.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.320" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:59.319" endtime="20201030 10:56:59.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.323" level="INFO">VALUE: [0, 2.7640000004325316e-06, 2.847000000194555e-06, 3.3189999992799812e-06, 3.3469999998203548e-06, 2.8060000003549135e-06, 3.513999999427142e-06, 3.1250000001037392e-06, 3.0560000006119026e-06, 3.2919999997105265e-06, 2.9579999996087736e-06, 3.2360000004061362e-06, 2.7640000004325316e-06, 2.6950000000525165e-06, 5.419999995481817e-07, 2.8609999995765634e-06, 2.6110000002077527e-06, 3.097000000451544e-06, 3.1940000004837543e-06, 2.5560000000979244e-06, 3.0560000006119026e-06, 3.3889999997427367e-06, 3.2770000002457778e-06, 3.000000000419334e-06, 3.2640000000583314e-06, 2.6799999996995894e-06, 2.9999999995311555e-06, 2.77799999981454e-06, 3.0830000001813573e-06, 2.6809999997823297e-06, 2.931000000039319e-06, 3.0560000006119026e-06, 3.0689999999111706e-06, 3.0419999994535374e-06, 3.3200000002509e-06, 3.2919999997105265e-06, 3.042000000341716e-06, 3.1529999997559344e-06, 3.3199999993627216e-06, 0.3678967359999996, 2.847000000194555e-06, 3.042000000341716e-06, 2.847000000194555e-06, 3.1389999994857476e-06, 3.2640000000583314e-06, 2.9579999996087736e-06, 2.77799999981454e-06, 3.22300000021869e-06, 3.431000000553297e-06, 2.9870000002318875e-06, 3.097999999646106e-06, 3.2220000001359494e-06, 2.889000000116937e-06, 3.37499999947255e-06, 3.2919999997105265e-06, 3.3610000000905416e-06, 2.6530000001301346e-06, 2.750000000162345e-06, 2.735999999892158e-06, 3.2499999997881446e-06, 3.2770000002457778e-06, 2.7920000000847267e-06, 3.2079999998657627e-06, 2.8609999995765634e-06]</msg>
<status status="PASS" starttime="20201030 10:56:59.322" endtime="20201030 10:56:59.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.317" endtime="20201030 10:56:59.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.943" endtime="20201030 10:56:59.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.943" endtime="20201030 10:56:59.325"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.334" endtime="20201030 10:56:59.345"></status>
</kw>
<msg timestamp="20201030 10:56:59.345" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.333" endtime="20201030 10:56:59.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.347" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.346" endtime="20201030 10:56:59.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.348" endtime="20201030 10:56:59.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.329" endtime="20201030 10:56:59.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.327" endtime="20201030 10:56:59.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.357" endtime="20201030 10:56:59.669"></status>
</kw>
<msg timestamp="20201030 10:56:59.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.691162069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.69116475, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201030 10:56:59.356" endtime="20201030 10:56:59.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.691162069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.69116475, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201030 10:56:59.674" endtime="20201030 10:56:59.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.684" endtime="20201030 10:56:59.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.353" endtime="20201030 10:56:59.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.352" endtime="20201030 10:56:59.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:59.691" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9999999995311555e-06}, {'diff': 2.77799999981454e-06}, {'diff': 3.0830000001813573e-06}, {'diff': 2.6809999997823297e-06}, {'diff': 2.931000000039319e-06}, {'diff': 3.05600000...</msg>
<status status="PASS" starttime="20201030 10:56:59.687" endtime="20201030 10:56:59.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:59.696" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.9999999995311555e-06, 2.77799999981454e-06, 3.0830000001813573e-06, 2.6809999997823297e-06, 2.931000000039319e-06, 3.0560000006119026e-06, 3.0689999999111706e-06, 3.0419999994535374e-06...</msg>
<status status="PASS" starttime="20201030 10:56:59.692" endtime="20201030 10:56:59.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.700" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:59.699" endtime="20201030 10:56:59.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.703" level="INFO">VALUE: [0, 2.9999999995311555e-06, 2.77799999981454e-06, 3.0830000001813573e-06, 2.6809999997823297e-06, 2.931000000039319e-06, 3.0560000006119026e-06, 3.0689999999111706e-06, 3.0419999994535374e-06, 3.3200000002509e-06, 3.2919999997105265e-06, 3.042000000341716e-06, 3.1529999997559344e-06, 3.3199999993627216e-06, 0.3678967359999996, 2.847000000194555e-06, 3.042000000341716e-06, 2.847000000194555e-06, 3.1389999994857476e-06, 3.2640000000583314e-06, 2.9579999996087736e-06, 2.77799999981454e-06, 3.22300000021869e-06, 3.431000000553297e-06, 2.9870000002318875e-06, 3.097999999646106e-06, 3.2220000001359494e-06, 2.889000000116937e-06, 3.37499999947255e-06, 3.2919999997105265e-06, 3.3610000000905416e-06, 2.6530000001301346e-06, 2.750000000162345e-06, 2.735999999892158e-06, 3.2499999997881446e-06, 3.2770000002457778e-06, 2.7920000000847267e-06, 3.2079999998657627e-06, 2.8609999995765634e-06, 0.3732134450000002, 3.2499999997881446e-06, 3.2499999997881446e-06, 3.2910000005159645e-06, 3.0419999994535374e-06, 2.763999999544353e-06, 2.7640000004325316e-06, 3.1380000002911856e-06, 3.1250000001037392e-06, 3.3190000001681597e-06, 3.3200000002509e-06, 2.7090000003227033e-06, 3.1250000001037392e-06, 3.235999999517958e-06, 2.958000000496952e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.1109999998335525e-06, 2.958000000496952e-06, 2.9450000003095056e-06, 2.87499999984675e-06, 2.819999999736922e-06, 2.8480000002772954e-06, 2.986000000149147e-06, 2.763000000349791e-06]</msg>
<status status="PASS" starttime="20201030 10:56:59.701" endtime="20201030 10:56:59.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.697" endtime="20201030 10:56:59.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.326" endtime="20201030 10:56:59.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.325" endtime="20201030 10:56:59.704"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.712" endtime="20201030 10:56:59.720"></status>
</kw>
<msg timestamp="20201030 10:56:59.721" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.710" endtime="20201030 10:56:59.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.723" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.722" endtime="20201030 10:56:59.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.724" endtime="20201030 10:56:59.726"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.708" endtime="20201030 10:56:59.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.706" endtime="20201030 10:56:59.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.733" endtime="20201030 10:57:00.048"></status>
</kw>
<msg timestamp="20201030 10:57:00.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.059209597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.059212819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.732" endtime="20201030 10:57:00.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.059209597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.059212819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.053" endtime="20201030 10:57:00.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.063" endtime="20201030 10:57:00.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.729" endtime="20201030 10:57:00.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.728" endtime="20201030 10:57:00.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.070" level="INFO">${RESULT} = [{'diff': 3.2220000001359494e-06}, {'diff': 2.889000000116937e-06}, {'diff': 3.37499999947255e-06}, {'diff': 3.2919999997105265e-06}, {'diff': 3.3610000000905416e-06}, {'diff': 2.6530000001301346e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:00.067" endtime="20201030 10:57:00.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:00.076" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.2220000001359494e-06, 2.889000000116937e-06, 3.37499999947255e-06, 3.2919999997105265e-06, 3.3610000000905416e-06, 2.6530000001301346e-06, 2.750000000162345e-06, 2.735999999892158e-06, 3.2...</msg>
<status status="PASS" starttime="20201030 10:57:00.071" endtime="20201030 10:57:00.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.080" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:00.079" endtime="20201030 10:57:00.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.082" level="INFO">VALUE: [3.2220000001359494e-06, 2.889000000116937e-06, 3.37499999947255e-06, 3.2919999997105265e-06, 3.3610000000905416e-06, 2.6530000001301346e-06, 2.750000000162345e-06, 2.735999999892158e-06, 3.2499999997881446e-06, 3.2770000002457778e-06, 2.7920000000847267e-06, 3.2079999998657627e-06, 2.8609999995765634e-06, 0.3732134450000002, 3.2499999997881446e-06, 3.2499999997881446e-06, 3.2910000005159645e-06, 3.0419999994535374e-06, 2.763999999544353e-06, 2.7640000004325316e-06, 3.1380000002911856e-06, 3.1250000001037392e-06, 3.3190000001681597e-06, 3.3200000002509e-06, 2.7090000003227033e-06, 3.1250000001037392e-06, 3.235999999517958e-06, 2.958000000496952e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.1109999998335525e-06, 2.958000000496952e-06, 2.9450000003095056e-06, 2.87499999984675e-06, 2.819999999736922e-06, 2.8480000002772954e-06, 2.986000000149147e-06, 2.763000000349791e-06, 0.3660770829999995, 2.3889999996029587e-06, 2.7910000000019863e-06, 2.847000000194555e-06, 3.2910000005159645e-06, 2.708000000239963e-06, 3.0139999998013423e-06, 3.22300000021869e-06, 3.0419999994535374e-06, 2.931000000039319e-06, 3.1389999994857476e-06, 3.0980000005342845e-06, 3.181000000296308e-06, 3.5560000002377024e-06, 3.4589999993173137e-06, 2.693999999969776e-06, 3.2640000000583314e-06, 3.3610000000905416e-06, 2.9999999995311555e-06, 2.944999999421327e-06, 3.028000000071529e-06, 3.1940000004837543e-06, 2.986000000149147e-06, 3.167000000026121e-06, 2.986000000149147e-06, 3.193999999595576e-06]</msg>
<status status="PASS" starttime="20201030 10:57:00.081" endtime="20201030 10:57:00.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.077" endtime="20201030 10:57:00.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.705" endtime="20201030 10:57:00.084"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.704" endtime="20201030 10:57:00.084"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.092" endtime="20201030 10:57:00.101"></status>
</kw>
<msg timestamp="20201030 10:57:00.102" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.090" endtime="20201030 10:57:00.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.104" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.103" endtime="20201030 10:57:00.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.105" endtime="20201030 10:57:00.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.087" endtime="20201030 10:57:00.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.086" endtime="20201030 10:57:00.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.115" endtime="20201030 10:57:00.433"></status>
</kw>
<msg timestamp="20201030 10:57:00.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.432574056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.432577514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:00.113" endtime="20201030 10:57:00.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.432574056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.432577514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:00.438" endtime="20201030 10:57:00.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.448" endtime="20201030 10:57:00.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.110" endtime="20201030 10:57:00.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.108" endtime="20201030 10:57:00.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.455" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.235999999517958e-06}, {'diff': 2.958000000496952e-06}, {'diff': 3.0549999996409838e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.1109999998335525e-06}, {'diff': 2.95800000...</msg>
<status status="PASS" starttime="20201030 10:57:00.451" endtime="20201030 10:57:00.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:00.459" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.235999999517958e-06, 2.958000000496952e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.1109999998335525e-06, 2.958000000496952e-06, 2.9450000003095056e-06, 2.87499999984675e-06, 2...</msg>
<status status="PASS" starttime="20201030 10:57:00.456" endtime="20201030 10:57:00.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.464" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:00.463" endtime="20201030 10:57:00.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.467" level="INFO">VALUE: [0, 3.235999999517958e-06, 2.958000000496952e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.1109999998335525e-06, 2.958000000496952e-06, 2.9450000003095056e-06, 2.87499999984675e-06, 2.819999999736922e-06, 2.8480000002772954e-06, 2.986000000149147e-06, 2.763000000349791e-06, 0.3660770829999995, 2.3889999996029587e-06, 2.7910000000019863e-06, 2.847000000194555e-06, 3.2910000005159645e-06, 2.708000000239963e-06, 3.0139999998013423e-06, 3.22300000021869e-06, 3.0419999994535374e-06, 2.931000000039319e-06, 3.1389999994857476e-06, 3.0980000005342845e-06, 3.181000000296308e-06, 3.5560000002377024e-06, 3.4589999993173137e-06, 2.693999999969776e-06, 3.2640000000583314e-06, 3.3610000000905416e-06, 2.9999999995311555e-06, 2.944999999421327e-06, 3.028000000071529e-06, 3.1940000004837543e-06, 2.986000000149147e-06, 3.167000000026121e-06, 2.986000000149147e-06, 3.193999999595576e-06, 5.410000003536197e-07, 3.22300000021869e-06, 3.278000000328518e-06, 3.000000000419334e-06, 2.8329999999243682e-06, 2.763999999544353e-06, 3.0419999994535374e-06, 3.193999999595576e-06, 3.555000000154962e-06, 2.5419999998277376e-06, 3.2919999997105265e-06, 2.6799999996995894e-06, 3.4300000004705566e-06, 2.986000000149147e-06, 3.181000000296308e-06, 2.596999999937566e-06, 2.638999999859948e-06, 3.0140000006895207e-06, 3.042000000341716e-06, 3.3469999998203548e-06, 2.735999999892158e-06, 3.0279999991833506e-06, 3.278000000328518e-06, 3.1529999997559344e-06, 3.2220000001359494e-06]</msg>
<status status="PASS" starttime="20201030 10:57:00.465" endtime="20201030 10:57:00.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.460" endtime="20201030 10:57:00.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.085" endtime="20201030 10:57:00.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.084" endtime="20201030 10:57:00.468"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.476" endtime="20201030 10:57:00.486"></status>
</kw>
<msg timestamp="20201030 10:57:00.486" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.475" endtime="20201030 10:57:00.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.489" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.487" endtime="20201030 10:57:00.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.490" endtime="20201030 10:57:00.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.472" endtime="20201030 10:57:00.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.470" endtime="20201030 10:57:00.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.498" endtime="20201030 10:57:00.814"></status>
</kw>
<msg timestamp="20201030 10:57:00.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.798799944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.7988035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:00.497" endtime="20201030 10:57:00.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.798799944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.7988035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:00.819" endtime="20201030 10:57:00.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.829" endtime="20201030 10:57:00.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.494" endtime="20201030 10:57:00.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.493" endtime="20201030 10:57:00.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.836" level="INFO">${RESULT} = [{'diff': 3.5560000002377024e-06}, {'diff': 3.4589999993173137e-06}, {'diff': 2.693999999969776e-06}, {'diff': 3.2640000000583314e-06}, {'diff': 3.3610000000905416e-06}, {'diff': 2.9999999995311555e-0...</msg>
<status status="PASS" starttime="20201030 10:57:00.833" endtime="20201030 10:57:00.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:00.841" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.5560000002377024e-06, 3.4589999993173137e-06, 2.693999999969776e-06, 3.2640000000583314e-06, 3.3610000000905416e-06, 2.9999999995311555e-06, 2.944999999421327e-06, 3.028000000071529e-06, 3...</msg>
<status status="PASS" starttime="20201030 10:57:00.837" endtime="20201030 10:57:00.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.846" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:00.845" endtime="20201030 10:57:00.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.848" level="INFO">VALUE: [3.5560000002377024e-06, 3.4589999993173137e-06, 2.693999999969776e-06, 3.2640000000583314e-06, 3.3610000000905416e-06, 2.9999999995311555e-06, 2.944999999421327e-06, 3.028000000071529e-06, 3.1940000004837543e-06, 2.986000000149147e-06, 3.167000000026121e-06, 2.986000000149147e-06, 3.193999999595576e-06, 5.410000003536197e-07, 3.22300000021869e-06, 3.278000000328518e-06, 3.000000000419334e-06, 2.8329999999243682e-06, 2.763999999544353e-06, 3.0419999994535374e-06, 3.193999999595576e-06, 3.555000000154962e-06, 2.5419999998277376e-06, 3.2919999997105265e-06, 2.6799999996995894e-06, 3.4300000004705566e-06, 2.986000000149147e-06, 3.181000000296308e-06, 2.596999999937566e-06, 2.638999999859948e-06, 3.0140000006895207e-06, 3.042000000341716e-06, 3.3469999998203548e-06, 2.735999999892158e-06, 3.0279999991833506e-06, 3.278000000328518e-06, 3.1529999997559344e-06, 3.2220000001359494e-06, 0.3744942079999998, 2.2499999996483666e-06, 3.2770000002457778e-06, 3.4300000004705566e-06, 2.9729999999617007e-06, 2.8610000004647418e-06, 3.2919999997105265e-06, 2.582999999667379e-06, 2.8200000006251003e-06, 3.0419999994535374e-06, 2.9579999996087736e-06, 3.111000000721731e-06, 3.332999999550168e-06, 3.2079999998657627e-06, 3.111999999916293e-06, 2.986000000149147e-06, 3.082999999293179e-06, 3.3330000004383464e-06, 2.638999999859948e-06, 3.278000000328518e-06, 3.0140000006895207e-06, 3.193999999595576e-06, 2.916999999769132e-06, 2.7629999994616128e-06, 3.278000000328518e-06, 2.735999999892158e-06]</msg>
<status status="PASS" starttime="20201030 10:57:00.847" endtime="20201030 10:57:00.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.842" endtime="20201030 10:57:00.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.469" endtime="20201030 10:57:00.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.469" endtime="20201030 10:57:00.850"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.858" endtime="20201030 10:57:00.867"></status>
</kw>
<msg timestamp="20201030 10:57:00.867" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.856" endtime="20201030 10:57:00.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.870" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.868" endtime="20201030 10:57:00.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.871" endtime="20201030 10:57:00.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.853" endtime="20201030 10:57:00.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.852" endtime="20201030 10:57:00.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.880" endtime="20201030 10:57:01.196"></status>
</kw>
<msg timestamp="20201030 10:57:01.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.169465111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.169468083, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:00.878" endtime="20201030 10:57:01.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.169465111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.169468083, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 10:57:01.201" endtime="20201030 10:57:01.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.211" endtime="20201030 10:57:01.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.876" endtime="20201030 10:57:01.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.874" endtime="20201030 10:57:01.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:01.218" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.986000000149147e-06}, {'diff': 3.181000000296308e-06}, {'diff': 2.596999999937566e-06}, {'diff': 2.638999999859948e-06}, {'diff': 3.0140000006895207e-06}, {'diff': 3.042000000...</msg>
<status status="PASS" starttime="20201030 10:57:01.214" endtime="20201030 10:57:01.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:01.223" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.986000000149147e-06, 3.181000000296308e-06, 2.596999999937566e-06, 2.638999999859948e-06, 3.0140000006895207e-06, 3.042000000341716e-06, 3.3469999998203548e-06, 2.735999999892158e-06, 3...</msg>
<status status="PASS" starttime="20201030 10:57:01.219" endtime="20201030 10:57:01.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.227" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:01.226" endtime="20201030 10:57:01.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.229" level="INFO">VALUE: [0, 2.986000000149147e-06, 3.181000000296308e-06, 2.596999999937566e-06, 2.638999999859948e-06, 3.0140000006895207e-06, 3.042000000341716e-06, 3.3469999998203548e-06, 2.735999999892158e-06, 3.0279999991833506e-06, 3.278000000328518e-06, 3.1529999997559344e-06, 3.2220000001359494e-06, 0.3744942079999998, 2.2499999996483666e-06, 3.2770000002457778e-06, 3.4300000004705566e-06, 2.9729999999617007e-06, 2.8610000004647418e-06, 3.2919999997105265e-06, 2.582999999667379e-06, 2.8200000006251003e-06, 3.0419999994535374e-06, 2.9579999996087736e-06, 3.111000000721731e-06, 3.332999999550168e-06, 3.2079999998657627e-06, 3.111999999916293e-06, 2.986000000149147e-06, 3.082999999293179e-06, 3.3330000004383464e-06, 2.638999999859948e-06, 3.278000000328518e-06, 3.0140000006895207e-06, 3.193999999595576e-06, 2.916999999769132e-06, 2.7629999994616128e-06, 3.278000000328518e-06, 2.735999999892158e-06, 5.409999994654413e-07, 2.9999999995311555e-06, 3.3190000001681597e-06, 2.9719999998789604e-06, 2.9299999999565784e-06, 3.1659999999433808e-06, 3.3469999998203548e-06, 3.5129999993444017e-06, 2.6670000004003214e-06, 3.042000000341716e-06, 3.6530000002699126e-06, 3.069999999993911e-06, 2.471999999364982e-06, 2.931000000039319e-06, 3.235999999517958e-06, 2.735999999892158e-06, 3.069999999993911e-06, 3.0830000001813573e-06, 3.0969999995633657e-06, 3.097000000451544e-06, 2.6520000000473942e-06, 3.181000000296308e-06, 2.6950000000525165e-06, 2.6530000001301346e-06, 2.9999999995311555e-06]</msg>
<status status="PASS" starttime="20201030 10:57:01.228" endtime="20201030 10:57:01.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.223" endtime="20201030 10:57:01.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.851" endtime="20201030 10:57:01.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.850" endtime="20201030 10:57:01.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.808" endtime="20201030 10:57:01.231"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:53.734" endtime="20201030 10:57:01.232" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:01.240" endtime="20201030 10:57:01.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.239" endtime="20201030 10:57:01.260"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.274" endtime="20201030 10:57:01.290"></status>
</kw>
<msg timestamp="20201030 10:57:01.290" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.272" endtime="20201030 10:57:01.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.293" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.291" endtime="20201030 10:57:01.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.297" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:01.294" endtime="20201030 10:57:01.297"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:01.270" endtime="20201030 10:57:01.298"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:01.268" endtime="20201030 10:57:01.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.266" endtime="20201030 10:57:01.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:01.305" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:01.304" endtime="20201030 10:57:01.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.301" endtime="20201030 10:57:01.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.266" endtime="20201030 10:57:01.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.265" endtime="20201030 10:57:01.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.307" endtime="20201030 10:57:01.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.263" endtime="20201030 10:57:01.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.261" endtime="20201030 10:57:01.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.237" endtime="20201030 10:57:01.311"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.325" endtime="20201030 10:57:01.337"></status>
</kw>
<msg timestamp="20201030 10:57:01.338" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.322" endtime="20201030 10:57:01.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.341" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.339" endtime="20201030 10:57:01.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.343" endtime="20201030 10:57:01.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.319" endtime="20201030 10:57:01.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.315" endtime="20201030 10:57:01.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.358" endtime="20201030 10:57:01.642"></status>
</kw>
<msg timestamp="20201030 10:57:01.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075807764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075809028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.354" endtime="20201030 10:57:01.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075807764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075809028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.646" endtime="20201030 10:57:01.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.655" endtime="20201030 10:57:01.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.351" endtime="20201030 10:57:01.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.348" endtime="20201030 10:57:01.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:01.661" level="INFO">${RESULT} = [{'diff': 1.26400000000082e-06}, {'diff': 1.1120000000114372e-06}, {'diff': 1.096999999991577e-06}, {'diff': 1.0839999999984196e-06}, {'diff': 1.096999999991577e-06}, {'diff': 1.082999999998946e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:01.658" endtime="20201030 10:57:01.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:01.665" level="INFO">${OVERHEAD} = {'diff': [1.26400000000082e-06, 1.1120000000114372e-06, 1.096999999991577e-06, 1.0839999999984196e-06, 1.096999999991577e-06, 1.082999999998946e-06, 1.0970000000054547e-06, 1.096999999991577e-06, 1.04...</msg>
<status status="PASS" starttime="20201030 10:57:01.662" endtime="20201030 10:57:01.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.670" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:01.669" endtime="20201030 10:57:01.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.672" level="INFO">VALUE: [1.26400000000082e-06, 1.1120000000114372e-06, 1.096999999991577e-06, 1.0839999999984196e-06, 1.096999999991577e-06, 1.082999999998946e-06, 1.0970000000054547e-06, 1.096999999991577e-06, 1.0420000000066487e-06, 1.1250000000045945e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.1119999999975594e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0980000000049284e-06, 1.0980000000049284e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1110000000119635e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1110000000119635e-06, 1.0980000000049284e-06, 1.0839999999984196e-06, 1.1119999999975594e-06, 1.0839999999984196e-06, 1.0970000000054547e-06, 1.0839999999984196e-06, 1.0970000000054547e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1530000000037344e-06, 1.1109999999980857e-06, 1.1110000000119635e-06, 1.1250000000045945e-06, 1.096999999991577e-06, 1.1109999999980857e-06, 1.096999999991577e-06, 1.1530000000037344e-06, 1.1119999999975594e-06, 1.0980000000049284e-06, 1.0979999999910506e-06, 1.1119999999975594e-06, 1.0420000000066487e-06, 1.1119999999975594e-06]</msg>
<status status="PASS" starttime="20201030 10:57:01.671" endtime="20201030 10:57:01.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.666" endtime="20201030 10:57:01.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.313" endtime="20201030 10:57:01.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.313" endtime="20201030 10:57:01.674"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.682" endtime="20201030 10:57:01.694"></status>
</kw>
<msg timestamp="20201030 10:57:01.695" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.680" endtime="20201030 10:57:01.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.697" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.696" endtime="20201030 10:57:01.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.698" endtime="20201030 10:57:01.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.677" endtime="20201030 10:57:01.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.676" endtime="20201030 10:57:01.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.707" endtime="20201030 10:57:02.016"></status>
</kw>
<msg timestamp="20201030 10:57:02.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075901764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075902917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.706" endtime="20201030 10:57:02.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075901764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075902917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.021" endtime="20201030 10:57:02.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.031" endtime="20201030 10:57:02.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.703" endtime="20201030 10:57:02.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.701" endtime="20201030 10:57:02.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.038" level="INFO">${RESULT} = [{'diff': 1.1530000000037344e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1110000000119635e-06}, {'diff': 1.1250000000045945e-06}, {'diff': 1.096999999991577e-06}, {'diff': 1.1109999999980857e-0...</msg>
<status status="PASS" starttime="20201030 10:57:02.035" endtime="20201030 10:57:02.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:02.043" level="INFO">${OVERHEAD} = {'diff': [1.1530000000037344e-06, 1.1109999999980857e-06, 1.1110000000119635e-06, 1.1250000000045945e-06, 1.096999999991577e-06, 1.1109999999980857e-06, 1.096999999991577e-06, 1.1530000000037344e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:02.039" endtime="20201030 10:57:02.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.048" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:02.047" endtime="20201030 10:57:02.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.051" level="INFO">VALUE: [1.1530000000037344e-06, 1.1109999999980857e-06, 1.1110000000119635e-06, 1.1250000000045945e-06, 1.096999999991577e-06, 1.1109999999980857e-06, 1.096999999991577e-06, 1.1530000000037344e-06, 1.1119999999975594e-06, 1.0980000000049284e-06, 1.0979999999910506e-06, 1.1119999999975594e-06, 1.0420000000066487e-06, 1.1119999999975594e-06, 1.277999999993451e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.098000000032684e-06, 1.1389999999833478e-06, 1.1249999999907168e-06, 1.0830000000128237e-06, 1.181000000016752e-06, 1.0970000000054547e-06, 1.0970000000054547e-06, 1.1809999999612408e-06, 1.139000000038859e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.0979999999771728e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.070000000047422e-06, 1.0699999999919108e-06, 1.098000000032684e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.112000000025315e-06, 1.0830000000128237e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1110000000535969e-06, 1.098000000032684e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.1389999999833478e-06, 1.0420000000066487e-06, 1.1109999999980857e-06, 1.1529999999759788e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0690000000201927e-06, 1.0969999999499436e-06, 1.0970000000054547e-06, 1.15300000003149e-06, 1.0970000000054547e-06, 1.0830000000128237e-06]</msg>
<status status="PASS" starttime="20201030 10:57:02.049" endtime="20201030 10:57:02.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.045" endtime="20201030 10:57:02.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.674" endtime="20201030 10:57:02.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.674" endtime="20201030 10:57:02.052"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.060" endtime="20201030 10:57:02.071"></status>
</kw>
<msg timestamp="20201030 10:57:02.072" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.058" endtime="20201030 10:57:02.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.074" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.073" endtime="20201030 10:57:02.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.075" endtime="20201030 10:57:02.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.056" endtime="20201030 10:57:02.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.054" endtime="20201030 10:57:02.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.084" endtime="20201030 10:57:02.393"></status>
</kw>
<msg timestamp="20201030 10:57:02.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.423815875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.423816972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.082" endtime="20201030 10:57:02.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.423815875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.423816972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.398" endtime="20201030 10:57:02.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.408" endtime="20201030 10:57:02.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.080" endtime="20201030 10:57:02.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.078" endtime="20201030 10:57:02.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.415" level="INFO">${RESULT} = [{'diff': 1.0970000000054547e-06}, {'diff': 1.1389999999833478e-06}, {'diff': 1.0420000000066487e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1529999999759788e-06}, {'diff': 1.0970000000054547e-...</msg>
<status status="PASS" starttime="20201030 10:57:02.411" endtime="20201030 10:57:02.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:02.422" level="INFO">${OVERHEAD} = {'diff': [1.0970000000054547e-06, 1.1389999999833478e-06, 1.0420000000066487e-06, 1.1109999999980857e-06, 1.1529999999759788e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.1109999999980857e-06...</msg>
<status status="PASS" starttime="20201030 10:57:02.416" endtime="20201030 10:57:02.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.427" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:02.426" endtime="20201030 10:57:02.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.429" level="INFO">VALUE: [1.0970000000054547e-06, 1.1389999999833478e-06, 1.0420000000066487e-06, 1.1109999999980857e-06, 1.1529999999759788e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0690000000201927e-06, 1.0969999999499436e-06, 1.0970000000054547e-06, 1.15300000003149e-06, 1.0970000000054547e-06, 1.0830000000128237e-06, 1.2779999999379399e-06, 1.1119999999698038e-06, 1.0970000000609659e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.0970000000609659e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000000609659e-06, 1.0970000000609659e-06, 1.0269999999312773e-06, 1.1120000000808261e-06, 1.0970000000609659e-06, 1.1109999999980857e-06, 1.0409999999794195e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.0970000000609659e-06, 1.0830000000128237e-06, 1.1109999999980857e-06, 1.0970000000609659e-06, 1.0970000000609659e-06, 1.0690000000757038e-06, 1.0970000000609659e-06, 1.0970000000609659e-06, 1.1109999999980857e-06, 1.0830000000128237e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.0970000000609659e-06, 1.1109999999980857e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0970000000609659e-06, 1.1389999999833478e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1519999999487496e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201030 10:57:02.428" endtime="20201030 10:57:02.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.423" endtime="20201030 10:57:02.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.053" endtime="20201030 10:57:02.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.052" endtime="20201030 10:57:02.431"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.439" endtime="20201030 10:57:02.449"></status>
</kw>
<msg timestamp="20201030 10:57:02.450" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.437" endtime="20201030 10:57:02.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.452" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.451" endtime="20201030 10:57:02.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.453" endtime="20201030 10:57:02.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.435" endtime="20201030 10:57:02.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.433" endtime="20201030 10:57:02.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.462" endtime="20201030 10:57:02.773"></status>
</kw>
<msg timestamp="20201030 10:57:02.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.791079056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.791080153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.461" endtime="20201030 10:57:02.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.791079056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.791080153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.778" endtime="20201030 10:57:02.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.788" endtime="20201030 10:57:02.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.458" endtime="20201030 10:57:02.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.456" endtime="20201030 10:57:02.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.795" level="INFO">${RESULT} = [{'diff': 1.0970000000609659e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1120000000808261e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.1109999999980857e-...</msg>
<status status="PASS" starttime="20201030 10:57:02.791" endtime="20201030 10:57:02.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:02.800" level="INFO">${OVERHEAD} = {'diff': [1.0970000000609659e-06, 1.1109999999980857e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0970000000609659e-06, 1.1389999999833478e-06...</msg>
<status status="PASS" starttime="20201030 10:57:02.796" endtime="20201030 10:57:02.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.804" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:02.803" endtime="20201030 10:57:02.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.807" level="INFO">VALUE: [1.0970000000609659e-06, 1.1109999999980857e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0970000000609659e-06, 1.1389999999833478e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1519999999487496e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.26400000000082e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.181000000016752e-06, 1.125000000046228e-06, 1.1120000000808261e-06, 1.098000000032684e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.1119999998587815e-06, 1.0970000001719882e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.13900000009437e-06, 1.098000000032684e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1529999999204676e-06, 1.125000000046228e-06, 1.0420000000621599e-06, 1.0970000001719882e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0839999999845418e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0829999999018014e-06, 1.1120000000808261e-06, 1.0409999999794195e-06, 1.0969999999499436e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1119999998587815e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.0969999999499436e-06, 1.125000000046228e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201030 10:57:02.805" endtime="20201030 10:57:02.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.801" endtime="20201030 10:57:02.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.432" endtime="20201030 10:57:02.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.431" endtime="20201030 10:57:02.808"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.816" endtime="20201030 10:57:02.828"></status>
</kw>
<msg timestamp="20201030 10:57:02.828" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.815" endtime="20201030 10:57:02.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.831" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.829" endtime="20201030 10:57:02.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.832" endtime="20201030 10:57:02.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.812" endtime="20201030 10:57:02.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.810" endtime="20201030 10:57:02.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.841" endtime="20201030 10:57:03.153"></status>
</kw>
<msg timestamp="20201030 10:57:03.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.160212194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.160213319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.839" endtime="20201030 10:57:03.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.160212194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.160213319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.158" endtime="20201030 10:57:03.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.168" endtime="20201030 10:57:03.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.837" endtime="20201030 10:57:03.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.835" endtime="20201030 10:57:03.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.175" level="INFO">${RESULT} = [{'diff': 1.1249999998241833e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0970000001719882e-...</msg>
<status status="PASS" starttime="20201030 10:57:03.172" endtime="20201030 10:57:03.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:03.221" level="INFO">${OVERHEAD} = {'diff': [1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1119999998587815e-06, 1.1109999999980857e-06...</msg>
<status status="PASS" starttime="20201030 10:57:03.216" endtime="20201030 10:57:03.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.225" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:03.224" endtime="20201030 10:57:03.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.228" level="INFO">VALUE: [1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1119999998587815e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.0969999999499436e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.2779999998269176e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.1119999998587815e-06, 1.0969999999499436e-06, 1.1389999998723255e-06, 1.0839999999845418e-06, 1.0969999999499436e-06, 1.1529999999204676e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.1530000001425122e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1119999998587815e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.0969999999499436e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1530000001425122e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1520000000597719e-06, 1.1109999999980857e-06, 1.1529999999204676e-06]</msg>
<status status="PASS" starttime="20201030 10:57:03.227" endtime="20201030 10:57:03.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.222" endtime="20201030 10:57:03.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.809" endtime="20201030 10:57:03.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.808" endtime="20201030 10:57:03.229"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.237" endtime="20201030 10:57:03.249"></status>
</kw>
<msg timestamp="20201030 10:57:03.250" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.236" endtime="20201030 10:57:03.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.252" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.251" endtime="20201030 10:57:03.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.253" endtime="20201030 10:57:03.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.233" endtime="20201030 10:57:03.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.231" endtime="20201030 10:57:03.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.262" endtime="20201030 10:57:03.557"></status>
</kw>
<msg timestamp="20201030 10:57:03.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.526941514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.526942639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.261" endtime="20201030 10:57:03.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.526941514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.526942639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.562" endtime="20201030 10:57:03.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.571" endtime="20201030 10:57:03.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.258" endtime="20201030 10:57:03.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.256" endtime="20201030 10:57:03.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.579" level="INFO">${RESULT} = [{'diff': 1.125000000046228e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.0839999999845418e-0...</msg>
<status status="PASS" starttime="20201030 10:57:03.575" endtime="20201030 10:57:03.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:03.584" level="INFO">${OVERHEAD} = {'diff': [1.125000000046228e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:57:03.580" endtime="20201030 10:57:03.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.588" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:03.587" endtime="20201030 10:57:03.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.591" level="INFO">VALUE: [1.125000000046228e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1530000001425122e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1520000000597719e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.2919999998750598e-06, 1.0969999999499436e-06, 1.1249999998241833e-06, 1.1529999999204676e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.1110000002201303e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1120000000808261e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1110000002201303e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.0969999999499436e-06, 1.083000000123846e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.083000000123846e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.098000000032684e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.098000000032684e-06]</msg>
<status status="PASS" starttime="20201030 10:57:03.590" endtime="20201030 10:57:03.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.585" endtime="20201030 10:57:03.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.230" endtime="20201030 10:57:03.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.230" endtime="20201030 10:57:03.592"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.600" endtime="20201030 10:57:03.610"></status>
</kw>
<msg timestamp="20201030 10:57:03.611" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.599" endtime="20201030 10:57:03.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.613" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.612" endtime="20201030 10:57:03.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.614" endtime="20201030 10:57:03.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.596" endtime="20201030 10:57:03.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.595" endtime="20201030 10:57:03.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.623" endtime="20201030 10:57:03.931"></status>
</kw>
<msg timestamp="20201030 10:57:03.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.938080819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.938081917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.622" endtime="20201030 10:57:03.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.938080819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.938081917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.936" endtime="20201030 10:57:03.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.946" endtime="20201030 10:57:03.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.619" endtime="20201030 10:57:03.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.618" endtime="20201030 10:57:03.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.953" level="INFO">${RESULT} = [{'diff': 1.098000000032684e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0969999999499436e-06}, {'diff': 1.1109999999980857e-0...</msg>
<status status="PASS" starttime="20201030 10:57:03.949" endtime="20201030 10:57:03.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:03.958" level="INFO">${OVERHEAD} = {'diff': [1.098000000032684e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.1120000000808261e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:03.954" endtime="20201030 10:57:03.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.962" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:03.961" endtime="20201030 10:57:03.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.964" level="INFO">VALUE: [1.098000000032684e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.098000000032684e-06, 1.2639999997787754e-06, 1.0830000003458906e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.096999999727899e-06, 1.1120000000808261e-06, 1.096999999727899e-06, 1.1120000000808261e-06, 1.1120000000808261e-06, 1.096999999727899e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.0700000001584442e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0269999997092327e-06, 1.0839999999845418e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.0979999998106393e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.096999999727899e-06, 1.0830000003458906e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.1109999999980857e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201030 10:57:03.963" endtime="20201030 10:57:03.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.959" endtime="20201030 10:57:03.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.593" endtime="20201030 10:57:03.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.593" endtime="20201030 10:57:03.966"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.975" endtime="20201030 10:57:03.985"></status>
</kw>
<msg timestamp="20201030 10:57:03.986" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.973" endtime="20201030 10:57:03.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.988" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.987" endtime="20201030 10:57:03.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.989" endtime="20201030 10:57:03.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.970" endtime="20201030 10:57:03.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.968" endtime="20201030 10:57:03.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.998" endtime="20201030 10:57:04.308"></status>
</kw>
<msg timestamp="20201030 10:57:04.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.289807306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.289808403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.997" endtime="20201030 10:57:04.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.289807306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.289808403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.313" endtime="20201030 10:57:04.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.323" endtime="20201030 10:57:04.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.994" endtime="20201030 10:57:04.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.992" endtime="20201030 10:57:04.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:04.330" level="INFO">${RESULT} = [{'diff': 1.096999999727899e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.096999999727899e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06...</msg>
<status status="PASS" starttime="20201030 10:57:04.327" endtime="20201030 10:57:04.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:04.335" level="INFO">${OVERHEAD} = {'diff': [1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.13900000009437e-06, 1.1...</msg>
<status status="PASS" starttime="20201030 10:57:04.331" endtime="20201030 10:57:04.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.340" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:04.339" endtime="20201030 10:57:04.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.342" level="INFO">VALUE: [1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.2780000000489622e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.096999999727899e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.1250000002682725e-06, 1.1530000003645569e-06, 1.1250000002682725e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201030 10:57:04.341" endtime="20201030 10:57:04.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.336" endtime="20201030 10:57:04.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.967" endtime="20201030 10:57:04.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.966" endtime="20201030 10:57:04.344"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.351" endtime="20201030 10:57:04.362"></status>
</kw>
<msg timestamp="20201030 10:57:04.363" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.350" endtime="20201030 10:57:04.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.365" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.364" endtime="20201030 10:57:04.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.366" endtime="20201030 10:57:04.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.347" endtime="20201030 10:57:04.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.346" endtime="20201030 10:57:04.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.375" endtime="20201030 10:57:04.688"></status>
</kw>
<msg timestamp="20201030 10:57:04.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.654316875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.654317972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.374" endtime="20201030 10:57:04.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.654316875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.654317972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.693" endtime="20201030 10:57:04.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.703" endtime="20201030 10:57:04.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.371" endtime="20201030 10:57:04.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.370" endtime="20201030 10:57:04.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:04.711" level="INFO">${RESULT} = [{'diff': 1.096999999727899e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.096999999727899e-06}, {'diff': 1.1109999999980857e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:04.706" endtime="20201030 10:57:04.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:04.716" level="INFO">${OVERHEAD} = {'diff': [1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.09...</msg>
<status status="PASS" starttime="20201030 10:57:04.712" endtime="20201030 10:57:04.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.720" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:04.719" endtime="20201030 10:57:04.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.722" level="INFO">VALUE: [1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.096999999727899e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.346999999984888e-06, 1.0839999999845418e-06, 1.096999999727899e-06, 1.0420000000621599e-06, 1.1109999999980857e-06, 1.0980000002547285e-06, 1.0700000001584442e-06, 1.0980000002547285e-06, 1.1109999999980857e-06, 1.0560000003323466e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.1529999999204676e-06, 1.0839999999845418e-06, 1.0980000002547285e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1389999996502809e-06, 1.1109999999980857e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.096999999727899e-06, 1.1250000002682725e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.096999999727899e-06, 1.1520000002818165e-06, 1.0979999998106393e-06, 1.0979999998106393e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201030 10:57:04.721" endtime="20201030 10:57:04.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.716" endtime="20201030 10:57:04.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.344" endtime="20201030 10:57:04.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.344" endtime="20201030 10:57:04.724"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.731" endtime="20201030 10:57:04.743"></status>
</kw>
<msg timestamp="20201030 10:57:04.743" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.730" endtime="20201030 10:57:04.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.746" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.744" endtime="20201030 10:57:04.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.747" endtime="20201030 10:57:04.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.727" endtime="20201030 10:57:04.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.726" endtime="20201030 10:57:04.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.757" endtime="20201030 10:57:05.074"></status>
</kw>
<msg timestamp="20201030 10:57:05.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.020171111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.020172236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.755" endtime="20201030 10:57:05.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.020171111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.020172236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.079" endtime="20201030 10:57:05.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.089" endtime="20201030 10:57:05.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.751" endtime="20201030 10:57:05.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.750" endtime="20201030 10:57:05.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.096" level="INFO">${RESULT} = [{'diff': 1.1250000002682725e-06}, {'diff': 1.0690000000757038e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.13900000009437e-06...</msg>
<status status="PASS" starttime="20201030 10:57:05.092" endtime="20201030 10:57:05.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:05.100" level="INFO">${OVERHEAD} = {'diff': [1.1250000002682725e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.096999999727899e-06, 1.1520000002818165e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:57:05.097" endtime="20201030 10:57:05.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.105" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:05.103" endtime="20201030 10:57:05.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.108" level="INFO">VALUE: [1.1250000002682725e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.096999999727899e-06, 1.1520000002818165e-06, 1.0979999998106393e-06, 1.0979999998106393e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.2780000000489622e-06, 1.1250000002682725e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1380000000116297e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.0559999998882574e-06, 1.0829999999018014e-06, 1.1519999998377273e-06, 1.0700000001584442e-06, 1.1799999999340116e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0980000002547285e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1530000003645569e-06, 1.0979999998106393e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1529999999204676e-06, 1.0980000002547285e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201030 10:57:05.106" endtime="20201030 10:57:05.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.101" endtime="20201030 10:57:05.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.724" endtime="20201030 10:57:05.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.724" endtime="20201030 10:57:05.109"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.117" endtime="20201030 10:57:05.128"></status>
</kw>
<msg timestamp="20201030 10:57:05.129" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.115" endtime="20201030 10:57:05.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.131" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.130" endtime="20201030 10:57:05.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.132" endtime="20201030 10:57:05.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.113" endtime="20201030 10:57:05.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.111" endtime="20201030 10:57:05.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.141" endtime="20201030 10:57:05.446"></status>
</kw>
<msg timestamp="20201030 10:57:05.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.390055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.390056097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:05.139" endtime="20201030 10:57:05.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.390055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.390056097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:05.451" endtime="20201030 10:57:05.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.461" endtime="20201030 10:57:05.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.137" endtime="20201030 10:57:05.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.135" endtime="20201030 10:57:05.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.468" level="INFO">${RESULT} = [{'diff': 1.0970000001719882e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.0979999998106393e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1529999999204676e-...</msg>
<status status="PASS" starttime="20201030 10:57:05.465" endtime="20201030 10:57:05.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:05.473" level="INFO">${OVERHEAD} = {'diff': [1.0970000001719882e-06, 1.1530000003645569e-06, 1.0979999998106393e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1529999999204676e-06, 1.0980000002547285e-06, 1.1109999999980857e-06...</msg>
<status status="PASS" starttime="20201030 10:57:05.469" endtime="20201030 10:57:05.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.478" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:05.477" endtime="20201030 10:57:05.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.480" level="INFO">VALUE: [1.0970000001719882e-06, 1.1530000003645569e-06, 1.0979999998106393e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1529999999204676e-06, 1.0980000002547285e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.2769999999662218e-06, 1.1249999998241833e-06, 1.0690000000757038e-06, 1.1250000002682725e-06, 1.096999999727899e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.0979999998106393e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.0980000002547285e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.054999999805517e-06, 1.0970000001719882e-06, 1.0829999999018014e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1670000001906544e-06, 1.13900000009437e-06, 1.1120000000808261e-06, 1.054999999805517e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1800000003781008e-06, 1.1520000002818165e-06, 1.0829999999018014e-06, 1.1250000002682725e-06, 1.0979999998106393e-06, 1.096999999727899e-06]</msg>
<status status="PASS" starttime="20201030 10:57:05.479" endtime="20201030 10:57:05.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.474" endtime="20201030 10:57:05.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.110" endtime="20201030 10:57:05.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.109" endtime="20201030 10:57:05.482"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.489" endtime="20201030 10:57:05.501"></status>
</kw>
<msg timestamp="20201030 10:57:05.501" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.488" endtime="20201030 10:57:05.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.504" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.502" endtime="20201030 10:57:05.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.505" endtime="20201030 10:57:05.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.485" endtime="20201030 10:57:05.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.484" endtime="20201030 10:57:05.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.514" endtime="20201030 10:57:05.834"></status>
</kw>
<msg timestamp="20201030 10:57:05.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.765824569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.765825708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.512" endtime="20201030 10:57:05.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.765824569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.765825708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.839" endtime="20201030 10:57:05.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.849" endtime="20201030 10:57:05.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.510" endtime="20201030 10:57:05.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.508" endtime="20201030 10:57:05.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.856" level="INFO">${RESULT} = [{'diff': 1.13900000009437e-06}, {'diff': 1.1120000000808261e-06}, {'diff': 1.054999999805517e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.1109999999980857e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:05.852" endtime="20201030 10:57:05.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:05.861" level="INFO">${OVERHEAD} = {'diff': [1.13900000009437e-06, 1.1120000000808261e-06, 1.054999999805517e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:57:05.857" endtime="20201030 10:57:05.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.865" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:05.864" endtime="20201030 10:57:05.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.867" level="INFO">VALUE: [1.13900000009437e-06, 1.1120000000808261e-06, 1.054999999805517e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1800000003781008e-06, 1.1520000002818165e-06, 1.0829999999018014e-06, 1.1250000002682725e-06, 1.0979999998106393e-06, 1.096999999727899e-06, 1.2910000002364086e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0979999993665501e-06, 1.0839999999845418e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0969999992838098e-06, 1.0970000001719882e-06, 1.0420000000621599e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1530000003645569e-06, 1.111999999636737e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0980000002547285e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1529999994763784e-06, 1.13900000009437e-06, 1.0549999993614279e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.1109999995539965e-06]</msg>
<status status="PASS" starttime="20201030 10:57:05.866" endtime="20201030 10:57:05.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.861" endtime="20201030 10:57:05.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.482" endtime="20201030 10:57:05.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.482" endtime="20201030 10:57:05.869"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.877" endtime="20201030 10:57:05.887"></status>
</kw>
<msg timestamp="20201030 10:57:05.888" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.875" endtime="20201030 10:57:05.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.890" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.889" endtime="20201030 10:57:05.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.891" endtime="20201030 10:57:05.893"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.872" endtime="20201030 10:57:05.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.871" endtime="20201030 10:57:05.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.900" endtime="20201030 10:57:06.214"></status>
</kw>
<msg timestamp="20201030 10:57:06.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.127423125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.12742425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:05.899" endtime="20201030 10:57:06.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.127423125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.12742425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:06.220" endtime="20201030 10:57:06.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.230" endtime="20201030 10:57:06.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.896" endtime="20201030 10:57:06.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.895" endtime="20201030 10:57:06.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:06.236" level="INFO">${RESULT} = [{'diff': 1.1249999998241833e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.1109999995539965e-...</msg>
<status status="PASS" starttime="20201030 10:57:06.233" endtime="20201030 10:57:06.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:06.242" level="INFO">${OVERHEAD} = {'diff': [1.1249999998241833e-06, 1.1799999999340116e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.0970000001719882e-06...</msg>
<status status="PASS" starttime="20201030 10:57:06.237" endtime="20201030 10:57:06.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.246" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:06.245" endtime="20201030 10:57:06.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.249" level="INFO">VALUE: [1.1249999998241833e-06, 1.1799999999340116e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1529999994763784e-06, 1.13900000009437e-06, 1.0549999993614279e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.2630000005842135e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.0830000007899798e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.0839999999845418e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1120000005249153e-06, 1.0980000002547285e-06, 1.0979999993665501e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1250000007123617e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1660000005520033e-06, 1.1249999998241833e-06, 1.0560000003323466e-06, 1.1389999992061917e-06, 1.0280000006801515e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0559999994441682e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0969999992838098e-06]</msg>
<status status="PASS" starttime="20201030 10:57:06.247" endtime="20201030 10:57:06.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.243" endtime="20201030 10:57:06.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.869" endtime="20201030 10:57:06.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.869" endtime="20201030 10:57:06.250"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.258" endtime="20201030 10:57:06.269"></status>
</kw>
<msg timestamp="20201030 10:57:06.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.256" endtime="20201030 10:57:06.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.271" endtime="20201030 10:57:06.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.273" endtime="20201030 10:57:06.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.254" endtime="20201030 10:57:06.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.252" endtime="20201030 10:57:06.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.282" endtime="20201030 10:57:06.602"></status>
</kw>
<msg timestamp="20201030 10:57:06.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.503362986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.503364083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.281" endtime="20201030 10:57:06.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.503362986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.503364083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.607" endtime="20201030 10:57:06.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.617" endtime="20201030 10:57:06.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.278" endtime="20201030 10:57:06.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.276" endtime="20201030 10:57:06.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:06.624" level="INFO">${RESULT} = [{'diff': 1.0970000001719882e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0980000002547285e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0970000001719882e-0...</msg>
<status status="PASS" starttime="20201030 10:57:06.620" endtime="20201030 10:57:06.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:06.630" level="INFO">${OVERHEAD} = {'diff': [1.0970000001719882e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0559999994441682e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:06.625" endtime="20201030 10:57:06.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.634" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:06.633" endtime="20201030 10:57:06.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.636" level="INFO">VALUE: [1.0970000001719882e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0559999994441682e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.3050000005065954e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.0969999992838098e-06, 1.0970000001719882e-06, 1.0829999999018014e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0969999992838098e-06, 1.0980000002547285e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.0970000001719882e-06]</msg>
<status status="PASS" starttime="20201030 10:57:06.635" endtime="20201030 10:57:06.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.630" endtime="20201030 10:57:06.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.251" endtime="20201030 10:57:06.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.250" endtime="20201030 10:57:06.638"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.646" endtime="20201030 10:57:06.657"></status>
</kw>
<msg timestamp="20201030 10:57:06.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.644" endtime="20201030 10:57:06.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.660" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.658" endtime="20201030 10:57:06.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.661" endtime="20201030 10:57:06.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.641" endtime="20201030 10:57:06.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.640" endtime="20201030 10:57:06.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.670" endtime="20201030 10:57:06.994"></status>
</kw>
<msg timestamp="20201030 10:57:06.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.873881792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.873882889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.669" endtime="20201030 10:57:06.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.873881792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.873882889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.999" endtime="20201030 10:57:07.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.009" endtime="20201030 10:57:07.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.666" endtime="20201030 10:57:07.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.664" endtime="20201030 10:57:07.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:07.016" level="INFO">${RESULT} = [{'diff': 1.0970000001719882e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0970000001719882e-06...</msg>
<status status="PASS" starttime="20201030 10:57:07.012" endtime="20201030 10:57:07.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:07.021" level="INFO">${OVERHEAD} = {'diff': [1.0970000001719882e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:57:07.017" endtime="20201030 10:57:07.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.025" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:07.024" endtime="20201030 10:57:07.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.027" level="INFO">VALUE: [1.0970000001719882e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.2639999997787754e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1669999997465652e-06, 1.1109999995539965e-06, 1.069000000519793e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.1250000007123617e-06, 1.1530000003645569e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.0980000002547285e-06, 1.1120000005249153e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.0700000006025334e-06, 1.1799999999340116e-06, 1.0689999996316146e-06, 1.0830000007899798e-06, 1.1799999999340116e-06, 1.0419999991739815e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0979999993665501e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.111000000442175e-06]</msg>
<status status="PASS" starttime="20201030 10:57:07.026" endtime="20201030 10:57:07.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.021" endtime="20201030 10:57:07.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.638" endtime="20201030 10:57:07.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.638" endtime="20201030 10:57:07.029"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.037" endtime="20201030 10:57:07.048"></status>
</kw>
<msg timestamp="20201030 10:57:07.048" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.036" endtime="20201030 10:57:07.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.051" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.049" endtime="20201030 10:57:07.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.052" endtime="20201030 10:57:07.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.032" endtime="20201030 10:57:07.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.031" endtime="20201030 10:57:07.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.061" endtime="20201030 10:57:07.368"></status>
</kw>
<msg timestamp="20201030 10:57:07.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.250723958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.250725056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.060" endtime="20201030 10:57:07.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.250723958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.250725056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.373" endtime="20201030 10:57:07.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.382" endtime="20201030 10:57:07.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.057" endtime="20201030 10:57:07.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.055" endtime="20201030 10:57:07.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:07.389" level="INFO">${RESULT} = [{'diff': 1.0980000002547285e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.0970000001719882e-...</msg>
<status status="PASS" starttime="20201030 10:57:07.386" endtime="20201030 10:57:07.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:07.395" level="INFO">${OVERHEAD} = {'diff': [1.0980000002547285e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:07.390" endtime="20201030 10:57:07.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.399" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:07.398" endtime="20201030 10:57:07.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.401" level="INFO">VALUE: [1.0980000002547285e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0979999993665501e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.2499999995085886e-06, 1.0829999999018014e-06, 1.0969999992838098e-06, 1.0979999993665501e-06, 1.0970000001719882e-06, 1.0829999999018014e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0840000008727202e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0839999999845418e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1250000007123617e-06, 1.111000000442175e-06, 1.0979999993665501e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.111999999636737e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.0969999992838098e-06, 1.0970000001719882e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1109999995539965e-06]</msg>
<status status="PASS" starttime="20201030 10:57:07.400" endtime="20201030 10:57:07.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.395" endtime="20201030 10:57:07.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.030" endtime="20201030 10:57:07.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.029" endtime="20201030 10:57:07.403"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.410" endtime="20201030 10:57:07.421"></status>
</kw>
<msg timestamp="20201030 10:57:07.422" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.409" endtime="20201030 10:57:07.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.424" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.423" endtime="20201030 10:57:07.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.425" endtime="20201030 10:57:07.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.406" endtime="20201030 10:57:07.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.405" endtime="20201030 10:57:07.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.434" endtime="20201030 10:57:07.748"></status>
</kw>
<msg timestamp="20201030 10:57:07.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.631582125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.631583236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.433" endtime="20201030 10:57:07.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.631582125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.631583236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.753" endtime="20201030 10:57:07.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.763" endtime="20201030 10:57:07.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.430" endtime="20201030 10:57:07.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.429" endtime="20201030 10:57:07.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:07.769" level="INFO">${RESULT} = [{'diff': 1.1109999995539965e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0969999992838098e-06}, {'diff': 1.111999999636737e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.0980000002547285e-0...</msg>
<status status="PASS" starttime="20201030 10:57:07.766" endtime="20201030 10:57:07.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:07.775" level="INFO">${OVERHEAD} = {'diff': [1.1109999995539965e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.111999999636737e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.0969999992838098e-06, 1.0970000001719882e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:07.770" endtime="20201030 10:57:07.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.779" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:07.778" endtime="20201030 10:57:07.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.782" level="INFO">VALUE: [1.1109999995539965e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.111999999636737e-06, 1.0970000001719882e-06, 1.0980000002547285e-06, 1.0969999992838098e-06, 1.0970000001719882e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.2769999999662218e-06, 1.111999999636737e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.1120000005249153e-06, 1.041000000867598e-06, 1.1109999995539965e-06, 1.0830000007899798e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.111000000442175e-06, 1.1120000005249153e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0689999996316146e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0979999993665501e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1120000005249153e-06, 1.111999999636737e-06, 1.0839999999845418e-06, 1.1530000003645569e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1670000006347436e-06, 1.1249999998241833e-06, 1.1389999992061917e-06, 1.0830000007899798e-06, 1.1249999998241833e-06, 1.0980000002547285e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1109999995539965e-06]</msg>
<status status="PASS" starttime="20201030 10:57:07.780" endtime="20201030 10:57:07.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.776" endtime="20201030 10:57:07.783"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.403" endtime="20201030 10:57:07.783"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.403" endtime="20201030 10:57:07.783"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.791" endtime="20201030 10:57:07.801"></status>
</kw>
<msg timestamp="20201030 10:57:07.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.789" endtime="20201030 10:57:07.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.804" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.803" endtime="20201030 10:57:07.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.805" endtime="20201030 10:57:07.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.787" endtime="20201030 10:57:07.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.785" endtime="20201030 10:57:07.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.816" endtime="20201030 10:57:08.117"></status>
</kw>
<msg timestamp="20201030 10:57:08.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.993814167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.993815292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.814" endtime="20201030 10:57:08.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.993814167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.993815292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.122" endtime="20201030 10:57:08.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.132" endtime="20201030 10:57:08.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.811" endtime="20201030 10:57:08.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.809" endtime="20201030 10:57:08.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:08.139" level="INFO">${RESULT} = [{'diff': 1.1249999998241833e-06}, {'diff': 1.1389999992061917e-06}, {'diff': 1.0830000007899798e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.0980000002547285e-06}, {'diff': 1.1109999995539965e-...</msg>
<status status="PASS" starttime="20201030 10:57:08.135" endtime="20201030 10:57:08.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:08.143" level="INFO">${OVERHEAD} = {'diff': [1.1249999998241833e-06, 1.1389999992061917e-06, 1.0830000007899798e-06, 1.1249999998241833e-06, 1.0980000002547285e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.0970000001719882e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:08.140" endtime="20201030 10:57:08.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.147" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:08.146" endtime="20201030 10:57:08.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.151" level="INFO">VALUE: [1.1249999998241833e-06, 1.1389999992061917e-06, 1.0830000007899798e-06, 1.1249999998241833e-06, 1.0980000002547285e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.292000000319149e-06, 1.181000000016752e-06, 1.0980000002547285e-06, 1.1109999995539965e-06, 1.111999999636737e-06, 1.0689999996316146e-06, 1.0970000001719882e-06, 1.13900000009437e-06, 1.1250000007123617e-06, 1.1799999999340116e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.1250000007123617e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.111999999636737e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.0830000007899798e-06, 1.0970000001719882e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1250000007123617e-06, 1.1389999992061917e-06, 1.1109999995539965e-06, 1.0830000007899798e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.1109999995539965e-06]</msg>
<status status="PASS" starttime="20201030 10:57:08.149" endtime="20201030 10:57:08.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.144" endtime="20201030 10:57:08.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.784" endtime="20201030 10:57:08.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.784" endtime="20201030 10:57:08.152"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.160" endtime="20201030 10:57:08.171"></status>
</kw>
<msg timestamp="20201030 10:57:08.172" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.158" endtime="20201030 10:57:08.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.174" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.173" endtime="20201030 10:57:08.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.176" endtime="20201030 10:57:08.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.156" endtime="20201030 10:57:08.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.154" endtime="20201030 10:57:08.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.185" endtime="20201030 10:57:08.502"></status>
</kw>
<msg timestamp="20201030 10:57:08.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.364320528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.364321639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.183" endtime="20201030 10:57:08.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.364320528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.364321639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.507" endtime="20201030 10:57:08.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.517" endtime="20201030 10:57:08.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.181" endtime="20201030 10:57:08.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.179" endtime="20201030 10:57:08.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:08.524" level="INFO">${RESULT} = [{'diff': 1.1109999995539965e-06}, {'diff': 1.1250000007123617e-06}, {'diff': 1.1389999992061917e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.0830000007899798e-06}, {'diff': 1.1249999998241833e-...</msg>
<status status="PASS" starttime="20201030 10:57:08.520" endtime="20201030 10:57:08.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:08.529" level="INFO">${OVERHEAD} = {'diff': [1.1109999995539965e-06, 1.1250000007123617e-06, 1.1389999992061917e-06, 1.1109999995539965e-06, 1.0830000007899798e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:08.525" endtime="20201030 10:57:08.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.533" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:08.532" endtime="20201030 10:57:08.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.536" level="INFO">VALUE: [1.1109999995539965e-06, 1.1250000007123617e-06, 1.1389999992061917e-06, 1.1109999995539965e-06, 1.0830000007899798e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.2640000006669538e-06, 1.0969999992838098e-06, 1.0829999999018014e-06, 1.0969999992838098e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.13900000009437e-06, 1.1529999994763784e-06, 1.1109999995539965e-06, 1.0980000002547285e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.0829999999018014e-06, 1.0700000006025334e-06, 1.1250000007123617e-06, 1.1120000005249153e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.0979999993665501e-06, 1.1249999998241833e-06, 1.1120000005249153e-06, 1.1520000002818165e-06, 1.0970000001719882e-06]</msg>
<status status="PASS" starttime="20201030 10:57:08.535" endtime="20201030 10:57:08.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.530" endtime="20201030 10:57:08.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.153" endtime="20201030 10:57:08.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.153" endtime="20201030 10:57:08.538"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.545" endtime="20201030 10:57:08.556"></status>
</kw>
<msg timestamp="20201030 10:57:08.557" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.544" endtime="20201030 10:57:08.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.560" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.558" endtime="20201030 10:57:08.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.561" endtime="20201030 10:57:08.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.541" endtime="20201030 10:57:08.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.540" endtime="20201030 10:57:08.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.570" endtime="20201030 10:57:08.888"></status>
</kw>
<msg timestamp="20201030 10:57:08.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.721515556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.721516653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.568" endtime="20201030 10:57:08.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.721515556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.721516653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.893" endtime="20201030 10:57:08.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.903" endtime="20201030 10:57:08.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.566" endtime="20201030 10:57:08.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.564" endtime="20201030 10:57:08.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:08.910" level="INFO">${RESULT} = [{'diff': 1.0970000001719882e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.1109999995539965e-0...</msg>
<status status="PASS" starttime="20201030 10:57:08.906" endtime="20201030 10:57:08.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:08.914" level="INFO">${OVERHEAD} = {'diff': [1.0970000001719882e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0969999992838098e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:08.911" endtime="20201030 10:57:08.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.918" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:08.917" endtime="20201030 10:57:08.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.921" level="INFO">VALUE: [1.0970000001719882e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.0969999992838098e-06, 1.1109999995539965e-06, 1.0979999993665501e-06, 1.1249999998241833e-06, 1.1120000005249153e-06, 1.1520000002818165e-06, 1.0970000001719882e-06, 1.292000000319149e-06, 1.1109999995539965e-06, 1.1109999995539965e-06, 1.1669999997465652e-06, 1.1109999995539965e-06, 1.0560000003323466e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0980000002547285e-06, 1.111000000442175e-06, 1.0550000002496063e-06, 1.1380000000116297e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.0689999996316146e-06, 1.0980000002547285e-06, 1.0979999993665501e-06, 1.0980000002547285e-06, 1.0689999996316146e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.0979999993665501e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0969999992838098e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0970000001719882e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.111000000442175e-06]</msg>
<status status="PASS" starttime="20201030 10:57:08.919" endtime="20201030 10:57:08.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.915" endtime="20201030 10:57:08.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.538" endtime="20201030 10:57:08.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.538" endtime="20201030 10:57:08.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.312" endtime="20201030 10:57:08.923"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:01.234" endtime="20201030 10:57:08.924" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:08.932" endtime="20201030 10:57:08.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.930" endtime="20201030 10:57:08.952"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.968" endtime="20201030 10:57:08.984"></status>
</kw>
<msg timestamp="20201030 10:57:08.985" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.966" endtime="20201030 10:57:08.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.987" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.986" endtime="20201030 10:57:08.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.990" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:08.988" endtime="20201030 10:57:08.990"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:08.964" endtime="20201030 10:57:08.991"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:08.961" endtime="20201030 10:57:08.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.960" endtime="20201030 10:57:08.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:08.996" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:08.995" endtime="20201030 10:57:08.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.993" endtime="20201030 10:57:08.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.959" endtime="20201030 10:57:08.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.959" endtime="20201030 10:57:08.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.997" endtime="20201030 10:57:08.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.955" endtime="20201030 10:57:08.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.953" endtime="20201030 10:57:09.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.929" endtime="20201030 10:57:09.000"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.009" endtime="20201030 10:57:09.027"></status>
</kw>
<msg timestamp="20201030 10:57:09.028" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.008" endtime="20201030 10:57:09.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.030" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.029" endtime="20201030 10:57:09.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.031" endtime="20201030 10:57:09.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.005" endtime="20201030 10:57:09.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.003" endtime="20201030 10:57:09.034"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.036" endtime="20201030 10:57:09.038"></status>
</kw>
<msg timestamp="20201030 10:57:09.038" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:57:09.035" endtime="20201030 10:57:09.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.042" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:09.041" endtime="20201030 10:57:09.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.046" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:09.043" endtime="20201030 10:57:09.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.039" endtime="20201030 10:57:09.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.050" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:09.049" endtime="20201030 10:57:09.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.052" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:09.051" endtime="20201030 10:57:09.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.047" endtime="20201030 10:57:09.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.060" endtime="20201030 10:57:09.348"></status>
</kw>
<msg timestamp="20201030 10:57:09.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069764431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069768236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.058" endtime="20201030 10:57:09.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069764431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069768236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.352" endtime="20201030 10:57:09.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.360" endtime="20201030 10:57:09.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.056" endtime="20201030 10:57:09.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.054" endtime="20201030 10:57:09.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:09.367" level="INFO">${RESULT} = [{'diff': 3.8049999999956174e-06}, {'diff': 2.861000000006775e-06}, {'diff': 2.8060000000079688e-06}, {'diff': 2.79200000000146e-06}, {'diff': 2.805000000008495e-06}, {'diff': 2.791999999987582e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:09.364" endtime="20201030 10:57:09.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:09.371" level="INFO">${OVERHEAD} = {'diff': [3.8049999999956174e-06, 2.861000000006775e-06, 2.8060000000079688e-06, 2.79200000000146e-06, 2.805000000008495e-06, 2.791999999987582e-06, 2.8049999999946174e-06, 2.7909999999881085e-06, 2.7...</msg>
<status status="PASS" starttime="20201030 10:57:09.368" endtime="20201030 10:57:09.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.376" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 10:57:09.375" endtime="20201030 10:57:09.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.379" level="INFO">VALUE: [3.8049999999956174e-06, 2.861000000006775e-06, 2.8060000000079688e-06, 2.79200000000146e-06, 2.805000000008495e-06, 2.791999999987582e-06, 2.8049999999946174e-06, 2.7909999999881085e-06, 2.7910000000019863e-06, 2.833000000007635e-06, 2.8049999999946174e-06, 2.805999999994091e-06, 2.8060000000079688e-06, 2.819000000001126e-06, 2.7910000000019863e-06, 2.7910000000019863e-06, 2.8060000000079688e-06, 2.8200000000006e-06, 2.8049999999946174e-06, 2.805999999994091e-06, 2.7630000000028465e-06, 2.805999999994091e-06, 2.8049999999946174e-06, 2.832999999993757e-06, 2.8049999999946174e-06, 2.833999999993231e-06, 2.8189999999872484e-06, 2.819000000001126e-06, 2.805000000008495e-06, 2.8049999999946174e-06, 2.8060000000079688e-06, 2.7910000000019863e-06, 2.8060000000079688e-06, 2.7910000000019863e-06, 2.805000000008495e-06, 2.805999999994091e-06, 2.79200000000146e-06, 2.79200000000146e-06, 2.79200000000146e-06, 2.79200000000146e-06, 2.8049999999946174e-06, 2.79200000000146e-06, 2.79200000000146e-06, 2.805000000008495e-06, 2.805000000008495e-06, 2.805999999994091e-06, 2.778000000008829e-06, 2.8049999999946174e-06, 2.8060000000079688e-06, 2.8049999999946174e-06]</msg>
<status status="PASS" starttime="20201030 10:57:09.377" endtime="20201030 10:57:09.379"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.372" endtime="20201030 10:57:09.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.001" endtime="20201030 10:57:09.380"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:08.926" endtime="20201030 10:57:09.381" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:09.390" endtime="20201030 10:57:09.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.388" endtime="20201030 10:57:09.410"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.423" endtime="20201030 10:57:09.439"></status>
</kw>
<msg timestamp="20201030 10:57:09.439" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.421" endtime="20201030 10:57:09.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.442" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.440" endtime="20201030 10:57:09.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.445" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:09.443" endtime="20201030 10:57:09.445"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:09.419" endtime="20201030 10:57:09.446"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:09.416" endtime="20201030 10:57:09.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.415" endtime="20201030 10:57:09.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:09.450" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:09.449" endtime="20201030 10:57:09.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.447" endtime="20201030 10:57:09.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.414" endtime="20201030 10:57:09.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.414" endtime="20201030 10:57:09.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.452" endtime="20201030 10:57:09.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.412" endtime="20201030 10:57:09.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.410" endtime="20201030 10:57:09.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.387" endtime="20201030 10:57:09.455"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.465" endtime="20201030 10:57:09.503"></status>
</kw>
<msg timestamp="20201030 10:57:09.504" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.462" endtime="20201030 10:57:09.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.506" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.505" endtime="20201030 10:57:09.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.507" endtime="20201030 10:57:09.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.460" endtime="20201030 10:57:09.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.457" endtime="20201030 10:57:09.510"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.512" endtime="20201030 10:57:09.513"></status>
</kw>
<msg timestamp="20201030 10:57:09.514" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:57:09.511" endtime="20201030 10:57:09.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.518" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:09.517" endtime="20201030 10:57:09.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.520" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:09.519" endtime="20201030 10:57:09.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.515" endtime="20201030 10:57:09.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.525" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:09.524" endtime="20201030 10:57:09.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.527" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:09.526" endtime="20201030 10:57:09.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.522" endtime="20201030 10:57:09.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.534" endtime="20201030 10:57:09.818"></status>
</kw>
<msg timestamp="20201030 10:57:09.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068053778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068068361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.533" endtime="20201030 10:57:09.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068053778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068068361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.822" endtime="20201030 10:57:09.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.831" endtime="20201030 10:57:09.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.530" endtime="20201030 10:57:09.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.529" endtime="20201030 10:57:09.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:09.837" level="INFO">${RESULT} = [{'diff': 1.458299999999857e-05}, {'diff': 1.3902999999995669e-05}, {'diff': 1.3916000000002704e-05}, {'diff': 1.3930000000009213e-05}, {'diff': 1.3931000000008686e-05}, {'diff': 1.3917000000002178e-0...</msg>
<status status="PASS" starttime="20201030 10:57:09.834" endtime="20201030 10:57:09.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:09.842" level="INFO">${OVERHEAD} = {'diff': [1.458299999999857e-05, 1.3902999999995669e-05, 1.3916000000002704e-05, 1.3930000000009213e-05, 1.3931000000008686e-05, 1.3917000000002178e-05, 1.4000000000000123e-05, 1.3916000000002704e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:09.838" endtime="20201030 10:57:09.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.847" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 10:57:09.846" endtime="20201030 10:57:09.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.849" level="INFO">VALUE: [1.458299999999857e-05, 1.3902999999995669e-05, 1.3916000000002704e-05, 1.3930000000009213e-05, 1.3931000000008686e-05, 1.3917000000002178e-05, 1.4000000000000123e-05, 1.3916000000002704e-05, 1.3861000000003898e-05, 1.3917000000002178e-05, 1.3958999999993948e-05, 1.3958000000008353e-05, 1.3889000000003038e-05, 1.3917000000002178e-05, 1.3903000000009547e-05, 1.3875000000010407e-05, 1.3930000000009213e-05, 1.3833000000004758e-05, 1.4000000000000123e-05, 1.4013999999992754e-05, 1.3917000000002178e-05, 1.3931000000008686e-05, 1.3901999999996195e-05, 1.3917000000002178e-05, 1.3917000000002178e-05, 1.3930000000009213e-05, 1.3931000000008686e-05, 1.3959000000007826e-05, 1.3945000000001317e-05, 1.3930999999994809e-05, 1.3916000000002704e-05, 1.3929999999995335e-05, 1.3929999999995335e-05, 1.3903000000009547e-05, 1.3916000000002704e-05, 1.3931000000008686e-05, 1.3944000000001844e-05, 1.3930999999994809e-05, 1.3957999999994475e-05, 1.3916000000002704e-05, 1.3930000000009213e-05, 1.3957999999994475e-05, 1.3902999999995669e-05, 1.3929999999995335e-05, 1.3930000000009213e-05, 1.3972000000000984e-05, 1.3916000000002704e-05, 1.3945000000001317e-05, 1.3916000000002704e-05, 1.3916000000002704e-05]</msg>
<status status="PASS" starttime="20201030 10:57:09.848" endtime="20201030 10:57:09.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.843" endtime="20201030 10:57:09.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.456" endtime="20201030 10:57:09.851"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:09.384" endtime="20201030 10:57:09.852" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:09.860" endtime="20201030 10:57:09.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.859" endtime="20201030 10:57:09.880"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.893" endtime="20201030 10:57:09.909"></status>
</kw>
<msg timestamp="20201030 10:57:09.909" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.892" endtime="20201030 10:57:09.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.912" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.910" endtime="20201030 10:57:09.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.915" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:09.913" endtime="20201030 10:57:09.915"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:09.889" endtime="20201030 10:57:09.916"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:09.887" endtime="20201030 10:57:09.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.886" endtime="20201030 10:57:09.916"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:09.920" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:09.919" endtime="20201030 10:57:09.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.917" endtime="20201030 10:57:09.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.885" endtime="20201030 10:57:09.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.884" endtime="20201030 10:57:09.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.923" endtime="20201030 10:57:09.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.882" endtime="20201030 10:57:09.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.881" endtime="20201030 10:57:09.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.857" endtime="20201030 10:57:09.926"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.935" endtime="20201030 10:57:10.024"></status>
</kw>
<msg timestamp="20201030 10:57:10.025" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.933" endtime="20201030 10:57:10.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.027" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.026" endtime="20201030 10:57:10.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.028" endtime="20201030 10:57:10.030"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.930" endtime="20201030 10:57:10.030"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.928" endtime="20201030 10:57:10.031"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.033" endtime="20201030 10:57:10.035"></status>
</kw>
<msg timestamp="20201030 10:57:10.035" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:57:10.032" endtime="20201030 10:57:10.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.039" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:10.038" endtime="20201030 10:57:10.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.041" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:10.040" endtime="20201030 10:57:10.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.036" endtime="20201030 10:57:10.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.046" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:10.045" endtime="20201030 10:57:10.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.048" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:10.047" endtime="20201030 10:57:10.049"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.043" endtime="20201030 10:57:10.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.055" endtime="20201030 10:57:10.346"></status>
</kw>
<msg timestamp="20201030 10:57:10.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067611472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067638069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.054" endtime="20201030 10:57:10.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067611472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067638069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.350" endtime="20201030 10:57:10.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.358" endtime="20201030 10:57:10.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.051" endtime="20201030 10:57:10.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.050" endtime="20201030 10:57:10.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:10.366" level="INFO">${RESULT} = [{'diff': 2.6596999999989324e-05}, {'diff': 2.5986000000005616e-05}, {'diff': 2.5943999999999967e-05}, {'diff': 2.5943999999999967e-05}, {'diff': 2.5929999999993458e-05}, {'diff': 2.588900000000116e-0...</msg>
<status status="PASS" starttime="20201030 10:57:10.362" endtime="20201030 10:57:10.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:10.370" level="INFO">${OVERHEAD} = {'diff': [2.6596999999989324e-05, 2.5986000000005616e-05, 2.5943999999999967e-05, 2.5943999999999967e-05, 2.5929999999993458e-05, 2.588900000000116e-05, 2.5958000000006476e-05, 2.593100000000681e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:10.367" endtime="20201030 10:57:10.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.374" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 10:57:10.373" endtime="20201030 10:57:10.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.377" level="INFO">VALUE: [2.6596999999989324e-05, 2.5986000000005616e-05, 2.5943999999999967e-05, 2.5943999999999967e-05, 2.5929999999993458e-05, 2.588900000000116e-05, 2.5958000000006476e-05, 2.593100000000681e-05, 2.5957999999992598e-05, 2.5943999999999967e-05, 2.59170000000003e-05, 2.5916000000000827e-05, 2.5930999999992932e-05, 2.5957999999992598e-05, 2.594499999999944e-05, 2.5929999999993458e-05, 2.594499999999944e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.5943999999999967e-05, 2.5929999999993458e-05, 2.5888000000001687e-05, 2.59170000000003e-05, 2.5929999999993458e-05, 2.6026999999997913e-05, 2.594499999999944e-05, 2.5930000000007336e-05, 2.5943999999999967e-05, 2.5916000000000827e-05, 2.594499999999944e-05, 2.594499999999944e-05, 2.5930000000007336e-05, 2.5943999999999967e-05, 2.594499999999944e-05, 2.5930000000007336e-05, 2.5943999999999967e-05, 2.594499999999944e-05, 2.5930999999992932e-05, 2.5930000000007336e-05, 2.5916000000000827e-05, 2.59170000000003e-05, 2.5957999999992598e-05, 2.591700000001418e-05, 2.5916999999986423e-05, 2.5958999999992072e-05, 2.591599999998695e-05, 2.5958000000020354e-05, 2.5916999999986423e-05, 2.5930000000007336e-05, 2.5902999999993792e-05]</msg>
<status status="PASS" starttime="20201030 10:57:10.375" endtime="20201030 10:57:10.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.371" endtime="20201030 10:57:10.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.927" endtime="20201030 10:57:10.378"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:09.854" endtime="20201030 10:57:10.379" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:10.388" endtime="20201030 10:57:10.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.386" endtime="20201030 10:57:10.408"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.422" endtime="20201030 10:57:10.437"></status>
</kw>
<msg timestamp="20201030 10:57:10.438" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.420" endtime="20201030 10:57:10.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.440" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.439" endtime="20201030 10:57:10.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.443" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:10.441" endtime="20201030 10:57:10.444"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:10.417" endtime="20201030 10:57:10.444"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:10.414" endtime="20201030 10:57:10.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.413" endtime="20201030 10:57:10.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:10.449" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:10.448" endtime="20201030 10:57:10.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.446" endtime="20201030 10:57:10.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.412" endtime="20201030 10:57:10.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.411" endtime="20201030 10:57:10.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.451" endtime="20201030 10:57:10.452"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.410" endtime="20201030 10:57:10.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.408" endtime="20201030 10:57:10.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.385" endtime="20201030 10:57:10.453"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.462" endtime="20201030 10:57:10.480"></status>
</kw>
<msg timestamp="20201030 10:57:10.481" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.461" endtime="20201030 10:57:10.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.483" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.482" endtime="20201030 10:57:10.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.485" endtime="20201030 10:57:10.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.458" endtime="20201030 10:57:10.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.456" endtime="20201030 10:57:10.487"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.489" endtime="20201030 10:57:10.491"></status>
</kw>
<msg timestamp="20201030 10:57:10.491" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:57:10.488" endtime="20201030 10:57:10.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.496" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:10.495" endtime="20201030 10:57:10.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.498" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:10.497" endtime="20201030 10:57:10.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.492" endtime="20201030 10:57:10.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.504" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:10.503" endtime="20201030 10:57:10.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.506" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:10.505" endtime="20201030 10:57:10.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.500" endtime="20201030 10:57:10.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.515" endtime="20201030 10:57:10.798"></status>
</kw>
<msg timestamp="20201030 10:57:10.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067255417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067256528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.513" endtime="20201030 10:57:10.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067255417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067256528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.802" endtime="20201030 10:57:10.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.810" endtime="20201030 10:57:10.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.510" endtime="20201030 10:57:10.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.508" endtime="20201030 10:57:10.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:10.817" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 8.890000000039144e-07}, {'diff': 8.890000000039144e-07}, {'diff': 8.749999999974056e-07}, {'diff': 8.749999999974056e-07}, {'diff': 8.749999999974056e-07}, ...</msg>
<status status="PASS" starttime="20201030 10:57:10.814" endtime="20201030 10:57:10.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:10.821" level="INFO">${OVERHEAD} = {'diff': [1.1109999999980857e-06, 8.890000000039144e-07, 8.890000000039144e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.890000000039144e-07, 8.749...</msg>
<status status="PASS" starttime="20201030 10:57:10.818" endtime="20201030 10:57:10.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.826" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 10:57:10.825" endtime="20201030 10:57:10.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.828" level="INFO">VALUE: [1.1109999999980857e-06, 8.890000000039144e-07, 8.890000000039144e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.890000000039144e-07, 8.749999999974056e-07, 8.610000000047746e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.890000000039144e-07, 8.890000000039144e-07, 8.469999999982658e-07, 8.889999999900366e-07, 9.029999999965455e-07, 8.890000000039144e-07, 8.750000000112834e-07, 8.890000000039144e-07, 8.750000000112834e-07, 8.890000000039144e-07, 8.330000000056348e-07, 8.749999999974056e-07, 8.750000000112834e-07, 8.889999999900366e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.880000000044408e-07, 9.030000000104232e-07, 8.750000000112834e-07, 8.750000000112834e-07, 8.880000000044408e-07, 8.890000000039144e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.749999999974056e-07, 9.030000000104232e-07, 8.890000000039144e-07, 8.749999999974056e-07, 8.469999999982658e-07, 8.890000000039144e-07, 8.749999999974056e-07, 8.890000000039144e-07, 8.890000000039144e-07, 8.330000000056348e-07, 8.750000000112834e-07, 8.890000000039144e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 10:57:10.827" endtime="20201030 10:57:10.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.822" endtime="20201030 10:57:10.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.454" endtime="20201030 10:57:10.829"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:10.382" endtime="20201030 10:57:10.830" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:10.839" endtime="20201030 10:57:10.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.838" endtime="20201030 10:57:10.859"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.873" endtime="20201030 10:57:10.889"></status>
</kw>
<msg timestamp="20201030 10:57:10.890" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.871" endtime="20201030 10:57:10.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.892" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.891" endtime="20201030 10:57:10.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.895" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:10.893" endtime="20201030 10:57:10.896"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:10.869" endtime="20201030 10:57:10.896"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:10.867" endtime="20201030 10:57:10.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.865" endtime="20201030 10:57:10.897"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:10.901" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:10.900" endtime="20201030 10:57:10.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.898" endtime="20201030 10:57:10.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.864" endtime="20201030 10:57:10.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.863" endtime="20201030 10:57:10.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.902" endtime="20201030 10:57:10.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.862" endtime="20201030 10:57:10.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.860" endtime="20201030 10:57:10.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.836" endtime="20201030 10:57:10.905"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.914" endtime="20201030 10:57:10.954"></status>
</kw>
<msg timestamp="20201030 10:57:10.954" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.913" endtime="20201030 10:57:10.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.957" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.955" endtime="20201030 10:57:10.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.958" endtime="20201030 10:57:10.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.910" endtime="20201030 10:57:10.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.908" endtime="20201030 10:57:10.960"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.962" endtime="20201030 10:57:10.965"></status>
</kw>
<msg timestamp="20201030 10:57:10.965" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:57:10.961" endtime="20201030 10:57:10.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.969" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:10.968" endtime="20201030 10:57:10.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.971" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:10.970" endtime="20201030 10:57:10.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.966" endtime="20201030 10:57:10.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.977" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:10.976" endtime="20201030 10:57:10.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.979" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:10.978" endtime="20201030 10:57:10.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.973" endtime="20201030 10:57:10.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.986" endtime="20201030 10:57:11.271"></status>
</kw>
<msg timestamp="20201030 10:57:11.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068444181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068446431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.984" endtime="20201030 10:57:11.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068444181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068446431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.275" endtime="20201030 10:57:11.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.283" endtime="20201030 10:57:11.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.982" endtime="20201030 10:57:11.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.980" endtime="20201030 10:57:11.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:11.289" level="INFO">${RESULT} = [{'diff': 2.2499999999953113e-06}, {'diff': 2.0839999999994197e-06}, {'diff': 2.1390000000121034e-06}, {'diff': 2.0270000000016664e-06}, {'diff': 2.1529999999908567e-06}, {'diff': 2.068999999993437e-0...</msg>
<status status="PASS" starttime="20201030 10:57:11.286" endtime="20201030 10:57:11.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:11.294" level="INFO">${OVERHEAD} = {'diff': [2.2499999999953113e-06, 2.0839999999994197e-06, 2.1390000000121034e-06, 2.0270000000016664e-06, 2.1529999999908567e-06, 2.068999999993437e-06, 2.165999999997892e-06, 2.068999999993437e-06, 2...</msg>
<status status="PASS" starttime="20201030 10:57:11.290" endtime="20201030 10:57:11.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.299" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 10:57:11.298" endtime="20201030 10:57:11.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.301" level="INFO">VALUE: [2.2499999999953113e-06, 2.0839999999994197e-06, 2.1390000000121034e-06, 2.0270000000016664e-06, 2.1529999999908567e-06, 2.068999999993437e-06, 2.165999999997892e-06, 2.068999999993437e-06, 2.1389999999982257e-06, 2.0700000000067886e-06, 2.1389999999982257e-06, 2.069999999992911e-06, 2.082999999999946e-06, 2.069000000007315e-06, 2.1530000000047345e-06, 2.0700000000067886e-06, 2.1389999999982257e-06, 2.082999999999946e-06, 2.1389999999982257e-06, 2.0979999999920507e-06, 2.1669999999973655e-06, 2.05600000000028e-06, 2.1530000000047345e-06, 2.05600000000028e-06, 2.165999999997892e-06, 2.05600000000028e-06, 2.110999999999086e-06, 2.0700000000067886e-06, 2.1389999999982257e-06, 2.042000000007649e-06, 2.1530000000047345e-06, 2.068999999993437e-06, 2.1389999999982257e-06, 2.069000000007315e-06, 2.110999999999086e-06, 2.0700000000067886e-06, 2.1389999999982257e-06, 2.082999999999946e-06, 2.1530000000047345e-06, 2.068999999993437e-06, 2.124999999991717e-06, 2.082999999999946e-06, 2.124999999991717e-06, 2.069000000007315e-06, 2.069000000007315e-06, 2.041999999993771e-06, 2.137999999998752e-06, 2.068999999993437e-06, 2.1389999999982257e-06, 2.055000000000806e-06]</msg>
<status status="PASS" starttime="20201030 10:57:11.300" endtime="20201030 10:57:11.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.295" endtime="20201030 10:57:11.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.906" endtime="20201030 10:57:11.302"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:10.833" endtime="20201030 10:57:11.303" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:11.313" endtime="20201030 10:57:11.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.312" endtime="20201030 10:57:11.333"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.347" endtime="20201030 10:57:11.362"></status>
</kw>
<msg timestamp="20201030 10:57:11.363" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.345" endtime="20201030 10:57:11.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.364" endtime="20201030 10:57:11.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.368" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:11.366" endtime="20201030 10:57:11.368"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:11.342" endtime="20201030 10:57:11.369"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:11.340" endtime="20201030 10:57:11.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.338" endtime="20201030 10:57:11.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:11.374" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:11.373" endtime="20201030 10:57:11.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.371" endtime="20201030 10:57:11.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.338" endtime="20201030 10:57:11.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.337" endtime="20201030 10:57:11.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.375" endtime="20201030 10:57:11.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.336" endtime="20201030 10:57:11.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.334" endtime="20201030 10:57:11.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.311" endtime="20201030 10:57:11.378"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.391" endtime="20201030 10:57:11.481"></status>
</kw>
<msg timestamp="20201030 10:57:11.482" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.389" endtime="20201030 10:57:11.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.484" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.483" endtime="20201030 10:57:11.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.485" endtime="20201030 10:57:11.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.386" endtime="20201030 10:57:11.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.381" endtime="20201030 10:57:11.488"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.490" endtime="20201030 10:57:11.491"></status>
</kw>
<msg timestamp="20201030 10:57:11.492" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 10:57:11.489" endtime="20201030 10:57:11.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.496" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:11.495" endtime="20201030 10:57:11.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.498" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:11.497" endtime="20201030 10:57:11.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.493" endtime="20201030 10:57:11.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.503" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:11.502" endtime="20201030 10:57:11.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.505" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:11.504" endtime="20201030 10:57:11.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.499" endtime="20201030 10:57:11.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.513" endtime="20201030 10:57:11.805"></status>
</kw>
<msg timestamp="20201030 10:57:11.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071549847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071553014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.511" endtime="20201030 10:57:11.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071549847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071553014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.809" endtime="20201030 10:57:11.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.817" endtime="20201030 10:57:11.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.508" endtime="20201030 10:57:11.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.507" endtime="20201030 10:57:11.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:11.823" level="INFO">${RESULT} = [{'diff': 3.1669999999983656e-06}, {'diff': 2.9859999999964915e-06}, {'diff': 2.9859999999964915e-06}, {'diff': 3.0000000000030003e-06}, {'diff': 2.9859999999964915e-06}, {'diff': 2.9859999999964915e-...</msg>
<status status="PASS" starttime="20201030 10:57:11.820" endtime="20201030 10:57:11.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:11.828" level="INFO">${OVERHEAD} = {'diff': [3.1669999999983656e-06, 2.9859999999964915e-06, 2.9859999999964915e-06, 3.0000000000030003e-06, 2.9859999999964915e-06, 2.9859999999964915e-06, 2.9859999999964915e-06, 2.9859999999964915e-06...</msg>
<status status="PASS" starttime="20201030 10:57:11.824" endtime="20201030 10:57:11.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.833" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 10:57:11.832" endtime="20201030 10:57:11.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.835" level="INFO">VALUE: [3.1669999999983656e-06, 2.9859999999964915e-06, 2.9859999999964915e-06, 3.0000000000030003e-06, 2.9859999999964915e-06, 2.9859999999964915e-06, 2.9859999999964915e-06, 2.9859999999964915e-06, 2.9450000000041943e-06, 2.9720000000038604e-06, 2.9859999999964915e-06, 3.014000000009509e-06, 2.987000000009843e-06, 3.0000000000030003e-06, 2.9999999999891225e-06, 2.9859999999964915e-06, 3.0000000000030003e-06, 3.0000000000030003e-06, 2.973000000003334e-06, 2.973000000003334e-06, 2.986999999995965e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0139999999956313e-06, 2.9999999999891225e-06, 2.9860000000103692e-06, 2.9859999999964915e-06, 2.9860000000103692e-06, 2.986999999995965e-06, 3.0000000000030003e-06, 2.9860000000103692e-06, 2.9859999999964915e-06, 3.0130000000100354e-06, 2.9720000000038604e-06, 2.9859999999964915e-06, 2.9449999999903165e-06, 2.9720000000038604e-06, 2.9859999999964915e-06, 2.9860000000103692e-06, 2.9310000000115632e-06, 3.0000000000030003e-06, 2.9859999999826137e-06, 3.042000000008649e-06, 2.9859999999826137e-06, 2.943999999976965e-06, 3.0000000000030003e-06, 2.9859999999826137e-06, 2.9859999999826137e-06, 2.9860000000103692e-06, 2.9860000000103692e-06]</msg>
<status status="PASS" starttime="20201030 10:57:11.834" endtime="20201030 10:57:11.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.829" endtime="20201030 10:57:11.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.379" endtime="20201030 10:57:11.837"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:11.307" endtime="20201030 10:57:11.837" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:11.846" endtime="20201030 10:57:11.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.844" endtime="20201030 10:57:11.866"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.879" endtime="20201030 10:57:11.895"></status>
</kw>
<msg timestamp="20201030 10:57:11.896" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.878" endtime="20201030 10:57:11.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.898" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.897" endtime="20201030 10:57:11.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.902" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:11.899" endtime="20201030 10:57:11.902"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:11.875" endtime="20201030 10:57:11.903"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:11.872" endtime="20201030 10:57:11.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.871" endtime="20201030 10:57:11.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:11.908" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:11.907" endtime="20201030 10:57:11.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.905" endtime="20201030 10:57:11.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.870" endtime="20201030 10:57:11.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.869" endtime="20201030 10:57:11.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.909" endtime="20201030 10:57:11.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.868" endtime="20201030 10:57:11.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.866" endtime="20201030 10:57:11.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.843" endtime="20201030 10:57:11.912"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.916" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:11.925" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:13.088" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:11.915" endtime="20201030 10:57:13.089"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.091" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:13.090" endtime="20201030 10:57:13.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.913" endtime="20201030 10:57:13.092"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.096" endtime="20201030 10:57:13.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.094" endtime="20201030 10:57:13.116"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.125" endtime="20201030 10:57:13.132"></status>
</kw>
<msg timestamp="20201030 10:57:13.133" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.123" endtime="20201030 10:57:13.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.135" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.134" endtime="20201030 10:57:13.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.136" endtime="20201030 10:57:13.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.120" endtime="20201030 10:57:13.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.118" endtime="20201030 10:57:13.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.146" endtime="20201030 10:57:13.429"></status>
</kw>
<msg timestamp="20201030 10:57:13.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018114472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018118444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.144" endtime="20201030 10:57:13.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018114472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018118444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.434" endtime="20201030 10:57:13.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.442" endtime="20201030 10:57:13.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.141" endtime="20201030 10:57:13.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.139" endtime="20201030 10:57:13.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:13.448" level="INFO">${PHILIP_RES} = [{'diff': 3.972000000001391e-06}, {'diff': 3.111000000000086e-06}, {'diff': 3.124999999999656e-06}, {'diff': 3.1389999999992257e-06}, {'diff': 3.124999999999656e-06}, {'diff': 3.111000000000086e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:13.445" endtime="20201030 10:57:13.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:13.454" level="INFO">${RESULT} = {'diff': [3.972000000001391e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.11...</msg>
<status status="PASS" starttime="20201030 10:57:13.449" endtime="20201030 10:57:13.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.459" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:13.458" endtime="20201030 10:57:13.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.461" level="INFO">VALUE: [3.972000000001391e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.124999999999656e-06, 3.1119999999995596e-06, 3.111000000000086e-06]</msg>
<status status="PASS" starttime="20201030 10:57:13.460" endtime="20201030 10:57:13.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.455" endtime="20201030 10:57:13.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.117" endtime="20201030 10:57:13.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.094" endtime="20201030 10:57:13.463"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.465" endtime="20201030 10:57:13.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.463" endtime="20201030 10:57:13.488"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.509" endtime="20201030 10:57:13.519"></status>
</kw>
<msg timestamp="20201030 10:57:13.520" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.506" endtime="20201030 10:57:13.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.526" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.523" endtime="20201030 10:57:13.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.528" endtime="20201030 10:57:13.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.500" endtime="20201030 10:57:13.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.495" endtime="20201030 10:57:13.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.551" endtime="20201030 10:57:13.841"></status>
</kw>
<msg timestamp="20201030 10:57:13.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034660194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034667222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.547" endtime="20201030 10:57:13.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034660194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034667222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.846" endtime="20201030 10:57:13.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.854" endtime="20201030 10:57:13.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.540" endtime="20201030 10:57:13.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.536" endtime="20201030 10:57:13.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:13.860" level="INFO">${PHILIP_RES} = [{'diff': 7.0279999999992016e-06}, {'diff': 5.916000000001642e-06}, {'diff': 5.889000000001976e-06}, {'diff': 5.9589999999998255e-06}, {'diff': 5.8329999999967574e-06}, {'diff': 5.958000000000352e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:13.857" endtime="20201030 10:57:13.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:13.865" level="INFO">${RESULT} = {'diff': [7.0279999999992016e-06, 5.916000000001642e-06, 5.889000000001976e-06, 5.9589999999998255e-06, 5.8329999999967574e-06, 5.958000000000352e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.8...</msg>
<status status="PASS" starttime="20201030 10:57:13.861" endtime="20201030 10:57:13.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.869" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:13.868" endtime="20201030 10:57:13.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.871" level="INFO">VALUE: [7.0279999999992016e-06, 5.916000000001642e-06, 5.889000000001976e-06, 5.9589999999998255e-06, 5.8329999999967574e-06, 5.958000000000352e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.84800000000274e-06, 5.889000000001976e-06, 5.875000000002406e-06, 5.8879999999955634e-06, 5.846999999996327e-06, 5.888999999995037e-06, 5.889000000001976e-06, 5.875000000002406e-06, 5.875000000002406e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.8200000000036e-06, 5.889000000001976e-06, 5.944000000000782e-06, 5.874999999995467e-06, 5.8879999999955634e-06, 5.888999999995037e-06, 5.902999999994607e-06, 5.903000000001546e-06, 5.875000000002406e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.944000000000782e-06, 5.874999999995467e-06, 5.888999999995037e-06, 5.888999999995037e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.8329999999967574e-06, 5.875000000002406e-06, 5.889000000001976e-06, 5.903000000001546e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.889000000001976e-06, 5.902000000002072e-06, 5.901999999995133e-06]</msg>
<status status="PASS" starttime="20201030 10:57:13.870" endtime="20201030 10:57:13.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.865" endtime="20201030 10:57:13.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.490" endtime="20201030 10:57:13.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.463" endtime="20201030 10:57:13.873"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.875" endtime="20201030 10:57:13.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.874" endtime="20201030 10:57:13.895"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.904" endtime="20201030 10:57:13.912"></status>
</kw>
<msg timestamp="20201030 10:57:13.913" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.902" endtime="20201030 10:57:13.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.915" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.914" endtime="20201030 10:57:13.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.916" endtime="20201030 10:57:13.918"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.899" endtime="20201030 10:57:13.918"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.897" endtime="20201030 10:57:13.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.925" endtime="20201030 10:57:14.213"></status>
</kw>
<msg timestamp="20201030 10:57:14.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018587236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018597264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.924" endtime="20201030 10:57:14.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018587236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018597264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.217" endtime="20201030 10:57:14.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.226" endtime="20201030 10:57:14.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.921" endtime="20201030 10:57:14.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.919" endtime="20201030 10:57:14.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:14.232" level="INFO">${PHILIP_RES} = [{'diff': 1.0027999999998732e-05}, {'diff': 9.458000000000383e-06}, {'diff': 9.472999999999426e-06}, {'diff': 9.429999999997773e-06}, {'diff': 9.417000000001147e-06}, {'diff': 9.458999999999856e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:14.229" endtime="20201030 10:57:14.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.236" level="INFO">${RESULT} = {'diff': [1.0027999999998732e-05, 9.458000000000383e-06, 9.472999999999426e-06, 9.429999999997773e-06, 9.417000000001147e-06, 9.458999999999856e-06, 9.416000000001673e-06, 9.389000000002007e-06, 9.445...</msg>
<status status="PASS" starttime="20201030 10:57:14.233" endtime="20201030 10:57:14.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.240" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:14.240" endtime="20201030 10:57:14.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.244" level="INFO">VALUE: [1.0027999999998732e-05, 9.458000000000383e-06, 9.472999999999426e-06, 9.429999999997773e-06, 9.417000000001147e-06, 9.458999999999856e-06, 9.416000000001673e-06, 9.389000000002007e-06, 9.445000000000286e-06, 9.457999999996913e-06, 9.471999999999953e-06, 9.499999999999093e-06, 9.445000000000286e-06, 9.458000000000383e-06, 9.471999999999953e-06, 9.445000000000286e-06, 9.486000000002992e-06, 9.458000000000383e-06, 9.445000000000286e-06, 9.445000000000286e-06, 9.430000000001243e-06, 9.457999999996913e-06, 9.402999999998107e-06, 9.444000000000813e-06, 9.458000000000383e-06, 9.431000000000717e-06, 9.513999999998662e-06, 9.402999999998107e-06, 9.458999999999856e-06, 9.458000000000383e-06, 9.444000000000813e-06, 9.445000000000286e-06, 9.458999999999856e-06, 9.443999999997343e-06, 9.416999999997677e-06, 9.458999999999856e-06, 9.416000000001673e-06, 9.389000000002007e-06, 9.445000000000286e-06, 9.443999999997343e-06, 9.471999999999953e-06, 9.431000000000717e-06, 9.445000000000286e-06, 9.471999999999953e-06, 9.443999999997343e-06, 9.445000000000286e-06, 9.514000000002132e-06, 9.458000000000383e-06, 9.445000000000286e-06, 9.416000000001673e-06]</msg>
<status status="PASS" starttime="20201030 10:57:14.242" endtime="20201030 10:57:14.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.237" endtime="20201030 10:57:14.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.896" endtime="20201030 10:57:14.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.873" endtime="20201030 10:57:14.245"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.248" endtime="20201030 10:57:14.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.246" endtime="20201030 10:57:14.268"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.276" endtime="20201030 10:57:14.284"></status>
</kw>
<msg timestamp="20201030 10:57:14.284" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.274" endtime="20201030 10:57:14.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.287" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.285" endtime="20201030 10:57:14.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.288" endtime="20201030 10:57:14.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.272" endtime="20201030 10:57:14.290"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.270" endtime="20201030 10:57:14.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.297" endtime="20201030 10:57:14.585"></status>
</kw>
<msg timestamp="20201030 10:57:14.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017393597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017406889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.296" endtime="20201030 10:57:14.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017393597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017406889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.589" endtime="20201030 10:57:14.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.597" endtime="20201030 10:57:14.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.293" endtime="20201030 10:57:14.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.291" endtime="20201030 10:57:14.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:14.604" level="INFO">${PHILIP_RES} = [{'diff': 1.3291999999998083e-05}, {'diff': 1.2722000000003203e-05}, {'diff': 1.2735999999999303e-05}, {'diff': 1.2721999999999734e-05}, {'diff': 1.2708999999999637e-05}, {'diff': 1.2735999999999303e-...</msg>
<status status="PASS" starttime="20201030 10:57:14.601" endtime="20201030 10:57:14.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.609" level="INFO">${RESULT} = {'diff': [1.3291999999998083e-05, 1.2722000000003203e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2735999999999303e-05, 1.2708000000000164e-05, 1.2721999999999734e-05...</msg>
<status status="PASS" starttime="20201030 10:57:14.605" endtime="20201030 10:57:14.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.614" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:14.613" endtime="20201030 10:57:14.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.616" level="INFO">VALUE: [1.3291999999998083e-05, 1.2722000000003203e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2735999999999303e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2695000000000067e-05, 1.2708000000000164e-05, 1.2736000000002773e-05, 1.2778000000001483e-05, 1.2735999999999303e-05, 1.2777000000002009e-05, 1.2749999999998873e-05, 1.2722999999999207e-05, 1.2708000000000164e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2652999999997888e-05, 1.2708999999999637e-05, 1.2764000000001913e-05, 1.2680000000001024e-05, 1.2707999999996694e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2708999999999637e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2694000000000594e-05, 1.2777000000002009e-05, 1.2708999999999637e-05, 1.2722000000003203e-05, 1.2708000000000164e-05, 1.2736000000002773e-05, 1.2708000000000164e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2722999999999207e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.277699999999854e-05, 1.2695000000000067e-05, 1.2722999999999207e-05, 1.2695000000000067e-05]</msg>
<status status="PASS" starttime="20201030 10:57:14.615" endtime="20201030 10:57:14.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.610" endtime="20201030 10:57:14.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.268" endtime="20201030 10:57:14.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.246" endtime="20201030 10:57:14.618"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.620" endtime="20201030 10:57:14.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.618" endtime="20201030 10:57:14.640"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.648" endtime="20201030 10:57:14.656"></status>
</kw>
<msg timestamp="20201030 10:57:14.656" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.646" endtime="20201030 10:57:14.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.659" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.657" endtime="20201030 10:57:14.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.660" endtime="20201030 10:57:14.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.644" endtime="20201030 10:57:14.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.642" endtime="20201030 10:57:14.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.669" endtime="20201030 10:57:14.955"></status>
</kw>
<msg timestamp="20201030 10:57:14.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017541819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017558611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.668" endtime="20201030 10:57:14.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017541819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017558611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.959" endtime="20201030 10:57:14.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.967" endtime="20201030 10:57:14.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.665" endtime="20201030 10:57:14.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.663" endtime="20201030 10:57:14.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:14.975" level="INFO">${PHILIP_RES} = [{'diff': 1.6791999999998114e-05}, {'diff': 1.6222999999999238e-05}, {'diff': 1.6208000000000194e-05}, {'diff': 1.6221999999999764e-05}, {'diff': 1.6221999999999764e-05}, {'diff': 1.6235999999999334e-...</msg>
<status status="PASS" starttime="20201030 10:57:14.971" endtime="20201030 10:57:14.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.979" level="INFO">${RESULT} = {'diff': [1.6791999999998114e-05, 1.6222999999999238e-05, 1.6208000000000194e-05, 1.6221999999999764e-05, 1.6221999999999764e-05, 1.6235999999999334e-05, 1.6195000000000098e-05, 1.6208000000000194e-05...</msg>
<status status="PASS" starttime="20201030 10:57:14.976" endtime="20201030 10:57:14.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.983" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:14.982" endtime="20201030 10:57:14.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.985" level="INFO">VALUE: [1.6791999999998114e-05, 1.6222999999999238e-05, 1.6208000000000194e-05, 1.6221999999999764e-05, 1.6221999999999764e-05, 1.6235999999999334e-05, 1.6195000000000098e-05, 1.6208000000000194e-05, 1.6180000000001055e-05, 1.6235999999999334e-05, 1.6223000000002707e-05, 1.6208000000000194e-05, 1.6207999999996725e-05, 1.6208000000000194e-05, 1.6208999999999668e-05, 1.6209000000003138e-05, 1.6194000000000625e-05, 1.6235999999999334e-05, 1.6221999999999764e-05, 1.6208999999999668e-05, 1.6222999999999238e-05, 1.6221999999999764e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.6235999999999334e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.6221999999999764e-05, 1.6221999999999764e-05, 1.6222999999999238e-05, 1.6221999999999764e-05, 1.6180000000001055e-05, 1.6221999999999764e-05, 1.6208999999999668e-05, 1.6195000000000098e-05, 1.6263999999998474e-05, 1.6221999999999764e-05, 1.6207999999996725e-05, 1.6264000000001944e-05, 1.6208999999999668e-05, 1.6208000000000194e-05, 1.6221999999999764e-05, 1.6235999999999334e-05, 1.6195000000000098e-05, 1.615299999999792e-05, 1.6221999999999764e-05, 1.6249999999998904e-05, 1.6235999999999334e-05, 1.6208999999999668e-05, 1.6235999999999334e-05]</msg>
<status status="PASS" starttime="20201030 10:57:14.984" endtime="20201030 10:57:14.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.980" endtime="20201030 10:57:14.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.640" endtime="20201030 10:57:14.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.618" endtime="20201030 10:57:14.987"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.989" endtime="20201030 10:57:15.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.988" endtime="20201030 10:57:15.009"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.017" endtime="20201030 10:57:15.026"></status>
</kw>
<msg timestamp="20201030 10:57:15.027" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.016" endtime="20201030 10:57:15.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.029" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.028" endtime="20201030 10:57:15.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.031" endtime="20201030 10:57:15.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.013" endtime="20201030 10:57:15.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.011" endtime="20201030 10:57:15.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.040" endtime="20201030 10:57:15.326"></status>
</kw>
<msg timestamp="20201030 10:57:15.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017467833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017488375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.039" endtime="20201030 10:57:15.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017467833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017488375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.330" endtime="20201030 10:57:15.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.338" endtime="20201030 10:57:15.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.036" endtime="20201030 10:57:15.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.035" endtime="20201030 10:57:15.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:15.345" level="INFO">${PHILIP_RES} = [{'diff': 2.0542000000001864e-05}, {'diff': 1.9930000000001336e-05}, {'diff': 2.0028000000001794e-05}, {'diff': 1.9958000000000475e-05}, {'diff': 1.9985999999999615e-05}, {'diff': 1.99029999999982e-05...</msg>
<status status="PASS" starttime="20201030 10:57:15.341" endtime="20201030 10:57:15.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:15.349" level="INFO">${RESULT} = {'diff': [2.0542000000001864e-05, 1.9930000000001336e-05, 2.0028000000001794e-05, 1.9958000000000475e-05, 1.9985999999999615e-05, 1.99029999999982e-05, 1.997300000000299e-05, 1.9972000000000045e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:57:15.346" endtime="20201030 10:57:15.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.353" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:15.352" endtime="20201030 10:57:15.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.355" level="INFO">VALUE: [2.0542000000001864e-05, 1.9930000000001336e-05, 2.0028000000001794e-05, 1.9958000000000475e-05, 1.9985999999999615e-05, 1.99029999999982e-05, 1.997300000000299e-05, 1.9972000000000045e-05, 1.9985999999999615e-05, 1.9985999999999615e-05, 1.994500000000038e-05, 1.9972000000000045e-05, 1.990300000000167e-05, 1.9972000000000045e-05, 1.997299999999952e-05, 1.9985999999999615e-05, 1.994499999999691e-05, 1.9972000000000045e-05, 1.994500000000038e-05, 1.988899999999863e-05, 1.994500000000038e-05, 1.9972000000000045e-05, 1.995899999999995e-05, 1.9944000000000905e-05, 1.995899999999995e-05, 1.9972000000000045e-05, 1.998699999999909e-05, 1.9915999999998296e-05, 1.994500000000038e-05, 1.9944000000000905e-05, 1.998699999999909e-05, 1.9958000000000475e-05, 1.997299999999952e-05, 1.9972000000000045e-05, 1.997299999999952e-05, 1.9957999999997006e-05, 1.995899999999995e-05, 1.9929999999997866e-05, 1.993100000000081e-05, 1.9972000000000045e-05, 1.995899999999995e-05, 1.9985999999999615e-05, 1.995899999999995e-05, 1.9958000000000475e-05, 1.997299999999952e-05, 1.9972000000000045e-05, 1.994500000000038e-05, 1.9985999999999615e-05, 2.0028000000001794e-05, 1.9985999999999615e-05]</msg>
<status status="PASS" starttime="20201030 10:57:15.354" endtime="20201030 10:57:15.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.350" endtime="20201030 10:57:15.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.010" endtime="20201030 10:57:15.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.987" endtime="20201030 10:57:15.358"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:15.360" endtime="20201030 10:57:15.379"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.359" endtime="20201030 10:57:15.380"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.388" endtime="20201030 10:57:15.396"></status>
</kw>
<msg timestamp="20201030 10:57:15.397" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.387" endtime="20201030 10:57:15.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.400" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.398" endtime="20201030 10:57:15.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.401" endtime="20201030 10:57:15.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.384" endtime="20201030 10:57:15.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.382" endtime="20201030 10:57:15.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.410" endtime="20201030 10:57:15.696"></status>
</kw>
<msg timestamp="20201030 10:57:15.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01751925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017543708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:15.408" endtime="20201030 10:57:15.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01751925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017543708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:15.700" endtime="20201030 10:57:15.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.708" endtime="20201030 10:57:15.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.406" endtime="20201030 10:57:15.711"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.404" endtime="20201030 10:57:15.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:15.715" level="INFO">${PHILIP_RES} = [{'diff': 2.4458000000001506e-05}, {'diff': 2.393100000000134e-05}, {'diff': 2.397300000000005e-05}, {'diff': 2.3929999999998397e-05}, {'diff': 2.3902000000002727e-05}, {'diff': 2.3915999999998827e-05...</msg>
<status status="PASS" starttime="20201030 10:57:15.712" endtime="20201030 10:57:15.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:15.720" level="INFO">${RESULT} = {'diff': [2.4458000000001506e-05, 2.393100000000134e-05, 2.397300000000005e-05, 2.3929999999998397e-05, 2.3902000000002727e-05, 2.3915999999998827e-05, 2.393100000000134e-05, 2.394500000000091e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:57:15.716" endtime="20201030 10:57:15.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.724" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:15.723" endtime="20201030 10:57:15.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.727" level="INFO">VALUE: [2.4458000000001506e-05, 2.393100000000134e-05, 2.397300000000005e-05, 2.3929999999998397e-05, 2.3902000000002727e-05, 2.3915999999998827e-05, 2.393100000000134e-05, 2.394500000000091e-05, 2.395900000000048e-05, 2.393100000000134e-05, 2.3929999999998397e-05, 2.3929999999998397e-05, 2.391700000000177e-05, 2.393099999999787e-05, 2.388900000000263e-05, 2.3930000000001866e-05, 2.3929999999998397e-05, 2.3916000000002297e-05, 2.393100000000134e-05, 2.393099999999787e-05, 2.39030000000022e-05, 2.394499999999744e-05, 2.3915999999998827e-05, 2.3972000000000576e-05, 2.393099999999787e-05, 2.391700000000177e-05, 2.391700000000177e-05, 2.3915999999998827e-05, 2.3930000000001866e-05, 2.3887999999999687e-05, 2.39169999999983e-05, 2.393100000000134e-05, 2.398700000000309e-05, 2.3930000000001866e-05, 2.3930000000001866e-05, 2.388899999999916e-05, 2.393100000000134e-05, 2.39169999999983e-05, 2.395900000000048e-05, 2.3930000000001866e-05, 2.3929999999998397e-05, 2.390299999999873e-05, 2.393100000000134e-05, 2.39169999999983e-05, 2.391700000000177e-05, 2.3915999999998827e-05, 2.3929999999998397e-05, 2.391700000000177e-05, 2.393100000000134e-05, 2.393100000000134e-05]</msg>
<status status="PASS" starttime="20201030 10:57:15.725" endtime="20201030 10:57:15.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.721" endtime="20201030 10:57:15.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.381" endtime="20201030 10:57:15.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.358" endtime="20201030 10:57:15.728"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:15.730" endtime="20201030 10:57:15.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.729" endtime="20201030 10:57:15.750"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.758" endtime="20201030 10:57:15.768"></status>
</kw>
<msg timestamp="20201030 10:57:15.768" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.757" endtime="20201030 10:57:15.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.771" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.770" endtime="20201030 10:57:15.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.772" endtime="20201030 10:57:15.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.754" endtime="20201030 10:57:15.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.752" endtime="20201030 10:57:15.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.781" endtime="20201030 10:57:16.070"></status>
</kw>
<msg timestamp="20201030 10:57:16.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017526958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017555681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.779" endtime="20201030 10:57:16.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017526958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017555681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.074" endtime="20201030 10:57:16.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.083" endtime="20201030 10:57:16.084"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.777" endtime="20201030 10:57:16.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.775" endtime="20201030 10:57:16.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:16.089" level="INFO">${PHILIP_RES} = [{'diff': 2.872300000000133e-05}, {'diff': 2.8179999999999178e-05}, {'diff': 2.8152999999999512e-05}, {'diff': 2.816699999999908e-05}, {'diff': 2.8138000000000468e-05}, {'diff': 2.8221999999997888e-05...</msg>
<status status="PASS" starttime="20201030 10:57:16.086" endtime="20201030 10:57:16.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.093" level="INFO">${RESULT} = {'diff': [2.872300000000133e-05, 2.8179999999999178e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2.8138000000000468e-05, 2.8221999999997888e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:16.090" endtime="20201030 10:57:16.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.097" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:16.096" endtime="20201030 10:57:16.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.100" level="INFO">VALUE: [2.872300000000133e-05, 2.8179999999999178e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2.8138000000000468e-05, 2.8221999999997888e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2.816700000000255e-05, 2.8138000000000468e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.8180000000002647e-05, 2.8152999999999512e-05, 2.8165999999999608e-05, 2.8152999999999512e-05, 2.8152999999999512e-05, 2.8152000000000038e-05, 2.815300000000298e-05, 2.8112000000000276e-05, 2.818100000000212e-05, 2.816699999999908e-05, 2.8152000000000038e-05, 2.8152999999999512e-05, 2.8166000000003077e-05, 2.8097000000001232e-05, 2.815300000000298e-05, 2.8097000000001232e-05, 2.8138999999999942e-05, 2.8098000000000706e-05, 2.816700000000255e-05, 2.8152999999999512e-05, 2.8152000000000038e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.8083000000001662e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.815300000000298e-05, 2.8138999999999942e-05, 2.8165999999999608e-05, 2.818099999999865e-05, 2.8097000000001232e-05, 2.816699999999908e-05, 2.8152999999999512e-05, 2.8125000000000372e-05, 2.8111000000000802e-05, 2.8179999999999178e-05, 2.816700000000255e-05, 2.8152999999999512e-05]</msg>
<status status="PASS" starttime="20201030 10:57:16.098" endtime="20201030 10:57:16.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.094" endtime="20201030 10:57:16.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.751" endtime="20201030 10:57:16.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.728" endtime="20201030 10:57:16.101"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.104" endtime="20201030 10:57:16.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.102" endtime="20201030 10:57:16.123"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.132" endtime="20201030 10:57:16.141"></status>
</kw>
<msg timestamp="20201030 10:57:16.142" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.130" endtime="20201030 10:57:16.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.144" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.143" endtime="20201030 10:57:16.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.145" endtime="20201030 10:57:16.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.127" endtime="20201030 10:57:16.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.126" endtime="20201030 10:57:16.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.155" endtime="20201030 10:57:16.440"></status>
</kw>
<msg timestamp="20201030 10:57:16.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017786278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017819486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.153" endtime="20201030 10:57:16.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017786278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017819486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.444" endtime="20201030 10:57:16.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.453" endtime="20201030 10:57:16.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.151" endtime="20201030 10:57:16.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.149" endtime="20201030 10:57:16.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:16.459" level="INFO">${PHILIP_RES} = [{'diff': 3.320799999999985e-05}, {'diff': 3.2610999999998364e-05}, {'diff': 3.26250000000014e-05}, {'diff': 3.261100000000183e-05}, {'diff': 3.2610999999998364e-05}, {'diff': 3.2596999999998794e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:16.456" endtime="20201030 10:57:16.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.463" level="INFO">${RESULT} = {'diff': [3.320799999999985e-05, 3.2610999999998364e-05, 3.26250000000014e-05, 3.261100000000183e-05, 3.2610999999998364e-05, 3.2596999999998794e-05, 3.2596999999998794e-05, 3.26389999999975e-05, 3.26...</msg>
<status status="PASS" starttime="20201030 10:57:16.460" endtime="20201030 10:57:16.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.468" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:16.467" endtime="20201030 10:57:16.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.470" level="INFO">VALUE: [3.320799999999985e-05, 3.2610999999998364e-05, 3.26250000000014e-05, 3.261100000000183e-05, 3.2610999999998364e-05, 3.2596999999998794e-05, 3.2596999999998794e-05, 3.26389999999975e-05, 3.261100000000183e-05, 3.2610999999998364e-05, 3.265300000000054e-05, 3.259800000000174e-05, 3.2610999999998364e-05, 3.263900000000097e-05, 3.261100000000183e-05, 3.2610999999998364e-05, 3.2610999999998364e-05, 3.26250000000014e-05, 3.2596999999998794e-05, 3.2610999999998364e-05, 3.259700000000226e-05, 3.2610999999998364e-05, 3.265300000000054e-05, 3.26250000000014e-05, 3.2610999999998364e-05, 3.2610999999998364e-05, 3.261100000000183e-05, 3.2610999999998364e-05, 3.261100000000183e-05, 3.2612000000001307e-05, 3.2596999999998794e-05, 3.261100000000183e-05, 3.261100000000183e-05, 3.259799999999827e-05, 3.261100000000183e-05, 3.2582999999999224e-05, 3.2624999999997933e-05, 3.26250000000014e-05, 3.2610999999998364e-05, 3.261100000000183e-05, 3.259800000000174e-05, 3.266600000000064e-05, 3.26250000000014e-05, 3.26250000000014e-05, 3.2624999999997933e-05, 3.261100000000183e-05, 3.261100000000183e-05, 3.2610999999998364e-05, 3.26250000000014e-05, 3.2582999999999224e-05]</msg>
<status status="PASS" starttime="20201030 10:57:16.469" endtime="20201030 10:57:16.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.464" endtime="20201030 10:57:16.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.124" endtime="20201030 10:57:16.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.102" endtime="20201030 10:57:16.472"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.475" endtime="20201030 10:57:16.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.473" endtime="20201030 10:57:16.495"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.503" endtime="20201030 10:57:16.513"></status>
</kw>
<msg timestamp="20201030 10:57:16.513" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.501" endtime="20201030 10:57:16.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.516" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.514" endtime="20201030 10:57:16.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.517" endtime="20201030 10:57:16.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.498" endtime="20201030 10:57:16.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.497" endtime="20201030 10:57:16.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.526" endtime="20201030 10:57:16.811"></status>
</kw>
<msg timestamp="20201030 10:57:16.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017911139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017949042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.524" endtime="20201030 10:57:16.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017911139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017949042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.815" endtime="20201030 10:57:16.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.823" endtime="20201030 10:57:16.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.522" endtime="20201030 10:57:16.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.520" endtime="20201030 10:57:16.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:16.830" level="INFO">${PHILIP_RES} = [{'diff': 3.7902999999998854e-05}, {'diff': 3.733399999999998e-05}, {'diff': 3.731999999999694e-05}, {'diff': 3.7360999999999644e-05}, {'diff': 3.7319000000000935e-05}, {'diff': 3.7333000000000505e-05...</msg>
<status status="PASS" starttime="20201030 10:57:16.827" endtime="20201030 10:57:16.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.835" level="INFO">${RESULT} = {'diff': [3.7902999999998854e-05, 3.733399999999998e-05, 3.731999999999694e-05, 3.7360999999999644e-05, 3.7319000000000935e-05, 3.7333000000000505e-05, 3.7319000000000935e-05, 3.7318999999997465e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:16.831" endtime="20201030 10:57:16.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.839" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:16.838" endtime="20201030 10:57:16.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.842" level="INFO">VALUE: [3.7902999999998854e-05, 3.733399999999998e-05, 3.731999999999694e-05, 3.7360999999999644e-05, 3.7319000000000935e-05, 3.7333000000000505e-05, 3.7319000000000935e-05, 3.7318999999997465e-05, 3.729200000000127e-05, 3.732000000000041e-05, 3.732000000000041e-05, 3.7319000000000935e-05, 3.7332999999997035e-05, 3.7333000000000505e-05, 3.7319000000000935e-05, 3.7333000000000505e-05, 3.733399999999998e-05, 3.733399999999998e-05, 3.7291000000001795e-05, 3.7319000000000935e-05, 3.7333000000000505e-05, 3.7319000000000935e-05, 3.7318999999997465e-05, 3.730600000000084e-05, 3.734799999999955e-05, 3.7347000000000075e-05, 3.7319000000000935e-05, 3.7318999999997465e-05, 3.7333000000000505e-05, 3.7374999999999214e-05, 3.7333000000000505e-05, 3.732000000000041e-05, 3.732000000000041e-05, 3.7318999999997465e-05, 3.7333000000000505e-05, 3.7319000000000935e-05, 3.7319000000000935e-05, 3.7333000000000505e-05, 3.733399999999998e-05, 3.730600000000084e-05, 3.732000000000041e-05, 3.7319000000000935e-05, 3.7333000000000505e-05, 3.7318999999997465e-05, 3.730600000000084e-05, 3.732000000000041e-05, 3.730600000000084e-05, 3.7304999999997895e-05, 3.7318999999997465e-05, 3.7319000000000935e-05]</msg>
<status status="PASS" starttime="20201030 10:57:16.840" endtime="20201030 10:57:16.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.836" endtime="20201030 10:57:16.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.495" endtime="20201030 10:57:16.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.473" endtime="20201030 10:57:16.843"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.845" endtime="20201030 10:57:16.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.844" endtime="20201030 10:57:16.865"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.874" endtime="20201030 10:57:16.884"></status>
</kw>
<msg timestamp="20201030 10:57:16.885" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.872" endtime="20201030 10:57:16.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.887" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.886" endtime="20201030 10:57:16.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.888" endtime="20201030 10:57:16.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.870" endtime="20201030 10:57:16.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.867" endtime="20201030 10:57:16.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.897" endtime="20201030 10:57:17.182"></status>
</kw>
<msg timestamp="20201030 10:57:17.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0180365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:16.895" endtime="20201030 10:57:17.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0180365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:17.186" endtime="20201030 10:57:17.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.194" endtime="20201030 10:57:17.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.893" endtime="20201030 10:57:17.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.891" endtime="20201030 10:57:17.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:17.202" level="INFO">${PHILIP_RES} = [{'diff': 4.2861000000001676e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.222200000000148e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.226400000000019e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:17.199" endtime="20201030 10:57:17.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:17.206" level="INFO">${RESULT} = {'diff': [4.2861000000001676e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.222200000000148e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.229199999999933e-05, 4.226...</msg>
<status status="PASS" starttime="20201030 10:57:17.203" endtime="20201030 10:57:17.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.210" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:17.209" endtime="20201030 10:57:17.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.213" level="INFO">VALUE: [4.2861000000001676e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.222200000000148e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.229199999999933e-05, 4.226400000000019e-05, 4.222199999999801e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.2346999999998136e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.2237000000000524e-05, 4.224999999999715e-05, 4.223600000000105e-05, 4.227799999999976e-05, 4.226400000000019e-05, 4.223600000000105e-05, 4.227799999999976e-05, 4.227799999999976e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.225000000000062e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.223600000000105e-05, 4.226300000000072e-05, 4.223599999999758e-05, 4.227799999999976e-05, 4.2304999999999426e-05, 4.227799999999976e-05, 4.2195000000001814e-05, 4.226300000000072e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.225000000000062e-05, 4.226399999999672e-05, 4.223600000000105e-05, 4.2277000000000287e-05, 4.227799999999976e-05, 4.226399999999672e-05, 4.2277000000000287e-05, 4.227799999999976e-05, 4.227799999999976e-05, 4.226399999999672e-05]</msg>
<status status="PASS" starttime="20201030 10:57:17.211" endtime="20201030 10:57:17.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.207" endtime="20201030 10:57:17.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.866" endtime="20201030 10:57:17.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.843" endtime="20201030 10:57:17.214"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:17.217" endtime="20201030 10:57:17.236"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.215" endtime="20201030 10:57:17.237"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.245" endtime="20201030 10:57:17.255"></status>
</kw>
<msg timestamp="20201030 10:57:17.255" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.243" endtime="20201030 10:57:17.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.258" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.256" endtime="20201030 10:57:17.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.259" endtime="20201030 10:57:17.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.241" endtime="20201030 10:57:17.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.239" endtime="20201030 10:57:17.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.269" endtime="20201030 10:57:17.555"></status>
</kw>
<msg timestamp="20201030 10:57:17.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017792806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017840833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.267" endtime="20201030 10:57:17.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017792806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017840833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.559" endtime="20201030 10:57:17.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.567" endtime="20201030 10:57:17.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.265" endtime="20201030 10:57:17.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.263" endtime="20201030 10:57:17.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:17.573" level="INFO">${PHILIP_RES} = [{'diff': 4.80269999999991e-05}, {'diff': 4.744400000000065e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.745800000000022e-05}, {'diff': 4.745800000000022e-05}, {'diff': 4.7458999999999696e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:17.570" endtime="20201030 10:57:17.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:17.578" level="INFO">${RESULT} = {'diff': [4.80269999999991e-05, 4.744400000000065e-05, 4.748599999999936e-05, 4.745800000000022e-05, 4.745800000000022e-05, 4.7458999999999696e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.7471...</msg>
<status status="PASS" starttime="20201030 10:57:17.574" endtime="20201030 10:57:17.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.582" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:17.581" endtime="20201030 10:57:17.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.584" level="INFO">VALUE: [4.80269999999991e-05, 4.744400000000065e-05, 4.748599999999936e-05, 4.745800000000022e-05, 4.745800000000022e-05, 4.7458999999999696e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.745800000000022e-05, 4.7445000000000126e-05, 4.744400000000065e-05, 4.7445000000000126e-05, 4.754099999999817e-05, 4.747199999999979e-05, 4.75000000000024e-05, 4.747199999999979e-05, 4.749999999999893e-05, 4.744400000000065e-05, 4.7459000000003165e-05, 4.745800000000022e-05, 4.744400000000065e-05, 4.7444999999996657e-05, 4.745800000000022e-05, 4.7445000000000126e-05, 4.745800000000022e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.745800000000022e-05, 4.7445000000000126e-05, 4.745800000000022e-05, 4.745800000000022e-05, 4.7472999999999266e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.7445000000000126e-05, 4.745800000000022e-05, 4.7472999999999266e-05, 4.744400000000065e-05, 4.7403000000001416e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.748599999999936e-05, 4.745800000000022e-05, 4.7472999999999266e-05, 4.744399999999718e-05, 4.744400000000065e-05, 4.745800000000022e-05]</msg>
<status status="PASS" starttime="20201030 10:57:17.583" endtime="20201030 10:57:17.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.578" endtime="20201030 10:57:17.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.237" endtime="20201030 10:57:17.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.215" endtime="20201030 10:57:17.587"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:17.589" endtime="20201030 10:57:17.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.588" endtime="20201030 10:57:17.609"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.617" endtime="20201030 10:57:17.628"></status>
</kw>
<msg timestamp="20201030 10:57:17.628" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.616" endtime="20201030 10:57:17.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.631" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.629" endtime="20201030 10:57:17.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.632" endtime="20201030 10:57:17.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.613" endtime="20201030 10:57:17.635"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.611" endtime="20201030 10:57:17.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.642" endtime="20201030 10:57:17.929"></status>
</kw>
<msg timestamp="20201030 10:57:17.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017741792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017795222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.641" endtime="20201030 10:57:17.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017741792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017795222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.933" endtime="20201030 10:57:17.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.941" endtime="20201030 10:57:17.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.638" endtime="20201030 10:57:17.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.636" endtime="20201030 10:57:17.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:17.947" level="INFO">${PHILIP_RES} = [{'diff': 5.3430000000000144e-05}, {'diff': 5.28609999999978e-05}, {'diff': 5.2902000000000504e-05}, {'diff': 5.287499999999737e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.2902000000000504e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:17.944" endtime="20201030 10:57:17.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:17.952" level="INFO">${RESULT} = {'diff': [5.3430000000000144e-05, 5.28609999999978e-05, 5.2902000000000504e-05, 5.287499999999737e-05, 5.291699999999955e-05, 5.2902000000000504e-05, 5.287500000000084e-05, 5.286100000000127e-05, 5.29...</msg>
<status status="PASS" starttime="20201030 10:57:17.948" endtime="20201030 10:57:17.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.956" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:17.955" endtime="20201030 10:57:17.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.959" level="INFO">VALUE: [5.3430000000000144e-05, 5.28609999999978e-05, 5.2902000000000504e-05, 5.287499999999737e-05, 5.291699999999955e-05, 5.2902000000000504e-05, 5.287500000000084e-05, 5.286100000000127e-05, 5.290299999999998e-05, 5.293100000000259e-05, 5.287499999999737e-05, 5.290299999999998e-05, 5.286100000000127e-05, 5.287499999999737e-05, 5.280599999999899e-05, 5.28609999999978e-05, 5.288900000000041e-05, 5.288900000000041e-05, 5.287499999999737e-05, 5.287500000000084e-05, 5.288899999999694e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.290299999999998e-05, 5.287500000000084e-05, 5.287499999999737e-05, 5.280499999999952e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.2902000000000504e-05, 5.287499999999737e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.290299999999998e-05, 5.288900000000041e-05, 5.2929999999999644e-05, 5.290299999999998e-05, 5.288900000000041e-05, 5.286199999999727e-05, 5.287500000000084e-05, 5.293099999999912e-05, 5.290299999999998e-05, 5.288900000000041e-05, 5.287500000000084e-05, 5.288900000000041e-05, 5.288899999999694e-05, 5.2888000000000934e-05, 5.288900000000041e-05]</msg>
<status status="PASS" starttime="20201030 10:57:17.957" endtime="20201030 10:57:17.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.953" endtime="20201030 10:57:17.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.610" endtime="20201030 10:57:17.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.587" endtime="20201030 10:57:17.961"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:17.963" endtime="20201030 10:57:17.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.962" endtime="20201030 10:57:17.983"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.991" endtime="20201030 10:57:18.002"></status>
</kw>
<msg timestamp="20201030 10:57:18.003" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.990" endtime="20201030 10:57:18.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.005" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.004" endtime="20201030 10:57:18.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.006" endtime="20201030 10:57:18.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.987" endtime="20201030 10:57:18.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.985" endtime="20201030 10:57:18.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.015" endtime="20201030 10:57:18.301"></status>
</kw>
<msg timestamp="20201030 10:57:18.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017550361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017609472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.014" endtime="20201030 10:57:18.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017550361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017609472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.305" endtime="20201030 10:57:18.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.314" endtime="20201030 10:57:18.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.011" endtime="20201030 10:57:18.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.009" endtime="20201030 10:57:18.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:18.321" level="INFO">${PHILIP_RES} = [{'diff': 5.911100000000058e-05}, {'diff': 5.8541999999998234e-05}, {'diff': 5.856900000000137e-05}, {'diff': 5.85550000000018e-05}, {'diff': 5.8514000000002564e-05}, {'diff': 5.8556000000001274e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:18.318" endtime="20201030 10:57:18.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:18.325" level="INFO">${RESULT} = {'diff': [5.911100000000058e-05, 5.8541999999998234e-05, 5.856900000000137e-05, 5.85550000000018e-05, 5.8514000000002564e-05, 5.8556000000001274e-05, 5.85689999999979e-05, 5.8555999999997804e-05, 5.84...</msg>
<status status="PASS" starttime="20201030 10:57:18.322" endtime="20201030 10:57:18.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.330" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:18.329" endtime="20201030 10:57:18.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.332" level="INFO">VALUE: [5.911100000000058e-05, 5.8541999999998234e-05, 5.856900000000137e-05, 5.85550000000018e-05, 5.8514000000002564e-05, 5.8556000000001274e-05, 5.85689999999979e-05, 5.8555999999997804e-05, 5.8485999999999955e-05, 5.8556000000001274e-05, 5.856900000000137e-05, 5.8542000000001704e-05, 5.8528000000002134e-05, 5.85689999999979e-05, 5.855499999999833e-05, 5.85689999999979e-05, 5.8556000000001274e-05, 5.85550000000018e-05, 5.85550000000018e-05, 5.858300000000094e-05, 5.8570000000000844e-05, 5.858300000000094e-05, 5.855499999999833e-05, 5.861100000000008e-05, 5.8542000000001704e-05, 5.856900000000137e-05, 5.858300000000094e-05, 5.8570000000000844e-05, 5.8556000000001274e-05, 5.8541999999998234e-05, 5.8513999999999095e-05, 5.8556000000001274e-05, 5.8570000000000844e-05, 5.856900000000137e-05, 5.8485999999999955e-05, 5.8570000000000844e-05, 5.8541999999998234e-05, 5.858299999999747e-05, 5.85550000000018e-05, 5.8556000000001274e-05, 5.8584000000000414e-05, 5.854100000000223e-05, 5.8500000000002994e-05, 5.8513999999999095e-05, 5.8555999999997804e-05, 5.854099999999876e-05, 5.856900000000137e-05, 5.8570000000000844e-05, 5.8584000000000414e-05, 5.85550000000018e-05]</msg>
<status status="PASS" starttime="20201030 10:57:18.331" endtime="20201030 10:57:18.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.326" endtime="20201030 10:57:18.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.984" endtime="20201030 10:57:18.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.961" endtime="20201030 10:57:18.334"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.336" endtime="20201030 10:57:18.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.335" endtime="20201030 10:57:18.356"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.366" endtime="20201030 10:57:18.378"></status>
</kw>
<msg timestamp="20201030 10:57:18.378" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.363" endtime="20201030 10:57:18.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.381" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.379" endtime="20201030 10:57:18.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.382" endtime="20201030 10:57:18.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.360" endtime="20201030 10:57:18.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.358" endtime="20201030 10:57:18.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.392" endtime="20201030 10:57:18.703"></status>
</kw>
<msg timestamp="20201030 10:57:18.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019446042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019511083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.391" endtime="20201030 10:57:18.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019446042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019511083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.707" endtime="20201030 10:57:18.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.715" endtime="20201030 10:57:18.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.388" endtime="20201030 10:57:18.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.386" endtime="20201030 10:57:18.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:18.722" level="INFO">${PHILIP_RES} = [{'diff': 6.504099999999832e-05}, {'diff': 6.448599999999902e-05}, {'diff': 6.447300000000239e-05}, {'diff': 6.443000000000074e-05}, {'diff': 6.443100000000021e-05}, {'diff': 6.452799999999773e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:18.719" endtime="20201030 10:57:18.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:18.726" level="INFO">${RESULT} = {'diff': [6.504099999999832e-05, 6.448599999999902e-05, 6.447300000000239e-05, 6.443000000000074e-05, 6.443100000000021e-05, 6.452799999999773e-05, 6.444499999999978e-05, 6.437500000000193e-05, 6.4444...</msg>
<status status="PASS" starttime="20201030 10:57:18.723" endtime="20201030 10:57:18.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.730" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:18.729" endtime="20201030 10:57:18.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.732" level="INFO">VALUE: [6.504099999999832e-05, 6.448599999999902e-05, 6.447300000000239e-05, 6.443000000000074e-05, 6.443100000000021e-05, 6.452799999999773e-05, 6.444499999999978e-05, 6.437500000000193e-05, 6.444499999999978e-05, 6.444399999999684e-05, 6.443100000000021e-05, 6.445799999999988e-05, 6.447300000000239e-05, 6.44440000000003e-05, 6.445899999999935e-05, 6.441600000000117e-05, 6.447199999999945e-05, 6.445799999999988e-05, 6.444499999999978e-05, 6.44440000000003e-05, 6.445799999999988e-05, 6.44440000000003e-05, 6.44440000000003e-05, 6.44440000000003e-05, 6.44440000000003e-05, 6.44440000000003e-05, 6.441700000000064e-05, 6.444499999999978e-05, 6.44440000000003e-05, 6.44440000000003e-05, 6.44440000000003e-05, 6.44440000000003e-05, 6.445799999999988e-05, 6.442999999999727e-05, 6.44440000000003e-05, 6.441700000000064e-05, 6.443100000000021e-05, 6.44029999999976e-05, 6.44440000000003e-05, 6.441700000000064e-05, 6.445800000000335e-05, 6.444499999999978e-05, 6.443000000000074e-05, 6.444499999999978e-05, 6.450000000000206e-05, 6.444499999999978e-05, 6.445799999999988e-05, 6.438899999999803e-05, 6.441700000000064e-05, 6.444499999999978e-05]</msg>
<status status="PASS" starttime="20201030 10:57:18.731" endtime="20201030 10:57:18.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.727" endtime="20201030 10:57:18.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.357" endtime="20201030 10:57:18.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.334" endtime="20201030 10:57:18.735"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.738" endtime="20201030 10:57:18.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.736" endtime="20201030 10:57:18.757"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.766" endtime="20201030 10:57:18.776"></status>
</kw>
<msg timestamp="20201030 10:57:18.777" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.764" endtime="20201030 10:57:18.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.779" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.778" endtime="20201030 10:57:18.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.780" endtime="20201030 10:57:18.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.761" endtime="20201030 10:57:18.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.759" endtime="20201030 10:57:18.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.789" endtime="20201030 10:57:19.075"></status>
</kw>
<msg timestamp="20201030 10:57:19.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017750972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017822125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.788" endtime="20201030 10:57:19.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017750972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017822125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.079" endtime="20201030 10:57:19.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.087" endtime="20201030 10:57:19.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.785" endtime="20201030 10:57:19.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.783" endtime="20201030 10:57:19.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:19.093" level="INFO">${PHILIP_RES} = [{'diff': 7.115300000000088e-05}, {'diff': 7.066600000000048e-05}, {'diff': 7.061100000000167e-05}, {'diff': 7.058299999999906e-05}, {'diff': 7.05979999999981e-05}, {'diff': 7.058299999999906e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:19.090" endtime="20201030 10:57:19.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.098" level="INFO">${RESULT} = {'diff': [7.115300000000088e-05, 7.066600000000048e-05, 7.061100000000167e-05, 7.058299999999906e-05, 7.05979999999981e-05, 7.058299999999906e-05, 7.05979999999981e-05, 7.06109999999982e-05, 7.0625000...</msg>
<status status="PASS" starttime="20201030 10:57:19.094" endtime="20201030 10:57:19.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.102" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:19.101" endtime="20201030 10:57:19.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.105" level="INFO">VALUE: [7.115300000000088e-05, 7.066600000000048e-05, 7.061100000000167e-05, 7.058299999999906e-05, 7.05979999999981e-05, 7.058299999999906e-05, 7.05979999999981e-05, 7.06109999999982e-05, 7.062500000000124e-05, 7.065300000000038e-05, 7.059699999999863e-05, 7.05970000000021e-05, 7.061100000000167e-05, 7.058299999999906e-05, 7.06109999999982e-05, 7.061100000000167e-05, 7.059699999999863e-05, 7.068099999999952e-05, 7.062500000000124e-05, 7.061200000000115e-05, 7.06109999999982e-05, 7.061100000000167e-05, 7.062500000000124e-05, 7.058299999999906e-05, 7.05970000000021e-05, 7.05970000000021e-05, 7.059699999999863e-05, 7.059699999999863e-05, 7.061100000000167e-05, 7.059699999999863e-05, 7.05979999999981e-05, 7.058300000000253e-05, 7.058399999999854e-05, 7.06109999999982e-05, 7.05970000000021e-05, 7.059699999999863e-05, 7.059699999999863e-05, 7.061100000000167e-05, 7.066699999999995e-05, 7.06109999999982e-05, 7.059699999999863e-05, 7.059800000000158e-05, 7.05689999999995e-05, 7.058399999999854e-05, 7.061100000000167e-05, 7.059699999999863e-05, 7.063899999999734e-05, 7.062500000000124e-05, 7.061100000000167e-05, 7.059699999999863e-05]</msg>
<status status="PASS" starttime="20201030 10:57:19.103" endtime="20201030 10:57:19.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.099" endtime="20201030 10:57:19.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.758" endtime="20201030 10:57:19.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.736" endtime="20201030 10:57:19.107"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:19.109" endtime="20201030 10:57:19.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.108" endtime="20201030 10:57:19.129"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.137" endtime="20201030 10:57:19.149"></status>
</kw>
<msg timestamp="20201030 10:57:19.149" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.135" endtime="20201030 10:57:19.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.152" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.150" endtime="20201030 10:57:19.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.153" endtime="20201030 10:57:19.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.133" endtime="20201030 10:57:19.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.131" endtime="20201030 10:57:19.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.162" endtime="20201030 10:57:19.447"></status>
</kw>
<msg timestamp="20201030 10:57:19.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017443903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017521486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.160" endtime="20201030 10:57:19.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017443903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017521486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.451" endtime="20201030 10:57:19.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.459" endtime="20201030 10:57:19.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.158" endtime="20201030 10:57:19.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.156" endtime="20201030 10:57:19.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:19.466" level="INFO">${PHILIP_RES} = [{'diff': 7.758299999999912e-05}, {'diff': 7.698600000000111e-05}, {'diff': 7.700000000000068e-05}, {'diff': 7.700000000000068e-05}, {'diff': 7.698599999999764e-05}, {'diff': 7.701400000000025e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:19.463" endtime="20201030 10:57:19.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.470" level="INFO">${RESULT} = {'diff': [7.758299999999912e-05, 7.698600000000111e-05, 7.700000000000068e-05, 7.700000000000068e-05, 7.698599999999764e-05, 7.701400000000025e-05, 7.701400000000025e-05, 7.699999999999721e-05, 7.7068...</msg>
<status status="PASS" starttime="20201030 10:57:19.467" endtime="20201030 10:57:19.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.474" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:19.473" endtime="20201030 10:57:19.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.477" level="INFO">VALUE: [7.758299999999912e-05, 7.698600000000111e-05, 7.700000000000068e-05, 7.700000000000068e-05, 7.698599999999764e-05, 7.701400000000025e-05, 7.701400000000025e-05, 7.699999999999721e-05, 7.706899999999905e-05, 7.699999999999721e-05, 7.695800000000197e-05, 7.698600000000111e-05, 7.698599999999764e-05, 7.69029999999997e-05, 7.699999999999721e-05, 7.694500000000187e-05, 7.701400000000025e-05, 7.698599999999764e-05, 7.698600000000111e-05, 7.698599999999764e-05, 7.697300000000101e-05, 7.700000000000068e-05, 7.698599999999764e-05, 7.700000000000068e-05, 7.698599999999764e-05, 7.697300000000101e-05, 7.700000000000068e-05, 7.698599999999764e-05, 7.698600000000111e-05, 7.695899999999797e-05, 7.691700000000273e-05, 7.698600000000111e-05, 7.698599999999764e-05, 7.700000000000068e-05, 7.695899999999797e-05, 7.700000000000068e-05, 7.700000000000068e-05, 7.699999999999721e-05, 7.698600000000111e-05, 7.698599999999764e-05, 7.698700000000058e-05, 7.698600000000111e-05, 7.698600000000111e-05, 7.698600000000111e-05, 7.702700000000035e-05, 7.697199999999807e-05, 7.698600000000111e-05, 7.701400000000025e-05, 7.698600000000111e-05, 7.697200000000154e-05]</msg>
<status status="PASS" starttime="20201030 10:57:19.475" endtime="20201030 10:57:19.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.471" endtime="20201030 10:57:19.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.129" endtime="20201030 10:57:19.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.107" endtime="20201030 10:57:19.479"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:19.481" endtime="20201030 10:57:19.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.479" endtime="20201030 10:57:19.501"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.509" endtime="20201030 10:57:19.521"></status>
</kw>
<msg timestamp="20201030 10:57:19.521" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.507" endtime="20201030 10:57:19.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.524" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.522" endtime="20201030 10:57:19.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.525" endtime="20201030 10:57:19.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.505" endtime="20201030 10:57:19.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.503" endtime="20201030 10:57:19.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.534" endtime="20201030 10:57:19.821"></status>
</kw>
<msg timestamp="20201030 10:57:19.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017333458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017417667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.533" endtime="20201030 10:57:19.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017333458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017417667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.825" endtime="20201030 10:57:19.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.833" endtime="20201030 10:57:19.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.530" endtime="20201030 10:57:19.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.529" endtime="20201030 10:57:19.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:19.840" level="INFO">${PHILIP_RES} = [{'diff': 8.420900000000175e-05}, {'diff': 8.369500000000168e-05}, {'diff': 8.36110000000008e-05}, {'diff': 8.361099999999733e-05}, {'diff': 8.362500000000037e-05}, {'diff': 8.363899999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:19.837" endtime="20201030 10:57:19.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.844" level="INFO">${RESULT} = {'diff': [8.420900000000175e-05, 8.369500000000168e-05, 8.36110000000008e-05, 8.361099999999733e-05, 8.362500000000037e-05, 8.363899999999994e-05, 8.36110000000008e-05, 8.363899999999994e-05, 8.361100...</msg>
<status status="PASS" starttime="20201030 10:57:19.841" endtime="20201030 10:57:19.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.848" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:19.847" endtime="20201030 10:57:19.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.850" level="INFO">VALUE: [8.420900000000175e-05, 8.369500000000168e-05, 8.36110000000008e-05, 8.361099999999733e-05, 8.362500000000037e-05, 8.363899999999994e-05, 8.36110000000008e-05, 8.363899999999994e-05, 8.36110000000008e-05, 8.36110000000008e-05, 8.362500000000037e-05, 8.362500000000037e-05, 8.362500000000037e-05, 8.362500000000037e-05, 8.36249999999969e-05, 8.363899999999994e-05, 8.363899999999994e-05, 8.357000000000156e-05, 8.357000000000156e-05, 8.362500000000037e-05, 8.36659999999996e-05, 8.362500000000037e-05, 8.361200000000027e-05, 8.363899999999994e-05, 8.361099999999733e-05, 8.365200000000003e-05, 8.36110000000008e-05, 8.372199999999788e-05, 8.367999999999917e-05, 8.361200000000027e-05, 8.363800000000046e-05, 8.357000000000156e-05, 8.365200000000003e-05, 8.36110000000008e-05, 8.362500000000037e-05, 8.356899999999862e-05, 8.359699999999776e-05, 8.363899999999994e-05, 8.359700000000123e-05, 8.363899999999994e-05, 8.359700000000123e-05, 8.363899999999994e-05, 8.363899999999994e-05, 8.363899999999994e-05, 8.363899999999994e-05, 8.361099999999733e-05, 8.36249999999969e-05, 8.361099999999733e-05, 8.358300000000166e-05, 8.363899999999994e-05]</msg>
<status status="PASS" starttime="20201030 10:57:19.849" endtime="20201030 10:57:19.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.845" endtime="20201030 10:57:19.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.501" endtime="20201030 10:57:19.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.479" endtime="20201030 10:57:19.853"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:19.855" endtime="20201030 10:57:19.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.854" endtime="20201030 10:57:19.875"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.883" endtime="20201030 10:57:19.896"></status>
</kw>
<msg timestamp="20201030 10:57:19.896" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.882" endtime="20201030 10:57:19.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.899" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.897" endtime="20201030 10:57:19.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.900" endtime="20201030 10:57:19.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.879" endtime="20201030 10:57:19.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.877" endtime="20201030 10:57:19.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.909" endtime="20201030 10:57:20.194"></status>
</kw>
<msg timestamp="20201030 10:57:20.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017566403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.907" endtime="20201030 10:57:20.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017566403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.199" endtime="20201030 10:57:20.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.207" endtime="20201030 10:57:20.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.905" endtime="20201030 10:57:20.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.903" endtime="20201030 10:57:20.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:20.213" level="INFO">${PHILIP_RES} = [{'diff': 9.105600000000255e-05}, {'diff': 9.051399999999987e-05}, {'diff': 9.048599999999726e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.047300000000064e-05}, {'diff': 9.05000000000003e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:20.210" endtime="20201030 10:57:20.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:20.218" level="INFO">${RESULT} = {'diff': [9.105600000000255e-05, 9.051399999999987e-05, 9.048599999999726e-05, 9.05000000000003e-05, 9.047300000000064e-05, 9.05000000000003e-05, 9.048600000000073e-05, 9.05000000000003e-05, 9.0471999...</msg>
<status status="PASS" starttime="20201030 10:57:20.214" endtime="20201030 10:57:20.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.222" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:20.221" endtime="20201030 10:57:20.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.225" level="INFO">VALUE: [9.105600000000255e-05, 9.051399999999987e-05, 9.048599999999726e-05, 9.05000000000003e-05, 9.047300000000064e-05, 9.05000000000003e-05, 9.048600000000073e-05, 9.05000000000003e-05, 9.047199999999769e-05, 9.041699999999889e-05, 9.051399999999987e-05, 9.048600000000073e-05, 9.05000000000003e-05, 9.051399999999987e-05, 9.051399999999987e-05, 9.051399999999987e-05, 9.042999999999898e-05, 9.048600000000073e-05, 9.049999999999683e-05, 9.051399999999987e-05, 9.05000000000003e-05, 9.05000000000003e-05, 9.05000000000003e-05, 9.05000000000003e-05, 9.049999999999683e-05, 9.05000000000003e-05, 9.048599999999726e-05, 9.052799999999944e-05, 9.047300000000064e-05, 9.048600000000073e-05, 9.04870000000002e-05, 9.048600000000073e-05, 9.055599999999858e-05, 9.052699999999997e-05, 9.049999999999683e-05, 9.04870000000002e-05, 9.05000000000003e-05, 9.05000000000003e-05, 9.04870000000002e-05, 9.051399999999987e-05, 9.048599999999726e-05, 9.05000000000003e-05, 9.052799999999944e-05, 9.04870000000002e-05, 9.048600000000073e-05, 9.05000000000003e-05, 9.051399999999987e-05, 9.052799999999944e-05, 9.05000000000003e-05, 9.048600000000073e-05]</msg>
<status status="PASS" starttime="20201030 10:57:20.223" endtime="20201030 10:57:20.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.219" endtime="20201030 10:57:20.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.876" endtime="20201030 10:57:20.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.853" endtime="20201030 10:57:20.227"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:20.229" endtime="20201030 10:57:20.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.228" endtime="20201030 10:57:20.249"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.257" endtime="20201030 10:57:20.270"></status>
</kw>
<msg timestamp="20201030 10:57:20.270" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.255" endtime="20201030 10:57:20.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.273" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.271" endtime="20201030 10:57:20.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.274" endtime="20201030 10:57:20.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.253" endtime="20201030 10:57:20.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.251" endtime="20201030 10:57:20.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.283" endtime="20201030 10:57:20.568"></status>
</kw>
<msg timestamp="20201030 10:57:20.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017467097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.281" endtime="20201030 10:57:20.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017467097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.572" endtime="20201030 10:57:20.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.580" endtime="20201030 10:57:20.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.279" endtime="20201030 10:57:20.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.277" endtime="20201030 10:57:20.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:20.588" level="INFO">${PHILIP_RES} = [{'diff': 9.823599999999807e-05}, {'diff': 9.762500000000049e-05}, {'diff': 9.762499999999702e-05}, {'diff': 9.759699999999788e-05}, {'diff': 9.759699999999788e-05}, {'diff': 9.754199999999907e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:20.584" endtime="20201030 10:57:20.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:20.592" level="INFO">${RESULT} = {'diff': [9.823599999999807e-05, 9.762500000000049e-05, 9.762499999999702e-05, 9.759699999999788e-05, 9.759699999999788e-05, 9.754199999999907e-05, 9.756899999999874e-05, 9.759700000000135e-05, 9.7625...</msg>
<status status="PASS" starttime="20201030 10:57:20.589" endtime="20201030 10:57:20.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.596" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:20.595" endtime="20201030 10:57:20.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.598" level="INFO">VALUE: [9.823599999999807e-05, 9.762500000000049e-05, 9.762499999999702e-05, 9.759699999999788e-05, 9.759699999999788e-05, 9.754199999999907e-05, 9.756899999999874e-05, 9.759700000000135e-05, 9.762500000000049e-05, 9.761200000000039e-05, 9.76669999999992e-05, 9.761100000000092e-05, 9.759800000000082e-05, 9.759699999999788e-05, 9.76669999999992e-05, 9.762500000000049e-05, 9.761200000000039e-05, 9.761100000000092e-05, 9.762500000000049e-05, 9.763900000000006e-05, 9.761100000000092e-05, 9.761100000000092e-05, 9.761100000000092e-05, 9.762500000000049e-05, 9.759700000000135e-05, 9.759800000000082e-05, 9.761099999999745e-05, 9.761099999999745e-05, 9.762499999999702e-05, 9.762499999999702e-05, 9.758299999999831e-05, 9.759700000000135e-05, 9.763900000000006e-05, 9.755599999999864e-05, 9.761100000000092e-05, 9.761100000000092e-05, 9.763800000000059e-05, 9.761100000000092e-05, 9.762500000000049e-05, 9.762500000000049e-05, 9.761199999999692e-05, 9.766700000000267e-05, 9.762500000000049e-05, 9.762500000000049e-05, 9.761100000000092e-05, 9.762500000000049e-05, 9.762500000000049e-05, 9.761200000000039e-05, 9.761100000000092e-05, 9.762500000000049e-05]</msg>
<status status="PASS" starttime="20201030 10:57:20.597" endtime="20201030 10:57:20.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.592" endtime="20201030 10:57:20.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.250" endtime="20201030 10:57:20.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.227" endtime="20201030 10:57:20.600"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:20.603" endtime="20201030 10:57:20.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.601" endtime="20201030 10:57:20.622"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.631" endtime="20201030 10:57:20.643"></status>
</kw>
<msg timestamp="20201030 10:57:20.644" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.629" endtime="20201030 10:57:20.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.646" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.645" endtime="20201030 10:57:20.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.647" endtime="20201030 10:57:20.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.627" endtime="20201030 10:57:20.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.625" endtime="20201030 10:57:20.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.657" endtime="20201030 10:57:20.943"></status>
</kw>
<msg timestamp="20201030 10:57:20.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017716819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.655" endtime="20201030 10:57:20.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017716819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.947" endtime="20201030 10:57:20.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.955" endtime="20201030 10:57:20.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.653" endtime="20201030 10:57:20.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.651" endtime="20201030 10:57:20.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:20.961" level="INFO">${PHILIP_RES} = [{'diff': 0.00010552700000000109}, {'diff': 0.00010494399999999918}, {'diff': 0.00010498599999999789}, {'diff': 0.00010500000000000093}, {'diff': 0.00010494399999999918}, {'diff': 0.000104957999999998...</msg>
<status status="PASS" starttime="20201030 10:57:20.958" endtime="20201030 10:57:20.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:20.966" level="INFO">${RESULT} = {'diff': [0.00010552700000000109, 0.00010494399999999918, 0.00010498599999999789, 0.00010500000000000093, 0.00010494399999999918, 0.00010495799999999875, 0.00010495899999999822, 0.00010495899999999822...</msg>
<status status="PASS" starttime="20201030 10:57:20.962" endtime="20201030 10:57:20.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.970" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:20.969" endtime="20201030 10:57:20.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.972" level="INFO">VALUE: [0.00010552700000000109, 0.00010494399999999918, 0.00010498599999999789, 0.00010500000000000093, 0.00010494399999999918, 0.00010495799999999875, 0.00010495899999999822, 0.00010495899999999822, 0.00010497199999999832, 0.00010497200000000179, 0.00010498600000000136, 0.00010495800000000222, 0.00010497200000000179, 0.00010494400000000265, 0.00010497300000000126, 0.00010497200000000179, 0.00010502800000000007, 0.0001050140000000005, 0.00010494499999999865, 0.00010495799999999875, 0.00010495799999999875, 0.00010497200000000179, 0.00010493099999999908, 0.00010495799999999875, 0.00010497199999999832, 0.00010495899999999822, 0.00010495899999999822, 0.00010495799999999875, 0.00010495799999999875, 0.00010497200000000179, 0.00010497200000000179, 0.00010497200000000179, 0.00010498600000000136, 0.00010497300000000126, 0.00010497200000000179, 0.00010498600000000136, 0.00010498600000000136, 0.00010495900000000169, 0.00010497200000000179, 0.00010495800000000222, 0.00010495799999999875, 0.0001050140000000005, 0.00010494399999999918, 0.00010498599999999789, 0.00010494499999999865, 0.00010494499999999865, 0.00010500000000000093, 0.00010494399999999918, 0.0001050140000000005, 0.00010497199999999832]</msg>
<status status="PASS" starttime="20201030 10:57:20.971" endtime="20201030 10:57:20.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.966" endtime="20201030 10:57:20.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.623" endtime="20201030 10:57:20.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.601" endtime="20201030 10:57:20.975"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:20.977" endtime="20201030 10:57:20.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.976" endtime="20201030 10:57:20.997"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.005" endtime="20201030 10:57:21.019"></status>
</kw>
<msg timestamp="20201030 10:57:21.019" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.004" endtime="20201030 10:57:21.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.022" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.021" endtime="20201030 10:57:21.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.023" endtime="20201030 10:57:21.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.001" endtime="20201030 10:57:21.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.999" endtime="20201030 10:57:21.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.032" endtime="20201030 10:57:21.317"></status>
</kw>
<msg timestamp="20201030 10:57:21.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017508861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017622, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:21.030" endtime="20201030 10:57:21.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017508861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017622, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:21.321" endtime="20201030 10:57:21.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.329" endtime="20201030 10:57:21.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.028" endtime="20201030 10:57:21.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.026" endtime="20201030 10:57:21.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:21.335" level="INFO">${PHILIP_RES} = [{'diff': 0.00011313899999999821}, {'diff': 0.00011256899999999986}, {'diff': 0.000112596999999999}, {'diff': 0.00011256999999999934}, {'diff': 0.00011255599999999977}, {'diff': 0.00011256899999999986...</msg>
<status status="PASS" starttime="20201030 10:57:21.332" endtime="20201030 10:57:21.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:21.340" level="INFO">${RESULT} = {'diff': [0.00011313899999999821, 0.00011256899999999986, 0.000112596999999999, 0.00011256999999999934, 0.00011255599999999977, 0.00011256899999999986, 0.00011256899999999986, 0.00011255599999999977, ...</msg>
<status status="PASS" starttime="20201030 10:57:21.336" endtime="20201030 10:57:21.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.344" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:21.343" endtime="20201030 10:57:21.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.347" level="INFO">VALUE: [0.00011313899999999821, 0.00011256899999999986, 0.000112596999999999, 0.00011256999999999934, 0.00011255599999999977, 0.00011256899999999986, 0.00011256899999999986, 0.00011255599999999977, 0.00011256899999999986, 0.00011261100000000204, 0.00011255599999999977, 0.00011258399999999891, 0.00011252700000000115, 0.00011254100000000072, 0.00011255599999999977, 0.00011255599999999977, 0.0001125830000000029, 0.00011258299999999943, 0.0001125420000000002, 0.00011255599999999977, 0.00011256899999999986, 0.0001125550000000003, 0.00011262499999999814, 0.00011255599999999977, 0.00011254100000000072, 0.00011258299999999943, 0.00011256999999999934, 0.00011249999999999802, 0.0001125550000000003, 0.0001125420000000002, 0.0001125420000000002, 0.0001125550000000003, 0.00011256899999999986, 0.00011262500000000161, 0.00011256999999999934, 0.00011252700000000115, 0.00011258299999999943, 0.00011256999999999934, 0.00011255599999999977, 0.00011256899999999986, 0.00011258299999999943, 0.00011250000000000149, 0.00011255599999999977, 0.00011256899999999986, 0.00011256899999999986, 0.0001125700000000028, 0.00011255599999999977, 0.00011256899999999986, 0.00011256899999999986, 0.00011254199999999673]</msg>
<status status="PASS" starttime="20201030 10:57:21.346" endtime="20201030 10:57:21.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.341" endtime="20201030 10:57:21.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.998" endtime="20201030 10:57:21.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.975" endtime="20201030 10:57:21.349"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:21.351" endtime="20201030 10:57:21.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.350" endtime="20201030 10:57:21.371"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.379" endtime="20201030 10:57:21.393"></status>
</kw>
<msg timestamp="20201030 10:57:21.394" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.378" endtime="20201030 10:57:21.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.396" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.395" endtime="20201030 10:57:21.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.397" endtime="20201030 10:57:21.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.375" endtime="20201030 10:57:21.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.373" endtime="20201030 10:57:21.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.406" endtime="20201030 10:57:21.698"></status>
</kw>
<msg timestamp="20201030 10:57:21.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017569514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017690486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.405" endtime="20201030 10:57:21.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017569514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017690486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.702" endtime="20201030 10:57:21.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.711" endtime="20201030 10:57:21.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.402" endtime="20201030 10:57:21.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.401" endtime="20201030 10:57:21.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:21.717" level="INFO">${PHILIP_RES} = [{'diff': 0.00012097199999999697}, {'diff': 0.00012038899999999852}, {'diff': 0.00012037499999999896}, {'diff': 0.00012037500000000242}, {'diff': 0.00012036100000000285}, {'diff': 0.000120346999999999...</msg>
<status status="PASS" starttime="20201030 10:57:21.714" endtime="20201030 10:57:21.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:21.721" level="INFO">${RESULT} = {'diff': [0.00012097199999999697, 0.00012038899999999852, 0.00012037499999999896, 0.00012037500000000242, 0.00012036100000000285, 0.00012034699999999982, 0.0001204310000000007, 0.00012038799999999905,...</msg>
<status status="PASS" starttime="20201030 10:57:21.718" endtime="20201030 10:57:21.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.726" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:21.725" endtime="20201030 10:57:21.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.728" level="INFO">VALUE: [0.00012097199999999697, 0.00012038899999999852, 0.00012037499999999896, 0.00012037500000000242, 0.00012036100000000285, 0.00012034699999999982, 0.0001204310000000007, 0.00012038799999999905, 0.0001203050000000011, 0.00012037499999999896, 0.00012036099999999939, 0.000120389000000002, 0.00012036200000000233, 0.00012040300000000156, 0.00012029199999999754, 0.00012037499999999896, 0.00012036099999999939, 0.00012037499999999896, 0.00012034699999999982, 0.00012036100000000285, 0.00012030499999999764, 0.00012036099999999939, 0.00012037499999999896, 0.00012037499999999896, 0.00012036199999999886, 0.00012036099999999939, 0.00012037499999999896, 0.00012036100000000285, 0.00012037500000000242, 0.00012036099999999939, 0.00012036099999999939, 0.00012034799999999929, 0.00012036099999999939, 0.00012037499999999896, 0.00012037500000000242, 0.00012036100000000285, 0.00012038800000000252, 0.00012036099999999939, 0.00012037499999999896, 0.00012038899999999852, 0.00012036099999999939, 0.00012036199999999886, 0.00012036100000000285, 0.00012041600000000166, 0.00012036099999999939, 0.00012034699999999982, 0.00012037499999999896, 0.00012038899999999852, 0.00012041599999999819, 0.00012036099999999939]</msg>
<status status="PASS" starttime="20201030 10:57:21.727" endtime="20201030 10:57:21.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.722" endtime="20201030 10:57:21.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.372" endtime="20201030 10:57:21.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.349" endtime="20201030 10:57:21.730"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:21.732" endtime="20201030 10:57:21.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.731" endtime="20201030 10:57:21.752"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.760" endtime="20201030 10:57:21.775"></status>
</kw>
<msg timestamp="20201030 10:57:21.776" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.759" endtime="20201030 10:57:21.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.778" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.777" endtime="20201030 10:57:21.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.779" endtime="20201030 10:57:21.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.756" endtime="20201030 10:57:21.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.754" endtime="20201030 10:57:21.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.789" endtime="20201030 10:57:22.075"></status>
</kw>
<msg timestamp="20201030 10:57:22.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017779139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.788" endtime="20201030 10:57:22.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017779139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.079" endtime="20201030 10:57:22.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.087" endtime="20201030 10:57:22.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.785" endtime="20201030 10:57:22.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.783" endtime="20201030 10:57:22.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:22.093" level="INFO">${PHILIP_RES} = [{'diff': 0.00012904199999999935}, {'diff': 0.00012848600000000057}, {'diff': 0.0001284590000000009}, {'diff': 0.00012845800000000143}, {'diff': 0.00012837500000000002}, {'diff': 0.0001284579999999979...</msg>
<status status="PASS" starttime="20201030 10:57:22.090" endtime="20201030 10:57:22.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:22.097" level="INFO">${RESULT} = {'diff': [0.00012904199999999935, 0.00012848600000000057, 0.0001284590000000009, 0.00012845800000000143, 0.00012837500000000002, 0.00012845799999999796, 0.0001284439999999984, 0.000128472000000001, 0....</msg>
<status status="PASS" starttime="20201030 10:57:22.094" endtime="20201030 10:57:22.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.102" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:22.101" endtime="20201030 10:57:22.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.104" level="INFO">VALUE: [0.00012904199999999935, 0.00012848600000000057, 0.0001284590000000009, 0.00012845800000000143, 0.00012837500000000002, 0.00012845799999999796, 0.0001284439999999984, 0.000128472000000001, 0.00012845800000000143, 0.00012845799999999796, 0.00012844400000000186, 0.00012844500000000134, 0.00012850000000000014, 0.00012845800000000143, 0.0001284170000000022, 0.00012842999999999882, 0.00012852799999999928, 0.00012847300000000048, 0.00012845800000000143, 0.00012845799999999796, 0.00012842999999999882, 0.00012843100000000177, 0.00012844499999999787, 0.0001284439999999984, 0.000128472000000001, 0.00012844400000000186, 0.00012844499999999787, 0.0001284590000000009, 0.00012844400000000186, 0.00012845799999999796, 0.00012845799999999796, 0.0001284590000000009, 0.0001283889999999996, 0.00012848600000000057, 0.0001284439999999984, 0.0001284590000000009, 0.0001284590000000009, 0.00012845799999999796, 0.00012840299999999916, 0.00012845799999999796, 0.00012844499999999787, 0.00012844500000000134, 0.00012845800000000143, 0.0001284439999999984, 0.00012847199999999753, 0.00012844500000000134, 0.00012845800000000143, 0.00012845799999999796, 0.000128472000000001, 0.0001284170000000022]</msg>
<status status="PASS" starttime="20201030 10:57:22.103" endtime="20201030 10:57:22.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.098" endtime="20201030 10:57:22.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.753" endtime="20201030 10:57:22.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.730" endtime="20201030 10:57:22.107"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:22.109" endtime="20201030 10:57:22.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.108" endtime="20201030 10:57:22.129"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.137" endtime="20201030 10:57:22.151"></status>
</kw>
<msg timestamp="20201030 10:57:22.152" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.135" endtime="20201030 10:57:22.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.154" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.153" endtime="20201030 10:57:22.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.155" endtime="20201030 10:57:22.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.133" endtime="20201030 10:57:22.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.131" endtime="20201030 10:57:22.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.164" endtime="20201030 10:57:22.449"></status>
</kw>
<msg timestamp="20201030 10:57:22.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017574194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.163" endtime="20201030 10:57:22.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017574194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.453" endtime="20201030 10:57:22.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.461" endtime="20201030 10:57:22.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.160" endtime="20201030 10:57:22.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.158" endtime="20201030 10:57:22.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:22.468" level="INFO">${PHILIP_RES} = [{'diff': 0.00013734700000000294}, {'diff': 0.00013676400000000102}, {'diff': 0.00013676400000000102}, {'diff': 0.00013676400000000102}, {'diff': 0.00013676399999999755}, {'diff': 0.000136805999999999...</msg>
<status status="PASS" starttime="20201030 10:57:22.465" endtime="20201030 10:57:22.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:22.473" level="INFO">${RESULT} = {'diff': [0.00013734700000000294, 0.00013676400000000102, 0.00013676400000000102, 0.00013676400000000102, 0.00013676399999999755, 0.00013680599999999973, 0.00013679200000000016, 0.0001367780000000006,...</msg>
<status status="PASS" starttime="20201030 10:57:22.469" endtime="20201030 10:57:22.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.477" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:22.476" endtime="20201030 10:57:22.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.479" level="INFO">VALUE: [0.00013734700000000294, 0.00013676400000000102, 0.00013676400000000102, 0.00013676400000000102, 0.00013676399999999755, 0.00013680599999999973, 0.00013679200000000016, 0.0001367780000000006, 0.00013676400000000102, 0.0001367780000000006, 0.00013675000000000145, 0.00013676299999999808, 0.00013676299999999808, 0.00013676400000000102, 0.0001367910000000007, 0.00013676399999999755, 0.0001368329999999994, 0.00013672200000000231, 0.0001367780000000006, 0.00013676399999999755, 0.0001367780000000006, 0.0001368049999999968, 0.00013683400000000234, 0.00013676399999999755, 0.00013676400000000102, 0.0001367780000000006, 0.0001367780000000006, 0.00013673599999999841, 0.00013670799999999927, 0.0001367910000000007, 0.00013679099999999722, 0.00013673700000000136, 0.0001367780000000006, 0.00013676400000000102, 0.00013677799999999712, 0.00013675000000000145, 0.00013676400000000102, 0.00013674999999999798, 0.00013676399999999755, 0.00013676400000000102, 0.0001367780000000006, 0.00013674999999999798, 0.00013672199999999884, 0.00013673600000000188, 0.00013679200000000016, 0.00013672199999999884, 0.00013673599999999841, 0.00013677700000000112, 0.00013676400000000102, 0.00013674999999999798]</msg>
<status status="PASS" starttime="20201030 10:57:22.478" endtime="20201030 10:57:22.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.474" endtime="20201030 10:57:22.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.129" endtime="20201030 10:57:22.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.107" endtime="20201030 10:57:22.481"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:22.484" endtime="20201030 10:57:22.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.482" endtime="20201030 10:57:22.504"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.512" endtime="20201030 10:57:22.527"></status>
</kw>
<msg timestamp="20201030 10:57:22.528" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.510" endtime="20201030 10:57:22.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.530" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.529" endtime="20201030 10:57:22.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.531" endtime="20201030 10:57:22.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.508" endtime="20201030 10:57:22.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.506" endtime="20201030 10:57:22.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.540" endtime="20201030 10:57:22.829"></status>
</kw>
<msg timestamp="20201030 10:57:22.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017487028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017632944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.538" endtime="20201030 10:57:22.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017487028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017632944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.833" endtime="20201030 10:57:22.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.841" endtime="20201030 10:57:22.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.536" endtime="20201030 10:57:22.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.534" endtime="20201030 10:57:22.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:22.848" level="INFO">${PHILIP_RES} = [{'diff': 0.0001459159999999994}, {'diff': 0.00014537499999999967}, {'diff': 0.0001453190000000014}, {'diff': 0.00014534700000000053}, {'diff': 0.00014534700000000053}, {'diff': 0.0001453610000000001}...</msg>
<status status="PASS" starttime="20201030 10:57:22.845" endtime="20201030 10:57:22.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:22.851" level="INFO">${RESULT} = {'diff': [0.0001459159999999994, 0.00014537499999999967, 0.0001453190000000014, 0.00014534700000000053, 0.00014534700000000053, 0.0001453610000000001, 0.00014533300000000096, 0.00014532000000000087, 0...</msg>
<status status="PASS" starttime="20201030 10:57:22.849" endtime="20201030 10:57:22.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.856" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:22.855" endtime="20201030 10:57:22.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.858" level="INFO">VALUE: [0.0001459159999999994, 0.00014537499999999967, 0.0001453190000000014, 0.00014534700000000053, 0.00014534700000000053, 0.0001453610000000001, 0.00014533300000000096, 0.00014532000000000087, 0.00014534700000000053, 0.0001453190000000014, 0.00014534699999999706, 0.0001453329999999975, 0.000145348, 0.00014533400000000044, 0.00014532000000000087, 0.00014537499999999967, 0.0001453329999999975, 0.0001453329999999975, 0.0001453890000000027, 0.0001453610000000001, 0.0001453610000000001, 0.00014534699999999706, 0.0001453329999999975, 0.00014534700000000053, 0.000145348, 0.00014533400000000044, 0.0001453329999999975, 0.0001454029999999988, 0.00014533300000000096, 0.00014533300000000096, 0.00014532000000000087, 0.00014532000000000087, 0.0001453610000000001, 0.0001453329999999975, 0.00014534700000000053, 0.00014533300000000096, 0.000145348, 0.00014533400000000044, 0.0001453329999999975, 0.00014531899999999792, 0.00014533300000000096, 0.00014532000000000087, 0.00014532000000000087, 0.0001454029999999988, 0.00014534699999999706, 0.0001453190000000014, 0.00014538799999999977, 0.000145348, 0.00014533400000000044, 0.00014533399999999697]</msg>
<status status="PASS" starttime="20201030 10:57:22.857" endtime="20201030 10:57:22.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.852" endtime="20201030 10:57:22.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.504" endtime="20201030 10:57:22.860"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.482" endtime="20201030 10:57:22.860"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:22.862" endtime="20201030 10:57:22.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.861" endtime="20201030 10:57:22.882"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.890" endtime="20201030 10:57:22.905"></status>
</kw>
<msg timestamp="20201030 10:57:22.906" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.889" endtime="20201030 10:57:22.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.908" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.907" endtime="20201030 10:57:22.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.909" endtime="20201030 10:57:22.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.886" endtime="20201030 10:57:22.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.884" endtime="20201030 10:57:22.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.919" endtime="20201030 10:57:23.204"></status>
</kw>
<msg timestamp="20201030 10:57:23.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017375042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017529694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.918" endtime="20201030 10:57:23.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017375042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017529694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.208" endtime="20201030 10:57:23.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.216" endtime="20201030 10:57:23.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.915" endtime="20201030 10:57:23.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.913" endtime="20201030 10:57:23.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:23.222" level="INFO">${PHILIP_RES} = [{'diff': 0.00015465199999999818}, {'diff': 0.00015413899999999758}, {'diff': 0.00015412499999999801}, {'diff': 0.00015411099999999844}, {'diff': 0.00015412499999999801}, {'diff': 0.000154111000000001...</msg>
<status status="PASS" starttime="20201030 10:57:23.219" endtime="20201030 10:57:23.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:23.227" level="INFO">${RESULT} = {'diff': [0.00015465199999999818, 0.00015413899999999758, 0.00015412499999999801, 0.00015411099999999844, 0.00015412499999999801, 0.0001541110000000019, 0.00015405599999999964, 0.00015412500000000148,...</msg>
<status status="PASS" starttime="20201030 10:57:23.223" endtime="20201030 10:57:23.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.231" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:23.230" endtime="20201030 10:57:23.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.233" level="INFO">VALUE: [0.00015465199999999818, 0.00015413899999999758, 0.00015412499999999801, 0.00015411099999999844, 0.00015412499999999801, 0.0001541110000000019, 0.00015405599999999964, 0.00015412500000000148, 0.00015412500000000148, 0.0001541110000000019, 0.00015413900000000105, 0.00015413900000000105, 0.00015413899999999758, 0.00015411099999999844, 0.00015411099999999844, 0.00015411099999999844, 0.00015413900000000105, 0.00015413900000000105, 0.00015413900000000105, 0.0001541110000000019, 0.00015413900000000105, 0.00015412500000000148, 0.0001540699999999992, 0.00015412499999999801, 0.00015405599999999964, 0.00015412499999999801, 0.00015415300000000062, 0.00015412499999999801, 0.00015412500000000148, 0.0001541110000000019, 0.00015413900000000105, 0.00015412500000000148, 0.00015412500000000148, 0.00015412500000000148, 0.0001540699999999992, 0.00015409799999999835, 0.00015412499999999801, 0.00015413899999999758, 0.00015412499999999801, 0.00015412499999999801, 0.0001541120000000014, 0.00015413800000000158, 0.00015412500000000148, 0.00015412500000000148, 0.00015413900000000105, 0.00015413900000000105, 0.00015412499999999801, 0.0001541379999999981, 0.00015411099999999844, 0.00015411099999999844]</msg>
<status status="PASS" starttime="20201030 10:57:23.232" endtime="20201030 10:57:23.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.227" endtime="20201030 10:57:23.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.883" endtime="20201030 10:57:23.236"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.860" endtime="20201030 10:57:23.236"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:23.238" endtime="20201030 10:57:23.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.237" endtime="20201030 10:57:23.258"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.266" endtime="20201030 10:57:23.283"></status>
</kw>
<msg timestamp="20201030 10:57:23.283" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.264" endtime="20201030 10:57:23.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.286" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.284" endtime="20201030 10:57:23.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.287" endtime="20201030 10:57:23.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.262" endtime="20201030 10:57:23.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.260" endtime="20201030 10:57:23.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.296" endtime="20201030 10:57:23.582"></status>
</kw>
<msg timestamp="20201030 10:57:23.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017361833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017525597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.294" endtime="20201030 10:57:23.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017361833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017525597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.586" endtime="20201030 10:57:23.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.594" endtime="20201030 10:57:23.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.292" endtime="20201030 10:57:23.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.290" endtime="20201030 10:57:23.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:23.600" level="INFO">${PHILIP_RES} = [{'diff': 0.00016376400000000027}, {'diff': 0.00016318000000000235}, {'diff': 0.0001631659999999993}, {'diff': 0.00016316699999999879}, {'diff': 0.00016318100000000182}, {'diff': 0.0001632500000000002...</msg>
<status status="PASS" starttime="20201030 10:57:23.597" endtime="20201030 10:57:23.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:23.605" level="INFO">${RESULT} = {'diff': [0.00016376400000000027, 0.00016318000000000235, 0.0001631659999999993, 0.00016316699999999879, 0.00016318100000000182, 0.0001632500000000002, 0.0001631659999999993, 0.00016316700000000225, 0...</msg>
<status status="PASS" starttime="20201030 10:57:23.601" endtime="20201030 10:57:23.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.610" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:23.609" endtime="20201030 10:57:23.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.612" level="INFO">VALUE: [0.00016376400000000027, 0.00016318000000000235, 0.0001631659999999993, 0.00016316699999999879, 0.00016318100000000182, 0.0001632500000000002, 0.0001631659999999993, 0.00016316700000000225, 0.00016316699999999879, 0.0001631659999999993, 0.00016315299999999922, 0.00016318099999999836, 0.00016315300000000268, 0.0001631659999999993, 0.00016319399999999845, 0.00016315300000000268, 0.00016315299999999922, 0.0001631659999999993, 0.00016318000000000235, 0.0001632089999999975, 0.00016315299999999922, 0.00016318000000000235, 0.00016313899999999965, 0.00016312500000000008, 0.00016318100000000182, 0.00016315199999999974, 0.00016316699999999879, 0.00016323600000000063, 0.00016318099999999836, 0.00016316600000000278, 0.00016318100000000182, 0.00016316699999999879, 0.00016316700000000225, 0.00016315199999999974, 0.00016318099999999836, 0.00016318100000000182, 0.00016315299999999922, 0.00016322200000000106, 0.00016322300000000053, 0.00016318099999999836, 0.0001632080000000015, 0.00016318000000000235, 0.00016316699999999879, 0.0001631950000000014, 0.0001631659999999993, 0.0001632080000000015, 0.00016315299999999922, 0.00016316699999999879, 0.0001631659999999993, 0.00016316700000000225]</msg>
<status status="PASS" starttime="20201030 10:57:23.611" endtime="20201030 10:57:23.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.606" endtime="20201030 10:57:23.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.259" endtime="20201030 10:57:23.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.236" endtime="20201030 10:57:23.614"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:23.616" endtime="20201030 10:57:23.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.615" endtime="20201030 10:57:23.636"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.644" endtime="20201030 10:57:23.661"></status>
</kw>
<msg timestamp="20201030 10:57:23.662" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.643" endtime="20201030 10:57:23.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.664" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.663" endtime="20201030 10:57:23.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.665" endtime="20201030 10:57:23.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.640" endtime="20201030 10:57:23.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.638" endtime="20201030 10:57:23.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.674" endtime="20201030 10:57:23.960"></status>
</kw>
<msg timestamp="20201030 10:57:23.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017433556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017606583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.673" endtime="20201030 10:57:23.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017433556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017606583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.965" endtime="20201030 10:57:23.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.973" endtime="20201030 10:57:23.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.670" endtime="20201030 10:57:23.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.668" endtime="20201030 10:57:23.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:23.979" level="INFO">${PHILIP_RES} = [{'diff': 0.0001730269999999992}, {'diff': 0.0001724170000000011}, {'diff': 0.0001724309999999972}, {'diff': 0.00017249999999999904}, {'diff': 0.00017244500000000024}, {'diff': 0.00017245799999999686}...</msg>
<status status="PASS" starttime="20201030 10:57:23.976" endtime="20201030 10:57:23.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:23.983" level="INFO">${RESULT} = {'diff': [0.0001730269999999992, 0.0001724170000000011, 0.0001724309999999972, 0.00017249999999999904, 0.00017244500000000024, 0.00017245799999999686, 0.00017248599999999947, 0.00017244400000000076, 0...</msg>
<status status="PASS" starttime="20201030 10:57:23.980" endtime="20201030 10:57:23.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.987" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:23.986" endtime="20201030 10:57:23.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.990" level="INFO">VALUE: [0.0001730269999999992, 0.0001724170000000011, 0.0001724309999999972, 0.00017249999999999904, 0.00017244500000000024, 0.00017245799999999686, 0.00017248599999999947, 0.00017244400000000076, 0.00017245799999999686, 0.00017244500000000024, 0.00017244500000000024, 0.0001723889999999985, 0.00017244400000000076, 0.0001724719999999999, 0.00017245799999999686, 0.00017244400000000076, 0.00017245800000000033, 0.00017242999999999772, 0.00017244500000000024, 0.00017244500000000024, 0.0001724589999999998, 0.0001724170000000011, 0.00017252800000000165, 0.00017245800000000033, 0.00017245800000000033, 0.00017244400000000076, 0.00017244500000000024, 0.00017244500000000024, 0.00017248599999999947, 0.0001724589999999998, 0.00017243100000000067, 0.00017244400000000076, 0.00017240199999999858, 0.00017244400000000076, 0.00017244400000000076, 0.0001724439999999973, 0.0001724589999999998, 0.00017248600000000294, 0.00017244500000000024, 0.00017243100000000067, 0.0001724300000000012, 0.00017249999999999904, 0.00017244400000000076, 0.00017244400000000076, 0.00017248599999999947, 0.0001724170000000011, 0.0001724170000000011, 0.00017245799999999686, 0.00017243100000000067, 0.00017244400000000076]</msg>
<status status="PASS" starttime="20201030 10:57:23.988" endtime="20201030 10:57:23.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.984" endtime="20201030 10:57:23.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.637" endtime="20201030 10:57:23.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.614" endtime="20201030 10:57:23.992"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:23.994" endtime="20201030 10:57:24.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.992" endtime="20201030 10:57:24.014"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.022" endtime="20201030 10:57:24.039"></status>
</kw>
<msg timestamp="20201030 10:57:24.039" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.020" endtime="20201030 10:57:24.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.042" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.040" endtime="20201030 10:57:24.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.043" endtime="20201030 10:57:24.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.018" endtime="20201030 10:57:24.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.016" endtime="20201030 10:57:24.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.053" endtime="20201030 10:57:24.338"></status>
</kw>
<msg timestamp="20201030 10:57:24.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01743225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017614778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:24.051" endtime="20201030 10:57:24.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01743225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017614778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:24.342" endtime="20201030 10:57:24.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.350" endtime="20201030 10:57:24.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.049" endtime="20201030 10:57:24.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.047" endtime="20201030 10:57:24.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:24.357" level="INFO">${PHILIP_RES} = [{'diff': 0.00018252800000000124}, {'diff': 0.00018195799999999943}, {'diff': 0.00018194399999999986}, {'diff': 0.000181971999999999}, {'diff': 0.00018195799999999943}, {'diff': 0.00018198600000000204...</msg>
<status status="PASS" starttime="20201030 10:57:24.354" endtime="20201030 10:57:24.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:24.361" level="INFO">${RESULT} = {'diff': [0.00018252800000000124, 0.00018195799999999943, 0.00018194399999999986, 0.000181971999999999, 0.00018195799999999943, 0.00018198600000000204, 0.00018195799999999943, 0.00018198599999999857, ...</msg>
<status status="PASS" starttime="20201030 10:57:24.358" endtime="20201030 10:57:24.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.365" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:24.364" endtime="20201030 10:57:24.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.367" level="INFO">VALUE: [0.00018252800000000124, 0.00018195799999999943, 0.00018194399999999986, 0.000181971999999999, 0.00018195799999999943, 0.00018198600000000204, 0.00018195799999999943, 0.00018198599999999857, 0.00018197200000000247, 0.00018198599999999857, 0.00018197299999999847, 0.00018197200000000247, 0.0001819589999999989, 0.0001819589999999989, 0.0001820000000000016, 0.00018194399999999986, 0.00018198599999999857, 0.0001820000000000016, 0.00018201400000000117, 0.00018198599999999857, 0.00018191599999999725, 0.00018202800000000074, 0.000181971999999999, 0.00018201400000000117, 0.00018197200000000247, 0.000181971999999999, 0.0001819170000000002, 0.00018197200000000247, 0.000181971999999999, 0.00018199999999999814, 0.0001820000000000016, 0.000181971999999999, 0.000181971999999999, 0.000181971999999999, 0.00018197300000000194, 0.00018198599999999857, 0.00018198599999999857, 0.00018197300000000194, 0.00018197299999999847, 0.000181971999999999, 0.00018197200000000247, 0.000181971999999999, 0.000181971999999999, 0.00018195799999999943, 0.00018195799999999943, 0.00018193000000000029, 0.00018197200000000247, 0.00018198600000000204, 0.000181971999999999, 0.000181971999999999]</msg>
<status status="PASS" starttime="20201030 10:57:24.366" endtime="20201030 10:57:24.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.361" endtime="20201030 10:57:24.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.015" endtime="20201030 10:57:24.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.992" endtime="20201030 10:57:24.370"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:24.372" endtime="20201030 10:57:24.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.371" endtime="20201030 10:57:24.392"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.400" endtime="20201030 10:57:24.418"></status>
</kw>
<msg timestamp="20201030 10:57:24.418" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.399" endtime="20201030 10:57:24.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.420" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.419" endtime="20201030 10:57:24.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.422" endtime="20201030 10:57:24.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.396" endtime="20201030 10:57:24.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.394" endtime="20201030 10:57:24.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.431" endtime="20201030 10:57:24.716"></status>
</kw>
<msg timestamp="20201030 10:57:24.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01754375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:24.429" endtime="20201030 10:57:24.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01754375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:24.720" endtime="20201030 10:57:24.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.728" endtime="20201030 10:57:24.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.426" endtime="20201030 10:57:24.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.425" endtime="20201030 10:57:24.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:24.734" level="INFO">${PHILIP_RES} = [{'diff': 0.00019230599999999973}, {'diff': 0.0001916809999999991}, {'diff': 0.00019172199999999834}, {'diff': 0.00019176399999999705}, {'diff': 0.00019170799999999877}, {'diff': 0.0001916939999999992...</msg>
<status status="PASS" starttime="20201030 10:57:24.731" endtime="20201030 10:57:24.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:24.740" level="INFO">${RESULT} = {'diff': [0.00019230599999999973, 0.0001916809999999991, 0.00019172199999999834, 0.00019176399999999705, 0.00019170799999999877, 0.0001916939999999992, 0.00019172300000000128, 0.00019165300000000343, ...</msg>
<status status="PASS" starttime="20201030 10:57:24.735" endtime="20201030 10:57:24.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.744" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:24.743" endtime="20201030 10:57:24.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.747" level="INFO">VALUE: [0.00019230599999999973, 0.0001916809999999991, 0.00019172199999999834, 0.00019176399999999705, 0.00019170799999999877, 0.0001916939999999992, 0.00019172300000000128, 0.00019165300000000343, 0.00019173600000000138, 0.00019176300000000104, 0.0001917359999999979, 0.0001917229999999978, 0.0001917220000000018, 0.00019169400000000267, 0.00019170800000000224, 0.00019170799999999877, 0.00019170899999999824, 0.00019170799999999877, 0.00019170799999999877, 0.00019175000000000095, 0.00019170800000000224, 0.00019166699999999953, 0.00019170799999999877, 0.00019172199999999834, 0.00019170899999999824, 0.00019172199999999834, 0.0001917220000000018, 0.00019170799999999877, 0.00019176400000000052, 0.00019172300000000128, 0.00019170799999999877, 0.00019172199999999834, 0.00019170799999999877, 0.00019172199999999834, 0.00019169499999999867, 0.0001917220000000018, 0.0001917220000000018, 0.00019173600000000138, 0.00019175000000000095, 0.00019170899999999824, 0.00019174999999999748, 0.00019170800000000224, 0.00019173600000000138, 0.0001917220000000018, 0.00019172300000000128, 0.00019172199999999834, 0.00019170799999999877, 0.0001916809999999991, 0.0001916939999999992, 0.00019175000000000095]</msg>
<status status="PASS" starttime="20201030 10:57:24.746" endtime="20201030 10:57:24.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.741" endtime="20201030 10:57:24.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.393" endtime="20201030 10:57:24.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.370" endtime="20201030 10:57:24.749"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:24.752" endtime="20201030 10:57:24.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.750" endtime="20201030 10:57:24.772"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.780" endtime="20201030 10:57:24.799"></status>
</kw>
<msg timestamp="20201030 10:57:24.800" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.778" endtime="20201030 10:57:24.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.802" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.801" endtime="20201030 10:57:24.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.803" endtime="20201030 10:57:24.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.776" endtime="20201030 10:57:24.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.774" endtime="20201030 10:57:24.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.812" endtime="20201030 10:57:25.099"></status>
</kw>
<msg timestamp="20201030 10:57:25.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017580431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01778275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:24.811" endtime="20201030 10:57:25.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017580431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01778275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:25.103" endtime="20201030 10:57:25.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.111" endtime="20201030 10:57:25.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.808" endtime="20201030 10:57:25.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.806" endtime="20201030 10:57:25.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:25.117" level="INFO">${PHILIP_RES} = [{'diff': 0.00020231899999999942}, {'diff': 0.00020172199999999793}, {'diff': 0.00020175000000000054}, {'diff': 0.00020172199999999793}, {'diff': 0.0002017220000000014}, {'diff': 0.0002017359999999975...</msg>
<status status="PASS" starttime="20201030 10:57:25.114" endtime="20201030 10:57:25.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.121" level="INFO">${RESULT} = {'diff': [0.00020231899999999942, 0.00020172199999999793, 0.00020175000000000054, 0.00020172199999999793, 0.0002017220000000014, 0.0002017359999999975, 0.00020173600000000097, 0.0002017229999999974, 0...</msg>
<status status="PASS" starttime="20201030 10:57:25.118" endtime="20201030 10:57:25.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.126" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:25.125" endtime="20201030 10:57:25.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.128" level="INFO">VALUE: [0.00020231899999999942, 0.00020172199999999793, 0.00020175000000000054, 0.00020172199999999793, 0.0002017220000000014, 0.0002017359999999975, 0.00020173600000000097, 0.0002017229999999974, 0.0002016939999999988, 0.00020173600000000097, 0.00020170799999999836, 0.00020173600000000097, 0.0002017229999999974, 0.00020173600000000097, 0.00020170799999999836, 0.0002017220000000014, 0.00020172199999999793, 0.0002017220000000014, 0.00020170800000000183, 0.00020175000000000054, 0.0002017090000000013, 0.00020177799999999968, 0.0002017220000000014, 0.00020174999999999707, 0.0002017220000000014, 0.00020172300000000087, 0.0002017220000000014, 0.0002017220000000014, 0.0002016939999999988, 0.00020173600000000097, 0.00020170899999999783, 0.0002017640000000001, 0.00020179099999999978, 0.0002017220000000014, 0.00020170799999999836, 0.00020172300000000087, 0.0002017220000000014, 0.00020172199999999793, 0.00020173600000000097, 0.00020170799999999836, 0.00020173600000000097, 0.00020172199999999793, 0.00020173600000000097, 0.00020172300000000087, 0.0002016939999999988, 0.0002016670000000026, 0.0002017359999999975, 0.00020179099999999978, 0.0002017229999999974, 0.00020173600000000097]</msg>
<status status="PASS" starttime="20201030 10:57:25.127" endtime="20201030 10:57:25.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.122" endtime="20201030 10:57:25.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.772" endtime="20201030 10:57:25.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.750" endtime="20201030 10:57:25.130"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.132" endtime="20201030 10:57:25.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.131" endtime="20201030 10:57:25.152"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.160" endtime="20201030 10:57:25.179"></status>
</kw>
<msg timestamp="20201030 10:57:25.179" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.159" endtime="20201030 10:57:25.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.182" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.180" endtime="20201030 10:57:25.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.183" endtime="20201030 10:57:25.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.156" endtime="20201030 10:57:25.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.154" endtime="20201030 10:57:25.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.193" endtime="20201030 10:57:25.479"></status>
</kw>
<msg timestamp="20201030 10:57:25.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017458583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017671125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.191" endtime="20201030 10:57:25.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017458583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017671125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.483" endtime="20201030 10:57:25.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.491" endtime="20201030 10:57:25.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.189" endtime="20201030 10:57:25.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.187" endtime="20201030 10:57:25.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:25.497" level="INFO">${PHILIP_RES} = [{'diff': 0.0002125419999999996}, {'diff': 0.0002119860000000008}, {'diff': 0.00021195900000000115}, {'diff': 0.00021195900000000115}, {'diff': 0.00021195899999999768}, {'diff': 0.00021193099999999854...</msg>
<status status="PASS" starttime="20201030 10:57:25.494" endtime="20201030 10:57:25.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.501" level="INFO">${RESULT} = {'diff': [0.0002125419999999996, 0.0002119860000000008, 0.00021195900000000115, 0.00021195900000000115, 0.00021195899999999768, 0.00021193099999999854, 0.00021194500000000158, 0.00021193099999999854, ...</msg>
<status status="PASS" starttime="20201030 10:57:25.498" endtime="20201030 10:57:25.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.505" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:25.504" endtime="20201030 10:57:25.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.508" level="INFO">VALUE: [0.0002125419999999996, 0.0002119860000000008, 0.00021195900000000115, 0.00021195900000000115, 0.00021195899999999768, 0.00021193099999999854, 0.00021194500000000158, 0.00021193099999999854, 0.00021197199999999777, 0.0002119579999999982, 0.00021191699999999897, 0.00021194399999999863, 0.0002119579999999982, 0.000212028000000003, 0.00021195800000000167, 0.0002119579999999982, 0.00021197200000000124, 0.00021204200000000256, 0.00021197200000000124, 0.00021194399999999863, 0.00021192999999999906, 0.00021195800000000167, 0.0002119860000000008, 0.00021194500000000158, 0.00021195900000000115, 0.00021195900000000115, 0.00021195900000000115, 0.00021191700000000244, 0.00021195900000000115, 0.00021194500000000158, 0.00021195800000000167, 0.000211931000000002, 0.0002119579999999982, 0.0002119579999999982, 0.0002119579999999982, 0.0002119579999999982, 0.0002119579999999982, 0.00021197199999999777, 0.00021188899999999983, 0.00021194399999999863, 0.0002119860000000008, 0.00021195800000000167, 0.00021195900000000115, 0.00021201399999999995, 0.0002119579999999982, 0.00021201399999999995, 0.00021191699999999897, 0.00021194500000000158, 0.00021195900000000115, 0.000211931000000002]</msg>
<status status="PASS" starttime="20201030 10:57:25.506" endtime="20201030 10:57:25.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.502" endtime="20201030 10:57:25.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.153" endtime="20201030 10:57:25.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.130" endtime="20201030 10:57:25.510"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.513" endtime="20201030 10:57:25.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.511" endtime="20201030 10:57:25.533"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.541" endtime="20201030 10:57:25.561"></status>
</kw>
<msg timestamp="20201030 10:57:25.561" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.539" endtime="20201030 10:57:25.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.563" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.562" endtime="20201030 10:57:25.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.565" endtime="20201030 10:57:25.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.537" endtime="20201030 10:57:25.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.535" endtime="20201030 10:57:25.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.574" endtime="20201030 10:57:25.859"></status>
</kw>
<msg timestamp="20201030 10:57:25.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017577778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017800764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.572" endtime="20201030 10:57:25.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017577778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017800764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.863" endtime="20201030 10:57:25.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.871" endtime="20201030 10:57:25.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.570" endtime="20201030 10:57:25.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.568" endtime="20201030 10:57:25.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:25.878" level="INFO">${PHILIP_RES} = [{'diff': 0.0002229860000000014}, {'diff': 0.00022251400000000005}, {'diff': 0.00022244399999999873}, {'diff': 0.00022245800000000177}, {'diff': 0.00022245900000000124}, {'diff': 0.0002224439999999987...</msg>
<status status="PASS" starttime="20201030 10:57:25.875" endtime="20201030 10:57:25.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.883" level="INFO">${RESULT} = {'diff': [0.0002229860000000014, 0.00022251400000000005, 0.00022244399999999873, 0.00022245800000000177, 0.00022245900000000124, 0.00022244399999999873, 0.00022245900000000124, 0.0002224579999999983, ...</msg>
<status status="PASS" starttime="20201030 10:57:25.879" endtime="20201030 10:57:25.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.887" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:25.886" endtime="20201030 10:57:25.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.890" level="INFO">VALUE: [0.0002229860000000014, 0.00022251400000000005, 0.00022244399999999873, 0.00022245800000000177, 0.00022245900000000124, 0.00022244399999999873, 0.00022245900000000124, 0.0002224579999999983, 0.0002224310000000021, 0.00022247200000000134, 0.00022242999999999916, 0.00022237500000000035, 0.00022244399999999873, 0.00022241699999999906, 0.00022245800000000177, 0.0002224579999999983, 0.00022245899999999777, 0.00022245800000000177, 0.00022243099999999863, 0.00022247200000000134, 0.00022247200000000134, 0.00022245899999999777, 0.0002224440000000022, 0.00022245899999999777, 0.00022244399999999873, 0.00022245800000000177, 0.00022250000000000048, 0.0002224860000000009, 0.00022244500000000167, 0.00022244399999999873, 0.00022244500000000167, 0.00022243099999999863, 0.00022247199999999787, 0.00022244500000000167, 0.00022244399999999873, 0.00022244500000000167, 0.00022247200000000134, 0.00022251400000000005, 0.00022240300000000296, 0.00022245800000000177, 0.00022243099999999863, 0.00022245800000000177, 0.00022245800000000177, 0.0002224449999999982, 0.00022242999999999916, 0.00022245899999999777, 0.0002224579999999983, 0.00022244399999999873, 0.0002224860000000009, 0.0002224440000000022]</msg>
<status status="PASS" starttime="20201030 10:57:25.888" endtime="20201030 10:57:25.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.884" endtime="20201030 10:57:25.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.533" endtime="20201030 10:57:25.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.511" endtime="20201030 10:57:25.891"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.894" endtime="20201030 10:57:25.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.892" endtime="20201030 10:57:25.914"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.922" endtime="20201030 10:57:25.942"></status>
</kw>
<msg timestamp="20201030 10:57:25.942" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.920" endtime="20201030 10:57:25.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.944" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.943" endtime="20201030 10:57:25.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.946" endtime="20201030 10:57:25.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.918" endtime="20201030 10:57:25.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.916" endtime="20201030 10:57:25.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.954" endtime="20201030 10:57:26.244"></status>
</kw>
<msg timestamp="20201030 10:57:26.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017688653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017922403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.953" endtime="20201030 10:57:26.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017688653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017922403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.248" endtime="20201030 10:57:26.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.256" endtime="20201030 10:57:26.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.950" endtime="20201030 10:57:26.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.949" endtime="20201030 10:57:26.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:26.262" level="INFO">${PHILIP_RES} = [{'diff': 0.00023375000000000132}, {'diff': 0.0002331799999999995}, {'diff': 0.00023316700000000287}, {'diff': 0.00023315299999999983}, {'diff': 0.0002331530000000033}, {'diff': 0.0002331669999999994}...</msg>
<status status="PASS" starttime="20201030 10:57:26.259" endtime="20201030 10:57:26.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.266" level="INFO">${RESULT} = {'diff': [0.00023375000000000132, 0.0002331799999999995, 0.00023316700000000287, 0.00023315299999999983, 0.0002331530000000033, 0.0002331669999999994, 0.000233195000000002, 0.00023315299999999983, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:26.263" endtime="20201030 10:57:26.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.271" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:26.270" endtime="20201030 10:57:26.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.273" level="INFO">VALUE: [0.00023375000000000132, 0.0002331799999999995, 0.00023316700000000287, 0.00023315299999999983, 0.0002331530000000033, 0.0002331669999999994, 0.000233195000000002, 0.00023315299999999983, 0.00023315299999999983, 0.0002331669999999994, 0.00023309700000000155, 0.0002331669999999994, 0.0002331669999999994, 0.0002331669999999994, 0.0002331669999999994, 0.0002331669999999994, 0.0002331669999999994, 0.00023318099999999897, 0.00023315299999999983, 0.00023318099999999897, 0.0002331669999999994, 0.0002331669999999994, 0.0002331669999999994, 0.00023319499999999854, 0.0002331669999999994, 0.00023315299999999983, 0.00023318099999999897, 0.00023319499999999854, 0.0002331250000000007, 0.000233195000000002, 0.00023318099999999897, 0.00023315299999999983, 0.00023315299999999983, 0.0002331669999999994, 0.00023313900000000026, 0.00023318099999999897, 0.00023315299999999983, 0.00023311100000000112, 0.0002331669999999994, 0.00023316700000000287, 0.0002331669999999994, 0.00023316700000000287, 0.0002331669999999994, 0.00023313900000000026, 0.0002331669999999994, 0.000233195000000002, 0.00023319400000000254, 0.00023318100000000244, 0.0002331250000000007, 0.0002331530000000033]</msg>
<status status="PASS" starttime="20201030 10:57:26.272" endtime="20201030 10:57:26.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.267" endtime="20201030 10:57:26.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.914" endtime="20201030 10:57:26.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.892" endtime="20201030 10:57:26.275"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:26.277" endtime="20201030 10:57:26.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.276" endtime="20201030 10:57:26.297"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.305" endtime="20201030 10:57:26.326"></status>
</kw>
<msg timestamp="20201030 10:57:26.326" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.303" endtime="20201030 10:57:26.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.329" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.327" endtime="20201030 10:57:26.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.330" endtime="20201030 10:57:26.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.301" endtime="20201030 10:57:26.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.299" endtime="20201030 10:57:26.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.340" endtime="20201030 10:57:26.626"></status>
</kw>
<msg timestamp="20201030 10:57:26.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017474375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017719097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.338" endtime="20201030 10:57:26.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017474375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017719097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.630" endtime="20201030 10:57:26.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.638" endtime="20201030 10:57:26.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.336" endtime="20201030 10:57:26.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.334" endtime="20201030 10:57:26.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:26.645" level="INFO">${PHILIP_RES} = [{'diff': 0.0002447219999999993}, {'diff': 0.00024413899999999739}, {'diff': 0.00024412500000000129}, {'diff': 0.00024413900000000086}, {'diff': 0.0002441530000000004}, {'diff': 0.0002441530000000004}...</msg>
<status status="PASS" starttime="20201030 10:57:26.641" endtime="20201030 10:57:26.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.649" level="INFO">${RESULT} = {'diff': [0.0002447219999999993, 0.00024413899999999739, 0.00024412500000000129, 0.00024413900000000086, 0.0002441530000000004, 0.0002441530000000004, 0.00024420799999999923, 0.00024411100000000172, 0...</msg>
<status status="PASS" starttime="20201030 10:57:26.646" endtime="20201030 10:57:26.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.653" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:26.652" endtime="20201030 10:57:26.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.655" level="INFO">VALUE: [0.0002447219999999993, 0.00024413899999999739, 0.00024412500000000129, 0.00024413900000000086, 0.0002441530000000004, 0.0002441530000000004, 0.00024420799999999923, 0.00024411100000000172, 0.00024413900000000086, 0.00024412500000000129, 0.000244167, 0.000244167, 0.00024413900000000086, 0.00024413900000000086, 0.00024415299999999696, 0.00024413900000000086, 0.00024411099999999825, 0.00024412500000000129, 0.00024412500000000129, 0.0002441530000000004, 0.0002441530000000004, 0.0002441530000000004, 0.00024413900000000086, 0.000244069000000003, 0.00024412500000000129, 0.0002442089999999987, 0.00024413900000000086, 0.00024412500000000129, 0.00024409700000000215, 0.00024415299999999696, 0.0002441530000000004, 0.00024413900000000086, 0.000244167, 0.00024415200000000095, 0.00024412499999999782, 0.00024415200000000095, 0.0002441530000000004, 0.0002441379999999979, 0.00024413900000000086, 0.0002441379999999979, 0.0002441530000000004, 0.00024413900000000086, 0.0002441950000000026, 0.00024413800000000138, 0.00024409699999999868, 0.00024419400000000313, 0.00024413900000000086, 0.0002441379999999979, 0.00024409699999999868, 0.00024415200000000095]</msg>
<status status="PASS" starttime="20201030 10:57:26.654" endtime="20201030 10:57:26.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.649" endtime="20201030 10:57:26.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.298" endtime="20201030 10:57:26.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.275" endtime="20201030 10:57:26.658"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:26.660" endtime="20201030 10:57:26.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.659" endtime="20201030 10:57:26.680"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.688" endtime="20201030 10:57:26.710"></status>
</kw>
<msg timestamp="20201030 10:57:26.711" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.686" endtime="20201030 10:57:26.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.713" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.712" endtime="20201030 10:57:26.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.714" endtime="20201030 10:57:26.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.684" endtime="20201030 10:57:26.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.682" endtime="20201030 10:57:26.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.723" endtime="20201030 10:57:27.009"></status>
</kw>
<msg timestamp="20201030 10:57:27.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017444736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017700653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.722" endtime="20201030 10:57:27.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017444736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017700653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.013" endtime="20201030 10:57:27.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.021" endtime="20201030 10:57:27.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.719" endtime="20201030 10:57:27.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.717" endtime="20201030 10:57:27.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:27.028" level="INFO">${PHILIP_RES} = [{'diff': 0.00025591700000000134}, {'diff': 0.0002553339999999994}, {'diff': 0.0002553469999999995}, {'diff': 0.0002553469999999995}, {'diff': 0.00025537499999999866}, {'diff': 0.0002553340000000029},...</msg>
<status status="PASS" starttime="20201030 10:57:27.025" endtime="20201030 10:57:27.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.032" level="INFO">${RESULT} = {'diff': [0.00025591700000000134, 0.0002553339999999994, 0.0002553469999999995, 0.0002553469999999995, 0.00025537499999999866, 0.0002553340000000029, 0.0002553339999999994, 0.00025536100000000256, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:27.029" endtime="20201030 10:57:27.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.037" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:27.036" endtime="20201030 10:57:27.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.039" level="INFO">VALUE: [0.00025591700000000134, 0.0002553339999999994, 0.0002553469999999995, 0.0002553469999999995, 0.00025537499999999866, 0.0002553340000000029, 0.0002553339999999994, 0.00025536100000000256, 0.00025533299999999995, 0.00025537500000000213, 0.0002553339999999994, 0.0002553190000000004, 0.0002553190000000004, 0.0002553469999999995, 0.00025534800000000246, 0.0002553469999999995, 0.00025533299999999995, 0.0002553469999999995, 0.0002553339999999994, 0.0002553469999999995, 0.00025537499999999866, 0.0002554310000000004, 0.000255347999999999, 0.00025531999999999985, 0.00025540300000000127, 0.0002553609999999991, 0.0002554310000000004, 0.0002553609999999991, 0.00025533299999999995, 0.00025541700000000084, 0.00025536100000000256, 0.0002553469999999995, 0.000255347000000003, 0.0002553609999999991, 0.00025531999999999985, 0.00025541699999999737, 0.0002553469999999995, 0.0002553609999999991, 0.00025537499999999866, 0.0002553340000000029, 0.00025533299999999995, 0.000255347000000003, 0.0002553469999999995, 0.00025536200000000203, 0.0002553469999999995, 0.0002553469999999995, 0.00025533299999999995, 0.0002553060000000003, 0.000255347000000003, 0.000255347000000003]</msg>
<status status="PASS" starttime="20201030 10:57:27.038" endtime="20201030 10:57:27.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.033" endtime="20201030 10:57:27.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.681" endtime="20201030 10:57:27.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.658" endtime="20201030 10:57:27.041"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:27.043" endtime="20201030 10:57:27.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.042" endtime="20201030 10:57:27.063"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.071" endtime="20201030 10:57:27.094"></status>
</kw>
<msg timestamp="20201030 10:57:27.094" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.070" endtime="20201030 10:57:27.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.097" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.095" endtime="20201030 10:57:27.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.098" endtime="20201030 10:57:27.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.067" endtime="20201030 10:57:27.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.065" endtime="20201030 10:57:27.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.107" endtime="20201030 10:57:27.393"></status>
</kw>
<msg timestamp="20201030 10:57:27.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017664917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017932278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.105" endtime="20201030 10:57:27.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017664917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017932278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.397" endtime="20201030 10:57:27.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.405" endtime="20201030 10:57:27.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.102" endtime="20201030 10:57:27.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.101" endtime="20201030 10:57:27.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:27.412" level="INFO">${PHILIP_RES} = [{'diff': 0.0002673610000000007}, {'diff': 0.0002667639999999992}, {'diff': 0.00026679199999999834}, {'diff': 0.00026682000000000095}, {'diff': 0.0002668060000000014}, {'diff': 0.00026679199999999834}...</msg>
<status status="PASS" starttime="20201030 10:57:27.408" endtime="20201030 10:57:27.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.416" level="INFO">${RESULT} = {'diff': [0.0002673610000000007, 0.0002667639999999992, 0.00026679199999999834, 0.00026682000000000095, 0.0002668060000000014, 0.00026679199999999834, 0.00026679199999999834, 0.0002668060000000014, 0....</msg>
<status status="PASS" starttime="20201030 10:57:27.412" endtime="20201030 10:57:27.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.420" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:27.419" endtime="20201030 10:57:27.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.422" level="INFO">VALUE: [0.0002673610000000007, 0.0002667639999999992, 0.00026679199999999834, 0.00026682000000000095, 0.0002668060000000014, 0.00026679199999999834, 0.00026679199999999834, 0.0002668060000000014, 0.0002667499999999996, 0.00026680499999999843, 0.00026679099999999886, 0.00026679100000000233, 0.0002667920000000018, 0.0002668059999999979, 0.0002668060000000014, 0.00026677800000000224, 0.00026679199999999834, 0.00026679199999999834, 0.00026677800000000224, 0.00026679099999999886, 0.00026680499999999843, 0.00026677799999999877, 0.0002667920000000018, 0.0002668060000000014, 0.00026679199999999834, 0.0002668060000000014, 0.00026682000000000095, 0.00026683299999999757, 0.000266818999999998, 0.0002668050000000019, 0.00026679100000000233, 0.00026680499999999843, 0.00026679199999999834, 0.0002668060000000014, 0.0002668059999999979, 0.00026679199999999834, 0.00026679199999999834, 0.0002667920000000018, 0.0002667769999999993, 0.00026679099999999886, 0.00026679100000000233, 0.00026679099999999886, 0.00026687499999999975, 0.00026679199999999834, 0.00026682000000000095, 0.00026677799999999877, 0.0002667920000000018, 0.00026679199999999487, 0.00026677700000000276, 0.00026679100000000233]</msg>
<status status="PASS" starttime="20201030 10:57:27.421" endtime="20201030 10:57:27.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.416" endtime="20201030 10:57:27.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.064" endtime="20201030 10:57:27.424"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.041" endtime="20201030 10:57:27.424"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:27.427" endtime="20201030 10:57:27.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.425" endtime="20201030 10:57:27.447"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.455" endtime="20201030 10:57:27.477"></status>
</kw>
<msg timestamp="20201030 10:57:27.477" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.453" endtime="20201030 10:57:27.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.480" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.478" endtime="20201030 10:57:27.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.481" endtime="20201030 10:57:27.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.451" endtime="20201030 10:57:27.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.449" endtime="20201030 10:57:27.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.490" endtime="20201030 10:57:27.776"></status>
</kw>
<msg timestamp="20201030 10:57:27.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017458458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017737514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.489" endtime="20201030 10:57:27.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017458458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017737514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.780" endtime="20201030 10:57:27.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.789" endtime="20201030 10:57:27.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.487" endtime="20201030 10:57:27.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.485" endtime="20201030 10:57:27.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:27.796" level="INFO">${PHILIP_RES} = [{'diff': 0.00027905599999999975}, {'diff': 0.00027847199999999836}, {'diff': 0.0002784579999999988}, {'diff': 0.00027845800000000226}, {'diff': 0.00027852700000000064}, {'diff': 0.0002784719999999983...</msg>
<status status="PASS" starttime="20201030 10:57:27.792" endtime="20201030 10:57:27.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.800" level="INFO">${RESULT} = {'diff': [0.00027905599999999975, 0.00027847199999999836, 0.0002784579999999988, 0.00027845800000000226, 0.00027852700000000064, 0.00027847199999999836, 0.00027845800000000226, 0.00027845900000000173,...</msg>
<status status="PASS" starttime="20201030 10:57:27.797" endtime="20201030 10:57:27.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.804" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:27.803" endtime="20201030 10:57:27.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.807" level="INFO">VALUE: [0.00027905599999999975, 0.00027847199999999836, 0.0002784579999999988, 0.00027845800000000226, 0.00027852700000000064, 0.00027847199999999836, 0.00027845800000000226, 0.00027845900000000173, 0.00027845899999999826, 0.00027845899999999826, 0.0002784860000000014, 0.0002784449999999987, 0.0002784160000000001, 0.0002784579999999988, 0.0002784160000000001, 0.0002784439999999992, 0.0002784440000000027, 0.00027847199999999836, 0.0002784579999999988, 0.00027845800000000226, 0.00027847199999999836, 0.0002784449999999987, 0.00027845900000000173, 0.00027844500000000216, 0.00027845899999999826, 0.00027845900000000173, 0.00027840199999999704, 0.0002783890000000004, 0.00027845800000000226, 0.0002784439999999992, 0.0002784579999999988, 0.0002784439999999992, 0.0002784439999999992, 0.0002784439999999992, 0.00027847200000000183, 0.00027847200000000183, 0.0002784449999999987, 0.00027845900000000173, 0.00027851400000000054, 0.00027847299999999783, 0.00027847200000000183, 0.00027845800000000226, 0.00027848599999999793, 0.0002784579999999988, 0.00027847200000000183, 0.00027845800000000226, 0.00027845800000000226, 0.00027844399999999575, 0.00027845800000000226, 0.00027845800000000226]</msg>
<status status="PASS" starttime="20201030 10:57:27.806" endtime="20201030 10:57:27.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.801" endtime="20201030 10:57:27.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.447" endtime="20201030 10:57:27.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.425" endtime="20201030 10:57:27.810"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:27.812" endtime="20201030 10:57:27.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.810" endtime="20201030 10:57:27.832"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.840" endtime="20201030 10:57:27.865"></status>
</kw>
<msg timestamp="20201030 10:57:27.865" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.838" endtime="20201030 10:57:27.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.868" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.866" endtime="20201030 10:57:27.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.869" endtime="20201030 10:57:27.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.836" endtime="20201030 10:57:27.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.834" endtime="20201030 10:57:27.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.878" endtime="20201030 10:57:28.163"></status>
</kw>
<msg timestamp="20201030 10:57:28.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017514583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017805556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.876" endtime="20201030 10:57:28.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017514583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017805556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.167" endtime="20201030 10:57:28.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.175" endtime="20201030 10:57:28.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.874" endtime="20201030 10:57:28.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.872" endtime="20201030 10:57:28.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:28.182" level="INFO">${PHILIP_RES} = [{'diff': 0.0002909729999999999}, {'diff': 0.0002904440000000008}, {'diff': 0.00029040199999999863}, {'diff': 0.00029037499999999897}, {'diff': 0.00029038899999999854}, {'diff': 0.0002904030000000016}...</msg>
<status status="PASS" starttime="20201030 10:57:28.179" endtime="20201030 10:57:28.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:28.187" level="INFO">${RESULT} = {'diff': [0.0002909729999999999, 0.0002904440000000008, 0.00029040199999999863, 0.00029037499999999897, 0.00029038899999999854, 0.0002904030000000016, 0.000290389000000002, 0.00029038899999999854, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:28.183" endtime="20201030 10:57:28.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.191" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:28.190" endtime="20201030 10:57:28.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.193" level="INFO">VALUE: [0.0002909729999999999, 0.0002904440000000008, 0.00029040199999999863, 0.00029037499999999897, 0.00029038899999999854, 0.0002904030000000016, 0.000290389000000002, 0.00029038899999999854, 0.0002904029999999981, 0.00029037500000000244, 0.0002904030000000016, 0.0002904030000000016, 0.0002904299999999978, 0.00029037499999999897, 0.000290389000000002, 0.00029037499999999897, 0.0002904029999999981, 0.00029037499999999897, 0.00029037499999999897, 0.0002904030000000016, 0.00029038899999999854, 0.00029037499999999897, 0.00029041700000000115, 0.000290389000000002, 0.0002904029999999981, 0.00029040199999999863, 0.00029034699999999983, 0.00029037500000000244, 0.00029036199999999887, 0.00029038899999999854, 0.00029045899999999986, 0.0002903340000000032, 0.000290389000000002, 0.00029041700000000115, 0.00029037499999999897, 0.0002904030000000016, 0.0002904020000000021, 0.000290389000000002, 0.0002904029999999981, 0.0002904580000000004, 0.00029038799999999906, 0.0002903190000000007, 0.00029038899999999854, 0.0002904030000000016, 0.0002904440000000008, 0.00029037500000000244, 0.0002904310000000007, 0.0002904030000000016, 0.0002903329999999968, 0.00029034699999999636]</msg>
<status status="PASS" starttime="20201030 10:57:28.192" endtime="20201030 10:57:28.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.187" endtime="20201030 10:57:28.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.832" endtime="20201030 10:57:28.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.810" endtime="20201030 10:57:28.195"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:28.198" endtime="20201030 10:57:28.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.196" endtime="20201030 10:57:28.217"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.226" endtime="20201030 10:57:28.250"></status>
</kw>
<msg timestamp="20201030 10:57:28.251" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.224" endtime="20201030 10:57:28.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.253" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.252" endtime="20201030 10:57:28.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.254" endtime="20201030 10:57:28.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.221" endtime="20201030 10:57:28.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.219" endtime="20201030 10:57:28.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.263" endtime="20201030 10:57:28.557"></status>
</kw>
<msg timestamp="20201030 10:57:28.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017697681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018000806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.262" endtime="20201030 10:57:28.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017697681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018000806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.566" endtime="20201030 10:57:28.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.584" endtime="20201030 10:57:28.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.259" endtime="20201030 10:57:28.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.257" endtime="20201030 10:57:28.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:28.598" level="INFO">${PHILIP_RES} = [{'diff': 0.0003031250000000013}, {'diff': 0.00030255599999999896}, {'diff': 0.00030258299999999863}, {'diff': 0.00030255500000000296}, {'diff': 0.0003025419999999994}, {'diff': 0.00030254200000000286...</msg>
<status status="PASS" starttime="20201030 10:57:28.591" endtime="20201030 10:57:28.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:28.606" level="INFO">${RESULT} = {'diff': [0.0003031250000000013, 0.00030255599999999896, 0.00030258299999999863, 0.00030255500000000296, 0.0003025419999999994, 0.00030254200000000286, 0.0003025549999999995, 0.00030256900000000253, 0...</msg>
<status status="PASS" starttime="20201030 10:57:28.600" endtime="20201030 10:57:28.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.615" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:28.613" endtime="20201030 10:57:28.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.620" level="INFO">VALUE: [0.0003031250000000013, 0.00030255599999999896, 0.00030258299999999863, 0.00030255500000000296, 0.0003025419999999994, 0.00030254200000000286, 0.0003025549999999995, 0.00030256900000000253, 0.0003025419999999994, 0.00030254200000000286, 0.0003025549999999995, 0.0003025410000000034, 0.0003025549999999995, 0.00030254200000000286, 0.00030258299999999863, 0.00030248599999999765, 0.00030261100000000124, 0.000302570000000002, 0.00030255599999999896, 0.0003026250000000008, 0.00030258299999999863, 0.00030255599999999896, 0.00030255599999999896, 0.00030255599999999896, 0.00030258299999999863, 0.00030256899999999906, 0.00030255599999999896, 0.00030255599999999896, 0.00030256899999999906, 0.0003025549999999995, 0.00030256999999999853, 0.00030255599999999896, 0.0003025409999999999, 0.0003025549999999995, 0.0003025279999999998, 0.00030255599999999896, 0.00030255600000000243, 0.0003025549999999995, 0.00030254200000000286, 0.00030256999999999853, 0.00030256999999999853, 0.0003025689999999956, 0.000302570000000002, 0.00030255600000000243, 0.00030256999999999507, 0.00030256900000000253, 0.0003025140000000037, 0.00030255600000000243, 0.0003025559999999955, 0.00030254200000000286]</msg>
<status status="PASS" starttime="20201030 10:57:28.617" endtime="20201030 10:57:28.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.608" endtime="20201030 10:57:28.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.218" endtime="20201030 10:57:28.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.196" endtime="20201030 10:57:28.624"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:28.629" endtime="20201030 10:57:28.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.626" endtime="20201030 10:57:28.650"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.658" endtime="20201030 10:57:28.681"></status>
</kw>
<msg timestamp="20201030 10:57:28.682" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.656" endtime="20201030 10:57:28.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.684" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.683" endtime="20201030 10:57:28.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.685" endtime="20201030 10:57:28.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.654" endtime="20201030 10:57:28.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.652" endtime="20201030 10:57:28.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.695" endtime="20201030 10:57:28.982"></status>
</kw>
<msg timestamp="20201030 10:57:28.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017504611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017820167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.694" endtime="20201030 10:57:28.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017504611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017820167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.986" endtime="20201030 10:57:28.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.994" endtime="20201030 10:57:28.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.691" endtime="20201030 10:57:28.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.689" endtime="20201030 10:57:28.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:29.000" level="INFO">${PHILIP_RES} = [{'diff': 0.00031555600000000156}, {'diff': 0.0003149580000000006}, {'diff': 0.0003150280000000019}, {'diff': 0.0003150420000000015}, {'diff': 0.00031498599999999974}, {'diff': 0.00031491700000000136}...</msg>
<status status="PASS" starttime="20201030 10:57:28.997" endtime="20201030 10:57:29.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.004" level="INFO">${RESULT} = {'diff': [0.00031555600000000156, 0.0003149580000000006, 0.0003150280000000019, 0.0003150420000000015, 0.00031498599999999974, 0.00031491700000000136, 0.00031495900000000007, 0.00031497200000000017, 0...</msg>
<status status="PASS" starttime="20201030 10:57:29.001" endtime="20201030 10:57:29.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.009" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:29.008" endtime="20201030 10:57:29.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.011" level="INFO">VALUE: [0.00031555600000000156, 0.0003149580000000006, 0.0003150280000000019, 0.0003150420000000015, 0.00031498599999999974, 0.00031491700000000136, 0.00031495900000000007, 0.00031497200000000017, 0.0003149580000000006, 0.0003149869999999992, 0.00031497200000000017, 0.00031497200000000017, 0.00031497200000000017, 0.00031495900000000007, 0.00031495799999999713, 0.00031497200000000017, 0.00031493100000000093, 0.00031497299999999964, 0.00031497200000000017, 0.00031497200000000017, 0.0003149999999999993, 0.0003149999999999993, 0.00031497200000000017, 0.00031498599999999974, 0.0003149869999999992, 0.00031498599999999974, 0.00031497200000000017, 0.00031497200000000017, 0.00031497200000000017, 0.00031497200000000017, 0.00031497200000000017, 0.0003149029999999983, 0.00031498599999999974, 0.00031497200000000017, 0.00031495900000000007, 0.00031495900000000007, 0.00031497200000000017, 0.00031497200000000017, 0.00031497299999999964, 0.0003149719999999967, 0.0003149860000000032, 0.0003149719999999967, 0.0003149730000000031, 0.0003149719999999967, 0.0003149719999999967, 0.0003149860000000032, 0.00031498599999999627, 0.0003149719999999967, 0.00031497200000000364, 0.00031497299999999617]</msg>
<status status="PASS" starttime="20201030 10:57:29.010" endtime="20201030 10:57:29.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.005" endtime="20201030 10:57:29.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.650" endtime="20201030 10:57:29.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.625" endtime="20201030 10:57:29.014"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.016" endtime="20201030 10:57:29.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.015" endtime="20201030 10:57:29.036"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.044" endtime="20201030 10:57:29.069"></status>
</kw>
<msg timestamp="20201030 10:57:29.070" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.042" endtime="20201030 10:57:29.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.072" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.071" endtime="20201030 10:57:29.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.073" endtime="20201030 10:57:29.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.040" endtime="20201030 10:57:29.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.038" endtime="20201030 10:57:29.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.082" endtime="20201030 10:57:29.376"></status>
</kw>
<msg timestamp="20201030 10:57:29.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017579972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017908208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.081" endtime="20201030 10:57:29.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017579972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017908208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.384" endtime="20201030 10:57:29.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.402" endtime="20201030 10:57:29.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.078" endtime="20201030 10:57:29.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.077" endtime="20201030 10:57:29.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:29.415" level="INFO">${PHILIP_RES} = [{'diff': 0.0003282359999999991}, {'diff': 0.0003276250000000015}, {'diff': 0.0003276389999999976}, {'diff': 0.0003276250000000015}, {'diff': 0.0003276250000000015}, {'diff': 0.00032761199999999796}, ...</msg>
<status status="PASS" starttime="20201030 10:57:29.409" endtime="20201030 10:57:29.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.426" level="INFO">${RESULT} = {'diff': [0.0003282359999999991, 0.0003276250000000015, 0.0003276389999999976, 0.0003276250000000015, 0.0003276250000000015, 0.00032761199999999796, 0.00032762499999999806, 0.0003276250000000015, 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:29.418" endtime="20201030 10:57:29.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.435" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:29.433" endtime="20201030 10:57:29.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.440" level="INFO">VALUE: [0.0003282359999999991, 0.0003276250000000015, 0.0003276389999999976, 0.0003276250000000015, 0.0003276250000000015, 0.00032761199999999796, 0.00032762499999999806, 0.0003276250000000015, 0.00032765300000000067, 0.00032762499999999806, 0.0003276109999999985, 0.0003276250000000015, 0.0003276250000000015, 0.00032762499999999806, 0.00032761200000000143, 0.00032761200000000143, 0.0003275969999999989, 0.0003276109999999985, 0.00032761100000000196, 0.0003276250000000015, 0.00032758299999999935, 0.0003276109999999985, 0.00032761100000000196, 0.0003276520000000012, 0.0003275979999999984, 0.00032758299999999935, 0.0003276250000000015, 0.0003276109999999985, 0.0003276250000000015, 0.0003276949999999994, 0.00032762499999999806, 0.0003276389999999976, 0.00032761100000000196, 0.0003276250000000015, 0.00032756999999999925, 0.00032761200000000143, 0.00032761100000000196, 0.00032754100000000064, 0.0003275969999999989, 0.0003276389999999976, 0.00032762499999999806, 0.000327625000000005, 0.000327625000000005, 0.00032762499999999806, 0.00032762499999999806, 0.0003275979999999984, 0.0003276109999999985, 0.0003276389999999976, 0.00032758299999999935, 0.00032763900000000457]</msg>
<status status="PASS" starttime="20201030 10:57:29.437" endtime="20201030 10:57:29.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.428" endtime="20201030 10:57:29.442"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.037" endtime="20201030 10:57:29.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.014" endtime="20201030 10:57:29.444"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.448" endtime="20201030 10:57:29.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.446" endtime="20201030 10:57:29.467"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.476" endtime="20201030 10:57:29.502"></status>
</kw>
<msg timestamp="20201030 10:57:29.503" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.474" endtime="20201030 10:57:29.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.505" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.504" endtime="20201030 10:57:29.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.506" endtime="20201030 10:57:29.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.471" endtime="20201030 10:57:29.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.469" endtime="20201030 10:57:29.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.515" endtime="20201030 10:57:29.804"></status>
</kw>
<msg timestamp="20201030 10:57:29.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017676806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018017903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.514" endtime="20201030 10:57:29.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017676806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018017903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.808" endtime="20201030 10:57:29.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.816" endtime="20201030 10:57:29.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.511" endtime="20201030 10:57:29.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.509" endtime="20201030 10:57:29.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:29.823" level="INFO">${PHILIP_RES} = [{'diff': 0.00034109699999999854}, {'diff': 0.00034054199999999923}, {'diff': 0.00034052799999999966}, {'diff': 0.00034052799999999966}, {'diff': 0.0003405140000000001}, {'diff': 0.0003405279999999996...</msg>
<status status="PASS" starttime="20201030 10:57:29.820" endtime="20201030 10:57:29.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.828" level="INFO">${RESULT} = {'diff': [0.00034109699999999854, 0.00034054199999999923, 0.00034052799999999966, 0.00034052799999999966, 0.0003405140000000001, 0.00034052799999999966, 0.00034052799999999966, 0.0003405140000000001, ...</msg>
<status status="PASS" starttime="20201030 10:57:29.824" endtime="20201030 10:57:29.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.832" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:29.831" endtime="20201030 10:57:29.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.835" level="INFO">VALUE: [0.00034109699999999854, 0.00034054199999999923, 0.00034052799999999966, 0.00034052799999999966, 0.0003405140000000001, 0.00034052799999999966, 0.00034052799999999966, 0.0003405140000000001, 0.00034054199999999923, 0.00034052799999999966, 0.00034052799999999966, 0.00034054199999999923, 0.0003405560000000023, 0.00034045799999999835, 0.0003405140000000001, 0.0003405139999999966, 0.0003405000000000005, 0.00034052799999999966, 0.0003405140000000001, 0.00034052799999999966, 0.0003405140000000001, 0.0003404720000000014, 0.0003405140000000001, 0.0003405559999999988, 0.00034052799999999966, 0.0003405000000000005, 0.000340598000000001, 0.0003405140000000001, 0.00034052800000000313, 0.0003405000000000005, 0.0003405000000000005, 0.00034054199999999923, 0.0003404439999999988, 0.0003405140000000001, 0.0003405140000000001, 0.0003405140000000001, 0.00034052799999999966, 0.00034052799999999966, 0.00034052799999999966, 0.0003405559999999988, 0.00034052799999999966, 0.0003405979999999975, 0.0003405140000000001, 0.0003405420000000062, 0.0003405000000000005, 0.00034054199999999923, 0.00034052799999999966, 0.0003405140000000001, 0.00034052799999999966, 0.0003405280000000066]</msg>
<status status="PASS" starttime="20201030 10:57:29.833" endtime="20201030 10:57:29.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.829" endtime="20201030 10:57:29.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.468" endtime="20201030 10:57:29.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.445" endtime="20201030 10:57:29.837"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.839" endtime="20201030 10:57:29.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.838" endtime="20201030 10:57:29.859"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.867" endtime="20201030 10:57:29.894"></status>
</kw>
<msg timestamp="20201030 10:57:29.895" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.865" endtime="20201030 10:57:29.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.897" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.896" endtime="20201030 10:57:29.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.898" endtime="20201030 10:57:29.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.863" endtime="20201030 10:57:29.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.861" endtime="20201030 10:57:29.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.908" endtime="20201030 10:57:30.202"></status>
</kw>
<msg timestamp="20201030 10:57:30.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017443736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.907" endtime="20201030 10:57:30.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017443736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.211" endtime="20201030 10:57:30.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.229" endtime="20201030 10:57:30.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.904" endtime="20201030 10:57:30.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.902" endtime="20201030 10:57:30.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:30.242" level="INFO">${PHILIP_RES} = [{'diff': 0.00035423599999999736}, {'diff': 0.00035362499999999977}, {'diff': 0.0003536530000000024}, {'diff': 0.00035363899999999934}, {'diff': 0.00035363899999999934}, {'diff': 0.0003536390000000028...</msg>
<status status="PASS" starttime="20201030 10:57:30.236" endtime="20201030 10:57:30.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.251" level="INFO">${RESULT} = {'diff': [0.00035423599999999736, 0.00035362499999999977, 0.0003536530000000024, 0.00035363899999999934, 0.00035363899999999934, 0.0003536390000000028, 0.00035363899999999934, 0.00035362499999999977, ...</msg>
<status status="PASS" starttime="20201030 10:57:30.244" endtime="20201030 10:57:30.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.258" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:30.257" endtime="20201030 10:57:30.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.260" level="INFO">VALUE: [0.00035423599999999736, 0.00035362499999999977, 0.0003536530000000024, 0.00035363899999999934, 0.00035363899999999934, 0.0003536390000000028, 0.00035363899999999934, 0.00035362499999999977, 0.00035363799999999987, 0.00035363899999999934, 0.0003536530000000024, 0.00035363799999999987, 0.00035363899999999934, 0.0003536530000000024, 0.0003536110000000002, 0.0003536529999999989, 0.00035363899999999934, 0.00035365199999999944, 0.0003536530000000024, 0.00035368099999999805, 0.00035365199999999944, 0.0003536530000000024, 0.0003536529999999989, 0.00035365199999999944, 0.00035362499999999977, 0.0003536669999999985, 0.00035363800000000334, 0.00035363899999999934, 0.0003536950000000011, 0.00035369399999999815, 0.00035358400000000054, 0.0003536530000000024, 0.00035363899999999934, 0.0003536110000000002, 0.00035362500000000324, 0.0003536520000000029, 0.00035365299999999544, 0.0003536390000000028, 0.0003536390000000028, 0.00035365299999999544, 0.00035366700000000195, 0.0003536660000000025, 0.00035365299999999544, 0.00035372200000000076, 0.0003536520000000029, 0.00035365299999999544, 0.0003536389999999959, 0.0003536390000000028, 0.0003536389999999959, 0.0003536249999999963]</msg>
<status status="PASS" starttime="20201030 10:57:30.259" endtime="20201030 10:57:30.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.252" endtime="20201030 10:57:30.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.860" endtime="20201030 10:57:30.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.837" endtime="20201030 10:57:30.263"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:30.265" endtime="20201030 10:57:30.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.264" endtime="20201030 10:57:30.285"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.293" endtime="20201030 10:57:30.321"></status>
</kw>
<msg timestamp="20201030 10:57:30.322" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.292" endtime="20201030 10:57:30.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.324" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.323" endtime="20201030 10:57:30.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.325" endtime="20201030 10:57:30.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.289" endtime="20201030 10:57:30.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.287" endtime="20201030 10:57:30.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.334" endtime="20201030 10:57:30.620"></status>
</kw>
<msg timestamp="20201030 10:57:30.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017424292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017791875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.333" endtime="20201030 10:57:30.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017424292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017791875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.624" endtime="20201030 10:57:30.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.632" endtime="20201030 10:57:30.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.330" endtime="20201030 10:57:30.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.328" endtime="20201030 10:57:30.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:30.638" level="INFO">${PHILIP_RES} = [{'diff': 0.0003675829999999977}, {'diff': 0.00036701399999999884}, {'diff': 0.0003670279999999984}, {'diff': 0.000367056000000001}, {'diff': 0.0003670279999999984}, {'diff': 0.00036697200000000013}, ...</msg>
<status status="PASS" starttime="20201030 10:57:30.635" endtime="20201030 10:57:30.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.643" level="INFO">${RESULT} = {'diff': [0.0003675829999999977, 0.00036701399999999884, 0.0003670279999999984, 0.000367056000000001, 0.0003670279999999984, 0.00036697200000000013, 0.0003670700000000006, 0.00036701399999999884, 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:30.639" endtime="20201030 10:57:30.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.647" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:30.646" endtime="20201030 10:57:30.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.650" level="INFO">VALUE: [0.0003675829999999977, 0.00036701399999999884, 0.0003670279999999984, 0.000367056000000001, 0.0003670279999999984, 0.00036697200000000013, 0.0003670700000000006, 0.00036701399999999884, 0.00036699999999999927, 0.00036701399999999884, 0.00036702699999999894, 0.0003670830000000007, 0.0003670270000000024, 0.00036704200000000145, 0.0003670280000000019, 0.0003670280000000019, 0.0003670280000000019, 0.0003670409999999985, 0.0003670279999999984, 0.00036701399999999884, 0.0003670279999999984, 0.0003670279999999984, 0.0003669439999999975, 0.00036704200000000145, 0.00036702699999999894, 0.00036704200000000145, 0.0003670280000000019, 0.00036697200000000013, 0.0003670280000000019, 0.0003670270000000024, 0.0003670280000000019, 0.00036702699999999894, 0.0003670279999999984, 0.000367041999999998, 0.0003670279999999984, 0.0003670279999999984, 0.00036702699999999894, 0.00036701399999999884, 0.00036701399999999884, 0.000367041999999998, 0.0003670829999999972, 0.0003669859999999997, 0.00036701399999999884, 0.00036701399999999884, 0.000367041999999998, 0.0003670970000000037, 0.00036702800000000535, 0.00036701399999999884, 0.00036702699999999894, 0.0003670420000000049]</msg>
<status status="PASS" starttime="20201030 10:57:30.648" endtime="20201030 10:57:30.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.644" endtime="20201030 10:57:30.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.286" endtime="20201030 10:57:30.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.263" endtime="20201030 10:57:30.652"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:30.654" endtime="20201030 10:57:30.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.652" endtime="20201030 10:57:30.674"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.682" endtime="20201030 10:57:30.711"></status>
</kw>
<msg timestamp="20201030 10:57:30.711" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.680" endtime="20201030 10:57:30.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.714" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.712" endtime="20201030 10:57:30.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.715" endtime="20201030 10:57:30.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.678" endtime="20201030 10:57:30.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.676" endtime="20201030 10:57:30.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.724" endtime="20201030 10:57:31.021"></status>
</kw>
<msg timestamp="20201030 10:57:31.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017564417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017945625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.722" endtime="20201030 10:57:31.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017564417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017945625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.030" endtime="20201030 10:57:31.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.048" endtime="20201030 10:57:31.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.720" endtime="20201030 10:57:31.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.718" endtime="20201030 10:57:31.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:31.061" level="INFO">${PHILIP_RES} = [{'diff': 0.00038120800000000093}, {'diff': 0.00038061099999999945}, {'diff': 0.00038061099999999945}, {'diff': 0.0003805969999999999}, {'diff': 0.0003806389999999986}, {'diff': 0.000380624999999999},...</msg>
<status status="PASS" starttime="20201030 10:57:31.054" endtime="20201030 10:57:31.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.068" level="INFO">${RESULT} = {'diff': [0.00038120800000000093, 0.00038061099999999945, 0.00038061099999999945, 0.0003805969999999999, 0.0003806389999999986, 0.000380624999999999, 0.0003806660000000017, 0.00038066699999999773, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:31.063" endtime="20201030 10:57:31.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.072" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:31.071" endtime="20201030 10:57:31.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.075" level="INFO">VALUE: [0.00038120800000000093, 0.00038061099999999945, 0.00038061099999999945, 0.0003805969999999999, 0.0003806389999999986, 0.000380624999999999, 0.0003806660000000017, 0.00038066699999999773, 0.000380624999999999, 0.00038061099999999945, 0.0003806120000000024, 0.00038061099999999945, 0.0003805969999999999, 0.0003806250000000025, 0.00038061099999999945, 0.000380624999999999, 0.00038061099999999945, 0.0003805969999999999, 0.00038056899999999727, 0.00038056900000000074, 0.000380624999999999, 0.00038061099999999945, 0.00038066599999999826, 0.00038061099999999945, 0.00038061099999999945, 0.0003805980000000028, 0.00038061099999999945, 0.0003805830000000003, 0.0003806110000000029, 0.000380624999999999, 0.00038061099999999945, 0.0003806110000000029, 0.00038061099999999945, 0.00038061099999999945, 0.00038062499999999555, 0.00038065300000000163, 0.0003806110000000029, 0.00038059700000000335, 0.0003805690000000042, 0.0003806110000000029, 0.00038061199999999545, 0.000380610999999996, 0.00038059700000000335, 0.0003806110000000029, 0.0003806250000000025, 0.0003806250000000025, 0.000380610999999996, 0.000380610999999996, 0.000380610999999996, 0.0003806250000000025]</msg>
<status status="PASS" starttime="20201030 10:57:31.073" endtime="20201030 10:57:31.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.069" endtime="20201030 10:57:31.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.674" endtime="20201030 10:57:31.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.652" endtime="20201030 10:57:31.076"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:31.079" endtime="20201030 10:57:31.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.077" endtime="20201030 10:57:31.099"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.107" endtime="20201030 10:57:31.135"></status>
</kw>
<msg timestamp="20201030 10:57:31.136" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.105" endtime="20201030 10:57:31.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.138" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.137" endtime="20201030 10:57:31.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.139" endtime="20201030 10:57:31.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.103" endtime="20201030 10:57:31.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.101" endtime="20201030 10:57:31.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.149" endtime="20201030 10:57:31.435"></status>
</kw>
<msg timestamp="20201030 10:57:31.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017440736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017835806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.147" endtime="20201030 10:57:31.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017440736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017835806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.439" endtime="20201030 10:57:31.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.447" endtime="20201030 10:57:31.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.145" endtime="20201030 10:57:31.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.143" endtime="20201030 10:57:31.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:31.454" level="INFO">${PHILIP_RES} = [{'diff': 0.00039507000000000084}, {'diff': 0.0003944730000000028}, {'diff': 0.00039448599999999945}, {'diff': 0.00039448599999999945}, {'diff': 0.00039448599999999945}, {'diff': 0.0003944859999999994...</msg>
<status status="PASS" starttime="20201030 10:57:31.451" endtime="20201030 10:57:31.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.458" level="INFO">${RESULT} = {'diff': [0.00039507000000000084, 0.0003944730000000028, 0.00039448599999999945, 0.00039448599999999945, 0.00039448599999999945, 0.00039448599999999945, 0.0003944869999999989, 0.0003944580000000003, 0...</msg>
<status status="PASS" starttime="20201030 10:57:31.455" endtime="20201030 10:57:31.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.462" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:31.461" endtime="20201030 10:57:31.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.464" level="INFO">VALUE: [0.00039507000000000084, 0.0003944730000000028, 0.00039448599999999945, 0.00039448599999999945, 0.00039448599999999945, 0.00039448599999999945, 0.0003944869999999989, 0.0003944580000000003, 0.0003944870000000024, 0.0003945139999999986, 0.0003944719999999999, 0.00039447299999999935, 0.00039448599999999945, 0.0003944589999999998, 0.000394499999999999, 0.00039447200000000335, 0.0003944869999999989, 0.0003944719999999999, 0.00039448599999999945, 0.0003944860000000029, 0.0003944719999999999, 0.00039452799999999816, 0.0003944719999999999, 0.0003944589999999998, 0.000394499999999999, 0.00039448599999999945, 0.0003944870000000024, 0.0003945000000000025, 0.0003944719999999999, 0.000394499999999999, 0.0003944719999999999, 0.0003944719999999999, 0.00039448599999999945, 0.00039448599999999945, 0.0003944719999999999, 0.000394499999999999, 0.0003945280000000051, 0.00039448599999999945, 0.000394499999999999, 0.00039441599999999466, 0.0003944719999999999, 0.00039447299999999935, 0.0003944580000000003, 0.0003944719999999999, 0.0003945139999999986, 0.0003944580000000003, 0.00039448599999999945, 0.00039448599999999945, 0.0003945129999999991, 0.0003944719999999999]</msg>
<status status="PASS" starttime="20201030 10:57:31.463" endtime="20201030 10:57:31.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.459" endtime="20201030 10:57:31.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.099" endtime="20201030 10:57:31.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.077" endtime="20201030 10:57:31.467"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:31.469" endtime="20201030 10:57:31.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.468" endtime="20201030 10:57:31.489"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.497" endtime="20201030 10:57:31.527"></status>
</kw>
<msg timestamp="20201030 10:57:31.528" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.496" endtime="20201030 10:57:31.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.530" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.529" endtime="20201030 10:57:31.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.531" endtime="20201030 10:57:31.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.493" endtime="20201030 10:57:31.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.491" endtime="20201030 10:57:31.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.540" endtime="20201030 10:57:31.835"></status>
</kw>
<msg timestamp="20201030 10:57:31.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017430153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017839278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.539" endtime="20201030 10:57:31.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017430153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017839278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.844" endtime="20201030 10:57:31.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.862" endtime="20201030 10:57:31.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.536" endtime="20201030 10:57:31.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.534" endtime="20201030 10:57:31.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:31.876" level="INFO">${PHILIP_RES} = [{'diff': 0.00040912499999999977}, {'diff': 0.0004085689999999975}, {'diff': 0.0004085559999999974}, {'diff': 0.0004085420000000013}, {'diff': 0.000408569000000001}, {'diff': 0.000408569000000001}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:31.869" endtime="20201030 10:57:31.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.881" level="INFO">${RESULT} = {'diff': [0.00040912499999999977, 0.0004085689999999975, 0.0004085559999999974, 0.0004085420000000013, 0.000408569000000001, 0.000408569000000001, 0.0004085689999999975, 0.00040848599999999957, 0.0004...</msg>
<status status="PASS" starttime="20201030 10:57:31.877" endtime="20201030 10:57:31.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.886" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:31.885" endtime="20201030 10:57:31.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.888" level="INFO">VALUE: [0.00040912499999999977, 0.0004085689999999975, 0.0004085559999999974, 0.0004085420000000013, 0.000408569000000001, 0.000408569000000001, 0.0004085689999999975, 0.00040848599999999957, 0.00040854199999999785, 0.0004085550000000014, 0.00040854100000000185, 0.0004085560000000009, 0.00040857000000000046, 0.0004085559999999974, 0.0004085829999999971, 0.0004085139999999987, 0.00040857000000000046, 0.0004085560000000009, 0.0004085550000000014, 0.00040849999999999914, 0.00040855499999999795, 0.00040857000000000046, 0.0004085560000000009, 0.00040854100000000185, 0.0004085550000000014, 0.00040857000000000046, 0.0004085559999999974, 0.00040855499999999795, 0.0004085550000000014, 0.0004085420000000013, 0.0004085970000000001, 0.0004085140000000022, 0.00040859699999999666, 0.00040856900000000446, 0.0004085689999999975, 0.0004085840000000035, 0.00040854199999999785, 0.0004085689999999975, 0.0004085970000000036, 0.000408569999999997, 0.00040857000000000393, 0.00040861099999999623, 0.0004085689999999975, 0.0004085269999999988, 0.0004085559999999974, 0.00040856900000000446, 0.0004085829999999971, 0.00040855499999999795, 0.00040857000000000393, 0.00040858399999999656]</msg>
<status status="PASS" starttime="20201030 10:57:31.887" endtime="20201030 10:57:31.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.882" endtime="20201030 10:57:31.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.490" endtime="20201030 10:57:31.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.467" endtime="20201030 10:57:31.890"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:31.893" endtime="20201030 10:57:31.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.891" endtime="20201030 10:57:31.913"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.921" endtime="20201030 10:57:31.951"></status>
</kw>
<msg timestamp="20201030 10:57:31.951" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.919" endtime="20201030 10:57:31.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.954" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.952" endtime="20201030 10:57:31.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.955" endtime="20201030 10:57:31.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.917" endtime="20201030 10:57:31.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.915" endtime="20201030 10:57:31.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.964" endtime="20201030 10:57:32.252"></status>
</kw>
<msg timestamp="20201030 10:57:32.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017577083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018000583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.962" endtime="20201030 10:57:32.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017577083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018000583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.257" endtime="20201030 10:57:32.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.265" endtime="20201030 10:57:32.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.960" endtime="20201030 10:57:32.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.958" endtime="20201030 10:57:32.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:32.271" level="INFO">${PHILIP_RES} = [{'diff': 0.00042350000000000027}, {'diff': 0.00042291699999999835}, {'diff': 0.0004229019999999993}, {'diff': 0.0004228889999999992}, {'diff': 0.0004229029999999988}, {'diff': 0.0004229029999999988},...</msg>
<status status="PASS" starttime="20201030 10:57:32.268" endtime="20201030 10:57:32.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.275" level="INFO">${RESULT} = {'diff': [0.00042350000000000027, 0.00042291699999999835, 0.0004229019999999993, 0.0004228889999999992, 0.0004229029999999988, 0.0004229029999999988, 0.0004229019999999993, 0.0004229449999999975, 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:32.272" endtime="20201030 10:57:32.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.279" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:32.278" endtime="20201030 10:57:32.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.282" level="INFO">VALUE: [0.00042350000000000027, 0.00042291699999999835, 0.0004229019999999993, 0.0004228889999999992, 0.0004229029999999988, 0.0004229029999999988, 0.0004229019999999993, 0.0004229449999999975, 0.0004229029999999988, 0.00042291699999999835, 0.0004229019999999993, 0.00042291600000000235, 0.0004228889999999992, 0.0004228470000000005, 0.00042290300000000225, 0.0004229020000000028, 0.0004229170000000018, 0.00042290300000000225, 0.0004229170000000018, 0.0004229300000000019, 0.0004229170000000018, 0.0004229029999999988, 0.0004229029999999988, 0.00042283299999999746, 0.0004228889999999992, 0.00042295800000000106, 0.000422943999999998, 0.0004229019999999993, 0.0004229159999999989, 0.0004229310000000014, 0.0004229020000000028, 0.000422929999999995, 0.00042295800000000106, 0.0004229029999999953, 0.00042290300000000225, 0.0004229029999999953, 0.0004229020000000028, 0.0004229169999999949, 0.0004228890000000027, 0.00042287499999999617, 0.00042291600000000235, 0.0004229029999999953, 0.00042290300000000225, 0.00042290300000000225, 0.00042290300000000225, 0.0004228890000000027, 0.00042290300000000225, 0.0004229170000000018, 0.0004229170000000018, 0.00042291600000000235]</msg>
<status status="PASS" starttime="20201030 10:57:32.280" endtime="20201030 10:57:32.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.276" endtime="20201030 10:57:32.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.913" endtime="20201030 10:57:32.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.891" endtime="20201030 10:57:32.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.093" endtime="20201030 10:57:32.284"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:11.840" endtime="20201030 10:57:32.285" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:56:51.992" endtime="20201030 10:57:32.294"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.364" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:32.372" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:33.585" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:32.363" endtime="20201030 10:57:33.586"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.588" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:33.587" endtime="20201030 10:57:33.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.361" endtime="20201030 10:57:33.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:33.591" endtime="20201030 10:57:33.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.590" endtime="20201030 10:57:33.778"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.790" endtime="20201030 10:57:33.806"></status>
</kw>
<msg timestamp="20201030 10:57:33.807" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.789" endtime="20201030 10:57:33.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.809" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.808" endtime="20201030 10:57:33.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.812" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:33.810" endtime="20201030 10:57:33.813"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:33.786" endtime="20201030 10:57:33.813"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:33.784" endtime="20201030 10:57:33.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.783" endtime="20201030 10:57:33.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:33.819" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:33.818" endtime="20201030 10:57:33.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.815" endtime="20201030 10:57:33.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.782" endtime="20201030 10:57:33.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.781" endtime="20201030 10:57:33.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.821" endtime="20201030 10:57:33.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.780" endtime="20201030 10:57:33.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.824" endtime="20201030 10:57:33.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.778" endtime="20201030 10:57:33.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.360" endtime="20201030 10:57:33.826"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:33.832" endtime="20201030 10:57:33.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.830" endtime="20201030 10:57:33.852"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.865" endtime="20201030 10:57:33.881"></status>
</kw>
<msg timestamp="20201030 10:57:33.882" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.864" endtime="20201030 10:57:33.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.885" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.883" endtime="20201030 10:57:33.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.888" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:33.886" endtime="20201030 10:57:33.888"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:33.861" endtime="20201030 10:57:33.889"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:33.859" endtime="20201030 10:57:33.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.858" endtime="20201030 10:57:33.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:33.893" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:33.892" endtime="20201030 10:57:33.893"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.890" endtime="20201030 10:57:33.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.857" endtime="20201030 10:57:33.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.856" endtime="20201030 10:57:33.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.895" endtime="20201030 10:57:33.896"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.855" endtime="20201030 10:57:33.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.853" endtime="20201030 10:57:33.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.829" endtime="20201030 10:57:33.898"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.910" endtime="20201030 10:57:33.925"></status>
</kw>
<msg timestamp="20201030 10:57:33.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.909" endtime="20201030 10:57:33.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.926" endtime="20201030 10:57:33.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.929" endtime="20201030 10:57:33.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.904" endtime="20201030 10:57:33.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.902" endtime="20201030 10:57:33.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.938" endtime="20201030 10:57:34.226"></status>
</kw>
<msg timestamp="20201030 10:57:34.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071214194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071217139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.936" endtime="20201030 10:57:34.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071214194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071217139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.230" endtime="20201030 10:57:34.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.239" endtime="20201030 10:57:34.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.934" endtime="20201030 10:57:34.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.932" endtime="20201030 10:57:34.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.245" level="INFO">${RESULT} = [{'diff': 2.9450000000041943e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.360999999992397e-06}, {'diff': 2.3200000000000998e-06}, {'diff': 2.3749999999989058e-0...</msg>
<status status="PASS" starttime="20201030 10:57:34.242" endtime="20201030 10:57:34.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:34.249" level="INFO">${ACCURACY} = {'diff': [2.9450000000041943e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.360999999992397e-06, 2.3200000000000998e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:34.246" endtime="20201030 10:57:34.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.255" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 10:57:34.254" endtime="20201030 10:57:34.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.257" level="INFO">VALUE: [2.9450000000041943e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.360999999992397e-06, 2.3200000000000998e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4029999999980456e-06, 2.05600000000028e-06, 3.0000000000030003e-06, 2.415999999991203e-06, 2.55600000000078e-06, 2.4160000000050808e-06, 2.1250000000055946e-06, 1.9859999999954914e-06, 2.9860000000103692e-06, 2.1389999999982257e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 1.9859999999954914e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3890000000054146e-06, 2.3749999999989058e-06, 2.9860000000103692e-06, 2.110999999999086e-06, 2.3749999999989058e-06, 2.000000000002e-06, 2.3610000000062747e-06, 2.000000000002e-06, 2.360999999992397e-06, 2.387999999992063e-06, 2.3889999999915368e-06, 2.3890000000054146e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.000000000002e-06, 2.9999999999891225e-06, 2.110999999999086e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 1.9999999999881224e-06, 2.3610000000062747e-06]</msg>
<status status="PASS" starttime="20201030 10:57:34.256" endtime="20201030 10:57:34.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.250" endtime="20201030 10:57:34.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:34.262" endtime="20201030 10:57:34.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.260" endtime="20201030 10:57:34.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.259" endtime="20201030 10:57:34.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.900" endtime="20201030 10:57:34.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.899" endtime="20201030 10:57:34.282"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.291" endtime="20201030 10:57:34.305"></status>
</kw>
<msg timestamp="20201030 10:57:34.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.289" endtime="20201030 10:57:34.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.306" endtime="20201030 10:57:34.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.308" endtime="20201030 10:57:34.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.287" endtime="20201030 10:57:34.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.285" endtime="20201030 10:57:34.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.318" endtime="20201030 10:57:34.599"></status>
</kw>
<msg timestamp="20201030 10:57:34.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.316" endtime="20201030 10:57:34.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.603" endtime="20201030 10:57:34.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.611" endtime="20201030 10:57:34.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.313" endtime="20201030 10:57:34.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.312" endtime="20201030 10:57:34.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.618" level="INFO">${RESULT} = [{'diff': 4.041999999999241e-06}, {'diff': 2.972000000000391e-06}, {'diff': 3.4589999999973253e-06}, {'diff': 3.750000000000281e-06}, {'diff': 3.4439999999982818e-06}, {'diff': 3.429999999998712e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:34.615" endtime="20201030 10:57:34.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:34.623" level="INFO">${ACCURACY} = {'diff': [4.041999999999241e-06, 2.972000000000391e-06, 3.4589999999973253e-06, 3.750000000000281e-06, 3.4439999999982818e-06, 3.429999999998712e-06, 3.4309999999981855e-06, 3.4439999999982818e-06, 3....</msg>
<status status="PASS" starttime="20201030 10:57:34.619" endtime="20201030 10:57:34.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.628" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 10:57:34.627" endtime="20201030 10:57:34.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.630" level="INFO">VALUE: [4.041999999999241e-06, 2.972000000000391e-06, 3.4589999999973253e-06, 3.750000000000281e-06, 3.4439999999982818e-06, 3.429999999998712e-06, 3.4309999999981855e-06, 3.4439999999982818e-06, 3.7359999999972415e-06, 3.2639999999993508e-06, 3.763999999999851e-06, 3.4309999999981855e-06, 3.4440000000017512e-06, 3.3059999999980605e-06, 2.999999999999531e-06, 3.319000000001626e-06, 2.999999999999531e-06, 3.445000000001225e-06, 3.3189999999981568e-06, 3.429999999998712e-06, 3.4440000000017512e-06, 3.30600000000153e-06, 3.4440000000017512e-06, 3.750000000000281e-06, 2.958000000000821e-06, 3.30600000000153e-06, 3.486000000000461e-06, 3.3200000000011e-06, 3.4439999999982818e-06, 3.30600000000153e-06, 3.29200000000196e-06, 3.750000000000281e-06, 3.304999999998587e-06, 3.29200000000196e-06, 3.3050000000020563e-06, 3.431000000001655e-06, 3.30600000000153e-06, 3.445000000001225e-06, 3.30600000000153e-06, 3.262999999999877e-06, 3.0000000000030003e-06, 3.750000000000281e-06, 2.999999999999531e-06, 3.4300000000021813e-06, 3.304999999998587e-06, 3.445000000001225e-06, 3.276999999999447e-06, 3.429999999998712e-06, 3.2919999999984906e-06, 3.3050000000020563e-06]</msg>
<status status="PASS" starttime="20201030 10:57:34.629" endtime="20201030 10:57:34.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.624" endtime="20201030 10:57:34.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:34.635" endtime="20201030 10:57:34.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.633" endtime="20201030 10:57:34.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.632" endtime="20201030 10:57:34.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.283" endtime="20201030 10:57:34.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.283" endtime="20201030 10:57:34.655"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.664" endtime="20201030 10:57:34.678"></status>
</kw>
<msg timestamp="20201030 10:57:34.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.662" endtime="20201030 10:57:34.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:34.679" endtime="20201030 10:57:34.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.681" endtime="20201030 10:57:34.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.660" endtime="20201030 10:57:34.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.658" endtime="20201030 10:57:34.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.691" endtime="20201030 10:57:34.974"></status>
</kw>
<msg timestamp="20201030 10:57:34.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.689" endtime="20201030 10:57:34.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:34.978" endtime="20201030 10:57:34.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:34.986" endtime="20201030 10:57:34.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.687" endtime="20201030 10:57:34.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.685" endtime="20201030 10:57:34.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:34.993" level="INFO">${RESULT} = [{'diff': 4.679999999999962e-06}, {'diff': 4.778000000000421e-06}, {'diff': 4.611000000001586e-06}, {'diff': 4.318999999999157e-06}, {'diff': 4.332999999998727e-06}, {'diff': 4.1949999999985055e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:34.990" endtime="20201030 10:57:34.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:34.997" level="INFO">${ACCURACY} = {'diff': [4.679999999999962e-06, 4.778000000000421e-06, 4.611000000001586e-06, 4.318999999999157e-06, 4.332999999998727e-06, 4.1949999999985055e-06, 4.3339999999982e-06, 4.653000000000296e-06, 3.88899...</msg>
<status status="PASS" starttime="20201030 10:57:34.994" endtime="20201030 10:57:34.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.002" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 10:57:35.001" endtime="20201030 10:57:35.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.004" level="INFO">VALUE: [4.679999999999962e-06, 4.778000000000421e-06, 4.611000000001586e-06, 4.318999999999157e-06, 4.332999999998727e-06, 4.1949999999985055e-06, 4.3339999999982e-06, 4.653000000000296e-06, 3.888999999999976e-06, 4.653000000000296e-06, 4.639000000000726e-06, 3.875000000000406e-06, 4.33400000000167e-06, 4.318999999999157e-06, 4.610999999998117e-06, 4.638000000001252e-06, 4.3200000000021e-06, 4.764000000000851e-06, 4.165999999999892e-06, 4.389000000000476e-06, 4.332999999998727e-06, 4.639000000000726e-06, 4.1809999999989356e-06, 4.639000000000726e-06, 4.207999999998602e-06, 4.332999999998727e-06, 4.736000000001711e-06, 4.193999999999032e-06, 4.318999999999157e-06, 4.653000000000296e-06, 4.193999999999032e-06, 3.888999999999976e-06, 4.3339999999982e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.180000000002931e-06, 4.250000000000781e-06, 4.332999999998727e-06, 4.193999999999032e-06, 4.639000000000726e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.181000000002405e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.639000000000726e-06, 4.610999999998117e-06, 4.1809999999989356e-06, 3.888999999999976e-06, 4.638000000001252e-06]</msg>
<status status="PASS" starttime="20201030 10:57:35.003" endtime="20201030 10:57:35.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.998" endtime="20201030 10:57:35.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:35.008" endtime="20201030 10:57:35.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.007" endtime="20201030 10:57:35.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.006" endtime="20201030 10:57:35.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.656" endtime="20201030 10:57:35.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.656" endtime="20201030 10:57:35.029"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.039" endtime="20201030 10:57:35.053"></status>
</kw>
<msg timestamp="20201030 10:57:35.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.036" endtime="20201030 10:57:35.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.054" endtime="20201030 10:57:35.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.057" endtime="20201030 10:57:35.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.034" endtime="20201030 10:57:35.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.032" endtime="20201030 10:57:35.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.066" endtime="20201030 10:57:35.350"></status>
</kw>
<msg timestamp="20201030 10:57:35.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.064" endtime="20201030 10:57:35.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.354" endtime="20201030 10:57:35.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.362" endtime="20201030 10:57:35.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.062" endtime="20201030 10:57:35.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.060" endtime="20201030 10:57:35.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.369" level="INFO">${RESULT} = [{'diff': 5.332999999999727e-06}, {'diff': 5.236999999998215e-06}, {'diff': 5.235999999998742e-06}, {'diff': 5.542000000000741e-06}, {'diff': 5.542000000000741e-06}, {'diff': 5.499999999998562e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:35.365" endtime="20201030 10:57:35.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:35.373" level="INFO">${ACCURACY} = {'diff': [5.332999999999727e-06, 5.236999999998215e-06, 5.235999999998742e-06, 5.542000000000741e-06, 5.542000000000741e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.207999999999602e-06, 5.6530...</msg>
<status status="PASS" starttime="20201030 10:57:35.370" endtime="20201030 10:57:35.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.377" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 10:57:35.376" endtime="20201030 10:57:35.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.380" level="INFO">VALUE: [5.332999999999727e-06, 5.236999999998215e-06, 5.235999999998742e-06, 5.542000000000741e-06, 5.542000000000741e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.207999999999602e-06, 5.653000000001296e-06, 5.221999999999172e-06, 5.681000000000436e-06, 5.528000000001171e-06, 5.666000000001392e-06, 5.096999999999047e-06, 5.221999999999172e-06, 5.222000000002641e-06, 5.694000000000532e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.666000000001392e-06, 5.055000000000337e-06, 5.514000000001601e-06, 5.542000000000741e-06, 5.235999999998742e-06, 5.236000000002211e-06, 5.527000000001697e-06, 5.527999999997701e-06, 5.528000000001171e-06, 5.527000000001697e-06, 5.207999999999602e-06, 5.527999999997701e-06, 5.221999999999172e-06, 5.485999999998992e-06, 5.2639999999978815e-06, 5.09800000000199e-06, 5.582999999999977e-06, 5.541000000001267e-06, 5.08400000000242e-06, 5.528000000001171e-06, 5.221999999999172e-06, 5.527999999997701e-06, 5.221999999999172e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.680000000000962e-06, 5.221999999999172e-06, 5.180000000000462e-06, 5.541999999997271e-06, 5.540999999997798e-06, 5.528000000001171e-06]</msg>
<status status="PASS" starttime="20201030 10:57:35.378" endtime="20201030 10:57:35.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.373" endtime="20201030 10:57:35.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:35.385" endtime="20201030 10:57:35.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.383" endtime="20201030 10:57:35.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.382" endtime="20201030 10:57:35.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.030" endtime="20201030 10:57:35.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.029" endtime="20201030 10:57:35.406"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.415" endtime="20201030 10:57:35.429"></status>
</kw>
<msg timestamp="20201030 10:57:35.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.413" endtime="20201030 10:57:35.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.430" endtime="20201030 10:57:35.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.433" endtime="20201030 10:57:35.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.410" endtime="20201030 10:57:35.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.408" endtime="20201030 10:57:35.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.442" endtime="20201030 10:57:35.728"></status>
</kw>
<msg timestamp="20201030 10:57:35.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.440" endtime="20201030 10:57:35.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.733" endtime="20201030 10:57:35.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.741" endtime="20201030 10:57:35.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.438" endtime="20201030 10:57:35.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.436" endtime="20201030 10:57:35.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.747" level="INFO">${RESULT} = [{'diff': 7.111000000000617e-06}, {'diff': 6.8469999999973274e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.458000000000852e-06}, {'diff': 6.597000000000547e-06}, {'diff': 6.583000000000977e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:35.744" endtime="20201030 10:57:35.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:35.752" level="INFO">${ACCURACY} = {'diff': [7.111000000000617e-06, 6.8469999999973274e-06, 6.097000000000047e-06, 6.458000000000852e-06, 6.597000000000547e-06, 6.583000000000977e-06, 6.555999999997841e-06, 6.431000000001186e-06, 6.388...</msg>
<status status="PASS" starttime="20201030 10:57:35.748" endtime="20201030 10:57:35.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.757" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 10:57:35.756" endtime="20201030 10:57:35.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.759" level="INFO">VALUE: [7.111000000000617e-06, 6.8469999999973274e-06, 6.097000000000047e-06, 6.458000000000852e-06, 6.597000000000547e-06, 6.583000000000977e-06, 6.555999999997841e-06, 6.431000000001186e-06, 6.388999999999007e-06, 6.124999999999187e-06, 6.555000000001837e-06, 6.389000000002476e-06, 6.124999999999187e-06, 6.416000000002142e-06, 6.110999999999617e-06, 6.540999999998798e-06, 6.569999999997411e-06, 6.5829999999975075e-06, 6.110999999999617e-06, 6.570000000000881e-06, 5.985999999999492e-06, 6.431000000001186e-06, 6.4029999999985765e-06, 5.986999999998965e-06, 6.526999999999228e-06, 6.540999999998798e-06, 6.861000000000367e-06, 6.431000000001186e-06, 6.431000000001186e-06, 6.444000000001282e-06, 6.417000000001616e-06, 6.430999999997716e-06, 6.083000000000477e-06, 6.556000000001311e-06, 6.0829999999970075e-06, 6.556000000001311e-06, 6.1389999999987566e-06, 6.555999999997841e-06, 6.444000000001282e-06, 6.110999999999617e-06, 6.443999999997813e-06, 6.443999999997813e-06, 6.388999999999007e-06, 6.415999999998673e-06, 6.556000000001311e-06, 6.430000000001712e-06, 6.5279999999987015e-06, 6.110999999999617e-06, 6.416999999998146e-06, 6.429999999998243e-06]</msg>
<status status="PASS" starttime="20201030 10:57:35.758" endtime="20201030 10:57:35.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.753" endtime="20201030 10:57:35.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:35.764" endtime="20201030 10:57:35.783"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.762" endtime="20201030 10:57:35.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.761" endtime="20201030 10:57:35.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.407" endtime="20201030 10:57:35.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.406" endtime="20201030 10:57:35.784"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.794" endtime="20201030 10:57:35.807"></status>
</kw>
<msg timestamp="20201030 10:57:35.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.792" endtime="20201030 10:57:35.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.809" endtime="20201030 10:57:35.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.811" endtime="20201030 10:57:35.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.790" endtime="20201030 10:57:35.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.787" endtime="20201030 10:57:35.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.820" endtime="20201030 10:57:36.107"></status>
</kw>
<msg timestamp="20201030 10:57:36.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022055056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.819" endtime="20201030 10:57:36.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022055056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.111" endtime="20201030 10:57:36.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.119" endtime="20201030 10:57:36.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.816" endtime="20201030 10:57:36.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.815" endtime="20201030 10:57:36.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.126" level="INFO">${RESULT} = [{'diff': 7.402999999999577e-06}, {'diff': 7.750000000000812e-06}, {'diff': 7.430999999998716e-06}, {'diff': 7.304999999999118e-06}, {'diff': 7.304999999999118e-06}, {'diff': 7.2919999999990215e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:36.123" endtime="20201030 10:57:36.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.130" level="INFO">${ACCURACY} = {'diff': [7.402999999999577e-06, 7.750000000000812e-06, 7.430999999998716e-06, 7.304999999999118e-06, 7.304999999999118e-06, 7.2919999999990215e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.37...</msg>
<status status="PASS" starttime="20201030 10:57:36.127" endtime="20201030 10:57:36.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.134" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.133" endtime="20201030 10:57:36.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.137" level="INFO">VALUE: [7.402999999999577e-06, 7.750000000000812e-06, 7.430999999998716e-06, 7.304999999999118e-06, 7.304999999999118e-06, 7.2919999999990215e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.375000000000437e-06, 7.444000000002282e-06, 7.764000000000382e-06, 7.445000000001756e-06, 7.2919999999990215e-06, 7.306000000002061e-06, 7.443999999998813e-06, 7.459000000001326e-06, 7.750000000000812e-06, 7.417000000002616e-06, 7.444999999998286e-06, 7.457999999998383e-06, 7.000000000000062e-06, 7.514000000000132e-06, 7.305000000002587e-06, 7.290999999999548e-06, 7.2919999999990215e-06, 7.763999999996912e-06, 7.430999999998716e-06, 7.305999999998591e-06, 7.348000000000771e-06, 7.443999999998813e-06, 7.4719999999979525e-06, 7.304999999999118e-06, 7.443999999998813e-06, 7.750000000000812e-06, 7.000000000000062e-06, 7.443999999998813e-06, 7.333999999997731e-06, 7.000000000000062e-06, 7.445000000001756e-06, 6.986000000000492e-06, 7.514000000000132e-06, 7.319999999998161e-06, 7.444999999998286e-06, 7.444999999998286e-06, 7.457999999998383e-06, 7.443999999998813e-06, 7.750000000000812e-06, 7.318999999998688e-06, 7.000000000000062e-06, 7.763999999996912e-06]</msg>
<status status="PASS" starttime="20201030 10:57:36.135" endtime="20201030 10:57:36.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.131" endtime="20201030 10:57:36.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.141" endtime="20201030 10:57:36.161"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.140" endtime="20201030 10:57:36.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.139" endtime="20201030 10:57:36.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.785" endtime="20201030 10:57:36.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.785" endtime="20201030 10:57:36.162"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.171" endtime="20201030 10:57:36.186"></status>
</kw>
<msg timestamp="20201030 10:57:36.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.169" endtime="20201030 10:57:36.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.188" endtime="20201030 10:57:36.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.190" endtime="20201030 10:57:36.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.167" endtime="20201030 10:57:36.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.165" endtime="20201030 10:57:36.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.199" endtime="20201030 10:57:36.482"></status>
</kw>
<msg timestamp="20201030 10:57:36.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.198" endtime="20201030 10:57:36.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.487" endtime="20201030 10:57:36.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.495" endtime="20201030 10:57:36.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.195" endtime="20201030 10:57:36.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.193" endtime="20201030 10:57:36.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.501" level="INFO">${RESULT} = [{'diff': 8.722999999998676e-06}, {'diff': 8.221999999998703e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.332999999999258e-06}, {'diff': 8.333000000002727e-06}, {'diff': 8.193999999999563e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:36.498" endtime="20201030 10:57:36.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.506" level="INFO">${ACCURACY} = {'diff': [8.722999999998676e-06, 8.221999999998703e-06, 8.708999999999106e-06, 8.332999999999258e-06, 8.333000000002727e-06, 8.193999999999563e-06, 8.319000000003157e-06, 8.332999999999258e-06, 8.3329...</msg>
<status status="PASS" starttime="20201030 10:57:36.502" endtime="20201030 10:57:36.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.510" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.509" endtime="20201030 10:57:36.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.512" level="INFO">VALUE: [8.722999999998676e-06, 8.221999999998703e-06, 8.708999999999106e-06, 8.332999999999258e-06, 8.333000000002727e-06, 8.193999999999563e-06, 8.319000000003157e-06, 8.332999999999258e-06, 8.332999999999258e-06, 8.333999999998731e-06, 8.638999999997787e-06, 8.193999999999563e-06, 8.319999999999161e-06, 8.332999999999258e-06, 8.318999999999688e-06, 8.624999999998217e-06, 8.318999999999688e-06, 8.208999999998606e-06, 8.624999999998217e-06, 8.639000000001257e-06, 8.180999999999466e-06, 8.332999999999258e-06, 8.625000000001687e-06, 8.652000000001353e-06, 8.207999999999133e-06, 8.194999999999036e-06, 8.346999999998828e-06, 8.208999999998606e-06, 8.639000000001257e-06, 8.193999999999563e-06, 8.195000000002506e-06, 8.318999999999688e-06, 8.778000000000952e-06, 8.333999999998731e-06, 8.624999999998217e-06, 8.639000000001257e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.318999999999688e-06, 8.3340000000022e-06, 8.332999999999258e-06, 8.194999999999036e-06, 8.194999999999036e-06, 8.763999999997912e-06, 8.278000000000452e-06, 8.179999999999993e-06, 8.638999999997787e-06, 8.318999999999688e-06, 8.777999999997482e-06, 8.375000000001437e-06]</msg>
<status status="PASS" starttime="20201030 10:57:36.511" endtime="20201030 10:57:36.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.506" endtime="20201030 10:57:36.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.518" endtime="20201030 10:57:36.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.517" endtime="20201030 10:57:36.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.516" endtime="20201030 10:57:36.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.163" endtime="20201030 10:57:36.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.163" endtime="20201030 10:57:36.539"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.548" endtime="20201030 10:57:36.561"></status>
</kw>
<msg timestamp="20201030 10:57:36.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.546" endtime="20201030 10:57:36.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.563" endtime="20201030 10:57:36.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.565" endtime="20201030 10:57:36.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.543" endtime="20201030 10:57:36.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.541" endtime="20201030 10:57:36.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.574" endtime="20201030 10:57:36.859"></status>
</kw>
<msg timestamp="20201030 10:57:36.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021549764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.573" endtime="20201030 10:57:36.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021549764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.863" endtime="20201030 10:57:36.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.871" endtime="20201030 10:57:36.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.570" endtime="20201030 10:57:36.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.569" endtime="20201030 10:57:36.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.878" level="INFO">${RESULT} = [{'diff': 9.749999999999343e-06}, {'diff': 9.958000000000883e-06}, {'diff': 9.513999999998662e-06}, {'diff': 9.208000000000133e-06}, {'diff': 9.556000000000842e-06}, {'diff': 9.638999999998787e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:36.874" endtime="20201030 10:57:36.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.883" level="INFO">${ACCURACY} = {'diff': [9.749999999999343e-06, 9.958000000000883e-06, 9.513999999998662e-06, 9.208000000000133e-06, 9.556000000000842e-06, 9.638999999998787e-06, 9.083000000000008e-06, 9.221999999999703e-06, 9.2359...</msg>
<status status="PASS" starttime="20201030 10:57:36.878" endtime="20201030 10:57:36.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.887" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.886" endtime="20201030 10:57:36.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.890" level="INFO">VALUE: [9.749999999999343e-06, 9.958000000000883e-06, 9.513999999998662e-06, 9.208000000000133e-06, 9.556000000000842e-06, 9.638999999998787e-06, 9.083000000000008e-06, 9.221999999999703e-06, 9.235999999999273e-06, 9.665999999998454e-06, 9.972000000000453e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.667000000001397e-06, 9.653000000001827e-06, 9.542000000001272e-06, 9.096999999999578e-06, 9.221999999999703e-06, 9.526999999998759e-06, 9.513999999998662e-06, 9.583999999999981e-06, 9.208000000000133e-06, 9.528000000001702e-06, 9.208000000000133e-06, 9.527999999998232e-06, 9.221999999999703e-06, 9.542000000001272e-06, 9.666000000001923e-06, 9.221999999999703e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.263999999998412e-06, 9.528000000001702e-06, 9.527000000002228e-06, 9.638999999998787e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.221999999999703e-06, 9.666999999997927e-06, 9.541000000001798e-06, 9.541000000001798e-06, 9.527999999998232e-06, 9.221999999999703e-06, 9.528000000001702e-06, 9.541000000001798e-06, 9.528000000001702e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.666999999997927e-06, 9.096999999999578e-06]</msg>
<status status="PASS" starttime="20201030 10:57:36.888" endtime="20201030 10:57:36.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.883" endtime="20201030 10:57:36.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.895" endtime="20201030 10:57:36.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.893" endtime="20201030 10:57:36.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.892" endtime="20201030 10:57:36.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.540" endtime="20201030 10:57:36.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.539" endtime="20201030 10:57:36.915"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.924" endtime="20201030 10:57:36.938"></status>
</kw>
<msg timestamp="20201030 10:57:36.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.922" endtime="20201030 10:57:36.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.939" endtime="20201030 10:57:36.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.942" endtime="20201030 10:57:36.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.920" endtime="20201030 10:57:36.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.918" endtime="20201030 10:57:36.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.952" endtime="20201030 10:57:37.239"></status>
</kw>
<msg timestamp="20201030 10:57:37.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021459333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021469972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.950" endtime="20201030 10:57:37.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021459333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021469972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.243" endtime="20201030 10:57:37.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.251" endtime="20201030 10:57:37.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.947" endtime="20201030 10:57:37.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.946" endtime="20201030 10:57:37.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.258" level="INFO">${RESULT} = [{'diff': 1.0638999999999788e-05}, {'diff': 1.0415999999999204e-05}, {'diff': 1.0416999999998677e-05}, {'diff': 1.0417000000002147e-05}, {'diff': 1.0402999999999107e-05}, {'diff': 1.0596999999997608e-...</msg>
<status status="PASS" starttime="20201030 10:57:37.254" endtime="20201030 10:57:37.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.262" level="INFO">${ACCURACY} = {'diff': [1.0638999999999788e-05, 1.0415999999999204e-05, 1.0416999999998677e-05, 1.0417000000002147e-05, 1.0402999999999107e-05, 1.0596999999997608e-05, 1.0124999999999718e-05, 1.0860999999997428e-05...</msg>
<status status="PASS" starttime="20201030 10:57:37.259" endtime="20201030 10:57:37.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.266" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.265" endtime="20201030 10:57:37.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.269" level="INFO">VALUE: [1.0638999999999788e-05, 1.0415999999999204e-05, 1.0416999999998677e-05, 1.0417000000002147e-05, 1.0402999999999107e-05, 1.0596999999997608e-05, 1.0124999999999718e-05, 1.0860999999997428e-05, 1.0082999999997538e-05, 1.0417000000002147e-05, 1.0415999999999204e-05, 1.0083000000001008e-05, 1.0555000000002368e-05, 1.0555000000002368e-05, 1.0443999999998343e-05, 1.0417000000002147e-05, 9.999999999999593e-06, 1.0500000000000093e-05, 1.0416000000002673e-05, 1.0430999999998247e-05, 9.958000000000883e-06, 1.0540999999999329e-05, 1.0555999999998372e-05, 1.0124999999999718e-05, 1.0556000000001842e-05, 1.0570000000001412e-05, 1.0555000000002368e-05, 1.0429999999998774e-05, 1.0124999999999718e-05, 1.0806000000002092e-05, 1.0415999999999204e-05, 1.0097000000000578e-05, 1.0541999999998802e-05, 1.0569000000001938e-05, 1.0568999999998469e-05, 1.0568999999998469e-05, 1.0124999999999718e-05, 1.0570000000001412e-05, 1.0555999999998372e-05, 1.0556000000001842e-05, 1.0374999999999968e-05, 1.0111000000000148e-05, 1.0124999999999718e-05, 1.0125000000003187e-05, 1.0416000000002673e-05, 1.0527999999999232e-05, 9.931000000001217e-06, 1.0415999999999204e-05, 1.0111000000000148e-05, 1.0083000000001008e-05]</msg>
<status status="PASS" starttime="20201030 10:57:37.267" endtime="20201030 10:57:37.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.263" endtime="20201030 10:57:37.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.273" endtime="20201030 10:57:37.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.272" endtime="20201030 10:57:37.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.271" endtime="20201030 10:57:37.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.916" endtime="20201030 10:57:37.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.916" endtime="20201030 10:57:37.294"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.303" endtime="20201030 10:57:37.321"></status>
</kw>
<msg timestamp="20201030 10:57:37.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.301" endtime="20201030 10:57:37.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.322" endtime="20201030 10:57:37.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.325" endtime="20201030 10:57:37.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.299" endtime="20201030 10:57:37.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.297" endtime="20201030 10:57:37.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.334" endtime="20201030 10:57:37.620"></status>
</kw>
<msg timestamp="20201030 10:57:37.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025044444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.332" endtime="20201030 10:57:37.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025044444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.624" endtime="20201030 10:57:37.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.632" endtime="20201030 10:57:37.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.330" endtime="20201030 10:57:37.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.328" endtime="20201030 10:57:37.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.639" level="INFO">${RESULT} = [{'diff': 1.1514000000000663e-05}, {'diff': 1.1304999999999649e-05}, {'diff': 1.1277999999999982e-05}, {'diff': 1.1000000000000593e-05}, {'diff': 1.1320000000002162e-05}, {'diff': 1.1444999999998817e-...</msg>
<status status="PASS" starttime="20201030 10:57:37.635" endtime="20201030 10:57:37.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.643" level="INFO">${ACCURACY} = {'diff': [1.1514000000000663e-05, 1.1304999999999649e-05, 1.1277999999999982e-05, 1.1000000000000593e-05, 1.1320000000002162e-05, 1.1444999999998817e-05, 1.1458999999998387e-05, 1.1459000000001857e-05...</msg>
<status status="PASS" starttime="20201030 10:57:37.640" endtime="20201030 10:57:37.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.647" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.646" endtime="20201030 10:57:37.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.650" level="INFO">VALUE: [1.1514000000000663e-05, 1.1304999999999649e-05, 1.1277999999999982e-05, 1.1000000000000593e-05, 1.1320000000002162e-05, 1.1444999999998817e-05, 1.1458999999998387e-05, 1.1459000000001857e-05, 1.1305999999999122e-05, 1.0999999999997123e-05, 1.1763999999997443e-05, 1.1445000000002287e-05, 1.1320000000002162e-05, 1.1416999999999677e-05, 1.1319000000002688e-05, 1.1318999999999219e-05, 1.1304999999999649e-05, 1.1375000000000968e-05, 1.1000000000000593e-05, 1.1416000000000204e-05, 1.1749999999997873e-05, 1.1429999999999774e-05, 1.1305000000003118e-05, 1.0943999999998844e-05, 1.1333000000002258e-05, 1.1305000000003118e-05, 1.1000000000000593e-05, 1.1389000000000538e-05, 1.1000000000000593e-05, 1.1319999999998692e-05, 1.0930999999998747e-05, 1.1291999999999552e-05, 1.1459000000001857e-05, 1.1750000000001343e-05, 1.1444000000002813e-05, 1.1430999999999247e-05, 1.0986000000001023e-05, 1.1735999999998303e-05, 1.1305000000003118e-05, 1.1305999999999122e-05, 1.1443999999999344e-05, 1.1458000000002383e-05, 1.1445000000002287e-05, 1.1000000000000593e-05, 1.1443999999999344e-05, 1.1429999999999774e-05, 1.1304999999999649e-05, 1.1291999999999552e-05, 1.0985999999997553e-05, 1.1444000000002813e-05]</msg>
<status status="PASS" starttime="20201030 10:57:37.648" endtime="20201030 10:57:37.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.644" endtime="20201030 10:57:37.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.655" endtime="20201030 10:57:37.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.654" endtime="20201030 10:57:37.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.653" endtime="20201030 10:57:37.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.295" endtime="20201030 10:57:37.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.295" endtime="20201030 10:57:37.676"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.685" endtime="20201030 10:57:37.699"></status>
</kw>
<msg timestamp="20201030 10:57:37.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.683" endtime="20201030 10:57:37.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.700" endtime="20201030 10:57:37.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.703" endtime="20201030 10:57:37.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.681" endtime="20201030 10:57:37.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.679" endtime="20201030 10:57:37.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.712" endtime="20201030 10:57:37.997"></status>
</kw>
<msg timestamp="20201030 10:57:38.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021392389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021404819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.710" endtime="20201030 10:57:38.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021392389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021404819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.001" endtime="20201030 10:57:38.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.009" endtime="20201030 10:57:38.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.708" endtime="20201030 10:57:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.706" endtime="20201030 10:57:38.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.016" level="INFO">${RESULT} = [{'diff': 1.2429999999997304e-05}, {'diff': 1.2194000000000094e-05}, {'diff': 1.2624999999998748e-05}, {'diff': 1.2332999999999789e-05}, {'diff': 1.2652999999997888e-05}, {'diff': 1.231899999999675e-0...</msg>
<status status="PASS" starttime="20201030 10:57:38.013" endtime="20201030 10:57:38.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:38.021" level="INFO">${ACCURACY} = {'diff': [1.2429999999997304e-05, 1.2194000000000094e-05, 1.2624999999998748e-05, 1.2332999999999789e-05, 1.2652999999997888e-05, 1.231899999999675e-05, 1.2208000000003133e-05, 1.2374999999998498e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:38.017" endtime="20201030 10:57:38.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.025" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 10:57:38.024" endtime="20201030 10:57:38.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.028" level="INFO">VALUE: [1.2429999999997304e-05, 1.2194000000000094e-05, 1.2624999999998748e-05, 1.2332999999999789e-05, 1.2652999999997888e-05, 1.231899999999675e-05, 1.2208000000003133e-05, 1.2374999999998498e-05, 1.2208999999999137e-05, 1.1875000000001468e-05, 1.2333999999999262e-05, 1.2319000000000219e-05, 1.2208999999999137e-05, 1.2306000000000122e-05, 1.2237000000001746e-05, 1.2346999999999358e-05, 1.2777999999998013e-05, 1.2305000000000649e-05, 1.2638999999998318e-05, 1.2625000000002218e-05, 1.1818999999999719e-05, 1.2777999999998013e-05, 1.2319000000000219e-05, 1.2374999999998498e-05, 1.2333999999999262e-05, 1.2708000000000164e-05, 1.2194999999999567e-05, 1.2180999999999997e-05, 1.2652999999997888e-05, 1.2681000000000497e-05, 1.2208999999999137e-05, 1.2319999999999692e-05, 1.2221999999999233e-05, 1.2319000000000219e-05, 1.2639000000001788e-05, 1.2332999999999789e-05, 1.2653000000001358e-05, 1.2374999999998498e-05, 1.2556000000000372e-05, 1.2332999999999789e-05, 1.2110999999998678e-05, 1.2638999999998318e-05, 1.2374999999998498e-05, 1.2625000000002218e-05, 1.2332999999999789e-05, 1.2334000000002732e-05, 1.2319000000000219e-05, 1.2334000000002732e-05, 1.2374999999998498e-05, 1.2638999999998318e-05]</msg>
<status status="PASS" starttime="20201030 10:57:38.027" endtime="20201030 10:57:38.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.022" endtime="20201030 10:57:38.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:38.033" endtime="20201030 10:57:38.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.031" endtime="20201030 10:57:38.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.030" endtime="20201030 10:57:38.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.677" endtime="20201030 10:57:38.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.676" endtime="20201030 10:57:38.053"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.062" endtime="20201030 10:57:38.076"></status>
</kw>
<msg timestamp="20201030 10:57:38.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.060" endtime="20201030 10:57:38.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.078" endtime="20201030 10:57:38.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.080" endtime="20201030 10:57:38.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.058" endtime="20201030 10:57:38.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.056" endtime="20201030 10:57:38.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.089" endtime="20201030 10:57:38.375"></status>
</kw>
<msg timestamp="20201030 10:57:38.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021488319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.087" endtime="20201030 10:57:38.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021488319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.379" endtime="20201030 10:57:38.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.387" endtime="20201030 10:57:38.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.085" endtime="20201030 10:57:38.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.083" endtime="20201030 10:57:38.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.394" level="INFO">${RESULT} = [{'diff': 1.3736000000000304e-05}, {'diff': 1.3083000000000539e-05}, {'diff': 1.3666000000002454e-05}, {'diff': 1.3124999999999248e-05}, {'diff': 1.3222000000000234e-05}, {'diff': 1.3263999999998943e-...</msg>
<status status="PASS" starttime="20201030 10:57:38.390" endtime="20201030 10:57:38.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:38.398" level="INFO">${ACCURACY} = {'diff': [1.3736000000000304e-05, 1.3083000000000539e-05, 1.3666000000002454e-05, 1.3124999999999248e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3222999999999707e-05, 1.3208000000000664e-05...</msg>
<status status="PASS" starttime="20201030 10:57:38.395" endtime="20201030 10:57:38.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.402" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 10:57:38.401" endtime="20201030 10:57:38.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.405" level="INFO">VALUE: [1.3736000000000304e-05, 1.3083000000000539e-05, 1.3666000000002454e-05, 1.3124999999999248e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3222999999999707e-05, 1.3208000000000664e-05, 1.3152999999998388e-05, 1.3249999999999373e-05, 1.326299999999947e-05, 1.3222000000000234e-05, 1.3555999999997903e-05, 1.3181000000000997e-05, 1.3542000000001803e-05, 1.3513999999999193e-05, 1.3652999999998888e-05, 1.3666000000002454e-05, 1.3222999999999707e-05, 1.3193999999997624e-05, 1.3749999999999873e-05, 1.3236999999999277e-05, 1.3208000000000664e-05, 1.3652999999998888e-05, 1.3513999999999193e-05, 1.3124999999999248e-05, 1.3235999999999803e-05, 1.354099999999886e-05, 1.3084000000000012e-05, 1.3708000000001164e-05, 1.3070000000000442e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3222999999999707e-05, 1.3222000000000234e-05, 1.3556000000001373e-05, 1.3278000000001983e-05, 1.3541999999998333e-05, 1.3180000000001524e-05, 1.3069000000000969e-05, 1.3665999999998985e-05, 1.3222999999999707e-05, 1.3167000000001428e-05, 1.3235999999999803e-05, 1.3165999999998484e-05, 1.3666999999998458e-05, 1.3209000000000137e-05, 1.3513999999999193e-05, 1.308299999999707e-05, 1.3486000000000054e-05]</msg>
<status status="PASS" starttime="20201030 10:57:38.403" endtime="20201030 10:57:38.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.399" endtime="20201030 10:57:38.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:38.410" endtime="20201030 10:57:38.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.408" endtime="20201030 10:57:38.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.407" endtime="20201030 10:57:38.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.054" endtime="20201030 10:57:38.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.054" endtime="20201030 10:57:38.430"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.439" endtime="20201030 10:57:38.454"></status>
</kw>
<msg timestamp="20201030 10:57:38.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.437" endtime="20201030 10:57:38.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.456" endtime="20201030 10:57:38.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.458" endtime="20201030 10:57:38.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.435" endtime="20201030 10:57:38.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.433" endtime="20201030 10:57:38.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.467" endtime="20201030 10:57:38.751"></status>
</kw>
<msg timestamp="20201030 10:57:38.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.465" endtime="20201030 10:57:38.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.755" endtime="20201030 10:57:38.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.763" endtime="20201030 10:57:38.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.463" endtime="20201030 10:57:38.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.461" endtime="20201030 10:57:38.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.770" level="INFO">${RESULT} = [{'diff': 1.4514000000000193e-05}, {'diff': 1.4415999999999735e-05}, {'diff': 1.4431000000002248e-05}, {'diff': 1.4417000000002678e-05}, {'diff': 1.3944000000001844e-05}, {'diff': 1.4570000000001943e-...</msg>
<status status="PASS" starttime="20201030 10:57:38.766" endtime="20201030 10:57:38.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:38.774" level="INFO">${ACCURACY} = {'diff': [1.4514000000000193e-05, 1.4415999999999735e-05, 1.4431000000002248e-05, 1.4417000000002678e-05, 1.3944000000001844e-05, 1.4570000000001943e-05, 1.458299999999857e-05, 1.455499999999943e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:38.771" endtime="20201030 10:57:38.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.778" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 10:57:38.777" endtime="20201030 10:57:38.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.781" level="INFO">VALUE: [1.4514000000000193e-05, 1.4415999999999735e-05, 1.4431000000002248e-05, 1.4417000000002678e-05, 1.3944000000001844e-05, 1.4570000000001943e-05, 1.458299999999857e-05, 1.455499999999943e-05, 1.4416999999999208e-05, 1.4416999999999208e-05, 1.4416999999999208e-05, 1.4541999999999333e-05, 1.4429999999999304e-05, 1.454099999999986e-05, 1.4555999999998903e-05, 1.4429999999999304e-05, 1.4084000000001012e-05, 1.4111000000000679e-05, 1.4874999999997529e-05, 1.4333000000001789e-05, 1.4402999999999638e-05, 1.4443999999998874e-05, 1.4125000000000248e-05, 1.4875000000000999e-05, 1.4416999999999208e-05, 1.4500000000000624e-05, 1.4556000000002373e-05, 1.4097000000001109e-05, 1.486099999999796e-05, 1.4097000000001109e-05, 1.458299999999857e-05, 1.4569999999998473e-05, 1.4555999999998903e-05, 1.4459000000001387e-05, 1.4527999999999763e-05, 1.4556000000002373e-05, 1.455499999999943e-05, 1.4443999999998874e-05, 1.4389000000000068e-05, 1.3986000000000554e-05, 1.4569000000002469e-05, 1.4152999999999388e-05, 1.4430999999998778e-05, 1.409699999999764e-05, 1.4430999999998778e-05, 1.4389000000000068e-05, 1.454099999999986e-05, 1.4347000000001359e-05, 1.4374999999997029e-05, 1.4542000000002803e-05]</msg>
<status status="PASS" starttime="20201030 10:57:38.779" endtime="20201030 10:57:38.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.775" endtime="20201030 10:57:38.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:38.786" endtime="20201030 10:57:38.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.785" endtime="20201030 10:57:38.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.784" endtime="20201030 10:57:38.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.431" endtime="20201030 10:57:38.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.431" endtime="20201030 10:57:38.807"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.816" endtime="20201030 10:57:38.830"></status>
</kw>
<msg timestamp="20201030 10:57:38.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.814" endtime="20201030 10:57:38.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.831" endtime="20201030 10:57:38.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.834" endtime="20201030 10:57:38.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.811" endtime="20201030 10:57:38.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.809" endtime="20201030 10:57:38.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.843" endtime="20201030 10:57:39.128"></status>
</kw>
<msg timestamp="20201030 10:57:39.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021535653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.841" endtime="20201030 10:57:39.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021535653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.133" endtime="20201030 10:57:39.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.141" endtime="20201030 10:57:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.839" endtime="20201030 10:57:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.837" endtime="20201030 10:57:39.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.148" level="INFO">${RESULT} = [{'diff': 1.584699999999939e-05}, {'diff': 1.4971999999998514e-05}, {'diff': 1.5736000000002304e-05}, {'diff': 1.5444999999999348e-05}, {'diff': 1.5499999999998154e-05}, {'diff': 1.5292000000000083e-0...</msg>
<status status="PASS" starttime="20201030 10:57:39.144" endtime="20201030 10:57:39.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.153" level="INFO">${ACCURACY} = {'diff': [1.584699999999939e-05, 1.4971999999998514e-05, 1.5736000000002304e-05, 1.5444999999999348e-05, 1.5499999999998154e-05, 1.5292000000000083e-05, 1.5444999999999348e-05, 1.5430999999999778e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:39.149" endtime="20201030 10:57:39.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.157" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.156" endtime="20201030 10:57:39.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.160" level="INFO">VALUE: [1.584699999999939e-05, 1.4971999999998514e-05, 1.5736000000002304e-05, 1.5444999999999348e-05, 1.5499999999998154e-05, 1.5292000000000083e-05, 1.5444999999999348e-05, 1.5430999999999778e-05, 1.5471999999999014e-05, 1.5806000000000153e-05, 1.531899999999975e-05, 1.540299999999717e-05, 1.5402000000001165e-05, 1.533299999999932e-05, 1.5305999999999653e-05, 1.534699999999889e-05, 1.5292000000000083e-05, 1.541700000000021e-05, 1.5430999999999778e-05, 1.530500000000018e-05, 1.5735999999998834e-05, 1.5348000000001832e-05, 1.531899999999975e-05, 1.5236000000001804e-05, 1.5292000000000083e-05, 1.529100000000061e-05, 1.5444999999999348e-05, 1.5749999999998404e-05, 1.5444999999999348e-05, 1.5457999999999444e-05, 1.5430000000000305e-05, 1.5820000000003193e-05, 1.53750000000015e-05, 1.5305999999999653e-05, 1.5443999999999874e-05, 1.534700000000236e-05, 1.5444000000003344e-05, 1.4999999999997654e-05, 1.5319999999999223e-05, 1.541700000000021e-05, 1.5320000000002693e-05, 1.4987000000001027e-05, 1.5430000000000305e-05, 1.536100000000193e-05, 1.5415999999997265e-05, 1.5472000000002484e-05, 1.530500000000018e-05, 1.4985999999998084e-05, 1.531899999999975e-05, 1.5305999999999653e-05]</msg>
<status status="PASS" starttime="20201030 10:57:39.158" endtime="20201030 10:57:39.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.153" endtime="20201030 10:57:39.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.168" endtime="20201030 10:57:39.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.167" endtime="20201030 10:57:39.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.166" endtime="20201030 10:57:39.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.808" endtime="20201030 10:57:39.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.807" endtime="20201030 10:57:39.189"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.198" endtime="20201030 10:57:39.213"></status>
</kw>
<msg timestamp="20201030 10:57:39.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.196" endtime="20201030 10:57:39.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.214" endtime="20201030 10:57:39.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.217" endtime="20201030 10:57:39.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.193" endtime="20201030 10:57:39.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.191" endtime="20201030 10:57:39.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.226" endtime="20201030 10:57:39.512"></status>
</kw>
<msg timestamp="20201030 10:57:39.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.224" endtime="20201030 10:57:39.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.516" endtime="20201030 10:57:39.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.524" endtime="20201030 10:57:39.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.221" endtime="20201030 10:57:39.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.220" endtime="20201030 10:57:39.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.531" level="INFO">${RESULT} = [{'diff': 1.63889999999986e-05}, {'diff': 1.6208000000000194e-05}, {'diff': 1.6584000000000043e-05}, {'diff': 1.6194000000000625e-05}, {'diff': 1.663900000000232e-05}, {'diff': 1.663899999999885e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:39.528" endtime="20201030 10:57:39.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.535" level="INFO">${ACCURACY} = {'diff': [1.63889999999986e-05, 1.6208000000000194e-05, 1.6584000000000043e-05, 1.6194000000000625e-05, 1.663900000000232e-05, 1.663899999999885e-05, 1.634699999999989e-05, 1.634699999999989e-05, 1.63...</msg>
<status status="PASS" starttime="20201030 10:57:39.532" endtime="20201030 10:57:39.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.539" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.538" endtime="20201030 10:57:39.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.542" level="INFO">VALUE: [1.63889999999986e-05, 1.6208000000000194e-05, 1.6584000000000043e-05, 1.6194000000000625e-05, 1.663900000000232e-05, 1.663899999999885e-05, 1.634699999999989e-05, 1.634699999999989e-05, 1.6348000000002832e-05, 1.6305999999997184e-05, 1.6165999999998015e-05, 1.631899999999728e-05, 1.663900000000232e-05, 1.6208000000000194e-05, 1.618099999999706e-05, 1.6306000000000653e-05, 1.6194000000000625e-05, 1.613900000000182e-05, 1.6320000000000223e-05, 1.634699999999989e-05, 1.6208999999999668e-05, 1.6306000000000653e-05, 1.6263999999998474e-05, 1.613899999999835e-05, 1.661099999999971e-05, 1.6277999999998044e-05, 1.633300000000032e-05, 1.6195000000000098e-05, 1.6263999999998474e-05, 1.619499999999663e-05, 1.634699999999989e-05, 1.663899999999885e-05, 1.6320000000000223e-05, 1.6306000000000653e-05, 1.663900000000232e-05, 1.6194000000000625e-05, 1.658300000000057e-05, 1.627699999999857e-05, 1.633300000000032e-05, 1.633300000000032e-05, 1.6208999999999668e-05, 1.6195000000000098e-05, 1.6556000000000903e-05, 1.663900000000232e-05, 1.6180000000001055e-05, 1.587499999999853e-05, 1.6652000000002415e-05, 1.6665999999998515e-05, 1.6208000000000194e-05, 1.6194000000000625e-05]</msg>
<status status="PASS" starttime="20201030 10:57:39.540" endtime="20201030 10:57:39.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.536" endtime="20201030 10:57:39.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.547" endtime="20201030 10:57:39.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.545" endtime="20201030 10:57:39.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.544" endtime="20201030 10:57:39.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.190" endtime="20201030 10:57:39.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.189" endtime="20201030 10:57:39.567"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.576" endtime="20201030 10:57:39.592"></status>
</kw>
<msg timestamp="20201030 10:57:39.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.575" endtime="20201030 10:57:39.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.594" endtime="20201030 10:57:39.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.597" endtime="20201030 10:57:39.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.572" endtime="20201030 10:57:39.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.570" endtime="20201030 10:57:39.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.606" endtime="20201030 10:57:39.891"></status>
</kw>
<msg timestamp="20201030 10:57:39.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022918486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.604" endtime="20201030 10:57:39.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022918486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.895" endtime="20201030 10:57:39.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.903" endtime="20201030 10:57:39.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.601" endtime="20201030 10:57:39.906"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.600" endtime="20201030 10:57:39.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.910" level="INFO">${RESULT} = [{'diff': 1.7278000000002514e-05}, {'diff': 1.709700000000064e-05}, {'diff': 1.7222000000000764e-05}, {'diff': 1.765300000000289e-05}, {'diff': 1.7556000000001903e-05}, {'diff': 1.7665999999999515e-05...</msg>
<status status="PASS" starttime="20201030 10:57:39.907" endtime="20201030 10:57:39.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.914" level="INFO">${ACCURACY} = {'diff': [1.7278000000002514e-05, 1.709700000000064e-05, 1.7222000000000764e-05, 1.765300000000289e-05, 1.7556000000001903e-05, 1.7665999999999515e-05, 1.7223000000000238e-05, 1.7069999999997504e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:39.911" endtime="20201030 10:57:39.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.918" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.917" endtime="20201030 10:57:39.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.921" level="INFO">VALUE: [1.7278000000002514e-05, 1.709700000000064e-05, 1.7222000000000764e-05, 1.765300000000289e-05, 1.7556000000001903e-05, 1.7665999999999515e-05, 1.7223000000000238e-05, 1.7069999999997504e-05, 1.7236000000000334e-05, 1.7541999999998864e-05, 1.7194000000001625e-05, 1.7222000000000764e-05, 1.719499999999763e-05, 1.709700000000064e-05, 1.766699999999899e-05, 1.7736000000000834e-05, 1.754099999999939e-05, 1.7208000000001195e-05, 1.768100000000203e-05, 1.7528000000002764e-05, 1.752699999999982e-05, 1.7665999999999515e-05, 1.7194000000001625e-05, 1.7527999999999294e-05, 1.7249999999999904e-05, 1.7305999999998184e-05, 1.7541999999998864e-05, 1.7222000000000764e-05, 1.711100000000021e-05, 1.7194000000001625e-05, 1.7209000000000668e-05, 1.766699999999899e-05, 1.8000000000000654e-05, 1.706899999999803e-05, 1.7236000000000334e-05, 1.729099999999914e-05, 1.7527999999999294e-05, 1.709700000000064e-05, 1.6999999999999654e-05, 1.7249999999999904e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.7555999999998434e-05, 1.709700000000064e-05, 1.7027999999998794e-05, 1.7527999999999294e-05, 1.76950000000016e-05, 1.7541999999998864e-05, 1.711100000000021e-05, 1.7222000000000764e-05]</msg>
<status status="PASS" starttime="20201030 10:57:39.919" endtime="20201030 10:57:39.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.915" endtime="20201030 10:57:39.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.927" endtime="20201030 10:57:39.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.925" endtime="20201030 10:57:39.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.924" endtime="20201030 10:57:39.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.568" endtime="20201030 10:57:39.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.568" endtime="20201030 10:57:39.947"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.956" endtime="20201030 10:57:39.971"></status>
</kw>
<msg timestamp="20201030 10:57:39.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.954" endtime="20201030 10:57:39.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.972" endtime="20201030 10:57:39.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.975" endtime="20201030 10:57:39.976"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.952" endtime="20201030 10:57:39.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.950" endtime="20201030 10:57:39.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.984" endtime="20201030 10:57:40.270"></status>
</kw>
<msg timestamp="20201030 10:57:40.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021581806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.982" endtime="20201030 10:57:40.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021581806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.274" endtime="20201030 10:57:40.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.282" endtime="20201030 10:57:40.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.980" endtime="20201030 10:57:40.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.978" endtime="20201030 10:57:40.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:40.289" level="INFO">${RESULT} = [{'diff': 1.8499999999997685e-05}, {'diff': 1.806899999999903e-05}, {'diff': 1.8429999999999835e-05}, {'diff': 1.8333999999998324e-05}, {'diff': 1.812500000000078e-05}, {'diff': 1.812499999999731e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:40.286" endtime="20201030 10:57:40.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:40.294" level="INFO">${ACCURACY} = {'diff': [1.8499999999997685e-05, 1.806899999999903e-05, 1.8429999999999835e-05, 1.8333999999998324e-05, 1.812500000000078e-05, 1.812499999999731e-05, 1.809699999999817e-05, 1.837500000000103e-05, 1.8...</msg>
<status status="PASS" starttime="20201030 10:57:40.290" endtime="20201030 10:57:40.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.298" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 10:57:40.297" endtime="20201030 10:57:40.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.301" level="INFO">VALUE: [1.8499999999997685e-05, 1.806899999999903e-05, 1.8429999999999835e-05, 1.8333999999998324e-05, 1.812500000000078e-05, 1.812499999999731e-05, 1.809699999999817e-05, 1.837500000000103e-05, 1.886100000000196e-05, 1.841699999999974e-05, 1.8416000000000265e-05, 1.8541999999999864e-05, 1.8457999999998975e-05, 1.8473000000001488e-05, 1.8429999999999835e-05, 1.8027999999999794e-05, 1.887500000000153e-05, 1.855499999999996e-05, 1.840300000000017e-05, 1.811100000000121e-05, 1.8555999999999434e-05, 1.8416000000000265e-05, 1.854100000000039e-05, 1.7972000000001515e-05, 1.85829999999991e-05, 1.841699999999974e-05, 1.8486000000001584e-05, 1.840300000000017e-05, 1.859699999999867e-05, 1.841699999999974e-05, 1.8083999999998074e-05, 1.861099999999824e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.809700000000164e-05, 1.8084000000001543e-05, 1.843100000000278e-05, 1.840300000000017e-05, 1.8555999999999434e-05, 1.855499999999996e-05, 1.8555999999999434e-05, 1.855499999999996e-05, 1.811099999999774e-05, 1.812499999999731e-05, 1.811100000000121e-05, 1.84029999999967e-05, 1.845899999999845e-05, 1.841699999999974e-05, 1.7985999999997615e-05, 1.8570000000002473e-05]</msg>
<status status="PASS" starttime="20201030 10:57:40.299" endtime="20201030 10:57:40.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.295" endtime="20201030 10:57:40.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:40.306" endtime="20201030 10:57:40.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.304" endtime="20201030 10:57:40.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.303" endtime="20201030 10:57:40.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.948" endtime="20201030 10:57:40.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.948" endtime="20201030 10:57:40.326"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.335" endtime="20201030 10:57:40.350"></status>
</kw>
<msg timestamp="20201030 10:57:40.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.333" endtime="20201030 10:57:40.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.351" endtime="20201030 10:57:40.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.353" endtime="20201030 10:57:40.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.331" endtime="20201030 10:57:40.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.329" endtime="20201030 10:57:40.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.362" endtime="20201030 10:57:40.650"></status>
</kw>
<msg timestamp="20201030 10:57:40.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021526819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021546792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.361" endtime="20201030 10:57:40.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021526819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021546792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.654" endtime="20201030 10:57:40.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.662" endtime="20201030 10:57:40.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.358" endtime="20201030 10:57:40.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.357" endtime="20201030 10:57:40.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:40.668" level="INFO">${RESULT} = [{'diff': 1.997299999999952e-05}, {'diff': 1.8943999999999905e-05}, {'diff': 1.9014000000001224e-05}, {'diff': 1.944499999999988e-05}, {'diff': 1.9292000000000614e-05}, {'diff': 1.9306000000000184e-05...</msg>
<status status="PASS" starttime="20201030 10:57:40.665" endtime="20201030 10:57:40.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:40.673" level="INFO">${ACCURACY} = {'diff': [1.997299999999952e-05, 1.8943999999999905e-05, 1.9014000000001224e-05, 1.944499999999988e-05, 1.9292000000000614e-05, 1.9306000000000184e-05, 1.93890000000016e-05, 1.933299999999985e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 10:57:40.669" endtime="20201030 10:57:40.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.677" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 10:57:40.676" endtime="20201030 10:57:40.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.679" level="INFO">VALUE: [1.997299999999952e-05, 1.8943999999999905e-05, 1.9014000000001224e-05, 1.944499999999988e-05, 1.9292000000000614e-05, 1.9306000000000184e-05, 1.93890000000016e-05, 1.933299999999985e-05, 1.9444000000000405e-05, 1.9292000000000614e-05, 1.9263999999998005e-05, 1.929100000000114e-05, 1.9444000000000405e-05, 1.9263000000002e-05, 1.9319999999999754e-05, 1.943100000000031e-05, 1.944499999999988e-05, 1.9416000000001266e-05, 1.9749999999998935e-05, 1.8987000000001558e-05, 1.9306000000000184e-05, 1.9444000000000405e-05, 1.9764000000001974e-05, 1.9457999999999975e-05, 1.9319999999999754e-05, 1.931900000000028e-05, 1.9000000000001654e-05, 1.9749999999998935e-05, 1.929099999999767e-05, 1.9443999999996936e-05, 1.944500000000335e-05, 1.944499999999988e-05, 1.9430000000000835e-05, 1.8987000000001558e-05, 1.9444000000000405e-05, 1.945899999999945e-05, 1.9750000000002405e-05, 1.9430000000000835e-05, 1.9750000000002405e-05, 1.931900000000028e-05, 1.9749999999998935e-05, 1.9444000000000405e-05, 1.9249999999998435e-05, 1.9278000000001044e-05, 1.937499999999856e-05, 1.9306000000000184e-05, 1.943100000000031e-05, 1.930500000000071e-05, 1.9444000000000405e-05, 1.9430000000000835e-05]</msg>
<status status="PASS" starttime="20201030 10:57:40.678" endtime="20201030 10:57:40.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.673" endtime="20201030 10:57:40.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:40.684" endtime="20201030 10:57:40.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.683" endtime="20201030 10:57:40.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.682" endtime="20201030 10:57:40.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.327" endtime="20201030 10:57:40.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.327" endtime="20201030 10:57:40.705"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.714" endtime="20201030 10:57:40.732"></status>
</kw>
<msg timestamp="20201030 10:57:40.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.712" endtime="20201030 10:57:40.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.734" endtime="20201030 10:57:40.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.736" endtime="20201030 10:57:40.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.710" endtime="20201030 10:57:40.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.708" endtime="20201030 10:57:40.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.745" endtime="20201030 10:57:41.030"></status>
</kw>
<msg timestamp="20201030 10:57:41.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024733986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024754403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.744" endtime="20201030 10:57:41.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024733986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024754403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.034" endtime="20201030 10:57:41.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.042" endtime="20201030 10:57:41.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.741" endtime="20201030 10:57:41.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.739" endtime="20201030 10:57:41.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.049" level="INFO">${RESULT} = [{'diff': 2.041700000000174e-05}, {'diff': 2.079099999999917e-05}, {'diff': 2.033299999999738e-05}, {'diff': 2.062499999999981e-05}, {'diff': 2.0292000000001614e-05}, {'diff': 2.037499999999956e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:41.046" endtime="20201030 10:57:41.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:41.053" level="INFO">${ACCURACY} = {'diff': [2.041700000000174e-05, 2.079099999999917e-05, 2.033299999999738e-05, 2.062499999999981e-05, 2.0292000000001614e-05, 2.037499999999956e-05, 2.034700000000042e-05, 2.033300000000085e-05, 2.019...</msg>
<status status="PASS" starttime="20201030 10:57:41.050" endtime="20201030 10:57:41.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.057" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 10:57:41.056" endtime="20201030 10:57:41.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.060" level="INFO">VALUE: [2.041700000000174e-05, 2.079099999999917e-05, 2.033299999999738e-05, 2.062499999999981e-05, 2.0292000000001614e-05, 2.037499999999956e-05, 2.034700000000042e-05, 2.033300000000085e-05, 2.0194000000001155e-05, 2.019500000000063e-05, 2.063899999999938e-05, 2.0347999999999894e-05, 2.033300000000085e-05, 2.019500000000063e-05, 2.02769999999991e-05, 2.019500000000063e-05, 2.036099999999999e-05, 2.063899999999938e-05, 2.033300000000085e-05, 2.019500000000063e-05, 2.033300000000085e-05, 2.062499999999981e-05, 2.063899999999938e-05, 2.02090000000002e-05, 2.016699999999802e-05, 2.018100000000106e-05, 2.031900000000128e-05, 2.02090000000002e-05, 2.065300000000242e-05, 2.063899999999938e-05, 1.987500000000253e-05, 2.0222000000000295e-05, 2.029100000000214e-05, 2.07769999999996e-05, 2.063899999999938e-05, 2.0194000000001155e-05, 2.056900000000153e-05, 2.031899999999781e-05, 2.033300000000085e-05, 2.033300000000085e-05, 2.079099999999917e-05, 2.062499999999981e-05, 2.0207999999997256e-05, 2.033300000000085e-05, 2.065299999999895e-05, 2.015300000000192e-05, 2.034699999999695e-05, 2.0652000000002946e-05, 2.0334000000000324e-05, 2.061100000000024e-05]</msg>
<status status="PASS" starttime="20201030 10:57:41.058" endtime="20201030 10:57:41.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.054" endtime="20201030 10:57:41.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.066" endtime="20201030 10:57:41.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.064" endtime="20201030 10:57:41.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.063" endtime="20201030 10:57:41.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.706" endtime="20201030 10:57:41.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.705" endtime="20201030 10:57:41.086"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.095" endtime="20201030 10:57:41.110"></status>
</kw>
<msg timestamp="20201030 10:57:41.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.093" endtime="20201030 10:57:41.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.111" endtime="20201030 10:57:41.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.114" endtime="20201030 10:57:41.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.091" endtime="20201030 10:57:41.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.089" endtime="20201030 10:57:41.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.123" endtime="20201030 10:57:41.409"></status>
</kw>
<msg timestamp="20201030 10:57:41.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.121" endtime="20201030 10:57:41.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.413" endtime="20201030 10:57:41.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.421" endtime="20201030 10:57:41.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.119" endtime="20201030 10:57:41.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.117" endtime="20201030 10:57:41.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.428" level="INFO">${RESULT} = [{'diff': 2.1736000000001365e-05}, {'diff': 2.109700000000117e-05}, {'diff': 2.1486000000001115e-05}, {'diff': 2.1541999999999395e-05}, {'diff': 2.113899999999988e-05}, {'diff': 2.166699999999952e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:41.424" endtime="20201030 10:57:41.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:41.433" level="INFO">${ACCURACY} = {'diff': [2.1736000000001365e-05, 2.109700000000117e-05, 2.1486000000001115e-05, 2.1541999999999395e-05, 2.113899999999988e-05, 2.166699999999952e-05, 2.1527999999999825e-05, 2.1527999999999825e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:41.429" endtime="20201030 10:57:41.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.437" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 10:57:41.436" endtime="20201030 10:57:41.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.439" level="INFO">VALUE: [2.1736000000001365e-05, 2.109700000000117e-05, 2.1486000000001115e-05, 2.1541999999999395e-05, 2.113899999999988e-05, 2.166699999999952e-05, 2.1527999999999825e-05, 2.1527999999999825e-05, 2.163899999999691e-05, 2.165299999999995e-05, 2.1193999999998686e-05, 2.1236000000000865e-05, 2.1208000000001725e-05, 2.1207999999998256e-05, 2.1679999999999616e-05, 2.1236000000000865e-05, 2.1235999999997396e-05, 2.1207999999998256e-05, 2.156900000000253e-05, 2.1222000000001295e-05, 2.168099999999909e-05, 2.116700000000249e-05, 2.163900000000038e-05, 2.1208000000001725e-05, 2.165300000000342e-05, 2.152700000000035e-05, 2.1527999999999825e-05, 2.1541999999999395e-05, 2.1527999999999825e-05, 2.1541999999999395e-05, 2.1514000000000255e-05, 2.152700000000035e-05, 2.129099999999967e-05, 2.168100000000256e-05, 2.1541999999999395e-05, 2.1221999999997826e-05, 2.1514000000000255e-05, 2.10830000000016e-05, 2.12090000000012e-05, 2.1236000000000865e-05, 2.1222000000001295e-05, 2.1527999999999825e-05, 2.106900000000203e-05, 2.1527999999999825e-05, 2.108299999999813e-05, 2.165299999999995e-05, 2.1207999999998256e-05, 2.1570000000002004e-05, 2.152700000000035e-05, 2.1666000000000046e-05]</msg>
<status status="PASS" starttime="20201030 10:57:41.438" endtime="20201030 10:57:41.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.433" endtime="20201030 10:57:41.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.444" endtime="20201030 10:57:41.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.443" endtime="20201030 10:57:41.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.442" endtime="20201030 10:57:41.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.087" endtime="20201030 10:57:41.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.087" endtime="20201030 10:57:41.465"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.474" endtime="20201030 10:57:41.489"></status>
</kw>
<msg timestamp="20201030 10:57:41.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.472" endtime="20201030 10:57:41.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.490" endtime="20201030 10:57:41.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.492" endtime="20201030 10:57:41.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.470" endtime="20201030 10:57:41.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.468" endtime="20201030 10:57:41.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.502" endtime="20201030 10:57:41.788"></status>
</kw>
<msg timestamp="20201030 10:57:41.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:41.500" endtime="20201030 10:57:41.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:41.792" endtime="20201030 10:57:41.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.800" endtime="20201030 10:57:41.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.497" endtime="20201030 10:57:41.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.496" endtime="20201030 10:57:41.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.807" level="INFO">${RESULT} = [{'diff': 2.2958000000000006e-05}, {'diff': 2.24030000000007e-05}, {'diff': 2.237500000000156e-05}, {'diff': 2.211099999999827e-05}, {'diff': 2.212499999999784e-05}, {'diff': 2.211100000000174e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:41.804" endtime="20201030 10:57:41.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:41.811" level="INFO">${ACCURACY} = {'diff': [2.2958000000000006e-05, 2.24030000000007e-05, 2.237500000000156e-05, 2.211099999999827e-05, 2.212499999999784e-05, 2.211100000000174e-05, 2.2555999999999965e-05, 2.244499999999941e-05, 2.241...</msg>
<status status="PASS" starttime="20201030 10:57:41.808" endtime="20201030 10:57:41.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.815" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 10:57:41.814" endtime="20201030 10:57:41.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.818" level="INFO">VALUE: [2.2958000000000006e-05, 2.24030000000007e-05, 2.237500000000156e-05, 2.211099999999827e-05, 2.212499999999784e-05, 2.211100000000174e-05, 2.2555999999999965e-05, 2.244499999999941e-05, 2.241700000000027e-05, 2.241700000000027e-05, 2.2402000000001226e-05, 2.2041999999999895e-05, 2.2430000000000366e-05, 2.2569999999999535e-05, 2.256900000000006e-05, 2.255500000000049e-05, 2.241700000000027e-05, 2.2555999999999965e-05, 2.255500000000049e-05, 2.212500000000131e-05, 2.2457999999999506e-05, 2.2485999999998646e-05, 2.287499999999859e-05, 2.237500000000156e-05, 2.1971999999998576e-05, 2.2098000000001644e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.238900000000113e-05, 2.241700000000027e-05, 2.2055999999999465e-05, 2.211099999999827e-05, 2.2542000000000395e-05, 2.24030000000007e-05, 2.2112000000001214e-05, 2.2513999999997786e-05, 2.241700000000027e-05, 2.241700000000027e-05, 2.2542000000000395e-05, 2.2554999999997022e-05, 2.2443999999999936e-05, 2.241700000000027e-05, 2.244499999999941e-05, 2.2415999999997327e-05, 2.2097999999998175e-05, 2.2542000000000395e-05, 2.2430000000000366e-05, 2.212500000000131e-05, 2.212499999999784e-05, 2.2430000000000366e-05]</msg>
<status status="PASS" starttime="20201030 10:57:41.816" endtime="20201030 10:57:41.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.812" endtime="20201030 10:57:41.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.823" endtime="20201030 10:57:41.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.821" endtime="20201030 10:57:41.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.820" endtime="20201030 10:57:41.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.466" endtime="20201030 10:57:41.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.466" endtime="20201030 10:57:41.843"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.852" endtime="20201030 10:57:41.868"></status>
</kw>
<msg timestamp="20201030 10:57:41.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.851" endtime="20201030 10:57:41.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.869" endtime="20201030 10:57:41.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.872" endtime="20201030 10:57:41.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.848" endtime="20201030 10:57:41.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.846" endtime="20201030 10:57:41.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.881" endtime="20201030 10:57:42.166"></status>
</kw>
<msg timestamp="20201030 10:57:42.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022857056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.879" endtime="20201030 10:57:42.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022857056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.170" endtime="20201030 10:57:42.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.178" endtime="20201030 10:57:42.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.877" endtime="20201030 10:57:42.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.875" endtime="20201030 10:57:42.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.184" level="INFO">${RESULT} = [{'diff': 2.3401999999998757e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.330500000000124e-05}, {'diff': 2.3333999999999855e-05}, {'diff': 2.3306000000000715e-05...</msg>
<status status="PASS" starttime="20201030 10:57:42.181" endtime="20201030 10:57:42.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.189" level="INFO">${ACCURACY} = {'diff': [2.3401999999998757e-05, 2.3458000000000506e-05, 2.344500000000041e-05, 2.330500000000124e-05, 2.3333999999999855e-05, 2.3306000000000715e-05, 2.331900000000081e-05, 2.2986000000002615e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:42.185" endtime="20201030 10:57:42.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.193" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.192" endtime="20201030 10:57:42.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.195" level="INFO">VALUE: [2.3401999999998757e-05, 2.3458000000000506e-05, 2.344500000000041e-05, 2.330500000000124e-05, 2.3333999999999855e-05, 2.3306000000000715e-05, 2.331900000000081e-05, 2.2986000000002615e-05, 2.3763999999999036e-05, 2.373699999999937e-05, 2.343100000000084e-05, 2.331900000000081e-05, 2.3027999999997856e-05, 2.3278000000001575e-05, 2.344500000000041e-05, 2.3763999999999036e-05, 2.3306000000000715e-05, 2.298700000000209e-05, 2.3749999999999466e-05, 2.3318999999997342e-05, 2.330500000000124e-05, 2.3444000000000936e-05, 2.3306000000000715e-05, 2.343099999999737e-05, 2.3458000000000506e-05, 2.331900000000081e-05, 2.344500000000041e-05, 2.3332999999996912e-05, 2.3320000000000285e-05, 2.3306000000000715e-05, 2.3320000000000285e-05, 2.3764000000002505e-05, 2.3305999999997246e-05, 2.3304999999997772e-05, 2.3221999999999826e-05, 2.3458000000000506e-05, 2.331900000000081e-05, 2.3000000000002185e-05, 2.3318999999997342e-05, 2.337499999999909e-05, 2.329100000000167e-05, 2.3013999999998286e-05, 2.3764000000002505e-05, 2.3290999999998202e-05, 2.3333999999999855e-05, 2.3305999999997246e-05, 2.3444000000000936e-05, 2.336099999999952e-05, 2.3458000000000506e-05, 2.331900000000081e-05]</msg>
<status status="PASS" starttime="20201030 10:57:42.194" endtime="20201030 10:57:42.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.189" endtime="20201030 10:57:42.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.201" endtime="20201030 10:57:42.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.200" endtime="20201030 10:57:42.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.199" endtime="20201030 10:57:42.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.844" endtime="20201030 10:57:42.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.844" endtime="20201030 10:57:42.222"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.230" endtime="20201030 10:57:42.245"></status>
</kw>
<msg timestamp="20201030 10:57:42.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.229" endtime="20201030 10:57:42.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.247" endtime="20201030 10:57:42.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.249" endtime="20201030 10:57:42.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.226" endtime="20201030 10:57:42.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.224" endtime="20201030 10:57:42.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.258" endtime="20201030 10:57:42.543"></status>
</kw>
<msg timestamp="20201030 10:57:42.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.257" endtime="20201030 10:57:42.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.547" endtime="20201030 10:57:42.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.556" endtime="20201030 10:57:42.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.254" endtime="20201030 10:57:42.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.253" endtime="20201030 10:57:42.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.562" level="INFO">${RESULT} = [{'diff': 2.488900000000016e-05}, {'diff': 2.42230000000003e-05}, {'diff': 2.4207999999997787e-05}, {'diff': 2.466699999999905e-05}, {'diff': 2.419500000000116e-05}, {'diff': 2.463899999999991e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:42.559" endtime="20201030 10:57:42.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.567" level="INFO">${ACCURACY} = {'diff': [2.488900000000016e-05, 2.42230000000003e-05, 2.4207999999997787e-05, 2.466699999999905e-05, 2.419500000000116e-05, 2.463899999999991e-05, 2.4222000000000826e-05, 2.463899999999991e-05, 2.462...</msg>
<status status="PASS" starttime="20201030 10:57:42.563" endtime="20201030 10:57:42.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.572" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.571" endtime="20201030 10:57:42.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.574" level="INFO">VALUE: [2.488900000000016e-05, 2.42230000000003e-05, 2.4207999999997787e-05, 2.466699999999905e-05, 2.419500000000116e-05, 2.463899999999991e-05, 2.4222000000000826e-05, 2.463899999999991e-05, 2.462500000000034e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.433300000000138e-05, 2.4778000000003075e-05, 2.434700000000095e-05, 2.4208000000001256e-05, 2.4264000000003005e-05, 2.434700000000095e-05, 2.433300000000138e-05, 2.420900000000073e-05, 2.463899999999991e-05, 2.4207999999997787e-05, 2.436100000000052e-05, 2.419500000000116e-05, 2.4194000000001686e-05, 2.4334000000000855e-05, 2.4194000000001686e-05, 2.465299999999948e-05, 2.4319999999997816e-05, 2.4194000000001686e-05, 2.431900000000181e-05, 2.437500000000009e-05, 2.4332999999997912e-05, 2.4334000000000855e-05, 2.431900000000181e-05, 2.419500000000116e-05, 2.433300000000138e-05, 2.420900000000073e-05, 2.420900000000073e-05, 2.4292000000002145e-05, 2.4596999999997732e-05, 2.415300000000245e-05, 2.465299999999948e-05, 2.463899999999991e-05, 2.4638000000000437e-05, 2.418100000000159e-05, 2.4582999999998162e-05, 2.438900000000313e-05, 2.4638000000000437e-05, 2.465299999999948e-05, 2.4736000000000896e-05]</msg>
<status status="PASS" starttime="20201030 10:57:42.573" endtime="20201030 10:57:42.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.568" endtime="20201030 10:57:42.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.579" endtime="20201030 10:57:42.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.578" endtime="20201030 10:57:42.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.576" endtime="20201030 10:57:42.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.223" endtime="20201030 10:57:42.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.222" endtime="20201030 10:57:42.600"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.608" endtime="20201030 10:57:42.623"></status>
</kw>
<msg timestamp="20201030 10:57:42.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.607" endtime="20201030 10:57:42.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.625" endtime="20201030 10:57:42.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.627" endtime="20201030 10:57:42.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.604" endtime="20201030 10:57:42.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.602" endtime="20201030 10:57:42.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.636" endtime="20201030 10:57:42.936"></status>
</kw>
<msg timestamp="20201030 10:57:42.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021585167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021610889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.635" endtime="20201030 10:57:42.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021585167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021610889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.941" endtime="20201030 10:57:42.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.949" endtime="20201030 10:57:42.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.632" endtime="20201030 10:57:42.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.631" endtime="20201030 10:57:42.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.955" level="INFO">${RESULT} = [{'diff': 2.5722000000002326e-05}, {'diff': 2.5082999999998662e-05}, {'diff': 2.570899999999876e-05}, {'diff': 2.5568999999999592e-05}, {'diff': 2.5054999999999522e-05}, {'diff': 2.566700000000005e-05...</msg>
<status status="PASS" starttime="20201030 10:57:42.952" endtime="20201030 10:57:42.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.959" level="INFO">${ACCURACY} = {'diff': [2.5722000000002326e-05, 2.5082999999998662e-05, 2.570899999999876e-05, 2.5568999999999592e-05, 2.5054999999999522e-05, 2.566700000000005e-05, 2.5514000000000786e-05, 2.5541999999999926e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:42.956" endtime="20201030 10:57:42.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.964" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.963" endtime="20201030 10:57:42.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.966" level="INFO">VALUE: [2.5722000000002326e-05, 2.5082999999998662e-05, 2.570899999999876e-05, 2.5568999999999592e-05, 2.5054999999999522e-05, 2.566700000000005e-05, 2.5514000000000786e-05, 2.5541999999999926e-05, 2.519500000000216e-05, 2.5528000000000356e-05, 2.5236000000001396e-05, 2.508300000000213e-05, 2.5221999999998357e-05, 2.5222000000001826e-05, 2.5514000000000786e-05, 2.513900000000041e-05, 2.5250000000000966e-05, 2.565300000000048e-05, 2.518100000000259e-05, 2.5540999999996983e-05, 2.5207999999998787e-05, 2.5555999999999496e-05, 2.563899999999744e-05, 2.5514000000000786e-05, 2.519500000000216e-05, 2.5221999999998357e-05, 2.5541999999999926e-05, 2.5207999999998787e-05, 2.5555999999999496e-05, 2.5528000000000356e-05, 2.5527000000000882e-05, 2.5207999999998787e-05, 2.5291000000000202e-05, 2.565300000000048e-05, 2.519499999999869e-05, 2.5193999999999217e-05, 2.520900000000173e-05, 2.5666000000000577e-05, 2.5514000000000786e-05, 2.5541999999999926e-05, 2.5222000000001826e-05, 2.512500000000084e-05, 2.565300000000048e-05, 2.5541999999999926e-05, 2.5013999999996817e-05, 2.5236000000001396e-05, 2.5528000000000356e-05, 2.5582999999999162e-05, 2.5513999999997317e-05, 2.597299999999858e-05]</msg>
<status status="PASS" starttime="20201030 10:57:42.965" endtime="20201030 10:57:42.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.960" endtime="20201030 10:57:42.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.971" endtime="20201030 10:57:42.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.970" endtime="20201030 10:57:42.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.969" endtime="20201030 10:57:42.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.601" endtime="20201030 10:57:42.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.600" endtime="20201030 10:57:42.992"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.000" endtime="20201030 10:57:43.017"></status>
</kw>
<msg timestamp="20201030 10:57:43.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.999" endtime="20201030 10:57:43.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.018" endtime="20201030 10:57:43.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.021" endtime="20201030 10:57:43.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.996" endtime="20201030 10:57:43.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.994" endtime="20201030 10:57:43.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.030" endtime="20201030 10:57:43.316"></status>
</kw>
<msg timestamp="20201030 10:57:43.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022622819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022649403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.028" endtime="20201030 10:57:43.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022622819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022649403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.320" endtime="20201030 10:57:43.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.328" endtime="20201030 10:57:43.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.026" endtime="20201030 10:57:43.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.024" endtime="20201030 10:57:43.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.334" level="INFO">${RESULT} = [{'diff': 2.6583999999999636e-05}, {'diff': 2.6098000000002175e-05}, {'diff': 2.6833999999999886e-05}, {'diff': 2.640299999999776e-05}, {'diff': 2.6554999999997553e-05}, {'diff': 2.640300000000123e-05...</msg>
<status status="PASS" starttime="20201030 10:57:43.331" endtime="20201030 10:57:43.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:43.339" level="INFO">${ACCURACY} = {'diff': [2.6583999999999636e-05, 2.6098000000002175e-05, 2.6833999999999886e-05, 2.640299999999776e-05, 2.6554999999997553e-05, 2.640300000000123e-05, 2.643100000000037e-05, 2.6110999999998802e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:43.335" endtime="20201030 10:57:43.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.343" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 10:57:43.342" endtime="20201030 10:57:43.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.345" level="INFO">VALUE: [2.6583999999999636e-05, 2.6098000000002175e-05, 2.6833999999999886e-05, 2.640299999999776e-05, 2.6554999999997553e-05, 2.640300000000123e-05, 2.643100000000037e-05, 2.6110999999998802e-05, 2.6416000000001327e-05, 2.6082999999999662e-05, 2.6110999999998802e-05, 2.6556000000000496e-05, 2.6555000000001022e-05, 2.6041000000000952e-05, 2.6555000000001022e-05, 2.6055000000000522e-05, 2.6570000000000066e-05, 2.643100000000037e-05, 2.6110999999998802e-05, 2.6556000000000496e-05, 2.643100000000037e-05, 2.6556000000000496e-05, 2.6429999999997428e-05, 2.6555000000001022e-05, 2.6569000000000592e-05, 2.6430000000000897e-05, 2.6528000000001356e-05, 2.6555000000001022e-05, 2.64170000000008e-05, 2.60970000000027e-05, 2.64170000000008e-05, 2.6527999999997887e-05, 2.611100000000227e-05, 2.6151999999998038e-05, 2.6528000000001356e-05, 2.6443999999996998e-05, 2.6554999999997553e-05, 2.6527999999997887e-05, 2.616700000000055e-05, 2.641699999999733e-05, 2.5985999999998677e-05, 2.6402000000001757e-05, 2.6070000000003035e-05, 2.6528000000001356e-05, 2.6528000000001356e-05, 2.6040999999997483e-05, 2.6860999999999552e-05, 2.643100000000037e-05, 2.6610999999999302e-05, 2.6570000000000066e-05]</msg>
<status status="PASS" starttime="20201030 10:57:43.344" endtime="20201030 10:57:43.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.339" endtime="20201030 10:57:43.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.351" endtime="20201030 10:57:43.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.350" endtime="20201030 10:57:43.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.348" endtime="20201030 10:57:43.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.993" endtime="20201030 10:57:43.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.992" endtime="20201030 10:57:43.372"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.380" endtime="20201030 10:57:43.396"></status>
</kw>
<msg timestamp="20201030 10:57:43.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.379" endtime="20201030 10:57:43.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.397" endtime="20201030 10:57:43.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.400" endtime="20201030 10:57:43.401"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.376" endtime="20201030 10:57:43.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.374" endtime="20201030 10:57:43.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.409" endtime="20201030 10:57:43.694"></status>
</kw>
<msg timestamp="20201030 10:57:43.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021606181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.407" endtime="20201030 10:57:43.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021606181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.698" endtime="20201030 10:57:43.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.706" endtime="20201030 10:57:43.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.405" endtime="20201030 10:57:43.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.403" endtime="20201030 10:57:43.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.712" level="INFO">${RESULT} = [{'diff': 2.7791999999998707e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.7305999999997776e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.7430000000001897e-...</msg>
<status status="PASS" starttime="20201030 10:57:43.709" endtime="20201030 10:57:43.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:43.717" level="INFO">${ACCURACY} = {'diff': [2.7791999999998707e-05, 2.7013999999998817e-05, 2.7305999999997776e-05, 2.7486000000000177e-05, 2.7013999999998817e-05, 2.7430000000001897e-05, 2.7318999999997873e-05, 2.7429999999998428e-05...</msg>
<status status="PASS" starttime="20201030 10:57:43.713" endtime="20201030 10:57:43.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.722" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 10:57:43.721" endtime="20201030 10:57:43.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.724" level="INFO">VALUE: [2.7791999999998707e-05, 2.7013999999998817e-05, 2.7305999999997776e-05, 2.7486000000000177e-05, 2.7013999999998817e-05, 2.7430000000001897e-05, 2.7318999999997873e-05, 2.7429999999998428e-05, 2.7319999999997346e-05, 2.7347000000000482e-05, 2.740300000000223e-05, 2.7319999999997346e-05, 2.744500000000094e-05, 2.7249999999999497e-05, 2.7304999999998303e-05, 2.744500000000094e-05, 2.7430000000001897e-05, 2.7361000000000052e-05, 2.7306000000001246e-05, 2.7319999999997346e-05, 2.7429999999998428e-05, 2.7749999999999997e-05, 2.744500000000094e-05, 2.7472000000000607e-05, 2.7361000000000052e-05, 2.7264000000002536e-05, 2.7444000000001467e-05, 2.7235999999999927e-05, 2.7443999999997998e-05, 2.7318999999997873e-05, 2.7291000000002202e-05, 2.745900000000051e-05, 2.7306000000001246e-05, 2.74309999999979e-05, 2.7347000000000482e-05, 2.7318999999997873e-05, 2.743100000000137e-05, 2.7304999999998303e-05, 2.6972000000000107e-05, 2.7749999999999997e-05, 2.7277999999998637e-05, 2.7013999999998817e-05, 2.7777999999999137e-05, 2.7444000000001467e-05, 2.7305000000001772e-05, 2.7333000000000912e-05, 2.7306000000001246e-05, 2.744500000000094e-05, 2.7458000000001037e-05, 2.7304999999998303e-05]</msg>
<status status="PASS" starttime="20201030 10:57:43.723" endtime="20201030 10:57:43.725"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.718" endtime="20201030 10:57:43.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.729" endtime="20201030 10:57:43.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.728" endtime="20201030 10:57:43.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.727" endtime="20201030 10:57:43.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.373" endtime="20201030 10:57:43.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.372" endtime="20201030 10:57:43.750"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.758" endtime="20201030 10:57:43.774"></status>
</kw>
<msg timestamp="20201030 10:57:43.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.757" endtime="20201030 10:57:43.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.775" endtime="20201030 10:57:43.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.778" endtime="20201030 10:57:43.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.754" endtime="20201030 10:57:43.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.752" endtime="20201030 10:57:43.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.787" endtime="20201030 10:57:44.073"></status>
</kw>
<msg timestamp="20201030 10:57:44.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021582889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.785" endtime="20201030 10:57:44.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021582889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.077" endtime="20201030 10:57:44.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.085" endtime="20201030 10:57:44.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.783" endtime="20201030 10:57:44.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.781" endtime="20201030 10:57:44.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.092" level="INFO">${RESULT} = [{'diff': 2.8874999999997653e-05}, {'diff': 2.7888999999999692e-05}, {'diff': 2.8653000000000012e-05}, {'diff': 2.8292000000002676e-05}, {'diff': 2.8639000000000442e-05}, {'diff': 2.8639000000000442e-...</msg>
<status status="PASS" starttime="20201030 10:57:44.089" endtime="20201030 10:57:44.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.096" level="INFO">${ACCURACY} = {'diff': [2.8874999999997653e-05, 2.7888999999999692e-05, 2.8653000000000012e-05, 2.8292000000002676e-05, 2.8639000000000442e-05, 2.8639000000000442e-05, 2.8207999999998318e-05, 2.8639000000000442e-05...</msg>
<status status="PASS" starttime="20201030 10:57:44.093" endtime="20201030 10:57:44.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.100" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.099" endtime="20201030 10:57:44.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.103" level="INFO">VALUE: [2.8874999999997653e-05, 2.7888999999999692e-05, 2.8653000000000012e-05, 2.8292000000002676e-05, 2.8639000000000442e-05, 2.8639000000000442e-05, 2.8207999999998318e-05, 2.8639000000000442e-05, 2.8236000000000927e-05, 2.8375000000000622e-05, 2.8652000000000538e-05, 2.8222000000001357e-05, 2.8653000000000012e-05, 2.7874999999996652e-05, 2.8332999999998443e-05, 2.8568999999999123e-05, 2.8208000000001787e-05, 2.8653000000000012e-05, 2.8333000000001912e-05, 2.8333999999997916e-05, 2.8179999999999178e-05, 2.820899999999779e-05, 2.8194000000002217e-05, 2.8639000000000442e-05, 2.8624999999997403e-05, 2.819499999999822e-05, 2.8347000000001482e-05, 2.8653000000000012e-05, 2.8346999999998013e-05, 2.8402999999999762e-05, 2.8653000000000012e-05, 2.7902999999999262e-05, 2.8332999999998443e-05, 2.8666999999999582e-05, 2.8348000000000956e-05, 2.8666999999999582e-05, 2.819499999999822e-05, 2.8625000000000872e-05, 2.8694000000002717e-05, 2.7888999999999692e-05, 2.8346999999998013e-05, 2.8346999999998013e-05, 2.8194000000002217e-05, 2.8333000000001912e-05, 2.8318999999998873e-05, 2.8320000000001816e-05, 2.8653000000000012e-05, 2.8639000000000442e-05, 2.8639000000000442e-05, 2.8304999999999303e-05]</msg>
<status status="PASS" starttime="20201030 10:57:44.101" endtime="20201030 10:57:44.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.097" endtime="20201030 10:57:44.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.108" endtime="20201030 10:57:44.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.106" endtime="20201030 10:57:44.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.105" endtime="20201030 10:57:44.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.751" endtime="20201030 10:57:44.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.750" endtime="20201030 10:57:44.128"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.137" endtime="20201030 10:57:44.155"></status>
</kw>
<msg timestamp="20201030 10:57:44.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.136" endtime="20201030 10:57:44.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.157" endtime="20201030 10:57:44.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.159" endtime="20201030 10:57:44.161"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.133" endtime="20201030 10:57:44.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.131" endtime="20201030 10:57:44.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.168" endtime="20201030 10:57:44.454"></status>
</kw>
<msg timestamp="20201030 10:57:44.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024668569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024698319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.167" endtime="20201030 10:57:44.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024668569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024698319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.458" endtime="20201030 10:57:44.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.466" endtime="20201030 10:57:44.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.164" endtime="20201030 10:57:44.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.163" endtime="20201030 10:57:44.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.472" level="INFO">${RESULT} = [{'diff': 2.9749999999998528e-05}, {'diff': 2.919499999999922e-05}, {'diff': 2.9249999999998028e-05}, {'diff': 2.9222000000002357e-05}, {'diff': 2.9555000000000553e-05}, {'diff': 2.9153000000000512e-0...</msg>
<status status="PASS" starttime="20201030 10:57:44.469" endtime="20201030 10:57:44.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.477" level="INFO">${ACCURACY} = {'diff': [2.9749999999998528e-05, 2.919499999999922e-05, 2.9249999999998028e-05, 2.9222000000002357e-05, 2.9555000000000553e-05, 2.9153000000000512e-05, 2.9540999999997514e-05, 2.9653000000001012e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:44.473" endtime="20201030 10:57:44.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.481" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.480" endtime="20201030 10:57:44.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.483" level="INFO">VALUE: [2.9749999999998528e-05, 2.919499999999922e-05, 2.9249999999998028e-05, 2.9222000000002357e-05, 2.9555000000000553e-05, 2.9153000000000512e-05, 2.9540999999997514e-05, 2.9653000000001012e-05, 2.9207999999999318e-05, 2.9235999999998458e-05, 2.9513000000001843e-05, 2.9096999999998763e-05, 2.9236000000001927e-05, 2.9666000000001108e-05, 2.9541000000000983e-05, 2.9221999999998888e-05, 2.9514000000001317e-05, 2.9568999999996654e-05, 2.9514000000001317e-05, 2.9583999999999167e-05, 2.9068999999999623e-05, 2.9235999999998458e-05, 2.9222000000002357e-05, 2.9542000000000457e-05, 2.9292000000000207e-05, 2.9083999999998666e-05, 2.9528000000000887e-05, 2.9652000000001538e-05, 2.9528000000000887e-05, 2.9596999999999263e-05, 2.9499999999998278e-05, 2.9528000000000887e-05, 2.9485999999998708e-05, 2.9096999999998763e-05, 2.9499999999998278e-05, 2.9556000000000027e-05, 2.9542000000000457e-05, 2.9222000000002357e-05, 2.9596999999999263e-05, 2.9249999999998028e-05, 2.9583000000003162e-05, 2.9541000000000983e-05, 2.9527000000001413e-05, 2.9569999999999597e-05, 2.9097000000002232e-05, 2.9542000000000457e-05, 2.9235999999998458e-05, 2.9180000000000178e-05, 2.9221999999998888e-05, 2.9097999999998236e-05]</msg>
<status status="PASS" starttime="20201030 10:57:44.482" endtime="20201030 10:57:44.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.477" endtime="20201030 10:57:44.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.489" endtime="20201030 10:57:44.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.488" endtime="20201030 10:57:44.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.486" endtime="20201030 10:57:44.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.129" endtime="20201030 10:57:44.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.129" endtime="20201030 10:57:44.510"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.518" endtime="20201030 10:57:44.533"></status>
</kw>
<msg timestamp="20201030 10:57:44.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.517" endtime="20201030 10:57:44.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.535" endtime="20201030 10:57:44.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.537" endtime="20201030 10:57:44.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.514" endtime="20201030 10:57:44.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.512" endtime="20201030 10:57:44.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.546" endtime="20201030 10:57:44.833"></status>
</kw>
<msg timestamp="20201030 10:57:44.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.544" endtime="20201030 10:57:44.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.837" endtime="20201030 10:57:44.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.845" endtime="20201030 10:57:44.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.542" endtime="20201030 10:57:44.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.540" endtime="20201030 10:57:44.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.852" level="INFO">${RESULT} = [{'diff': 3.095800000000107e-05}, {'diff': 3.087499999999965e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.054199999999799e-05}, {'diff': 3.0014000000001817e-05}, {'diff': 3.058300000000069e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:44.848" endtime="20201030 10:57:44.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.856" level="INFO">${ACCURACY} = {'diff': [3.095800000000107e-05, 3.087499999999965e-05, 3.0430999999997432e-05, 3.054199999999799e-05, 3.0014000000001817e-05, 3.058300000000069e-05, 3.058300000000069e-05, 3.0444000000000998e-05, 3.0...</msg>
<status status="PASS" starttime="20201030 10:57:44.852" endtime="20201030 10:57:44.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.861" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.860" endtime="20201030 10:57:44.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.863" level="INFO">VALUE: [3.095800000000107e-05, 3.087499999999965e-05, 3.0430999999997432e-05, 3.054199999999799e-05, 3.0014000000001817e-05, 3.058300000000069e-05, 3.058300000000069e-05, 3.0444000000000998e-05, 3.0124999999998903e-05, 3.055600000000103e-05, 3.090299999999879e-05, 3.0417000000001332e-05, 3.0416000000001858e-05, 3.054200000000146e-05, 3.0554999999998084e-05, 3.0096999999999763e-05, 3.0485999999999708e-05, 3.0472000000000138e-05, 3.0097999999999236e-05, 3.0513999999998848e-05, 3.0083000000000193e-05, 3.0096999999999763e-05, 3.0540999999998514e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0138999999998473e-05, 3.05700000000006e-05, 3.0110999999999333e-05, 3.0416999999997862e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.056900000000112e-05, 3.0402000000002288e-05, 3.056900000000112e-05, 3.0124999999998903e-05, 3.045900000000004e-05, 3.0124999999998903e-05, 3.055599999999756e-05, 3.0568999999997654e-05, 3.042999999999796e-05, 3.0416000000001858e-05, 3.058300000000069e-05, 3.055600000000103e-05, 3.055600000000103e-05, 3.0070000000000097e-05, 3.0417000000001332e-05, 3.0513999999998848e-05, 3.0499999999999278e-05]</msg>
<status status="PASS" starttime="20201030 10:57:44.862" endtime="20201030 10:57:44.864"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.857" endtime="20201030 10:57:44.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.868" endtime="20201030 10:57:44.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.867" endtime="20201030 10:57:44.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.866" endtime="20201030 10:57:44.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.511" endtime="20201030 10:57:44.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.510" endtime="20201030 10:57:44.889"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.898" endtime="20201030 10:57:44.913"></status>
</kw>
<msg timestamp="20201030 10:57:44.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.896" endtime="20201030 10:57:44.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.915" endtime="20201030 10:57:44.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.917" endtime="20201030 10:57:44.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.893" endtime="20201030 10:57:44.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.891" endtime="20201030 10:57:44.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.926" endtime="20201030 10:57:45.213"></status>
</kw>
<msg timestamp="20201030 10:57:45.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021537653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021571625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.924" endtime="20201030 10:57:45.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021537653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021571625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.217" endtime="20201030 10:57:45.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.225" endtime="20201030 10:57:45.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.922" endtime="20201030 10:57:45.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.920" endtime="20201030 10:57:45.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.232" level="INFO">${RESULT} = [{'diff': 3.397200000000017e-05}, {'diff': 3.3847000000000044e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.348600000000271e-05}, {'diff': 3.3624999999998934e-05}, {'diff': 3.3860999999999614e-05...</msg>
<status status="PASS" starttime="20201030 10:57:45.228" endtime="20201030 10:57:45.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:45.236" level="INFO">${ACCURACY} = {'diff': [3.397200000000017e-05, 3.3847000000000044e-05, 3.3583000000000224e-05, 3.348600000000271e-05, 3.3624999999998934e-05, 3.3860999999999614e-05, 3.374999999999906e-05, 3.394400000000103e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:57:45.232" endtime="20201030 10:57:45.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.240" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 10:57:45.239" endtime="20201030 10:57:45.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.242" level="INFO">VALUE: [3.397200000000017e-05, 3.3847000000000044e-05, 3.3583000000000224e-05, 3.348600000000271e-05, 3.3624999999998934e-05, 3.3860999999999614e-05, 3.374999999999906e-05, 3.394400000000103e-05, 3.393000000000146e-05, 3.367999999999774e-05, 3.383399999999995e-05, 3.369400000000078e-05, 3.344400000000053e-05, 3.372199999999992e-05, 3.341699999999739e-05, 3.37779999999982e-05, 3.34580000000001e-05, 3.351400000000185e-05, 3.366699999999764e-05, 3.39580000000006e-05, 3.354200000000099e-05, 3.388900000000222e-05, 3.363900000000197e-05, 3.3860999999999614e-05, 3.370800000000035e-05, 3.3874999999999184e-05, 3.355600000000056e-05, 3.357000000000013e-05, 3.3833000000000474e-05, 3.351399999999838e-05, 3.3583000000000224e-05, 3.390300000000179e-05, 3.373599999999949e-05, 3.347199999999967e-05, 3.357000000000013e-05, 3.374999999999906e-05, 3.37779999999982e-05, 3.349999999999881e-05, 3.379200000000124e-05, 3.3874999999999184e-05, 3.3805000000001334e-05, 3.394499999999703e-05, 3.395900000000007e-05, 3.3583000000000224e-05, 3.372199999999992e-05, 3.375000000000253e-05, 3.3526999999998475e-05, 3.376399999999863e-05, 3.3555000000001084e-05, 3.372199999999992e-05]</msg>
<status status="PASS" starttime="20201030 10:57:45.241" endtime="20201030 10:57:45.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.237" endtime="20201030 10:57:45.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:45.247" endtime="20201030 10:57:45.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.246" endtime="20201030 10:57:45.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.245" endtime="20201030 10:57:45.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.890" endtime="20201030 10:57:45.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.889" endtime="20201030 10:57:45.268"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.277" endtime="20201030 10:57:45.293"></status>
</kw>
<msg timestamp="20201030 10:57:45.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.275" endtime="20201030 10:57:45.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.295" endtime="20201030 10:57:45.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.297" endtime="20201030 10:57:45.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.273" endtime="20201030 10:57:45.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.271" endtime="20201030 10:57:45.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.306" endtime="20201030 10:57:45.593"></status>
</kw>
<msg timestamp="20201030 10:57:45.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:45.305" endtime="20201030 10:57:45.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:45.598" endtime="20201030 10:57:45.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.606" endtime="20201030 10:57:45.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.302" endtime="20201030 10:57:45.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.301" endtime="20201030 10:57:45.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.612" level="INFO">${RESULT} = [{'diff': 3.469399999999831e-05}, {'diff': 3.530599999999884e-05}, {'diff': 3.47779999999992e-05}, {'diff': 3.4819000000001904e-05}, {'diff': 3.4832999999998004e-05}, {'diff': 3.49580000000016e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:45.609" endtime="20201030 10:57:45.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:45.616" level="INFO">${ACCURACY} = {'diff': [3.469399999999831e-05, 3.530599999999884e-05, 3.47779999999992e-05, 3.4819000000001904e-05, 3.4832999999998004e-05, 3.49580000000016e-05, 3.46519999999996e-05, 3.4763000000000155e-05, 3.4957...</msg>
<status status="PASS" starttime="20201030 10:57:45.613" endtime="20201030 10:57:45.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.621" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 10:57:45.620" endtime="20201030 10:57:45.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.623" level="INFO">VALUE: [3.469399999999831e-05, 3.530599999999884e-05, 3.47779999999992e-05, 3.4819000000001904e-05, 3.4832999999998004e-05, 3.49580000000016e-05, 3.46519999999996e-05, 3.4763000000000155e-05, 3.495799999999813e-05, 3.466599999999917e-05, 3.4832999999998004e-05, 3.4790999999999295e-05, 3.470799999999788e-05, 3.4833000000001474e-05, 3.491699999999889e-05, 3.500000000000031e-05, 3.4568999999998185e-05, 3.47779999999992e-05, 3.498599999999727e-05, 3.4624999999999934e-05, 3.473600000000049e-05, 3.44580000000011e-05, 3.495900000000107e-05, 3.4833000000001474e-05, 3.451399999999938e-05, 3.4847000000001044e-05, 3.4611000000000364e-05, 3.47779999999992e-05, 3.470799999999788e-05, 3.455600000000156e-05, 3.4846999999997574e-05, 3.49450000000015e-05, 3.472299999999692e-05, 3.469500000000125e-05, 3.468099999999821e-05, 3.469500000000125e-05, 3.45840000000007e-05, 3.4888999999999754e-05, 3.4624999999999934e-05, 3.4445000000001e-05, 3.472300000000039e-05, 3.46519999999996e-05, 3.470799999999788e-05, 3.470900000000082e-05, 3.4624999999999934e-05, 3.4555000000002084e-05, 3.469399999999831e-05, 3.465200000000307e-05, 3.469399999999831e-05, 3.4874999999996714e-05]</msg>
<status status="PASS" starttime="20201030 10:57:45.622" endtime="20201030 10:57:45.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.617" endtime="20201030 10:57:45.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:45.629" endtime="20201030 10:57:45.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.627" endtime="20201030 10:57:45.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.626" endtime="20201030 10:57:45.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.269" endtime="20201030 10:57:45.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.268" endtime="20201030 10:57:45.650"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.658" endtime="20201030 10:57:45.674"></status>
</kw>
<msg timestamp="20201030 10:57:45.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.657" endtime="20201030 10:57:45.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.676" endtime="20201030 10:57:45.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.678" endtime="20201030 10:57:45.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.654" endtime="20201030 10:57:45.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.652" endtime="20201030 10:57:45.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.687" endtime="20201030 10:57:45.973"></status>
</kw>
<msg timestamp="20201030 10:57:45.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.686" endtime="20201030 10:57:45.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.977" endtime="20201030 10:57:45.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.985" endtime="20201030 10:57:45.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.683" endtime="20201030 10:57:45.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.681" endtime="20201030 10:57:45.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.991" level="INFO">${RESULT} = [{'diff': 3.548700000000071e-05}, {'diff': 3.629200000000027e-05}, {'diff': 3.5639000000000504e-05}, {'diff': 3.5888999999997284e-05}, {'diff': 3.597200000000217e-05}, {'diff': 3.5389000000000254e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:45.988" endtime="20201030 10:57:45.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:45.996" level="INFO">${ACCURACY} = {'diff': [3.548700000000071e-05, 3.629200000000027e-05, 3.5639000000000504e-05, 3.5888999999997284e-05, 3.597200000000217e-05, 3.5389000000000254e-05, 3.5596999999998324e-05, 3.569399999999931e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:57:45.992" endtime="20201030 10:57:45.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.001" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.000" endtime="20201030 10:57:46.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.003" level="INFO">VALUE: [3.548700000000071e-05, 3.629200000000027e-05, 3.5639000000000504e-05, 3.5888999999997284e-05, 3.597200000000217e-05, 3.5389000000000254e-05, 3.5596999999998324e-05, 3.569399999999931e-05, 3.570799999999888e-05, 3.5597000000001794e-05, 3.569499999999878e-05, 3.543099999999896e-05, 3.552799999999995e-05, 3.5639000000000504e-05, 3.543100000000243e-05, 3.547200000000167e-05, 3.567999999999974e-05, 3.5653000000000074e-05, 3.5625000000000934e-05, 3.570900000000182e-05, 3.5666999999999643e-05, 3.572299999999792e-05, 3.569499999999878e-05, 3.545900000000157e-05, 3.576400000000063e-05, 3.583399999999848e-05, 3.592999999999999e-05, 3.554199999999952e-05, 3.576400000000063e-05, 3.600000000000131e-05, 3.559800000000127e-05, 3.606999999999916e-05, 3.590199999999738e-05, 3.568000000000321e-05, 3.5818999999999435e-05, 3.56520000000006e-05, 3.5639000000000504e-05, 3.569399999999931e-05, 3.5777000000000725e-05, 3.594399999999956e-05, 3.594399999999956e-05, 3.5903000000000324e-05, 3.597299999999817e-05, 3.579199999999977e-05, 3.547200000000167e-05, 3.5666999999999643e-05, 3.574999999999759e-05, 3.598700000000121e-05, 3.601400000000088e-05, 3.570799999999888e-05]</msg>
<status status="PASS" starttime="20201030 10:57:46.002" endtime="20201030 10:57:46.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.997" endtime="20201030 10:57:46.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.008" endtime="20201030 10:57:46.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.007" endtime="20201030 10:57:46.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.005" endtime="20201030 10:57:46.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.650" endtime="20201030 10:57:46.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.650" endtime="20201030 10:57:46.029"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.037" endtime="20201030 10:57:46.052"></status>
</kw>
<msg timestamp="20201030 10:57:46.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.036" endtime="20201030 10:57:46.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.054" endtime="20201030 10:57:46.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.056" endtime="20201030 10:57:46.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.033" endtime="20201030 10:57:46.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.031" endtime="20201030 10:57:46.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.065" endtime="20201030 10:57:46.352"></status>
</kw>
<msg timestamp="20201030 10:57:46.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.064" endtime="20201030 10:57:46.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.356" endtime="20201030 10:57:46.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.364" endtime="20201030 10:57:46.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.061" endtime="20201030 10:57:46.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.059" endtime="20201030 10:57:46.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.371" level="INFO">${RESULT} = [{'diff': 3.711200000000234e-05}, {'diff': 3.7333000000000505e-05}, {'diff': 3.6667000000000644e-05}, {'diff': 3.6916999999997424e-05}, {'diff': 3.649999999999834e-05}, {'diff': 3.680599999999687e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:46.368" endtime="20201030 10:57:46.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:46.375" level="INFO">${ACCURACY} = {'diff': [3.711200000000234e-05, 3.7333000000000505e-05, 3.6667000000000644e-05, 3.6916999999997424e-05, 3.649999999999834e-05, 3.680599999999687e-05, 3.669400000000031e-05, 3.656999999999966e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 10:57:46.372" endtime="20201030 10:57:46.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.379" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.378" endtime="20201030 10:57:46.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.382" level="INFO">VALUE: [3.711200000000234e-05, 3.7333000000000505e-05, 3.6667000000000644e-05, 3.6916999999997424e-05, 3.649999999999834e-05, 3.680599999999687e-05, 3.669400000000031e-05, 3.656999999999966e-05, 3.6430999999999963e-05, 3.64589999999991e-05, 3.6889000000001754e-05, 3.656999999999966e-05, 3.6667000000000644e-05, 3.698599999999927e-05, 3.679200000000077e-05, 3.652800000000095e-05, 3.676399999999816e-05, 3.701399999999841e-05, 3.6554999999997145e-05, 3.6931000000000463e-05, 3.65979999999988e-05, 3.6903000000001324e-05, 3.67780000000012e-05, 3.6653000000001074e-05, 3.6652999999997604e-05, 3.69719999999997e-05, 3.693000000000099e-05, 3.648599999999877e-05, 3.6762999999998686e-05, 3.6833000000000005e-05, 3.666600000000117e-05, 3.676399999999816e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.650000000000181e-05, 3.641600000000092e-05, 3.6860999999999144e-05, 3.698599999999927e-05, 3.698599999999927e-05, 3.6569000000000185e-05, 3.672199999999945e-05, 3.6860999999999144e-05, 3.6638999999998034e-05, 3.6624999999998464e-05, 3.6819000000000435e-05, 3.680600000000034e-05, 3.645799999999963e-05, 3.650000000000181e-05, 3.67780000000012e-05, 3.669499999999978e-05]</msg>
<status status="PASS" starttime="20201030 10:57:46.381" endtime="20201030 10:57:46.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.376" endtime="20201030 10:57:46.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.387" endtime="20201030 10:57:46.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.385" endtime="20201030 10:57:46.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.384" endtime="20201030 10:57:46.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.030" endtime="20201030 10:57:46.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.029" endtime="20201030 10:57:46.407"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.416" endtime="20201030 10:57:46.433"></status>
</kw>
<msg timestamp="20201030 10:57:46.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.415" endtime="20201030 10:57:46.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.435" endtime="20201030 10:57:46.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.437" endtime="20201030 10:57:46.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.412" endtime="20201030 10:57:46.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.410" endtime="20201030 10:57:46.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.446" endtime="20201030 10:57:46.732"></status>
</kw>
<msg timestamp="20201030 10:57:46.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.445" endtime="20201030 10:57:46.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.736" endtime="20201030 10:57:46.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.744" endtime="20201030 10:57:46.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.442" endtime="20201030 10:57:46.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.440" endtime="20201030 10:57:46.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.751" level="INFO">${RESULT} = [{'diff': 3.8152999999999104e-05}, {'diff': 3.823600000000052e-05}, {'diff': 3.766600000000217e-05}, {'diff': 3.7860999999996675e-05}, {'diff': 3.7902999999998854e-05}, {'diff': 3.793000000000199e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:46.748" endtime="20201030 10:57:46.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:46.755" level="INFO">${ACCURACY} = {'diff': [3.8152999999999104e-05, 3.823600000000052e-05, 3.766600000000217e-05, 3.7860999999996675e-05, 3.7902999999998854e-05, 3.793000000000199e-05, 3.74720000000002e-05, 3.7931000000001464e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 10:57:46.752" endtime="20201030 10:57:46.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.759" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.758" endtime="20201030 10:57:46.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.762" level="INFO">VALUE: [3.8152999999999104e-05, 3.823600000000052e-05, 3.766600000000217e-05, 3.7860999999996675e-05, 3.7902999999998854e-05, 3.793000000000199e-05, 3.74720000000002e-05, 3.7931000000001464e-05, 3.7610999999999895e-05, 3.7624999999999464e-05, 3.770800000000088e-05, 3.799999999999984e-05, 3.7888999999999284e-05, 3.7874999999999714e-05, 3.797199999999723e-05, 3.772200000000045e-05, 3.755600000000109e-05, 3.801399999999941e-05, 3.748599999999977e-05, 3.769399999999784e-05, 3.7638999999999034e-05, 3.7653000000002074e-05, 3.784800000000005e-05, 3.7861000000000145e-05, 3.7638999999999034e-05, 3.769400000000131e-05, 3.7555000000001615e-05, 3.7695000000000783e-05, 3.769399999999784e-05, 3.791599999999895e-05, 3.749999999999934e-05, 3.799999999999984e-05, 3.7916999999998424e-05, 3.799999999999984e-05, 3.7790999999998826e-05, 3.7931000000001464e-05, 3.7554999999998145e-05, 3.7819000000001435e-05, 3.780600000000134e-05, 3.754199999999805e-05, 3.795800000000113e-05, 3.75979999999998e-05, 3.776399999999916e-05, 3.801400000000288e-05, 3.780600000000134e-05, 3.804200000000202e-05, 3.801399999999941e-05, 3.7874999999999714e-05, 3.755600000000109e-05, 3.752799999999848e-05]</msg>
<status status="PASS" starttime="20201030 10:57:46.760" endtime="20201030 10:57:46.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.756" endtime="20201030 10:57:46.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.768" endtime="20201030 10:57:46.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.766" endtime="20201030 10:57:46.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.765" endtime="20201030 10:57:46.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.408" endtime="20201030 10:57:46.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.408" endtime="20201030 10:57:46.788"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.797" endtime="20201030 10:57:46.813"></status>
</kw>
<msg timestamp="20201030 10:57:46.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.795" endtime="20201030 10:57:46.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.815" endtime="20201030 10:57:46.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.817" endtime="20201030 10:57:46.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.793" endtime="20201030 10:57:46.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.791" endtime="20201030 10:57:46.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.826" endtime="20201030 10:57:47.111"></status>
</kw>
<msg timestamp="20201030 10:57:47.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021529528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021568278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.824" endtime="20201030 10:57:47.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021529528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021568278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.116" endtime="20201030 10:57:47.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.124" endtime="20201030 10:57:47.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.822" endtime="20201030 10:57:47.126"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.820" endtime="20201030 10:57:47.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.130" level="INFO">${RESULT} = [{'diff': 3.875000000000059e-05}, {'diff': 3.845800000000163e-05}, {'diff': 3.844399999999859e-05}, {'diff': 3.8902999999999854e-05}, {'diff': 3.844400000000206e-05}, {'diff': 3.850000000000034e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:47.127" endtime="20201030 10:57:47.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:47.135" level="INFO">${ACCURACY} = {'diff': [3.875000000000059e-05, 3.845800000000163e-05, 3.844399999999859e-05, 3.8902999999999854e-05, 3.844400000000206e-05, 3.850000000000034e-05, 3.873599999999755e-05, 3.869400000000231e-05, 3.892...</msg>
<status status="PASS" starttime="20201030 10:57:47.131" endtime="20201030 10:57:47.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.140" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 10:57:47.139" endtime="20201030 10:57:47.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.142" level="INFO">VALUE: [3.875000000000059e-05, 3.845800000000163e-05, 3.844399999999859e-05, 3.8902999999999854e-05, 3.844400000000206e-05, 3.850000000000034e-05, 3.873599999999755e-05, 3.869400000000231e-05, 3.892999999999952e-05, 3.875000000000059e-05, 3.8847000000001575e-05, 3.855599999999862e-05, 3.8625000000000465e-05, 3.8666999999999174e-05, 3.8875000000000715e-05, 3.8861000000001145e-05, 3.880599999999887e-05, 3.880599999999887e-05, 3.894399999999909e-05, 3.875000000000059e-05, 3.8958999999998134e-05, 3.8790999999999826e-05, 3.851399999999991e-05, 3.8430999999998494e-05, 3.900000000000084e-05, 3.875000000000059e-05, 3.905599999999912e-05, 3.876400000000016e-05, 3.8930999999998994e-05, 3.8458999999997634e-05, 3.8625000000000465e-05, 3.900000000000084e-05, 3.852799999999948e-05, 3.880600000000234e-05, 3.8680999999998744e-05, 3.8458999999997634e-05, 3.8527000000000006e-05, 3.8818999999998965e-05, 3.842999999999902e-05, 3.894400000000256e-05, 3.8513000000000436e-05, 3.873599999999755e-05, 3.8611000000000895e-05, 3.905600000000259e-05, 3.8611000000000895e-05, 3.8639000000000034e-05, 3.870799999999841e-05, 3.897199999999823e-05, 3.873600000000102e-05, 3.8582999999998285e-05]</msg>
<status status="PASS" starttime="20201030 10:57:47.141" endtime="20201030 10:57:47.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.136" endtime="20201030 10:57:47.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.147" endtime="20201030 10:57:47.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.145" endtime="20201030 10:57:47.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.144" endtime="20201030 10:57:47.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.789" endtime="20201030 10:57:47.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.789" endtime="20201030 10:57:47.168"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.176" endtime="20201030 10:57:47.192"></status>
</kw>
<msg timestamp="20201030 10:57:47.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.175" endtime="20201030 10:57:47.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.194" endtime="20201030 10:57:47.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.196" endtime="20201030 10:57:47.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.172" endtime="20201030 10:57:47.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.170" endtime="20201030 10:57:47.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.205" endtime="20201030 10:57:47.491"></status>
</kw>
<msg timestamp="20201030 10:57:47.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.204" endtime="20201030 10:57:47.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.495" endtime="20201030 10:57:47.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.503" endtime="20201030 10:57:47.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.201" endtime="20201030 10:57:47.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.199" endtime="20201030 10:57:47.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.509" level="INFO">${RESULT} = [{'diff': 4.009799999999883e-05}, {'diff': 3.94720000000022e-05}, {'diff': 3.948600000000177e-05}, {'diff': 3.998600000000227e-05}, {'diff': 3.951400000000091e-05}, {'diff': 3.995799999999966e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:47.506" endtime="20201030 10:57:47.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:47.513" level="INFO">${ACCURACY} = {'diff': [4.009799999999883e-05, 3.94720000000022e-05, 3.948600000000177e-05, 3.998600000000227e-05, 3.951400000000091e-05, 3.995799999999966e-05, 3.9832999999999535e-05, 4.0054999999997176e-05, 3.987...</msg>
<status status="PASS" starttime="20201030 10:57:47.510" endtime="20201030 10:57:47.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.518" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 10:57:47.517" endtime="20201030 10:57:47.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.520" level="INFO">VALUE: [4.009799999999883e-05, 3.94720000000022e-05, 3.948600000000177e-05, 3.998600000000227e-05, 3.951400000000091e-05, 3.995799999999966e-05, 3.9832999999999535e-05, 4.0054999999997176e-05, 3.9874999999998245e-05, 3.99859999999988e-05, 3.999999999999837e-05, 3.997199999999923e-05, 3.9624999999997995e-05, 3.9847000000002575e-05, 3.9959000000002604e-05, 3.980599999999987e-05, 3.955599999999962e-05, 3.94859999999983e-05, 3.9709000000002354e-05, 3.9805000000000396e-05, 3.998600000000227e-05, 3.991600000000095e-05, 3.9430999999999494e-05, 3.968000000000027e-05, 3.995799999999966e-05, 3.9860999999998675e-05, 3.9818999999999966e-05, 3.9818999999999966e-05, 3.995799999999966e-05, 3.963800000000156e-05, 4.001400000000141e-05, 3.972199999999898e-05, 3.968000000000027e-05, 3.9860999999998675e-05, 3.9624999999997995e-05, 4.006999999999969e-05, 3.973600000000202e-05, 3.9625000000001465e-05, 3.994400000000009e-05, 3.94859999999983e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.977800000000073e-05, 4.000000000000184e-05, 3.9917000000000424e-05, 3.947199999999873e-05, 3.94859999999983e-05, 3.9624999999997995e-05, 3.9832999999999535e-05, 3.9430999999999494e-05]</msg>
<status status="PASS" starttime="20201030 10:57:47.519" endtime="20201030 10:57:47.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.514" endtime="20201030 10:57:47.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.525" endtime="20201030 10:57:47.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.524" endtime="20201030 10:57:47.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.523" endtime="20201030 10:57:47.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.169" endtime="20201030 10:57:47.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.168" endtime="20201030 10:57:47.546"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.555" endtime="20201030 10:57:47.574"></status>
</kw>
<msg timestamp="20201030 10:57:47.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.553" endtime="20201030 10:57:47.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.575" endtime="20201030 10:57:47.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.578" endtime="20201030 10:57:47.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.551" endtime="20201030 10:57:47.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.548" endtime="20201030 10:57:47.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.587" endtime="20201030 10:57:47.873"></status>
</kw>
<msg timestamp="20201030 10:57:47.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024859944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02490125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:47.585" endtime="20201030 10:57:47.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024859944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02490125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:47.877" endtime="20201030 10:57:47.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.885" endtime="20201030 10:57:47.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.583" endtime="20201030 10:57:47.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.581" endtime="20201030 10:57:47.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.891" level="INFO">${RESULT} = [{'diff': 4.130600000000137e-05}, {'diff': 4.0625000000002465e-05}, {'diff': 4.0624999999998995e-05}, {'diff': 4.070800000000041e-05}, {'diff': 4.040199999999841e-05}, {'diff': 4.0583000000000286e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:47.888" endtime="20201030 10:57:47.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:47.896" level="INFO">${ACCURACY} = {'diff': [4.130600000000137e-05, 4.0625000000002465e-05, 4.0624999999998995e-05, 4.070800000000041e-05, 4.040199999999841e-05, 4.0583000000000286e-05, 4.044400000000059e-05, 4.0639000000002035e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:57:47.892" endtime="20201030 10:57:47.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.900" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 10:57:47.899" endtime="20201030 10:57:47.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.902" level="INFO">VALUE: [4.130600000000137e-05, 4.0625000000002465e-05, 4.0624999999998995e-05, 4.070800000000041e-05, 4.040199999999841e-05, 4.0583000000000286e-05, 4.044400000000059e-05, 4.0639000000002035e-05, 4.0777000000002256e-05, 4.047199999999973e-05, 4.0638999999998565e-05, 4.051399999999844e-05, 4.052799999999801e-05, 4.1110999999999925e-05, 4.0402999999997885e-05, 4.0695000000000314e-05, 4.070800000000041e-05, 4.073600000000302e-05, 4.052799999999801e-05, 4.0944999999997095e-05, 4.0403000000001354e-05, 4.0639000000002035e-05, 4.050000000000234e-05, 4.0403000000001354e-05, 4.0417000000000924e-05, 4.0833000000000536e-05, 4.0610999999999425e-05, 4.082000000000044e-05, 4.1054999999998176e-05, 4.04859999999993e-05, 4.0638999999998565e-05, 4.0805000000001396e-05, 4.072199999999998e-05, 4.044400000000059e-05, 4.0777000000002256e-05, 4.0722999999999454e-05, 4.073599999999955e-05, 4.0888999999998815e-05, 4.0695000000000314e-05, 4.070800000000041e-05, 4.0512999999998967e-05, 4.0944999999997095e-05, 4.0610999999999425e-05, 4.044400000000059e-05, 4.0596999999999855e-05, 4.0847000000000105e-05, 4.0583000000000286e-05, 4.047199999999973e-05, 4.0652999999998135e-05, 4.095800000000066e-05]</msg>
<status status="PASS" starttime="20201030 10:57:47.901" endtime="20201030 10:57:47.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.896" endtime="20201030 10:57:47.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.908" endtime="20201030 10:57:47.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.907" endtime="20201030 10:57:47.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.906" endtime="20201030 10:57:47.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.547" endtime="20201030 10:57:47.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.546" endtime="20201030 10:57:47.929"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.937" endtime="20201030 10:57:47.952"></status>
</kw>
<msg timestamp="20201030 10:57:47.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.936" endtime="20201030 10:57:47.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.954" endtime="20201030 10:57:47.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.956" endtime="20201030 10:57:47.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.933" endtime="20201030 10:57:47.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.931" endtime="20201030 10:57:47.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.965" endtime="20201030 10:57:48.251"></status>
</kw>
<msg timestamp="20201030 10:57:48.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021480972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021522778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.964" endtime="20201030 10:57:48.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021480972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021522778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.255" endtime="20201030 10:57:48.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.264" endtime="20201030 10:57:48.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.961" endtime="20201030 10:57:48.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.959" endtime="20201030 10:57:48.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.270" level="INFO">${RESULT} = [{'diff': 4.18059999999984e-05}, {'diff': 4.166599999999923e-05}, {'diff': 4.1610999999996956e-05}, {'diff': 4.1902999999999385e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.1790999999999356e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:48.267" endtime="20201030 10:57:48.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:48.275" level="INFO">${ACCURACY} = {'diff': [4.18059999999984e-05, 4.166599999999923e-05, 4.1610999999996956e-05, 4.1902999999999385e-05, 4.201399999999994e-05, 4.1790999999999356e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.19...</msg>
<status status="PASS" starttime="20201030 10:57:48.271" endtime="20201030 10:57:48.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.279" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 10:57:48.278" endtime="20201030 10:57:48.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.282" level="INFO">VALUE: [4.18059999999984e-05, 4.166599999999923e-05, 4.1610999999996956e-05, 4.1902999999999385e-05, 4.201399999999994e-05, 4.1790999999999356e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.197199999999776e-05, 4.19860000000008e-05, 4.1596999999997386e-05, 4.193000000000252e-05, 4.175000000000012e-05, 4.1681000000001744e-05, 4.1638999999999565e-05, 4.1583000000001286e-05, 4.170799999999794e-05, 4.1902999999999385e-05, 4.172199999999751e-05, 4.175000000000012e-05, 4.1624999999999995e-05, 4.159800000000033e-05, 4.1930999999998525e-05, 4.1903000000002855e-05, 4.151399999999944e-05, 4.1931000000001994e-05, 4.1945000000001564e-05, 4.1445000000001064e-05, 4.176399999999969e-05, 4.1875000000000245e-05, 4.1930999999998525e-05, 4.1596999999997386e-05, 4.202799999999951e-05, 4.1846999999997636e-05, 4.195800000000166e-05, 4.194399999999862e-05, 4.147200000000073e-05, 4.192999999999905e-05, 4.1555000000002146e-05, 4.1818999999998496e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.191600000000295e-05, 4.145799999999769e-05, 4.1583000000001286e-05, 4.194399999999862e-05, 4.1597000000000856e-05, 4.170799999999794e-05, 4.1667000000002175e-05, 4.152799999999901e-05]</msg>
<status status="PASS" starttime="20201030 10:57:48.281" endtime="20201030 10:57:48.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.276" endtime="20201030 10:57:48.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.287" endtime="20201030 10:57:48.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.285" endtime="20201030 10:57:48.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.284" endtime="20201030 10:57:48.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.930" endtime="20201030 10:57:48.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.929" endtime="20201030 10:57:48.308"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.316" endtime="20201030 10:57:48.332"></status>
</kw>
<msg timestamp="20201030 10:57:48.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.315" endtime="20201030 10:57:48.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.334" endtime="20201030 10:57:48.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.336" endtime="20201030 10:57:48.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.312" endtime="20201030 10:57:48.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.310" endtime="20201030 10:57:48.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.345" endtime="20201030 10:57:48.632"></status>
</kw>
<msg timestamp="20201030 10:57:48.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.344" endtime="20201030 10:57:48.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.636" endtime="20201030 10:57:48.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.644" endtime="20201030 10:57:48.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.341" endtime="20201030 10:57:48.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.340" endtime="20201030 10:57:48.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.650" level="INFO">${RESULT} = [{'diff': 4.265200000000066e-05}, {'diff': 4.2680999999999275e-05}, {'diff': 4.2903000000000385e-05}, {'diff': 4.255599999999915e-05}, {'diff': 4.2903000000000385e-05}, {'diff': 4.298599999999833e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:48.647" endtime="20201030 10:57:48.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:48.655" level="INFO">${ACCURACY} = {'diff': [4.265200000000066e-05, 4.2680999999999275e-05, 4.2903000000000385e-05, 4.255599999999915e-05, 4.2903000000000385e-05, 4.298599999999833e-05, 4.258399999999829e-05, 4.259800000000133e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 10:57:48.651" endtime="20201030 10:57:48.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.659" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 10:57:48.658" endtime="20201030 10:57:48.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.661" level="INFO">VALUE: [4.265200000000066e-05, 4.2680999999999275e-05, 4.2903000000000385e-05, 4.255599999999915e-05, 4.2903000000000385e-05, 4.298599999999833e-05, 4.258399999999829e-05, 4.259800000000133e-05, 4.277800000000026e-05, 4.2639000000000565e-05, 4.2666999999999705e-05, 4.2916999999999955e-05, 4.2695000000002314e-05, 4.2875000000001245e-05, 4.2874999999997776e-05, 4.2986999999997805e-05, 4.273600000000155e-05, 4.298599999999833e-05, 4.2916999999999955e-05, 4.2582999999998816e-05, 4.2611000000001426e-05, 4.2596999999998386e-05, 4.276399999999722e-05, 4.243000000000302e-05, 4.291600000000048e-05, 4.2568999999999246e-05, 4.248599999999783e-05, 4.251400000000044e-05, 4.294399999999962e-05, 4.2847000000002106e-05, 4.273599999999808e-05, 4.2653000000000135e-05, 4.242999999999955e-05, 4.251400000000044e-05, 4.244400000000259e-05, 4.255599999999915e-05, 4.2582999999998816e-05, 4.251400000000044e-05, 4.2639000000000565e-05, 4.277800000000026e-05, 4.2875000000001245e-05, 4.2666999999999705e-05, 4.2639000000000565e-05, 4.279199999999983e-05, 4.2832999999999066e-05, 4.2903000000000385e-05, 4.2402999999999885e-05, 4.284799999999811e-05, 4.275000000000112e-05, 4.2903000000000385e-05]</msg>
<status status="PASS" starttime="20201030 10:57:48.660" endtime="20201030 10:57:48.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.655" endtime="20201030 10:57:48.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.666" endtime="20201030 10:57:48.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.665" endtime="20201030 10:57:48.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.664" endtime="20201030 10:57:48.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.308" endtime="20201030 10:57:48.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.308" endtime="20201030 10:57:48.687"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.695" endtime="20201030 10:57:48.713"></status>
</kw>
<msg timestamp="20201030 10:57:48.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.694" endtime="20201030 10:57:48.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.714" endtime="20201030 10:57:48.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.717" endtime="20201030 10:57:48.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.691" endtime="20201030 10:57:48.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.689" endtime="20201030 10:57:48.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.726" endtime="20201030 10:57:49.011"></status>
</kw>
<msg timestamp="20201030 10:57:49.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.724" endtime="20201030 10:57:49.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.015" endtime="20201030 10:57:49.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.023" endtime="20201030 10:57:49.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.722" endtime="20201030 10:57:49.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.720" endtime="20201030 10:57:49.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.030" level="INFO">${RESULT} = [{'diff': 4.426399999999872e-05}, {'diff': 4.365199999999819e-05}, {'diff': 4.34860000000023e-05}, {'diff': 4.3723000000002454e-05}, {'diff': 4.401400000000194e-05}, {'diff': 4.381999999999997e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:49.027" endtime="20201030 10:57:49.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.034" level="INFO">${ACCURACY} = {'diff': [4.426399999999872e-05, 4.365199999999819e-05, 4.34860000000023e-05, 4.3723000000002454e-05, 4.401400000000194e-05, 4.381999999999997e-05, 4.372199999999951e-05, 4.3819000000000496e-05, 4.384...</msg>
<status status="PASS" starttime="20201030 10:57:49.031" endtime="20201030 10:57:49.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.038" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.037" endtime="20201030 10:57:49.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.041" level="INFO">VALUE: [4.426399999999872e-05, 4.365199999999819e-05, 4.34860000000023e-05, 4.3723000000002454e-05, 4.401400000000194e-05, 4.381999999999997e-05, 4.372199999999951e-05, 4.3819000000000496e-05, 4.384799999999911e-05, 4.397199999999976e-05, 4.3805000000000927e-05, 4.3819000000000496e-05, 4.3860999999999206e-05, 4.3611000000002426e-05, 4.36800000000008e-05, 4.3847000000003106e-05, 4.351399999999797e-05, 4.3596999999999386e-05, 4.3638999999998096e-05, 4.3846999999999636e-05, 4.3596999999999386e-05, 4.398599999999933e-05, 4.352800000000101e-05, 4.3846999999999636e-05, 4.347200000000273e-05, 4.3569000000000246e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.3666999999997236e-05, 4.376399999999822e-05, 4.3653000000001135e-05, 4.377800000000126e-05, 4.401399999999847e-05, 4.3846999999999636e-05, 4.3722999999998985e-05, 4.347200000000273e-05, 4.4083000000000316e-05, 4.3639000000001565e-05, 4.36939999999969e-05, 4.38060000000004e-05, 4.366599999999776e-05, 4.38060000000004e-05, 4.366600000000123e-05, 4.377700000000179e-05, 4.34860000000023e-05, 4.36800000000008e-05, 4.3569000000000246e-05, 4.366599999999776e-05, 4.3624999999998526e-05, 4.356999999999972e-05]</msg>
<status status="PASS" starttime="20201030 10:57:49.039" endtime="20201030 10:57:49.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.035" endtime="20201030 10:57:49.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.046" endtime="20201030 10:57:49.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.045" endtime="20201030 10:57:49.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.044" endtime="20201030 10:57:49.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.688" endtime="20201030 10:57:49.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.687" endtime="20201030 10:57:49.067"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.076" endtime="20201030 10:57:49.092"></status>
</kw>
<msg timestamp="20201030 10:57:49.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.074" endtime="20201030 10:57:49.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.093" endtime="20201030 10:57:49.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.096" endtime="20201030 10:57:49.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.072" endtime="20201030 10:57:49.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.070" endtime="20201030 10:57:49.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.105" endtime="20201030 10:57:49.391"></status>
</kw>
<msg timestamp="20201030 10:57:49.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021542514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.103" endtime="20201030 10:57:49.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021542514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.395" endtime="20201030 10:57:49.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.403" endtime="20201030 10:57:49.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.101" endtime="20201030 10:57:49.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.099" endtime="20201030 10:57:49.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.409" level="INFO">${RESULT} = [{'diff': 4.48329999999976e-05}, {'diff': 4.441599999999851e-05}, {'diff': 4.494399999999815e-05}, {'diff': 4.4597000000000386e-05}, {'diff': 4.502799999999904e-05}, {'diff': 4.4833000000001066e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:49.406" endtime="20201030 10:57:49.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.414" level="INFO">${ACCURACY} = {'diff': [4.48329999999976e-05, 4.441599999999851e-05, 4.494399999999815e-05, 4.4597000000000386e-05, 4.502799999999904e-05, 4.4833000000001066e-05, 4.44999999999994e-05, 4.4652999999998666e-05, 4.502...</msg>
<status status="PASS" starttime="20201030 10:57:49.410" endtime="20201030 10:57:49.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.419" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.418" endtime="20201030 10:57:49.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.421" level="INFO">VALUE: [4.48329999999976e-05, 4.441599999999851e-05, 4.494399999999815e-05, 4.4597000000000386e-05, 4.502799999999904e-05, 4.4833000000001066e-05, 4.44999999999994e-05, 4.4652999999998666e-05, 4.502799999999904e-05, 4.454199999999811e-05, 4.469400000000137e-05, 4.4417000000001455e-05, 4.451399999999897e-05, 4.4638999999999096e-05, 4.48329999999976e-05, 4.448599999999983e-05, 4.501399999999947e-05, 4.452799999999854e-05, 4.447200000000026e-05, 4.4903000000002385e-05, 4.455599999999768e-05, 4.458400000000029e-05, 4.4944999999997626e-05, 4.4459000000000165e-05, 4.4459000000000165e-05, 4.461199999999943e-05, 4.4709000000000415e-05, 4.476300000000322e-05, 4.4402999999998416e-05, 4.482000000000097e-05, 4.486199999999968e-05, 4.48329999999976e-05, 4.4597000000000386e-05, 4.444399999999765e-05, 4.49999999999999e-05, 4.456899999999778e-05, 4.4847000000000636e-05, 4.475000000000312e-05, 4.46939999999979e-05, 4.447200000000026e-05, 4.447200000000026e-05, 4.4874999999999776e-05, 4.4903000000002385e-05, 4.495799999999772e-05, 4.4652999999998666e-05, 4.459699999999692e-05, 4.4888999999999346e-05, 4.482000000000097e-05, 4.470799999999747e-05, 4.4902999999998916e-05]</msg>
<status status="PASS" starttime="20201030 10:57:49.420" endtime="20201030 10:57:49.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.415" endtime="20201030 10:57:49.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.426" endtime="20201030 10:57:49.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.425" endtime="20201030 10:57:49.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.424" endtime="20201030 10:57:49.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.068" endtime="20201030 10:57:49.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.067" endtime="20201030 10:57:49.447"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.456" endtime="20201030 10:57:49.472"></status>
</kw>
<msg timestamp="20201030 10:57:49.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.454" endtime="20201030 10:57:49.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.473" endtime="20201030 10:57:49.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.476" endtime="20201030 10:57:49.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.452" endtime="20201030 10:57:49.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.450" endtime="20201030 10:57:49.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.485" endtime="20201030 10:57:49.770"></status>
</kw>
<msg timestamp="20201030 10:57:49.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021696375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.483" endtime="20201030 10:57:49.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021696375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.775" endtime="20201030 10:57:49.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.783" endtime="20201030 10:57:49.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.481" endtime="20201030 10:57:49.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.479" endtime="20201030 10:57:49.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.789" level="INFO">${RESULT} = [{'diff': 4.594399999999915e-05}, {'diff': 4.637499999999781e-05}, {'diff': 4.563800000000062e-05}, {'diff': 4.556899999999878e-05}, {'diff': 4.590200000000044e-05}, {'diff': 4.573600000000108e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:49.786" endtime="20201030 10:57:49.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.793" level="INFO">${ACCURACY} = {'diff': [4.594399999999915e-05, 4.637499999999781e-05, 4.563800000000062e-05, 4.556899999999878e-05, 4.590200000000044e-05, 4.573600000000108e-05, 4.544399999999865e-05, 4.570799999999847e-05, 4.5805...</msg>
<status status="PASS" starttime="20201030 10:57:49.790" endtime="20201030 10:57:49.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.798" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.797" endtime="20201030 10:57:49.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.800" level="INFO">VALUE: [4.594399999999915e-05, 4.637499999999781e-05, 4.563800000000062e-05, 4.556899999999878e-05, 4.590200000000044e-05, 4.573600000000108e-05, 4.544399999999865e-05, 4.570799999999847e-05, 4.580599999999893e-05, 4.5875000000000776e-05, 4.587499999999731e-05, 4.5847000000001636e-05, 4.548600000000083e-05, 4.552700000000007e-05, 4.544400000000212e-05, 4.584699999999817e-05, 4.581899999999903e-05, 4.544400000000212e-05, 4.551399999999997e-05, 4.60000000000009e-05, 4.555600000000215e-05, 4.55000000000004e-05, 4.572199999999804e-05, 4.5889000000000346e-05, 4.5944999999998626e-05, 4.5694999999998376e-05, 4.5889000000000346e-05, 4.572200000000151e-05, 4.5472999999997266e-05, 4.5931000000002525e-05, 4.5430999999998556e-05, 4.5944999999998626e-05, 4.554200000000258e-05, 4.5666999999999236e-05, 4.576400000000022e-05, 4.567999999999933e-05, 4.548600000000083e-05, 4.579099999999989e-05, 4.5652999999999666e-05, 4.579099999999989e-05, 4.5639000000000096e-05, 4.549999999999693e-05, 4.55000000000004e-05, 4.572199999999804e-05, 4.5945000000002095e-05, 4.55000000000004e-05, 4.576400000000022e-05, 4.567999999999933e-05, 4.5875000000000776e-05, 4.5625000000000526e-05]</msg>
<status status="PASS" starttime="20201030 10:57:49.799" endtime="20201030 10:57:49.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.794" endtime="20201030 10:57:49.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.809" endtime="20201030 10:57:49.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.807" endtime="20201030 10:57:49.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.806" endtime="20201030 10:57:49.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.448" endtime="20201030 10:57:49.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.447" endtime="20201030 10:57:49.829"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.838" endtime="20201030 10:57:49.855"></status>
</kw>
<msg timestamp="20201030 10:57:49.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.836" endtime="20201030 10:57:49.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.857" endtime="20201030 10:57:49.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.859" endtime="20201030 10:57:49.861"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.834" endtime="20201030 10:57:49.861"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.832" endtime="20201030 10:57:49.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.868" endtime="20201030 10:57:50.154"></status>
</kw>
<msg timestamp="20201030 10:57:50.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.866" endtime="20201030 10:57:50.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.158" endtime="20201030 10:57:50.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.167" endtime="20201030 10:57:50.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.864" endtime="20201030 10:57:50.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.862" endtime="20201030 10:57:50.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.173" level="INFO">${RESULT} = [{'diff': 4.7389000000001846e-05}, {'diff': 4.670799999999947e-05}, {'diff': 4.661099999999849e-05}, {'diff': 4.679200000000036e-05}, {'diff': 4.686099999999874e-05}, {'diff': 4.654200000000011e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:50.170" endtime="20201030 10:57:50.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:50.177" level="INFO">${ACCURACY} = {'diff': [4.7389000000001846e-05, 4.670799999999947e-05, 4.661099999999849e-05, 4.679200000000036e-05, 4.686099999999874e-05, 4.654200000000011e-05, 4.672199999999904e-05, 4.6625000000001526e-05, 4.66...</msg>
<status status="PASS" starttime="20201030 10:57:50.174" endtime="20201030 10:57:50.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.182" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 10:57:50.181" endtime="20201030 10:57:50.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.184" level="INFO">VALUE: [4.7389000000001846e-05, 4.670799999999947e-05, 4.661099999999849e-05, 4.679200000000036e-05, 4.686099999999874e-05, 4.654200000000011e-05, 4.672199999999904e-05, 4.6625000000001526e-05, 4.665200000000119e-05, 4.6875000000001776e-05, 4.6959000000002665e-05, 4.661200000000143e-05, 4.686200000000168e-05, 4.677700000000132e-05, 4.645800000000269e-05, 4.698600000000233e-05, 4.695799999999972e-05, 4.681900000000003e-05, 4.668000000000033e-05, 4.643000000000008e-05, 4.6889000000001346e-05, 4.6597000000002387e-05, 4.657000000000272e-05, 4.658299999999935e-05, 4.680500000000046e-05, 4.701400000000147e-05, 4.697199999999929e-05, 4.68329999999996e-05, 4.6889000000001346e-05, 4.676399999999775e-05, 4.652799999999707e-05, 4.662499999999806e-05, 4.6875000000001776e-05, 4.640299999999695e-05, 4.6931000000000056e-05, 4.6667000000000236e-05, 4.6389000000000846e-05, 4.6875000000001776e-05, 4.68199999999995e-05, 4.6708999999998946e-05, 4.644399999999965e-05, 4.6903000000000916e-05, 4.673599999999861e-05, 4.681900000000003e-05, 4.6944999999999626e-05, 4.704199999999714e-05, 4.675000000000165e-05, 4.704199999999714e-05, 4.673599999999861e-05, 4.697199999999929e-05]</msg>
<status status="PASS" starttime="20201030 10:57:50.183" endtime="20201030 10:57:50.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.178" endtime="20201030 10:57:50.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.190" endtime="20201030 10:57:50.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.188" endtime="20201030 10:57:50.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.187" endtime="20201030 10:57:50.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.830" endtime="20201030 10:57:50.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.830" endtime="20201030 10:57:50.211"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.219" endtime="20201030 10:57:50.236"></status>
</kw>
<msg timestamp="20201030 10:57:50.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.218" endtime="20201030 10:57:50.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.237" endtime="20201030 10:57:50.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.240" endtime="20201030 10:57:50.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.215" endtime="20201030 10:57:50.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.213" endtime="20201030 10:57:50.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.248" endtime="20201030 10:57:50.533"></status>
</kw>
<msg timestamp="20201030 10:57:50.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021665681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.247" endtime="20201030 10:57:50.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021665681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.538" endtime="20201030 10:57:50.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.546" endtime="20201030 10:57:50.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.244" endtime="20201030 10:57:50.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.243" endtime="20201030 10:57:50.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.552" level="INFO">${RESULT} = [{'diff': 4.8013999999999e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.754200000000111e-05}, {'diff': 4.784700000000017e-05}, {'diff': 4.762499999999906e-05}, {'diff': 4.754099999999817e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:50.549" endtime="20201030 10:57:50.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:50.557" level="INFO">${ACCURACY} = {'diff': [4.8013999999999e-05, 4.748599999999936e-05, 4.754200000000111e-05, 4.784700000000017e-05, 4.762499999999906e-05, 4.754099999999817e-05, 4.75000000000024e-05, 4.795800000000072e-05, 4.7972000...</msg>
<status status="PASS" starttime="20201030 10:57:50.553" endtime="20201030 10:57:50.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.562" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 10:57:50.561" endtime="20201030 10:57:50.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.564" level="INFO">VALUE: [4.8013999999999e-05, 4.748599999999936e-05, 4.754200000000111e-05, 4.784700000000017e-05, 4.762499999999906e-05, 4.754099999999817e-05, 4.75000000000024e-05, 4.795800000000072e-05, 4.797200000000029e-05, 4.780600000000093e-05, 4.745800000000022e-05, 4.75000000000024e-05, 4.783299999999713e-05, 4.781900000000103e-05, 4.788899999999888e-05, 4.807000000000075e-05, 4.748600000000283e-05, 4.757000000000025e-05, 4.748599999999936e-05, 4.7917000000001486e-05, 4.776399999999875e-05, 4.757000000000025e-05, 4.790299999999845e-05, 4.75000000000024e-05, 4.774999999999918e-05, 4.762499999999906e-05, 4.7736999999999086e-05, 4.759699999999992e-05, 4.780599999999746e-05, 4.763799999999915e-05, 4.80269999999991e-05, 4.773599999999961e-05, 4.797200000000029e-05, 4.745800000000022e-05, 4.75139999999985e-05, 4.7625000000002526e-05, 4.797200000000029e-05, 4.787499999999931e-05, 4.780500000000146e-05, 4.772200000000004e-05, 4.767999999999786e-05, 4.745800000000022e-05, 4.768000000000133e-05, 4.7681000000000806e-05, 4.777799999999832e-05, 4.758300000000035e-05, 4.7917000000001486e-05, 4.804199999999814e-05, 4.75139999999985e-05, 4.787499999999931e-05]</msg>
<status status="PASS" starttime="20201030 10:57:50.563" endtime="20201030 10:57:50.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.558" endtime="20201030 10:57:50.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.569" endtime="20201030 10:57:50.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.567" endtime="20201030 10:57:50.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.566" endtime="20201030 10:57:50.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.211" endtime="20201030 10:57:50.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.211" endtime="20201030 10:57:50.590"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.598" endtime="20201030 10:57:50.615"></status>
</kw>
<msg timestamp="20201030 10:57:50.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.597" endtime="20201030 10:57:50.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.616" endtime="20201030 10:57:50.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.619" endtime="20201030 10:57:50.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.594" endtime="20201030 10:57:50.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.592" endtime="20201030 10:57:50.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.628" endtime="20201030 10:57:50.913"></status>
</kw>
<msg timestamp="20201030 10:57:50.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.626" endtime="20201030 10:57:50.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.918" endtime="20201030 10:57:50.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.926" endtime="20201030 10:57:50.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.623" endtime="20201030 10:57:50.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.622" endtime="20201030 10:57:50.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.932" level="INFO">${RESULT} = [{'diff': 4.917999999999936e-05}, {'diff': 4.869399999999843e-05}, {'diff': 4.873600000000061e-05}, {'diff': 4.854199999999864e-05}, {'diff': 4.8945000000001626e-05}, {'diff': 4.881999999999803e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:50.929" endtime="20201030 10:57:50.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:50.936" level="INFO">${ACCURACY} = {'diff': [4.917999999999936e-05, 4.869399999999843e-05, 4.873600000000061e-05, 4.854199999999864e-05, 4.8945000000001626e-05, 4.881999999999803e-05, 4.894399999999868e-05, 4.852799999999907e-05, 4.887...</msg>
<status status="PASS" starttime="20201030 10:57:50.933" endtime="20201030 10:57:50.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.941" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 10:57:50.940" endtime="20201030 10:57:50.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.943" level="INFO">VALUE: [4.917999999999936e-05, 4.869399999999843e-05, 4.873600000000061e-05, 4.854199999999864e-05, 4.8945000000001626e-05, 4.881999999999803e-05, 4.894399999999868e-05, 4.852799999999907e-05, 4.887500000000031e-05, 4.887500000000031e-05, 4.8459000000000696e-05, 4.893099999999859e-05, 4.879199999999889e-05, 4.8723000000000516e-05, 4.879099999999942e-05, 4.895800000000172e-05, 4.861100000000049e-05, 4.897200000000129e-05, 4.884700000000117e-05, 4.893000000000258e-05, 4.869399999999843e-05, 4.8639000000003096e-05, 4.848600000000036e-05, 4.859699999999745e-05, 4.880499999999899e-05, 4.881899999999856e-05, 4.895800000000172e-05, 4.861100000000049e-05, 4.8431000000001556e-05, 4.854199999999864e-05, 4.848600000000036e-05, 4.86529999999992e-05, 4.85139999999995e-05, 4.890299999999945e-05, 4.854200000000211e-05, 4.877799999999932e-05, 4.859800000000039e-05, 4.855600000000168e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.861100000000049e-05, 4.907000000000175e-05, 4.86940000000019e-05, 4.866699999999877e-05, 4.866699999999877e-05, 4.8945000000001626e-05, 4.898600000000086e-05, 4.847200000000079e-05, 4.857000000000125e-05, 4.893000000000258e-05]</msg>
<status status="PASS" starttime="20201030 10:57:50.942" endtime="20201030 10:57:50.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.937" endtime="20201030 10:57:50.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.948" endtime="20201030 10:57:50.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.947" endtime="20201030 10:57:50.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.945" endtime="20201030 10:57:50.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.590" endtime="20201030 10:57:50.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.590" endtime="20201030 10:57:50.969"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.977" endtime="20201030 10:57:50.996"></status>
</kw>
<msg timestamp="20201030 10:57:50.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.976" endtime="20201030 10:57:50.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.998" endtime="20201030 10:57:51.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.000" endtime="20201030 10:57:51.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.973" endtime="20201030 10:57:51.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.971" endtime="20201030 10:57:51.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.009" endtime="20201030 10:57:51.295"></status>
</kw>
<msg timestamp="20201030 10:57:51.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024863361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.008" endtime="20201030 10:57:51.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024863361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024912861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.299" endtime="20201030 10:57:51.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.307" endtime="20201030 10:57:51.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.005" endtime="20201030 10:57:51.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.003" endtime="20201030 10:57:51.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.314" level="INFO">${RESULT} = [{'diff': 4.950000000000093e-05}, {'diff': 4.9472999999997797e-05}, {'diff': 4.95140000000005e-05}, {'diff': 4.993099999999959e-05}, {'diff': 4.9709000000001946e-05}, {'diff': 4.969399999999943e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:51.310" endtime="20201030 10:57:51.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.318" level="INFO">${ACCURACY} = {'diff': [4.950000000000093e-05, 4.9472999999997797e-05, 4.95140000000005e-05, 4.993099999999959e-05, 4.9709000000001946e-05, 4.969399999999943e-05, 4.993000000000011e-05, 4.979100000000042e-05, 4.997...</msg>
<status status="PASS" starttime="20201030 10:57:51.315" endtime="20201030 10:57:51.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.322" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.321" endtime="20201030 10:57:51.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.325" level="INFO">VALUE: [4.950000000000093e-05, 4.9472999999997797e-05, 4.95140000000005e-05, 4.993099999999959e-05, 4.9709000000001946e-05, 4.969399999999943e-05, 4.993000000000011e-05, 4.979100000000042e-05, 4.997200000000229e-05, 4.981900000000303e-05, 4.967999999999986e-05, 4.991600000000054e-05, 4.967999999999986e-05, 4.974999999999771e-05, 4.972199999999857e-05, 4.975000000000118e-05, 4.943099999999909e-05, 4.947199999999832e-05, 4.951399999999703e-05, 4.994399999999968e-05, 4.976400000000075e-05, 4.98330000000026e-05, 4.970899999999848e-05, 4.961099999999802e-05, 4.943099999999909e-05, 4.968099999999934e-05, 4.972200000000204e-05, 4.979199999999989e-05, 5.0014000000001e-05, 4.947199999999832e-05, 4.9931000000003056e-05, 4.987500000000131e-05, 4.986100000000174e-05, 4.975000000000118e-05, 4.981899999999956e-05, 4.9972999999998297e-05, 4.979199999999989e-05, 4.945800000000222e-05, 4.993000000000011e-05, 4.972200000000204e-05, 4.950000000000093e-05, 4.98469999999987e-05, 4.969399999999943e-05, 4.945800000000222e-05, 4.976400000000075e-05, 4.950000000000093e-05, 4.955499999999974e-05, 4.965200000000072e-05, 4.945800000000222e-05, 4.987500000000131e-05]</msg>
<status status="PASS" starttime="20201030 10:57:51.323" endtime="20201030 10:57:51.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.319" endtime="20201030 10:57:51.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.331" endtime="20201030 10:57:51.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.329" endtime="20201030 10:57:51.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.328" endtime="20201030 10:57:51.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.970" endtime="20201030 10:57:51.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.969" endtime="20201030 10:57:51.351"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.360" endtime="20201030 10:57:51.376"></status>
</kw>
<msg timestamp="20201030 10:57:51.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.358" endtime="20201030 10:57:51.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.378" endtime="20201030 10:57:51.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.380" endtime="20201030 10:57:51.382"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.356" endtime="20201030 10:57:51.382"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.354" endtime="20201030 10:57:51.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.389" endtime="20201030 10:57:51.676"></status>
</kw>
<msg timestamp="20201030 10:57:51.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021447542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021498069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.388" endtime="20201030 10:57:51.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021447542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021498069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.680" endtime="20201030 10:57:51.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.688" endtime="20201030 10:57:51.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.385" endtime="20201030 10:57:51.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.383" endtime="20201030 10:57:51.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.695" level="INFO">${RESULT} = [{'diff': 5.05270000000016e-05}, {'diff': 5.119400000000093e-05}, {'diff': 5.043100000000009e-05}, {'diff': 5.043100000000009e-05}, {'diff': 5.087499999999884e-05}, {'diff': 5.087499999999884e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:51.691" endtime="20201030 10:57:51.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.699" level="INFO">${ACCURACY} = {'diff': [5.05270000000016e-05, 5.119400000000093e-05, 5.043100000000009e-05, 5.043100000000009e-05, 5.087499999999884e-05, 5.087499999999884e-05, 5.069499999999991e-05, 5.044499999999966e-05, 5.05699...</msg>
<status status="PASS" starttime="20201030 10:57:51.696" endtime="20201030 10:57:51.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.704" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.703" endtime="20201030 10:57:51.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.706" level="INFO">VALUE: [5.05270000000016e-05, 5.119400000000093e-05, 5.043100000000009e-05, 5.043100000000009e-05, 5.087499999999884e-05, 5.087499999999884e-05, 5.069499999999991e-05, 5.044499999999966e-05, 5.056999999999978e-05, 5.048599999999889e-05, 5.0902000000001973e-05, 5.08339999999996e-05, 5.049999999999846e-05, 5.072299999999905e-05, 5.087499999999884e-05, 5.062499999999859e-05, 5.05140000000015e-05, 5.041600000000104e-05, 5.080500000000099e-05, 5.058299999999988e-05, 5.073600000000261e-05, 5.05140000000015e-05, 5.086099999999927e-05, 5.061099999999902e-05, 5.051399999999803e-05, 5.08469999999997e-05, 5.077800000000132e-05, 5.069400000000043e-05, 5.090300000000145e-05, 5.045799999999975e-05, 5.086099999999927e-05, 5.076399999999828e-05, 5.045799999999975e-05, 5.044400000000018e-05, 5.059699999999945e-05, 5.090300000000145e-05, 5.050000000000193e-05, 5.094500000000016e-05, 5.073600000000261e-05, 5.077800000000132e-05, 5.068100000000034e-05, 5.043100000000009e-05, 5.062499999999859e-05, 5.058399999999935e-05, 5.066700000000077e-05, 5.076400000000175e-05, 5.091600000000154e-05, 5.080499999999752e-05, 5.080499999999752e-05, 5.051299999999856e-05]</msg>
<status status="PASS" starttime="20201030 10:57:51.705" endtime="20201030 10:57:51.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.700" endtime="20201030 10:57:51.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.711" endtime="20201030 10:57:51.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.710" endtime="20201030 10:57:51.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.709" endtime="20201030 10:57:51.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.352" endtime="20201030 10:57:51.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.351" endtime="20201030 10:57:51.732"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.741" endtime="20201030 10:57:51.756"></status>
</kw>
<msg timestamp="20201030 10:57:51.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.739" endtime="20201030 10:57:51.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.758" endtime="20201030 10:57:51.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.760" endtime="20201030 10:57:51.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.736" endtime="20201030 10:57:51.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.734" endtime="20201030 10:57:51.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.769" endtime="20201030 10:57:52.056"></status>
</kw>
<msg timestamp="20201030 10:57:52.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.768" endtime="20201030 10:57:52.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.060" endtime="20201030 10:57:52.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.068" endtime="20201030 10:57:52.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.765" endtime="20201030 10:57:52.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.763" endtime="20201030 10:57:52.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.074" level="INFO">${RESULT} = [{'diff': 5.218100000000184e-05}, {'diff': 5.150000000000293e-05}, {'diff': 5.176399999999928e-05}, {'diff': 5.1651999999999254e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.194400000000168e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:52.071" endtime="20201030 10:57:52.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:52.079" level="INFO">${ACCURACY} = {'diff': [5.218100000000184e-05, 5.150000000000293e-05, 5.176399999999928e-05, 5.1651999999999254e-05, 5.161100000000002e-05, 5.194400000000168e-05, 5.155499999999827e-05, 5.18470000000007e-05, 5.1596...</msg>
<status status="PASS" starttime="20201030 10:57:52.075" endtime="20201030 10:57:52.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.083" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 10:57:52.082" endtime="20201030 10:57:52.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.085" level="INFO">VALUE: [5.218100000000184e-05, 5.150000000000293e-05, 5.176399999999928e-05, 5.1651999999999254e-05, 5.161100000000002e-05, 5.194400000000168e-05, 5.155499999999827e-05, 5.18470000000007e-05, 5.159699999999698e-05, 5.169400000000143e-05, 5.148599999999989e-05, 5.165299999999873e-05, 5.206900000000181e-05, 5.191700000000202e-05, 5.16669999999983e-05, 5.16530000000022e-05, 5.1929999999998644e-05, 5.154199999999817e-05, 5.191700000000202e-05, 5.168099999999787e-05, 5.179200000000189e-05, 5.194499999999769e-05, 5.163899999999916e-05, 5.193100000000159e-05, 5.144500000000066e-05, 5.176399999999928e-05, 5.156900000000131e-05, 5.170900000000048e-05, 5.152800000000207e-05, 5.148599999999989e-05, 5.158400000000035e-05, 5.1637999999999684e-05, 5.194400000000168e-05, 5.1666000000002293e-05, 5.156900000000131e-05, 5.183300000000113e-05, 5.145800000000075e-05, 5.198600000000039e-05, 5.1707999999997534e-05, 5.159700000000045e-05, 5.190300000000245e-05, 5.1415999999998574e-05, 5.179199999999842e-05, 5.197200000000082e-05, 5.1693999999997964e-05, 5.194400000000168e-05, 5.148599999999989e-05, 5.176399999999928e-05, 5.161100000000002e-05, 5.180599999999799e-05]</msg>
<status status="PASS" starttime="20201030 10:57:52.084" endtime="20201030 10:57:52.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.079" endtime="20201030 10:57:52.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.090" endtime="20201030 10:57:52.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.089" endtime="20201030 10:57:52.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.088" endtime="20201030 10:57:52.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.733" endtime="20201030 10:57:52.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.732" endtime="20201030 10:57:52.111"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.120" endtime="20201030 10:57:52.136"></status>
</kw>
<msg timestamp="20201030 10:57:52.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.118" endtime="20201030 10:57:52.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.138" endtime="20201030 10:57:52.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.140" endtime="20201030 10:57:52.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.116" endtime="20201030 10:57:52.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.114" endtime="20201030 10:57:52.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.149" endtime="20201030 10:57:52.434"></status>
</kw>
<msg timestamp="20201030 10:57:52.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.148" endtime="20201030 10:57:52.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.438" endtime="20201030 10:57:52.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.447" endtime="20201030 10:57:52.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.145" endtime="20201030 10:57:52.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.143" endtime="20201030 10:57:52.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.453" level="INFO">${RESULT} = [{'diff': 5.3221999999998604e-05}, {'diff': 5.272200000000157e-05}, {'diff': 5.2679999999999394e-05}, {'diff': 5.2916000000000074e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.288900000000041e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:52.450" endtime="20201030 10:57:52.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:52.457" level="INFO">${ACCURACY} = {'diff': [5.3221999999998604e-05, 5.272200000000157e-05, 5.2679999999999394e-05, 5.2916000000000074e-05, 5.262500000000059e-05, 5.288900000000041e-05, 5.277700000000038e-05, 5.305499999999977e-05, 5.2...</msg>
<status status="PASS" starttime="20201030 10:57:52.454" endtime="20201030 10:57:52.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.461" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 10:57:52.460" endtime="20201030 10:57:52.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.464" level="INFO">VALUE: [5.3221999999998604e-05, 5.272200000000157e-05, 5.2679999999999394e-05, 5.2916000000000074e-05, 5.262500000000059e-05, 5.288900000000041e-05, 5.277700000000038e-05, 5.305499999999977e-05, 5.263900000000016e-05, 5.236100000000077e-05, 5.263900000000016e-05, 5.268099999999887e-05, 5.2443999999998714e-05, 5.28470000000017e-05, 5.272200000000157e-05, 5.276400000000028e-05, 5.28609999999978e-05, 5.286100000000127e-05, 5.256999999999831e-05, 5.257000000000178e-05, 5.265299999999973e-05, 5.245899999999776e-05, 5.262499999999712e-05, 5.269500000000191e-05, 5.2999999999997494e-05, 5.262499999999712e-05, 5.287500000000084e-05, 5.251300000000056e-05, 5.283399999999813e-05, 5.265299999999973e-05, 5.2679999999999394e-05, 5.2707999999998534e-05, 5.277699999999691e-05, 5.276400000000028e-05, 5.2679999999999394e-05, 5.297200000000182e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.2708000000002e-05, 5.26669999999993e-05, 5.2471999999997854e-05, 5.26669999999993e-05, 5.257000000000178e-05, 5.268099999999887e-05, 5.308300000000238e-05, 5.288900000000041e-05, 5.258299999999841e-05, 5.277800000000332e-05, 5.270900000000148e-05, 5.255599999999874e-05]</msg>
<status status="PASS" starttime="20201030 10:57:52.463" endtime="20201030 10:57:52.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.458" endtime="20201030 10:57:52.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.470" endtime="20201030 10:57:52.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.468" endtime="20201030 10:57:52.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.467" endtime="20201030 10:57:52.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.112" endtime="20201030 10:57:52.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.111" endtime="20201030 10:57:52.490"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.499" endtime="20201030 10:57:52.516"></status>
</kw>
<msg timestamp="20201030 10:57:52.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.497" endtime="20201030 10:57:52.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.517" endtime="20201030 10:57:52.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.520" endtime="20201030 10:57:52.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.495" endtime="20201030 10:57:52.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.493" endtime="20201030 10:57:52.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.528" endtime="20201030 10:57:52.814"></status>
</kw>
<msg timestamp="20201030 10:57:52.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.527" endtime="20201030 10:57:52.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.818" endtime="20201030 10:57:52.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.826" endtime="20201030 10:57:52.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.524" endtime="20201030 10:57:52.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.523" endtime="20201030 10:57:52.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.833" level="INFO">${RESULT} = [{'diff': 5.338900000000091e-05}, {'diff': 5.431900000000059e-05}, {'diff': 5.38609999999988e-05}, {'diff': 5.387499999999837e-05}, {'diff': 5.405600000000024e-05}, {'diff': 5.388899999999794e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:52.830" endtime="20201030 10:57:52.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:52.838" level="INFO">${ACCURACY} = {'diff': [5.338900000000091e-05, 5.431900000000059e-05, 5.38609999999988e-05, 5.387499999999837e-05, 5.405600000000024e-05, 5.388899999999794e-05, 5.379199999999695e-05, 5.379199999999695e-05, 5.34859...</msg>
<status status="PASS" starttime="20201030 10:57:52.834" endtime="20201030 10:57:52.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.842" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 10:57:52.841" endtime="20201030 10:57:52.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.845" level="INFO">VALUE: [5.338900000000091e-05, 5.431900000000059e-05, 5.38609999999988e-05, 5.387499999999837e-05, 5.405600000000024e-05, 5.388899999999794e-05, 5.379199999999695e-05, 5.379199999999695e-05, 5.3485999999998424e-05, 5.3721999999999104e-05, 5.368099999999987e-05, 5.38609999999988e-05, 5.380599999999999e-05, 5.377800000000085e-05, 5.362500000000159e-05, 5.394499999999969e-05, 5.34730000000018e-05, 5.372300000000205e-05, 5.368099999999987e-05, 5.38340000000026e-05, 5.34730000000018e-05, 5.394499999999969e-05, 5.376400000000128e-05, 5.387500000000184e-05, 5.345800000000275e-05, 5.35410000000007e-05, 5.3930000000000644e-05, 5.35410000000007e-05, 5.354200000000017e-05, 5.363900000000116e-05, 5.3916000000001074e-05, 5.362500000000159e-05, 5.3944000000000214e-05, 5.363900000000116e-05, 5.380599999999999e-05, 5.3763999999997814e-05, 5.390300000000098e-05, 5.3721999999999104e-05, 5.341700000000005e-05, 5.359699999999898e-05, 5.3721999999999104e-05, 5.358399999999888e-05, 5.391699999999708e-05, 5.391700000000055e-05, 5.359800000000192e-05, 5.39730000000023e-05, 5.365300000000073e-05, 5.365300000000073e-05, 5.365299999999726e-05, 5.341699999999658e-05]</msg>
<status status="PASS" starttime="20201030 10:57:52.843" endtime="20201030 10:57:52.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.839" endtime="20201030 10:57:52.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.850" endtime="20201030 10:57:52.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.848" endtime="20201030 10:57:52.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.847" endtime="20201030 10:57:52.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.491" endtime="20201030 10:57:52.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.491" endtime="20201030 10:57:52.870"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.879" endtime="20201030 10:57:52.895"></status>
</kw>
<msg timestamp="20201030 10:57:52.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.877" endtime="20201030 10:57:52.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.897" endtime="20201030 10:57:52.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.899" endtime="20201030 10:57:52.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.875" endtime="20201030 10:57:52.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.873" endtime="20201030 10:57:52.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.908" endtime="20201030 10:57:53.196"></status>
</kw>
<msg timestamp="20201030 10:57:53.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:52.907" endtime="20201030 10:57:53.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:53.200" endtime="20201030 10:57:53.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.209" endtime="20201030 10:57:53.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.904" endtime="20201030 10:57:53.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.903" endtime="20201030 10:57:53.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.215" level="INFO">${RESULT} = [{'diff': 5.479200000000142e-05}, {'diff': 5.45280000000016e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.4972000000000354e-05}, {'diff': 5.4513999999998564e-05}, {'diff': 5.481900000000109e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:53.212" endtime="20201030 10:57:53.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.220" level="INFO">${ACCURACY} = {'diff': [5.479200000000142e-05, 5.45280000000016e-05, 5.4749999999999244e-05, 5.4972000000000354e-05, 5.4513999999998564e-05, 5.481900000000109e-05, 5.46670000000013e-05, 5.4749999999999244e-05, 5.48...</msg>
<status status="PASS" starttime="20201030 10:57:53.216" endtime="20201030 10:57:53.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.224" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.223" endtime="20201030 10:57:53.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.227" level="INFO">VALUE: [5.479200000000142e-05, 5.45280000000016e-05, 5.4749999999999244e-05, 5.4972000000000354e-05, 5.4513999999998564e-05, 5.481900000000109e-05, 5.46670000000013e-05, 5.4749999999999244e-05, 5.484700000000023e-05, 5.4680000000001394e-05, 5.4722000000000104e-05, 5.50410000000022e-05, 5.4485999999999424e-05, 5.481900000000109e-05, 5.46809999999974e-05, 5.501300000000306e-05, 5.479200000000142e-05, 5.4666000000001824e-05, 5.484700000000023e-05, 5.48609999999998e-05, 5.451400000000203e-05, 5.451400000000203e-05, 5.488899999999894e-05, 5.4735999999999674e-05, 5.494500000000069e-05, 5.498700000000287e-05, 5.4708000000000534e-05, 5.487499999999937e-05, 5.4887999999999465e-05, 5.4999999999999494e-05, 5.483300000000066e-05, 5.481900000000109e-05, 5.4694000000000964e-05, 5.456899999999737e-05, 5.4735999999999674e-05, 5.495900000000026e-05, 5.479100000000195e-05, 5.462499999999912e-05, 5.4722000000000104e-05, 5.441700000000105e-05, 5.4680000000001394e-05, 5.4471999999999854e-05, 5.480600000000099e-05, 5.4485999999999424e-05, 5.463899999999869e-05, 5.500000000000296e-05, 5.462499999999912e-05, 5.459699999999998e-05, 5.483400000000013e-05, 5.4777999999998384e-05]</msg>
<status status="PASS" starttime="20201030 10:57:53.225" endtime="20201030 10:57:53.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.221" endtime="20201030 10:57:53.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.232" endtime="20201030 10:57:53.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.230" endtime="20201030 10:57:53.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.229" endtime="20201030 10:57:53.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.871" endtime="20201030 10:57:53.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.871" endtime="20201030 10:57:53.253"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.263" endtime="20201030 10:57:53.282"></status>
</kw>
<msg timestamp="20201030 10:57:53.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.262" endtime="20201030 10:57:53.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.283" endtime="20201030 10:57:53.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.286" endtime="20201030 10:57:53.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.258" endtime="20201030 10:57:53.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.256" endtime="20201030 10:57:53.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.295" endtime="20201030 10:57:53.600"></status>
</kw>
<msg timestamp="20201030 10:57:53.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025300764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025356542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.293" endtime="20201030 10:57:53.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025300764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025356542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.604" endtime="20201030 10:57:53.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.612" endtime="20201030 10:57:53.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.291" endtime="20201030 10:57:53.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.289" endtime="20201030 10:57:53.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.618" level="INFO">${RESULT} = [{'diff': 5.5777999999999384e-05}, {'diff': 5.55280000000026e-05}, {'diff': 5.5457999999997815e-05}, {'diff': 5.593100000000212e-05}, {'diff': 5.554099999999923e-05}, {'diff': 5.579099999999948e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:53.615" endtime="20201030 10:57:53.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.623" level="INFO">${ACCURACY} = {'diff': [5.5777999999999384e-05, 5.55280000000026e-05, 5.5457999999997815e-05, 5.593100000000212e-05, 5.554099999999923e-05, 5.579099999999948e-05, 5.5458000000001284e-05, 5.5750000000000244e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 10:57:53.619" endtime="20201030 10:57:53.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.627" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.626" endtime="20201030 10:57:53.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.630" level="INFO">VALUE: [5.5777999999999384e-05, 5.55280000000026e-05, 5.5457999999997815e-05, 5.593100000000212e-05, 5.554099999999923e-05, 5.579099999999948e-05, 5.5458000000001284e-05, 5.5750000000000244e-05, 5.5415999999999105e-05, 5.5721999999997635e-05, 5.5499999999999994e-05, 5.5763999999999814e-05, 5.609700000000148e-05, 5.5929999999999175e-05, 5.5457999999997815e-05, 5.5958000000001784e-05, 5.5971999999997885e-05, 5.588899999999994e-05, 5.566699999999883e-05, 5.6000000000000494e-05, 5.5750000000000244e-05, 5.594500000000169e-05, 5.544500000000119e-05, 5.5458000000001284e-05, 5.540299999999901e-05, 5.583300000000166e-05, 5.5791999999998954e-05, 5.587500000000037e-05, 5.5777999999999384e-05, 5.583399999999766e-05, 5.588899999999994e-05, 5.5750000000000244e-05, 5.5763999999999814e-05, 5.5805999999998523e-05, 5.5929999999999175e-05, 5.5458000000001284e-05, 5.5665999999999355e-05, 5.555500000000227e-05, 5.5472000000000854e-05, 5.5902000000000035e-05, 5.562500000000012e-05, 5.55410000000027e-05, 5.5429999999998675e-05, 5.577800000000285e-05, 5.5458000000001284e-05, 5.5708000000001534e-05, 5.540299999999901e-05, 5.562500000000012e-05, 5.555600000000174e-05, 5.566699999999883e-05]</msg>
<status status="PASS" starttime="20201030 10:57:53.628" endtime="20201030 10:57:53.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.623" endtime="20201030 10:57:53.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.635" endtime="20201030 10:57:53.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.634" endtime="20201030 10:57:53.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.633" endtime="20201030 10:57:53.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.254" endtime="20201030 10:57:53.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.253" endtime="20201030 10:57:53.656"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.665" endtime="20201030 10:57:53.682"></status>
</kw>
<msg timestamp="20201030 10:57:53.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.663" endtime="20201030 10:57:53.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.683" endtime="20201030 10:57:53.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.686" endtime="20201030 10:57:53.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.661" endtime="20201030 10:57:53.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.658" endtime="20201030 10:57:53.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.695" endtime="20201030 10:57:53.981"></status>
</kw>
<msg timestamp="20201030 10:57:53.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021632417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.693" endtime="20201030 10:57:53.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021632417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.985" endtime="20201030 10:57:53.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.993" endtime="20201030 10:57:53.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.691" endtime="20201030 10:57:53.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.689" endtime="20201030 10:57:53.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.000" level="INFO">${RESULT} = [{'diff': 5.708400000000238e-05}, {'diff': 5.7221999999999135e-05}, {'diff': 5.6971999999998885e-05}, {'diff': 5.6763999999997344e-05}, {'diff': 5.658299999999894e-05}, {'diff': 5.655500000000327e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:53.997" endtime="20201030 10:57:54.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:54.005" level="INFO">${ACCURACY} = {'diff': [5.708400000000238e-05, 5.7221999999999135e-05, 5.6971999999998885e-05, 5.6763999999997344e-05, 5.658299999999894e-05, 5.655500000000327e-05, 5.684700000000223e-05, 5.643099999999915e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 10:57:54.001" endtime="20201030 10:57:54.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.009" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 10:57:54.008" endtime="20201030 10:57:54.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.012" level="INFO">VALUE: [5.708400000000238e-05, 5.7221999999999135e-05, 5.6971999999998885e-05, 5.6763999999997344e-05, 5.658299999999894e-05, 5.655500000000327e-05, 5.684700000000223e-05, 5.643099999999915e-05, 5.694499999999922e-05, 5.65549999999998e-05, 5.658299999999894e-05, 5.657000000000231e-05, 5.6735999999998205e-05, 5.6500000000000994e-05, 5.658399999999841e-05, 5.662499999999765e-05, 5.6735999999998205e-05, 5.6541999999999704e-05, 5.6555999999999274e-05, 5.659800000000145e-05, 5.6541999999999704e-05, 5.6916000000000605e-05, 5.654100000000023e-05, 5.683299999999919e-05, 5.6472000000001854e-05, 5.687500000000137e-05, 5.681899999999962e-05, 5.6541999999999704e-05, 5.6679999999999925e-05, 5.690300000000051e-05, 5.6541999999999704e-05, 5.7055999999999774e-05, 5.6736000000001674e-05, 5.684699999999876e-05, 5.68749999999979e-05, 5.6749999999997774e-05, 5.6528000000000134e-05, 5.6555999999999274e-05, 5.666699999999983e-05, 5.6485999999997955e-05, 5.683399999999866e-05, 5.66809999999994e-05, 5.676300000000134e-05, 5.6541999999999704e-05, 5.662500000000112e-05, 5.693099999999965e-05, 5.693099999999965e-05, 5.6443999999999245e-05, 5.6500000000000994e-05, 5.6957999999999315e-05]</msg>
<status status="PASS" starttime="20201030 10:57:54.010" endtime="20201030 10:57:54.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.006" endtime="20201030 10:57:54.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.017" endtime="20201030 10:57:54.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.015" endtime="20201030 10:57:54.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.014" endtime="20201030 10:57:54.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.657" endtime="20201030 10:57:54.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.656" endtime="20201030 10:57:54.037"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.046" endtime="20201030 10:57:54.063"></status>
</kw>
<msg timestamp="20201030 10:57:54.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.044" endtime="20201030 10:57:54.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.064" endtime="20201030 10:57:54.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.067" endtime="20201030 10:57:54.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.042" endtime="20201030 10:57:54.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.040" endtime="20201030 10:57:54.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.077" endtime="20201030 10:57:54.363"></status>
</kw>
<msg timestamp="20201030 10:57:54.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.075" endtime="20201030 10:57:54.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.367" endtime="20201030 10:57:54.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.375" endtime="20201030 10:57:54.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.072" endtime="20201030 10:57:54.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.070" endtime="20201030 10:57:54.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.382" level="INFO">${RESULT} = [{'diff': 5.815299999999829e-05}, {'diff': 5.7750000000002244e-05}, {'diff': 5.78749999999989e-05}, {'diff': 5.7806000000000524e-05}, {'diff': 5.7902000000002035e-05}, {'diff': 5.76810000000004e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:54.379" endtime="20201030 10:57:54.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:54.386" level="INFO">${ACCURACY} = {'diff': [5.815299999999829e-05, 5.7750000000002244e-05, 5.78749999999989e-05, 5.7806000000000524e-05, 5.7902000000002035e-05, 5.76810000000004e-05, 5.7514000000001564e-05, 5.7999999999999025e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 10:57:54.383" endtime="20201030 10:57:54.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.390" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 10:57:54.389" endtime="20201030 10:57:54.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.393" level="INFO">VALUE: [5.815299999999829e-05, 5.7750000000002244e-05, 5.78749999999989e-05, 5.7806000000000524e-05, 5.7902000000002035e-05, 5.76810000000004e-05, 5.7514000000001564e-05, 5.7999999999999025e-05, 5.7750000000002244e-05, 5.7666000000001355e-05, 5.762500000000212e-05, 5.7749999999998775e-05, 5.7820000000000094e-05, 5.762499999999865e-05, 5.7763999999998344e-05, 5.783300000000019e-05, 5.762500000000212e-05, 5.781900000000062e-05, 5.7693999999997025e-05, 5.763899999999822e-05, 5.7901999999998566e-05, 5.759699999999951e-05, 5.7514000000001564e-05, 5.7778000000001384e-05, 5.790300000000151e-05, 5.781900000000062e-05, 5.7583999999999413e-05, 5.7943999999997275e-05, 5.765299999999779e-05, 5.761099999999908e-05, 5.756900000000037e-05, 5.788900000000194e-05, 5.794500000000022e-05, 5.8014000000002064e-05, 5.7499999999998525e-05, 5.763899999999822e-05, 5.784699999999976e-05, 5.7833999999999663e-05, 5.759799999999898e-05, 5.7833999999999663e-05, 5.766700000000083e-05, 5.758299999999994e-05, 5.766700000000083e-05, 5.7583999999999413e-05, 5.793100000000065e-05, 5.751299999999862e-05, 5.761099999999908e-05, 5.758299999999994e-05, 5.7735999999999205e-05, 5.781900000000062e-05]</msg>
<status status="PASS" starttime="20201030 10:57:54.391" endtime="20201030 10:57:54.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.387" endtime="20201030 10:57:54.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.398" endtime="20201030 10:57:54.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.396" endtime="20201030 10:57:54.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.395" endtime="20201030 10:57:54.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.038" endtime="20201030 10:57:54.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.038" endtime="20201030 10:57:54.418"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.427" endtime="20201030 10:57:54.448"></status>
</kw>
<msg timestamp="20201030 10:57:54.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.425" endtime="20201030 10:57:54.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.450" endtime="20201030 10:57:54.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.452" endtime="20201030 10:57:54.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.423" endtime="20201030 10:57:54.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.421" endtime="20201030 10:57:54.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.461" endtime="20201030 10:57:54.747"></status>
</kw>
<msg timestamp="20201030 10:57:54.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025039278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025098083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.460" endtime="20201030 10:57:54.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025039278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025098083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.751" endtime="20201030 10:57:54.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.759" endtime="20201030 10:57:54.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.457" endtime="20201030 10:57:54.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.456" endtime="20201030 10:57:54.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.766" level="INFO">${RESULT} = [{'diff': 5.880499999999858e-05}, {'diff': 5.934700000000126e-05}, {'diff': 5.894500000000122e-05}, {'diff': 5.863899999999922e-05}, {'diff': 5.8721999999997165e-05}, {'diff': 5.9000000000000025e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:54.763" endtime="20201030 10:57:54.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:54.770" level="INFO">${ACCURACY} = {'diff': [5.880499999999858e-05, 5.934700000000126e-05, 5.894500000000122e-05, 5.863899999999922e-05, 5.8721999999997165e-05, 5.9000000000000025e-05, 5.8806000000001524e-05, 5.8763999999999345e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:57:54.767" endtime="20201030 10:57:54.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.774" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 10:57:54.773" endtime="20201030 10:57:54.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.777" level="INFO">VALUE: [5.880499999999858e-05, 5.934700000000126e-05, 5.894500000000122e-05, 5.863899999999922e-05, 5.8721999999997165e-05, 5.9000000000000025e-05, 5.8806000000001524e-05, 5.8763999999999345e-05, 5.847299999999986e-05, 5.8847999999996764e-05, 5.895900000000079e-05, 5.870900000000054e-05, 5.884700000000076e-05, 5.856900000000137e-05, 5.8986000000000455e-05, 5.8915999999999136e-05, 5.854100000000223e-05, 5.8763999999999345e-05, 5.8986000000000455e-05, 5.863899999999922e-05, 5.856900000000137e-05, 5.8791999999998484e-05, 5.841700000000158e-05, 5.8722000000000635e-05, 5.890299999999904e-05, 5.891700000000208e-05, 5.8499999999999525e-05, 5.844500000000072e-05, 5.894500000000122e-05, 5.8570000000000844e-05, 5.859700000000051e-05, 5.891699999999861e-05, 5.894500000000122e-05, 5.8848000000000233e-05, 5.8749999999999775e-05, 5.8514000000002564e-05, 5.8736000000000205e-05, 5.865299999999879e-05, 5.8597999999999983e-05, 5.9000000000000025e-05, 5.854100000000223e-05, 5.876299999999987e-05, 5.8472000000000385e-05, 5.904099999999926e-05, 5.881900000000162e-05, 5.890300000000251e-05, 5.8513999999999095e-05, 5.886100000000033e-05, 5.8499999999999525e-05, 5.858300000000094e-05]</msg>
<status status="PASS" starttime="20201030 10:57:54.775" endtime="20201030 10:57:54.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.771" endtime="20201030 10:57:54.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.783" endtime="20201030 10:57:54.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.781" endtime="20201030 10:57:54.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.780" endtime="20201030 10:57:54.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.419" endtime="20201030 10:57:54.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.419" endtime="20201030 10:57:54.803"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.812" endtime="20201030 10:57:54.828"></status>
</kw>
<msg timestamp="20201030 10:57:54.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.810" endtime="20201030 10:57:54.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.830" endtime="20201030 10:57:54.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.832" endtime="20201030 10:57:54.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.808" endtime="20201030 10:57:54.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.806" endtime="20201030 10:57:54.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.841" endtime="20201030 10:57:55.127"></status>
</kw>
<msg timestamp="20201030 10:57:55.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.840" endtime="20201030 10:57:55.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.131" endtime="20201030 10:57:55.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.139" endtime="20201030 10:57:55.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.837" endtime="20201030 10:57:55.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.835" endtime="20201030 10:57:55.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.146" level="INFO">${RESULT} = [{'diff': 6.015300000000029e-05}, {'diff': 5.9598000000000984e-05}, {'diff': 5.9750000000000775e-05}, {'diff': 5.976300000000087e-05}, {'diff': 5.981899999999915e-05}, {'diff': 5.9916000000000136e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:55.143" endtime="20201030 10:57:55.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.151" level="INFO">${ACCURACY} = {'diff': [6.015300000000029e-05, 5.9598000000000984e-05, 5.9750000000000775e-05, 5.976300000000087e-05, 5.981899999999915e-05, 5.9916000000000136e-05, 5.9457999999998346e-05, 5.9665999999999886e-05, 5...</msg>
<status status="PASS" starttime="20201030 10:57:55.147" endtime="20201030 10:57:55.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.156" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.155" endtime="20201030 10:57:55.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.158" level="INFO">VALUE: [6.015300000000029e-05, 5.9598000000000984e-05, 5.9750000000000775e-05, 5.976300000000087e-05, 5.981899999999915e-05, 5.9916000000000136e-05, 5.9457999999998346e-05, 5.9665999999999886e-05, 5.9902000000000566e-05, 5.9472000000001385e-05, 5.983299999999872e-05, 5.981899999999915e-05, 5.984699999999829e-05, 5.9707999999998596e-05, 5.9750000000000775e-05, 5.9764000000000345e-05, 5.993099999999918e-05, 5.9791999999999484e-05, 5.970900000000154e-05, 5.9777999999999915e-05, 5.941699999999911e-05, 5.943100000000215e-05, 5.943099999999868e-05, 5.9861999999997334e-05, 5.966700000000283e-05, 5.98750000000009e-05, 5.9819999999998624e-05, 5.9457999999998346e-05, 6.0055999999999304e-05, 5.983299999999872e-05, 5.9693999999999026e-05, 5.9527999999999665e-05, 5.9943999999999276e-05, 5.990300000000004e-05, 5.954100000000323e-05, 5.965299999999979e-05, 5.9986000000001455e-05, 5.9457999999998346e-05, 5.9679999999999456e-05, 5.9736000000001205e-05, 5.961099999999761e-05, 5.990300000000004e-05, 5.9764000000000345e-05, 5.9527999999999665e-05, 5.988900000000047e-05, 5.98750000000009e-05, 5.9971999999998415e-05, 5.9569999999998374e-05, 5.9736000000001205e-05, 5.95689999999989e-05]</msg>
<status status="PASS" starttime="20201030 10:57:55.157" endtime="20201030 10:57:55.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.152" endtime="20201030 10:57:55.164"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.167" endtime="20201030 10:57:55.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.166" endtime="20201030 10:57:55.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.165" endtime="20201030 10:57:55.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.804" endtime="20201030 10:57:55.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.804" endtime="20201030 10:57:55.188"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.197" endtime="20201030 10:57:55.213"></status>
</kw>
<msg timestamp="20201030 10:57:55.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.195" endtime="20201030 10:57:55.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.215" endtime="20201030 10:57:55.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.217" endtime="20201030 10:57:55.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.193" endtime="20201030 10:57:55.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.191" endtime="20201030 10:57:55.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.227" endtime="20201030 10:57:55.514"></status>
</kw>
<msg timestamp="20201030 10:57:55.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.225" endtime="20201030 10:57:55.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.518" endtime="20201030 10:57:55.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.526" endtime="20201030 10:57:55.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.223" endtime="20201030 10:57:55.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.221" endtime="20201030 10:57:55.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.533" level="INFO">${RESULT} = [{'diff': 6.0528000000000665e-05}, {'diff': 6.0694000000000026e-05}, {'diff': 6.0457999999999346e-05}, {'diff': 6.0458000000002815e-05}, {'diff': 6.0972000000002885e-05}, {'diff': 6.0986000000002455e-...</msg>
<status status="PASS" starttime="20201030 10:57:55.529" endtime="20201030 10:57:55.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.537" level="INFO">${ACCURACY} = {'diff': [6.0528000000000665e-05, 6.0694000000000026e-05, 6.0457999999999346e-05, 6.0458000000002815e-05, 6.0972000000002885e-05, 6.0986000000002455e-05, 6.083299999999972e-05, 6.065300000000079e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:55.534" endtime="20201030 10:57:55.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.541" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.540" endtime="20201030 10:57:55.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.544" level="INFO">VALUE: [6.0528000000000665e-05, 6.0694000000000026e-05, 6.0457999999999346e-05, 6.0458000000002815e-05, 6.0972000000002885e-05, 6.0986000000002455e-05, 6.083299999999972e-05, 6.065300000000079e-05, 6.0514000000001095e-05, 6.0486000000001955e-05, 6.091700000000061e-05, 6.055500000000033e-05, 6.061100000000208e-05, 6.0472000000002385e-05, 6.088900000000147e-05, 6.061099999999861e-05, 6.0707999999999596e-05, 6.070899999999907e-05, 6.068099999999993e-05, 6.104200000000073e-05, 6.043099999999968e-05, 6.045899999999882e-05, 6.090300000000104e-05, 6.0806000000000054e-05, 6.0443999999999776e-05, 6.0598000000001984e-05, 6.054100000000076e-05, 6.0694000000000026e-05, 6.0680000000000456e-05, 6.059699999999904e-05, 6.058299999999947e-05, 6.0930000000000706e-05, 6.0999999999998555e-05, 6.070899999999907e-05, 6.0957999999999846e-05, 6.0736000000002205e-05, 6.0985999999998985e-05, 6.0443999999999776e-05, 6.0569999999999374e-05, 6.058299999999947e-05, 6.0971999999999416e-05, 6.0971999999999416e-05, 6.062499999999818e-05, 6.052699999999772e-05, 6.0569999999999374e-05, 6.0819999999999624e-05, 6.0555999999999804e-05, 6.0514000000001095e-05, 6.0847999999998764e-05, 6.063900000000122e-05]</msg>
<status status="PASS" starttime="20201030 10:57:55.542" endtime="20201030 10:57:55.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.538" endtime="20201030 10:57:55.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.549" endtime="20201030 10:57:55.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.547" endtime="20201030 10:57:55.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.546" endtime="20201030 10:57:55.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.189" endtime="20201030 10:57:55.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.188" endtime="20201030 10:57:55.569"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.583" endtime="20201030 10:57:55.605"></status>
</kw>
<msg timestamp="20201030 10:57:55.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.580" endtime="20201030 10:57:55.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.608" endtime="20201030 10:57:55.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.613" endtime="20201030 10:57:55.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.574" endtime="20201030 10:57:55.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.572" endtime="20201030 10:57:55.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.632" endtime="20201030 10:57:55.924"></status>
</kw>
<msg timestamp="20201030 10:57:55.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030035319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030097125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.629" endtime="20201030 10:57:55.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030035319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030097125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.928" endtime="20201030 10:57:55.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.936" endtime="20201030 10:57:55.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.623" endtime="20201030 10:57:55.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.620" endtime="20201030 10:57:55.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.943" level="INFO">${RESULT} = [{'diff': 6.180599999999759e-05}, {'diff': 6.16950000000005e-05}, {'diff': 6.15690000000009e-05}, {'diff': 6.166600000000189e-05}, {'diff': 6.177700000000244e-05}, {'diff': 6.19439999999978e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:55.940" endtime="20201030 10:57:55.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.947" level="INFO">${ACCURACY} = {'diff': [6.180599999999759e-05, 6.16950000000005e-05, 6.15690000000009e-05, 6.166600000000189e-05, 6.177700000000244e-05, 6.19439999999978e-05, 6.183300000000072e-05, 6.17080000000006e-05, 6.15830000...</msg>
<status status="PASS" starttime="20201030 10:57:55.944" endtime="20201030 10:57:55.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.951" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.950" endtime="20201030 10:57:55.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.954" level="INFO">VALUE: [6.180599999999759e-05, 6.16950000000005e-05, 6.15690000000009e-05, 6.166600000000189e-05, 6.177700000000244e-05, 6.19439999999978e-05, 6.183300000000072e-05, 6.17080000000006e-05, 6.158300000000047e-05, 6.162499999999918e-05, 6.15690000000009e-05, 6.152800000000166e-05, 6.163899999999875e-05, 6.199999999999956e-05, 6.191700000000161e-05, 6.166700000000136e-05, 6.180599999999759e-05, 6.162499999999918e-05, 6.159699999999657e-05, 6.140300000000154e-05, 6.194500000000075e-05, 6.184699999999682e-05, 6.147299999999939e-05, 6.176399999999888e-05, 6.208400000000391e-05, 6.15279999999982e-05, 6.19159999999952e-05, 6.170900000000007e-05, 6.180499999999811e-05, 6.154099999999829e-05, 6.17080000000006e-05, 6.184699999999682e-05, 6.161099999999614e-05, 6.145800000000035e-05, 6.176399999999888e-05, 6.166700000000136e-05, 6.148599999999949e-05, 6.204199999999827e-05, 6.144400000000078e-05, 6.144400000000078e-05, 6.197200000000042e-05, 6.18750000000029e-05, 6.179199999999802e-05, 6.188900000000247e-05, 6.197200000000042e-05, 6.183399999999672e-05, 6.147199999999992e-05, 6.179199999999802e-05, 6.158399999999647e-05, 6.162500000000265e-05]</msg>
<status status="PASS" starttime="20201030 10:57:55.952" endtime="20201030 10:57:55.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.948" endtime="20201030 10:57:55.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.960" endtime="20201030 10:57:55.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.958" endtime="20201030 10:57:55.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.957" endtime="20201030 10:57:55.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.570" endtime="20201030 10:57:55.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.570" endtime="20201030 10:57:55.980"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.989" endtime="20201030 10:57:56.006"></status>
</kw>
<msg timestamp="20201030 10:57:56.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.988" endtime="20201030 10:57:56.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.008" endtime="20201030 10:57:56.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.010" endtime="20201030 10:57:56.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.985" endtime="20201030 10:57:56.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.983" endtime="20201030 10:57:56.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.019" endtime="20201030 10:57:56.305"></status>
</kw>
<msg timestamp="20201030 10:57:56.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02168, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021742486, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:57:56.018" endtime="20201030 10:57:56.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02168, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021742486, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:57:56.309" endtime="20201030 10:57:56.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.317" endtime="20201030 10:57:56.318"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.015" endtime="20201030 10:57:56.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.013" endtime="20201030 10:57:56.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.323" level="INFO">${RESULT} = [{'diff': 6.248599999999702e-05}, {'diff': 6.319499999999853e-05}, {'diff': 6.27500000000003e-05}, {'diff': 6.290299999999957e-05}, {'diff': 6.273600000000074e-05}, {'diff': 6.304200000000273e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:56.320" endtime="20201030 10:57:56.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.328" level="INFO">${ACCURACY} = {'diff': [6.248599999999702e-05, 6.319499999999853e-05, 6.27500000000003e-05, 6.290299999999957e-05, 6.273600000000074e-05, 6.304200000000273e-05, 6.265199999999985e-05, 6.25560000000018e-05, 6.248600...</msg>
<status status="PASS" starttime="20201030 10:57:56.324" endtime="20201030 10:57:56.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.333" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.332" endtime="20201030 10:57:56.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.335" level="INFO">VALUE: [6.248599999999702e-05, 6.319499999999853e-05, 6.27500000000003e-05, 6.290299999999957e-05, 6.273600000000074e-05, 6.304200000000273e-05, 6.265199999999985e-05, 6.25560000000018e-05, 6.248600000000049e-05, 6.305599999999884e-05, 6.255500000000233e-05, 6.2582999999998e-05, 6.29020000000001e-05, 6.284700000000129e-05, 6.287500000000043e-05, 6.300000000000056e-05, 6.286099999999739e-05, 6.286100000000086e-05, 6.298599999999752e-05, 6.290299999999957e-05, 6.263899999999975e-05, 6.251399999999963e-05, 6.294499999999828e-05, 6.291700000000261e-05, 6.261100000000061e-05, 6.284800000000076e-05, 6.251399999999963e-05, 6.244499999999778e-05, 6.27500000000003e-05, 6.279199999999902e-05, 6.26950000000015e-05, 6.263899999999975e-05, 6.295900000000132e-05, 6.244400000000178e-05, 6.261099999999714e-05, 6.258300000000147e-05, 6.304200000000273e-05, 6.29300000000027e-05, 6.259700000000104e-05, 6.25690000000019e-05, 6.255599999999834e-05, 6.30279999999997e-05, 6.255499999999886e-05, 6.297199999999795e-05, 6.266700000000236e-05, 6.2889e-05, 6.293099999999871e-05, 6.247200000000092e-05, 6.282000000000162e-05, 6.298600000000099e-05]</msg>
<status status="PASS" starttime="20201030 10:57:56.334" endtime="20201030 10:57:56.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.329" endtime="20201030 10:57:56.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.340" endtime="20201030 10:57:56.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.339" endtime="20201030 10:57:56.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.338" endtime="20201030 10:57:56.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.981" endtime="20201030 10:57:56.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.981" endtime="20201030 10:57:56.361"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.370" endtime="20201030 10:57:56.387"></status>
</kw>
<msg timestamp="20201030 10:57:56.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.368" endtime="20201030 10:57:56.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.389" endtime="20201030 10:57:56.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.391" endtime="20201030 10:57:56.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.366" endtime="20201030 10:57:56.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.363" endtime="20201030 10:57:56.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.400" endtime="20201030 10:57:56.687"></status>
</kw>
<msg timestamp="20201030 10:57:56.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.399" endtime="20201030 10:57:56.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.691" endtime="20201030 10:57:56.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.699" endtime="20201030 10:57:56.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.396" endtime="20201030 10:57:56.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.394" endtime="20201030 10:57:56.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.706" level="INFO">${RESULT} = [{'diff': 6.370799999999913e-05}, {'diff': 6.423600000000224e-05}, {'diff': 6.347199999999845e-05}, {'diff': 6.340300000000007e-05}, {'diff': 6.349999999999759e-05}, {'diff': 6.398599999999852e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:56.702" endtime="20201030 10:57:56.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.710" level="INFO">${ACCURACY} = {'diff': [6.370799999999913e-05, 6.423600000000224e-05, 6.347199999999845e-05, 6.340300000000007e-05, 6.349999999999759e-05, 6.398599999999852e-05, 6.383300000000272e-05, 6.394499999999928e-05, 6.3903...</msg>
<status status="PASS" starttime="20201030 10:57:56.707" endtime="20201030 10:57:56.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.714" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.713" endtime="20201030 10:57:56.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.717" level="INFO">VALUE: [6.370799999999913e-05, 6.423600000000224e-05, 6.347199999999845e-05, 6.340300000000007e-05, 6.349999999999759e-05, 6.398599999999852e-05, 6.383300000000272e-05, 6.394499999999928e-05, 6.390300000000057e-05, 6.405599999999984e-05, 6.368099999999946e-05, 6.387500000000143e-05, 6.379200000000002e-05, 6.387500000000143e-05, 6.40699999999994e-05, 6.390300000000057e-05, 6.355599999999934e-05, 6.398599999999852e-05, 6.379100000000054e-05, 6.380500000000011e-05, 6.365200000000085e-05, 6.363900000000075e-05, 6.393000000000024e-05, 6.380500000000011e-05, 6.363900000000075e-05, 6.363899999999728e-05, 6.365300000000032e-05, 6.361100000000161e-05, 6.387500000000143e-05, 6.373599999999827e-05, 6.384699999999882e-05, 6.349999999999759e-05, 6.393099999999971e-05, 6.372200000000217e-05, 6.357000000000237e-05, 6.359699999999857e-05, 6.344499999999878e-05, 6.388899999999753e-05, 6.365300000000032e-05, 6.351399999999716e-05, 6.343100000000268e-05, 6.348600000000149e-05, 6.395799999999938e-05, 6.361100000000161e-05, 6.354100000000029e-05, 6.397199999999895e-05, 6.39439999999998e-05, 6.394499999999928e-05, 6.342999999999974e-05, 6.369499999999903e-05]</msg>
<status status="PASS" starttime="20201030 10:57:56.715" endtime="20201030 10:57:56.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.711" endtime="20201030 10:57:56.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.722" endtime="20201030 10:57:56.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.720" endtime="20201030 10:57:56.742"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.719" endtime="20201030 10:57:56.742"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.362" endtime="20201030 10:57:56.742"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.361" endtime="20201030 10:57:56.742"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.751" endtime="20201030 10:57:56.769"></status>
</kw>
<msg timestamp="20201030 10:57:56.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.750" endtime="20201030 10:57:56.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.771" endtime="20201030 10:57:56.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.773" endtime="20201030 10:57:56.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.747" endtime="20201030 10:57:56.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.745" endtime="20201030 10:57:56.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.782" endtime="20201030 10:57:57.068"></status>
</kw>
<msg timestamp="20201030 10:57:57.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022604653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.781" endtime="20201030 10:57:57.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022604653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.072" endtime="20201030 10:57:57.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.080" endtime="20201030 10:57:57.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.778" endtime="20201030 10:57:57.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.776" endtime="20201030 10:57:57.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.087" level="INFO">${RESULT} = [{'diff': 6.447199999999945e-05}, {'diff': 6.537499999999946e-05}, {'diff': 6.47639999999984e-05}, {'diff': 6.459699999999957e-05}, {'diff': 6.447199999999945e-05}, {'diff': 6.487499999999896e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:57.083" endtime="20201030 10:57:57.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:57.091" level="INFO">${ACCURACY} = {'diff': [6.447199999999945e-05, 6.537499999999946e-05, 6.47639999999984e-05, 6.459699999999957e-05, 6.447199999999945e-05, 6.487499999999896e-05, 6.447200000000292e-05, 6.461100000000261e-05, 6.46389...</msg>
<status status="PASS" starttime="20201030 10:57:57.088" endtime="20201030 10:57:57.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.095" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 10:57:57.094" endtime="20201030 10:57:57.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.098" level="INFO">VALUE: [6.447199999999945e-05, 6.537499999999946e-05, 6.47639999999984e-05, 6.459699999999957e-05, 6.447199999999945e-05, 6.487499999999896e-05, 6.447200000000292e-05, 6.461100000000261e-05, 6.463899999999828e-05, 6.444499999999978e-05, 6.448599999999902e-05, 6.463899999999828e-05, 6.450000000000206e-05, 6.477800000000145e-05, 6.47500000000023e-05, 6.461200000000208e-05, 6.443100000000021e-05, 6.463899999999828e-05, 6.445899999999935e-05, 6.451399999999816e-05, 6.463800000000228e-05, 6.445799999999988e-05, 6.47769999999985e-05, 6.463799999999881e-05, 6.443000000000074e-05, 6.454100000000129e-05, 6.459699999999957e-05, 6.486099999999939e-05, 6.447200000000292e-05, 6.466699999999742e-05, 6.487499999999896e-05, 6.49440000000008e-05, 6.455600000000034e-05, 6.444499999999978e-05, 6.495800000000038e-05, 6.445799999999988e-05, 6.455599999999687e-05, 6.461099999999914e-05, 6.505600000000084e-05, 6.447199999999945e-05, 6.469500000000003e-05, 6.448599999999902e-05, 6.445899999999935e-05, 6.466600000000142e-05, 6.451399999999816e-05, 6.443000000000074e-05, 6.47769999999985e-05, 6.470800000000013e-05, 6.473599999999927e-05, 6.461100000000261e-05]</msg>
<status status="PASS" starttime="20201030 10:57:57.096" endtime="20201030 10:57:57.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.092" endtime="20201030 10:57:57.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.104" endtime="20201030 10:57:57.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.102" endtime="20201030 10:57:57.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.101" endtime="20201030 10:57:57.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.743" endtime="20201030 10:57:57.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.743" endtime="20201030 10:57:57.124"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.133" endtime="20201030 10:57:57.150"></status>
</kw>
<msg timestamp="20201030 10:57:57.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.131" endtime="20201030 10:57:57.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.151" endtime="20201030 10:57:57.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.154" endtime="20201030 10:57:57.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.129" endtime="20201030 10:57:57.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.127" endtime="20201030 10:57:57.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.163" endtime="20201030 10:57:57.448"></status>
</kw>
<msg timestamp="20201030 10:57:57.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.161" endtime="20201030 10:57:57.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.452" endtime="20201030 10:57:57.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.460" endtime="20201030 10:57:57.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.159" endtime="20201030 10:57:57.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.157" endtime="20201030 10:57:57.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.467" level="INFO">${RESULT} = [{'diff': 6.611100000000064e-05}, {'diff': 6.545800000000088e-05}, {'diff': 6.563899999999928e-05}, {'diff': 6.569400000000156e-05}, {'diff': 6.574999999999984e-05}, {'diff': 6.547200000000045e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:57.464" endtime="20201030 10:57:57.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:57.472" level="INFO">${ACCURACY} = {'diff': [6.611100000000064e-05, 6.545800000000088e-05, 6.563899999999928e-05, 6.569400000000156e-05, 6.574999999999984e-05, 6.547200000000045e-05, 6.548600000000002e-05, 6.55700000000009e-05, 6.54439...</msg>
<status status="PASS" starttime="20201030 10:57:57.468" endtime="20201030 10:57:57.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.477" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 10:57:57.476" endtime="20201030 10:57:57.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.479" level="INFO">VALUE: [6.611100000000064e-05, 6.545800000000088e-05, 6.563899999999928e-05, 6.569400000000156e-05, 6.574999999999984e-05, 6.547200000000045e-05, 6.548600000000002e-05, 6.55700000000009e-05, 6.544399999999784e-05, 6.600000000000009e-05, 6.57220000000007e-05, 6.581999999999769e-05, 6.587499999999996e-05, 6.588899999999953e-05, 6.58480000000003e-05, 6.562500000000318e-05, 6.55700000000009e-05, 6.562499999999971e-05, 6.552799999999873e-05, 6.565199999999938e-05, 6.558299999999753e-05, 6.590199999999963e-05, 6.565300000000232e-05, 6.584700000000082e-05, 6.547200000000045e-05, 6.577799999999898e-05, 6.549999999999959e-05, 6.57639999999994e-05, 6.570800000000113e-05, 6.595800000000138e-05, 6.556899999999796e-05, 6.565300000000232e-05, 6.595799999999791e-05, 6.582000000000116e-05, 6.543099999999774e-05, 6.569500000000103e-05, 6.576400000000288e-05, 6.548600000000002e-05, 6.600000000000009e-05, 6.566699999999842e-05, 6.559800000000005e-05, 6.559800000000005e-05, 6.547200000000045e-05, 6.554100000000229e-05, 6.562499999999971e-05, 6.597200000000095e-05, 6.559700000000057e-05, 6.554100000000229e-05, 6.569399999999809e-05, 6.595799999999791e-05]</msg>
<status status="PASS" starttime="20201030 10:57:57.478" endtime="20201030 10:57:57.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.473" endtime="20201030 10:57:57.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.484" endtime="20201030 10:57:57.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.483" endtime="20201030 10:57:57.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.481" endtime="20201030 10:57:57.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.125" endtime="20201030 10:57:57.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.125" endtime="20201030 10:57:57.505"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.513" endtime="20201030 10:57:57.531"></status>
</kw>
<msg timestamp="20201030 10:57:57.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.512" endtime="20201030 10:57:57.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.533" endtime="20201030 10:57:57.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.535" endtime="20201030 10:57:57.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.509" endtime="20201030 10:57:57.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.507" endtime="20201030 10:57:57.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.544" endtime="20201030 10:57:57.831"></status>
</kw>
<msg timestamp="20201030 10:57:57.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.543" endtime="20201030 10:57:57.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.835" endtime="20201030 10:57:57.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.843" endtime="20201030 10:57:57.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.540" endtime="20201030 10:57:57.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.538" endtime="20201030 10:57:57.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.850" level="INFO">${RESULT} = [{'diff': 6.645900000000135e-05}, {'diff': 6.666599999999995e-05}, {'diff': 6.686100000000139e-05}, {'diff': 6.687500000000096e-05}, {'diff': 6.652799999999973e-05}, {'diff': 6.661100000000114e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:57.846" endtime="20201030 10:57:57.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:57.854" level="INFO">${ACCURACY} = {'diff': [6.645900000000135e-05, 6.666599999999995e-05, 6.686100000000139e-05, 6.687500000000096e-05, 6.652799999999973e-05, 6.661100000000114e-05, 6.691699999999967e-05, 6.680599999999912e-05, 6.6832...</msg>
<status status="PASS" starttime="20201030 10:57:57.851" endtime="20201030 10:57:57.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.858" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 10:57:57.857" endtime="20201030 10:57:57.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.861" level="INFO">VALUE: [6.645900000000135e-05, 6.666599999999995e-05, 6.686100000000139e-05, 6.687500000000096e-05, 6.652799999999973e-05, 6.661100000000114e-05, 6.691699999999967e-05, 6.680599999999912e-05, 6.683299999999878e-05, 6.65969999999981e-05, 6.650000000000059e-05, 6.644499999999831e-05, 6.698599999999805e-05, 6.65419999999993e-05, 6.663900000000028e-05, 6.649999999999712e-05, 6.661200000000062e-05, 6.681999999999869e-05, 6.651400000000016e-05, 6.680599999999912e-05, 6.706899999999946e-05, 6.665299999999985e-05, 6.650000000000059e-05, 6.679100000000007e-05, 6.644399999999884e-05, 6.67090000000016e-05, 6.683299999999878e-05, 6.663900000000028e-05, 6.658299999999853e-05, 6.679199999999955e-05, 6.686100000000139e-05, 6.701400000000066e-05, 6.687500000000096e-05, 6.698600000000152e-05, 6.662500000000071e-05, 6.680599999999912e-05, 6.648600000000102e-05, 6.700000000000109e-05, 6.641699999999917e-05, 6.698599999999805e-05, 6.659800000000105e-05, 6.658400000000148e-05, 6.67640000000004e-05, 6.67229999999977e-05, 6.663800000000081e-05, 6.67220000000017e-05, 6.645799999999841e-05, 6.69160000000002e-05, 6.665200000000038e-05, 6.666599999999995e-05]</msg>
<status status="PASS" starttime="20201030 10:57:57.859" endtime="20201030 10:57:57.861"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.855" endtime="20201030 10:57:57.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.866" endtime="20201030 10:57:57.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.864" endtime="20201030 10:57:57.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.863" endtime="20201030 10:57:57.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.506" endtime="20201030 10:57:57.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.505" endtime="20201030 10:57:57.886"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.895" endtime="20201030 10:57:57.915"></status>
</kw>
<msg timestamp="20201030 10:57:57.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.894" endtime="20201030 10:57:57.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.917" endtime="20201030 10:57:57.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.919" endtime="20201030 10:57:57.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.891" endtime="20201030 10:57:57.921"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.889" endtime="20201030 10:57:57.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.928" endtime="20201030 10:57:58.214"></status>
</kw>
<msg timestamp="20201030 10:57:58.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024950153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.927" endtime="20201030 10:57:58.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024950153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.218" endtime="20201030 10:57:58.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.226" endtime="20201030 10:57:58.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.924" endtime="20201030 10:57:58.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.922" endtime="20201030 10:57:58.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.233" level="INFO">${RESULT} = [{'diff': 6.833300000000028e-05}, {'diff': 6.834699999999985e-05}, {'diff': 6.77640000000014e-05}, {'diff': 6.75420000000003e-05}, {'diff': 6.747199999999898e-05}, {'diff': 6.775000000000184e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:58.230" endtime="20201030 10:57:58.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:58.237" level="INFO">${ACCURACY} = {'diff': [6.833300000000028e-05, 6.834699999999985e-05, 6.77640000000014e-05, 6.75420000000003e-05, 6.747199999999898e-05, 6.775000000000184e-05, 6.744499999999931e-05, 6.80420000000008e-05, 6.7764000...</msg>
<status status="PASS" starttime="20201030 10:57:58.234" endtime="20201030 10:57:58.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.241" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 10:57:58.240" endtime="20201030 10:57:58.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.244" level="INFO">VALUE: [6.833300000000028e-05, 6.834699999999985e-05, 6.77640000000014e-05, 6.75420000000003e-05, 6.747199999999898e-05, 6.775000000000184e-05, 6.744499999999931e-05, 6.80420000000008e-05, 6.77640000000014e-05, 6.761100000000214e-05, 6.786100000000239e-05, 6.758400000000248e-05, 6.797299999999895e-05, 6.749999999999812e-05, 6.756999999999944e-05, 6.786100000000239e-05, 6.768099999999999e-05, 6.770799999999966e-05, 6.750000000000159e-05, 6.77220000000027e-05, 6.758299999999953e-05, 6.787500000000196e-05, 6.77359999999988e-05, 6.75420000000003e-05, 6.800000000000209e-05, 6.745799999999941e-05, 6.777800000000098e-05, 6.738900000000103e-05, 6.752800000000073e-05, 6.762499999999824e-05, 6.765300000000085e-05, 6.756999999999944e-05, 6.77640000000014e-05, 6.745899999999888e-05, 6.794499999999981e-05, 6.786099999999892e-05, 6.795899999999938e-05, 6.788900000000153e-05, 6.79160000000012e-05, 6.763900000000128e-05, 6.775000000000184e-05, 6.759700000000257e-05, 6.751400000000116e-05, 6.79030000000011e-05, 6.750000000000159e-05, 6.744399999999984e-05, 6.799999999999862e-05, 6.779100000000107e-05, 6.743000000000027e-05, 6.769400000000009e-05]</msg>
<status status="PASS" starttime="20201030 10:57:58.243" endtime="20201030 10:57:58.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.238" endtime="20201030 10:57:58.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.250" endtime="20201030 10:57:58.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.248" endtime="20201030 10:57:58.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.247" endtime="20201030 10:57:58.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.887" endtime="20201030 10:57:58.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.887" endtime="20201030 10:57:58.271"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.280" endtime="20201030 10:57:58.298"></status>
</kw>
<msg timestamp="20201030 10:57:58.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.279" endtime="20201030 10:57:58.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.299" endtime="20201030 10:57:58.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.302" endtime="20201030 10:57:58.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.276" endtime="20201030 10:57:58.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.273" endtime="20201030 10:57:58.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.311" endtime="20201030 10:57:58.596"></status>
</kw>
<msg timestamp="20201030 10:57:58.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.309" endtime="20201030 10:57:58.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.600" endtime="20201030 10:57:58.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.608" endtime="20201030 10:57:58.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.307" endtime="20201030 10:57:58.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.305" endtime="20201030 10:57:58.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.615" level="INFO">${RESULT} = [{'diff': 6.884700000000035e-05}, {'diff': 6.84030000000016e-05}, {'diff': 6.880499999999817e-05}, {'diff': 6.880500000000164e-05}, {'diff': 6.897200000000048e-05}, {'diff': 6.877699999999903e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:58.612" endtime="20201030 10:57:58.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:58.620" level="INFO">${ACCURACY} = {'diff': [6.884700000000035e-05, 6.84030000000016e-05, 6.880499999999817e-05, 6.880500000000164e-05, 6.897200000000048e-05, 6.877699999999903e-05, 6.874999999999937e-05, 6.856900000000096e-05, 6.89029...</msg>
<status status="PASS" starttime="20201030 10:57:58.616" endtime="20201030 10:57:58.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.624" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 10:57:58.623" endtime="20201030 10:57:58.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.627" level="INFO">VALUE: [6.884700000000035e-05, 6.84030000000016e-05, 6.880499999999817e-05, 6.880500000000164e-05, 6.897200000000048e-05, 6.877699999999903e-05, 6.874999999999937e-05, 6.856900000000096e-05, 6.890299999999863e-05, 6.849999999999912e-05, 6.874999999999937e-05, 6.884700000000035e-05, 6.881899999999774e-05, 6.897200000000048e-05, 6.887499999999949e-05, 6.894500000000081e-05, 6.852799999999826e-05, 6.858300000000053e-05, 6.84160000000017e-05, 6.844500000000031e-05, 6.883400000000026e-05, 6.868100000000099e-05, 6.879199999999808e-05, 6.88619999999994e-05, 6.849999999999912e-05, 6.893000000000177e-05, 6.887499999999949e-05, 6.852699999999878e-05, 6.848599999999955e-05, 6.858299999999706e-05, 6.851399999999869e-05, 6.863900000000228e-05, 6.845800000000041e-05, 6.876399999999894e-05, 6.883300000000078e-05, 6.901399999999919e-05, 6.880599999999765e-05, 6.845800000000041e-05, 6.891700000000167e-05, 6.873600000000327e-05, 6.886099999999992e-05, 6.899999999999962e-05, 6.893100000000124e-05, 6.877799999999851e-05, 6.868100000000099e-05, 6.882000000000069e-05, 6.880500000000164e-05, 6.906999999999747e-05, 6.87359999999998e-05, 6.868000000000152e-05]</msg>
<status status="PASS" starttime="20201030 10:57:58.625" endtime="20201030 10:57:58.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.621" endtime="20201030 10:57:58.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.632" endtime="20201030 10:57:58.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.630" endtime="20201030 10:57:58.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.629" endtime="20201030 10:57:58.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.272" endtime="20201030 10:57:58.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.271" endtime="20201030 10:57:58.652"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.661" endtime="20201030 10:57:58.679"></status>
</kw>
<msg timestamp="20201030 10:57:58.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.660" endtime="20201030 10:57:58.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.681" endtime="20201030 10:57:58.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.683" endtime="20201030 10:57:58.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.657" endtime="20201030 10:57:58.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.655" endtime="20201030 10:57:58.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.692" endtime="20201030 10:57:58.979"></status>
</kw>
<msg timestamp="20201030 10:57:58.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:58.691" endtime="20201030 10:57:58.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739056, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:58.983" endtime="20201030 10:57:58.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.991" endtime="20201030 10:57:58.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.688" endtime="20201030 10:57:58.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.686" endtime="20201030 10:57:58.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.998" level="INFO">${RESULT} = [{'diff': 7.00559999999989e-05}, {'diff': 6.962500000000024e-05}, {'diff': 6.950000000000012e-05}, {'diff': 6.980600000000212e-05}, {'diff': 6.997199999999801e-05}, {'diff': 6.984699999999788e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:58.995" endtime="20201030 10:57:58.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.002" level="INFO">${ACCURACY} = {'diff': [7.00559999999989e-05, 6.962500000000024e-05, 6.950000000000012e-05, 6.980600000000212e-05, 6.997199999999801e-05, 6.984699999999788e-05, 6.958300000000153e-05, 6.951399999999969e-05, 6.97770...</msg>
<status status="PASS" starttime="20201030 10:57:58.999" endtime="20201030 10:57:59.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.007" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.005" endtime="20201030 10:57:59.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.009" level="INFO">VALUE: [7.00559999999989e-05, 6.962500000000024e-05, 6.950000000000012e-05, 6.980600000000212e-05, 6.997199999999801e-05, 6.984699999999788e-05, 6.958300000000153e-05, 6.951399999999969e-05, 6.977700000000003e-05, 6.94169999999987e-05, 6.97360000000008e-05, 6.952799999999926e-05, 6.966599999999948e-05, 6.959800000000058e-05, 6.986199999999693e-05, 6.944500000000131e-05, 6.952699999999978e-05, 6.983300000000178e-05, 6.977700000000003e-05, 6.973599999999733e-05, 6.950000000000012e-05, 6.967999999999905e-05, 6.968000000000252e-05, 6.945800000000141e-05, 6.948600000000055e-05, 6.990299999999963e-05, 6.993100000000224e-05, 6.962500000000024e-05, 6.984699999999788e-05, 6.965299999999938e-05, 6.998600000000105e-05, 6.977700000000003e-05, 6.959800000000058e-05, 6.966699999999895e-05, 7.001400000000019e-05, 6.975000000000037e-05, 6.95420000000023e-05, 6.952699999999978e-05, 7.002799999999976e-05, 6.967999999999905e-05, 6.975000000000037e-05, 6.961100000000067e-05, 6.984699999999788e-05, 6.972199999999776e-05, 6.956899999999849e-05, 6.955600000000187e-05, 6.950000000000012e-05, 6.947200000000098e-05, 6.975000000000037e-05, 6.983299999999831e-05]</msg>
<status status="PASS" starttime="20201030 10:57:59.008" endtime="20201030 10:57:59.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.003" endtime="20201030 10:57:59.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.014" endtime="20201030 10:57:59.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.012" endtime="20201030 10:57:59.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.011" endtime="20201030 10:57:59.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.653" endtime="20201030 10:57:59.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.653" endtime="20201030 10:57:59.035"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.043" endtime="20201030 10:57:59.062"></status>
</kw>
<msg timestamp="20201030 10:57:59.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.042" endtime="20201030 10:57:59.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.063" endtime="20201030 10:57:59.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.066" endtime="20201030 10:57:59.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.039" endtime="20201030 10:57:59.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.037" endtime="20201030 10:57:59.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.075" endtime="20201030 10:57:59.361"></status>
</kw>
<msg timestamp="20201030 10:57:59.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.073" endtime="20201030 10:57:59.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.365" endtime="20201030 10:57:59.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.373" endtime="20201030 10:57:59.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.071" endtime="20201030 10:57:59.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.069" endtime="20201030 10:57:59.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.380" level="INFO">${RESULT} = [{'diff': 7.073599999999833e-05}, {'diff': 7.073599999999833e-05}, {'diff': 7.093099999999977e-05}, {'diff': 7.086099999999845e-05}, {'diff': 7.080500000000017e-05}, {'diff': 7.097200000000248e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:59.377" endtime="20201030 10:57:59.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.384" level="INFO">${ACCURACY} = {'diff': [7.073599999999833e-05, 7.073599999999833e-05, 7.093099999999977e-05, 7.086099999999845e-05, 7.080500000000017e-05, 7.097200000000248e-05, 7.061100000000167e-05, 7.086100000000192e-05, 7.0999...</msg>
<status status="PASS" starttime="20201030 10:57:59.381" endtime="20201030 10:57:59.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.388" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.387" endtime="20201030 10:57:59.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.391" level="INFO">VALUE: [7.073599999999833e-05, 7.073599999999833e-05, 7.093099999999977e-05, 7.086099999999845e-05, 7.080500000000017e-05, 7.097200000000248e-05, 7.061100000000167e-05, 7.086100000000192e-05, 7.099999999999815e-05, 7.07369999999978e-05, 7.065300000000038e-05, 7.048599999999808e-05, 7.052699999999731e-05, 7.090300000000063e-05, 7.062500000000124e-05, 7.075000000000137e-05, 7.058299999999906e-05, 7.098599999999858e-05, 7.05689999999995e-05, 7.09170000000002e-05, 7.058300000000253e-05, 7.037500000000099e-05, 7.084699999999888e-05, 7.084699999999888e-05, 7.066699999999995e-05, 7.09170000000002e-05, 7.080599999999965e-05, 7.05970000000021e-05, 7.073700000000127e-05, 7.043099999999927e-05, 7.083399999999879e-05, 7.077700000000103e-05, 7.069499999999909e-05, 7.054100000000035e-05, 7.052700000000078e-05, 7.069399999999962e-05, 7.07910000000006e-05, 7.059699999999863e-05, 7.072199999999876e-05, 7.052800000000026e-05, 7.049999999999765e-05, 7.037499999999752e-05, 7.055499999999992e-05, 7.108299999999956e-05, 7.097199999999901e-05, 7.059699999999863e-05, 7.087499999999802e-05, 7.081899999999974e-05, 7.080599999999965e-05, 7.095799999999944e-05]</msg>
<status status="PASS" starttime="20201030 10:57:59.390" endtime="20201030 10:57:59.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.385" endtime="20201030 10:57:59.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.397" endtime="20201030 10:57:59.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.395" endtime="20201030 10:57:59.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.394" endtime="20201030 10:57:59.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.036" endtime="20201030 10:57:59.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.035" endtime="20201030 10:57:59.418"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.426" endtime="20201030 10:57:59.443"></status>
</kw>
<msg timestamp="20201030 10:57:59.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.425" endtime="20201030 10:57:59.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.445" endtime="20201030 10:57:59.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.447" endtime="20201030 10:57:59.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.422" endtime="20201030 10:57:59.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.420" endtime="20201030 10:57:59.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.456" endtime="20201030 10:57:59.742"></status>
</kw>
<msg timestamp="20201030 10:57:59.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.455" endtime="20201030 10:57:59.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.746" endtime="20201030 10:57:59.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.754" endtime="20201030 10:57:59.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.452" endtime="20201030 10:57:59.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.450" endtime="20201030 10:57:59.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.761" level="INFO">${RESULT} = [{'diff': 7.199999999999915e-05}, {'diff': 7.163899999999834e-05}, {'diff': 7.204200000000133e-05}, {'diff': 7.177800000000151e-05}, {'diff': 7.190300000000163e-05}, {'diff': 7.188899999999859e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:59.758" endtime="20201030 10:57:59.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.766" level="INFO">${ACCURACY} = {'diff': [7.199999999999915e-05, 7.163899999999834e-05, 7.204200000000133e-05, 7.177800000000151e-05, 7.190300000000163e-05, 7.188899999999859e-05, 7.198599999999958e-05, 7.154200000000083e-05, 7.1665...</msg>
<status status="PASS" starttime="20201030 10:57:59.762" endtime="20201030 10:57:59.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.770" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.769" endtime="20201030 10:57:59.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.773" level="INFO">VALUE: [7.199999999999915e-05, 7.163899999999834e-05, 7.204200000000133e-05, 7.177800000000151e-05, 7.190300000000163e-05, 7.188899999999859e-05, 7.198599999999958e-05, 7.154200000000083e-05, 7.166599999999801e-05, 7.166600000000148e-05, 7.173599999999933e-05, 7.194400000000087e-05, 7.141599999999776e-05, 7.205499999999795e-05, 7.169400000000062e-05, 7.170800000000019e-05, 7.208300000000056e-05, 7.15690000000005e-05, 7.147200000000298e-05, 7.202800000000176e-05, 7.183300000000031e-05, 7.162499999999877e-05, 7.187499999999902e-05, 7.199999999999915e-05, 7.158300000000006e-05, 7.151400000000169e-05, 7.191699999999773e-05, 7.19170000000012e-05, 7.173599999999933e-05, 7.145799999999994e-05, 7.162500000000224e-05, 7.147199999999951e-05, 7.155499999999745e-05, 7.188899999999859e-05, 7.17910000000016e-05, 7.199999999999915e-05, 7.151400000000169e-05, 7.159699999999963e-05, 7.180600000000065e-05, 7.183300000000031e-05, 7.194500000000034e-05, 7.188899999999859e-05, 7.169400000000062e-05, 7.169500000000009e-05, 7.183300000000031e-05, 7.170800000000019e-05, 7.172199999999976e-05, 7.149999999999865e-05, 7.168100000000052e-05, 7.159799999999911e-05]</msg>
<status status="PASS" starttime="20201030 10:57:59.771" endtime="20201030 10:57:59.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.767" endtime="20201030 10:57:59.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.778" endtime="20201030 10:57:59.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.776" endtime="20201030 10:57:59.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.775" endtime="20201030 10:57:59.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.418" endtime="20201030 10:57:59.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.418" endtime="20201030 10:57:59.799"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.807" endtime="20201030 10:57:59.826"></status>
</kw>
<msg timestamp="20201030 10:57:59.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.806" endtime="20201030 10:57:59.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.827" endtime="20201030 10:57:59.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.830" endtime="20201030 10:57:59.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.803" endtime="20201030 10:57:59.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.801" endtime="20201030 10:57:59.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.839" endtime="20201030 10:58:00.125"></status>
</kw>
<msg timestamp="20201030 10:58:00.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.837" endtime="20201030 10:58:00.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.129" endtime="20201030 10:58:00.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.137" endtime="20201030 10:58:00.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.835" endtime="20201030 10:58:00.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.833" endtime="20201030 10:58:00.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.143" level="INFO">${RESULT} = [{'diff': 7.287500000000002e-05}, {'diff': 7.270800000000119e-05}, {'diff': 7.25560000000014e-05}, {'diff': 7.262499999999977e-05}, {'diff': 7.269500000000109e-05}, {'diff': 7.249999999999965e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:00.140" endtime="20201030 10:58:00.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:00.148" level="INFO">${ACCURACY} = {'diff': [7.287500000000002e-05, 7.270800000000119e-05, 7.25560000000014e-05, 7.262499999999977e-05, 7.269500000000109e-05, 7.249999999999965e-05, 7.288899999999959e-05, 7.263799999999987e-05, 7.26389...</msg>
<status status="PASS" starttime="20201030 10:58:00.144" endtime="20201030 10:58:00.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.152" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 10:58:00.151" endtime="20201030 10:58:00.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.154" level="INFO">VALUE: [7.287500000000002e-05, 7.270800000000119e-05, 7.25560000000014e-05, 7.262499999999977e-05, 7.269500000000109e-05, 7.249999999999965e-05, 7.288899999999959e-05, 7.263799999999987e-05, 7.263899999999934e-05, 7.254199999999836e-05, 7.283299999999784e-05, 7.254200000000183e-05, 7.286100000000045e-05, 7.266600000000248e-05, 7.279099999999913e-05, 7.252699999999931e-05, 7.26110000000002e-05, 7.286100000000045e-05, 7.302799999999929e-05, 7.277799999999904e-05, 7.276399999999947e-05, 7.301399999999972e-05, 7.244400000000137e-05, 7.283299999999784e-05, 7.3069000000002e-05, 7.244499999999737e-05, 7.277799999999904e-05, 7.248600000000008e-05, 7.27499999999999e-05, 7.283400000000079e-05, 7.298700000000005e-05, 7.263799999999987e-05, 7.263899999999934e-05, 7.25560000000014e-05, 7.254099999999888e-05, 7.295799999999797e-05, 7.25690000000015e-05, 7.259700000000063e-05, 7.249999999999965e-05, 7.252799999999879e-05, 7.294400000000187e-05, 7.288899999999959e-05, 7.304199999999886e-05, 7.254200000000183e-05, 7.280599999999818e-05, 7.27499999999999e-05, 7.251400000000269e-05, 7.301399999999972e-05, 7.280599999999818e-05, 7.291699999999873e-05]</msg>
<status status="PASS" starttime="20201030 10:58:00.153" endtime="20201030 10:58:00.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.148" endtime="20201030 10:58:00.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.163" endtime="20201030 10:58:00.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.161" endtime="20201030 10:58:00.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.160" endtime="20201030 10:58:00.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.799" endtime="20201030 10:58:00.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.799" endtime="20201030 10:58:00.184"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.192" endtime="20201030 10:58:00.210"></status>
</kw>
<msg timestamp="20201030 10:58:00.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.191" endtime="20201030 10:58:00.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.212" endtime="20201030 10:58:00.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.214" endtime="20201030 10:58:00.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.188" endtime="20201030 10:58:00.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.186" endtime="20201030 10:58:00.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.223" endtime="20201030 10:58:00.509"></status>
</kw>
<msg timestamp="20201030 10:58:00.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.222" endtime="20201030 10:58:00.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.513" endtime="20201030 10:58:00.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.521" endtime="20201030 10:58:00.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.219" endtime="20201030 10:58:00.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.217" endtime="20201030 10:58:00.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.528" level="INFO">${RESULT} = [{'diff': 7.365299999999991e-05}, {'diff': 7.424999999999793e-05}, {'diff': 7.395899999999844e-05}, {'diff': 7.355500000000292e-05}, {'diff': 7.359700000000163e-05}, {'diff': 7.381899999999927e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:00.525" endtime="20201030 10:58:00.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:00.532" level="INFO">${ACCURACY} = {'diff': [7.365299999999991e-05, 7.424999999999793e-05, 7.395899999999844e-05, 7.355500000000292e-05, 7.359700000000163e-05, 7.381899999999927e-05, 7.350000000000065e-05, 7.377700000000056e-05, 7.3639...</msg>
<status status="PASS" starttime="20201030 10:58:00.529" endtime="20201030 10:58:00.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.536" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 10:58:00.535" endtime="20201030 10:58:00.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.539" level="INFO">VALUE: [7.365299999999991e-05, 7.424999999999793e-05, 7.395899999999844e-05, 7.355500000000292e-05, 7.359700000000163e-05, 7.381899999999927e-05, 7.350000000000065e-05, 7.377700000000056e-05, 7.363900000000034e-05, 7.348600000000108e-05, 7.391699999999973e-05, 7.350000000000065e-05, 7.38049999999997e-05, 7.399999999999768e-05, 7.344400000000237e-05, 7.377800000000004e-05, 7.370799999999872e-05, 7.383299999999884e-05, 7.344500000000184e-05, 7.359700000000163e-05, 7.39309999999993e-05, 7.384800000000136e-05, 7.37500000000009e-05, 7.355499999999945e-05, 7.365200000000044e-05, 7.352700000000031e-05, 7.342999999999933e-05, 7.366600000000001e-05, 7.36249999999973e-05, 7.34300000000028e-05, 7.366699999999948e-05, 7.398599999999811e-05, 7.379200000000308e-05, 7.379199999999961e-05, 7.366699999999948e-05, 7.399999999999768e-05, 7.350000000000065e-05, 7.344500000000184e-05, 7.384699999999841e-05, 7.347199999999804e-05, 7.401400000000072e-05, 7.37500000000009e-05, 7.351400000000022e-05, 7.370900000000166e-05, 7.376400000000047e-05, 7.366699999999948e-05, 7.372299999999776e-05, 7.370800000000219e-05, 7.372199999999829e-05, 7.384699999999841e-05]</msg>
<status status="PASS" starttime="20201030 10:58:00.538" endtime="20201030 10:58:00.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.533" endtime="20201030 10:58:00.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.545" endtime="20201030 10:58:00.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.543" endtime="20201030 10:58:00.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.542" endtime="20201030 10:58:00.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.185" endtime="20201030 10:58:00.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.184" endtime="20201030 10:58:00.565"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.574" endtime="20201030 10:58:00.591"></status>
</kw>
<msg timestamp="20201030 10:58:00.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.573" endtime="20201030 10:58:00.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.593" endtime="20201030 10:58:00.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.595" endtime="20201030 10:58:00.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.570" endtime="20201030 10:58:00.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.568" endtime="20201030 10:58:00.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.604" endtime="20201030 10:58:00.889"></status>
</kw>
<msg timestamp="20201030 10:58:00.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021711819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.603" endtime="20201030 10:58:00.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021711819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.893" endtime="20201030 10:58:00.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.901" endtime="20201030 10:58:00.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.600" endtime="20201030 10:58:00.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.598" endtime="20201030 10:58:00.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.908" level="INFO">${RESULT} = [{'diff': 7.536199999999896e-05}, {'diff': 7.468100000000005e-05}, {'diff': 7.486100000000245e-05}, {'diff': 7.488900000000159e-05}, {'diff': 7.488900000000159e-05}, {'diff': 7.488900000000159e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:00.904" endtime="20201030 10:58:00.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:00.913" level="INFO">${ACCURACY} = {'diff': [7.536199999999896e-05, 7.468100000000005e-05, 7.486100000000245e-05, 7.488900000000159e-05, 7.488900000000159e-05, 7.488900000000159e-05, 7.462500000000177e-05, 7.49310000000003e-05, 7.47920...</msg>
<status status="PASS" starttime="20201030 10:58:00.909" endtime="20201030 10:58:00.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.917" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 10:58:00.916" endtime="20201030 10:58:00.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.920" level="INFO">VALUE: [7.536199999999896e-05, 7.468100000000005e-05, 7.486100000000245e-05, 7.488900000000159e-05, 7.488900000000159e-05, 7.488900000000159e-05, 7.462500000000177e-05, 7.49310000000003e-05, 7.479200000000061e-05, 7.491700000000073e-05, 7.459800000000211e-05, 7.451400000000122e-05, 7.452800000000079e-05, 7.465199999999797e-05, 7.491599999999779e-05, 7.448599999999861e-05, 7.451399999999775e-05, 7.467999999999711e-05, 7.467999999999711e-05, 7.452800000000079e-05, 7.480599999999671e-05, 7.479200000000061e-05, 7.504199999999739e-05, 7.45699999999995e-05, 7.451399999999775e-05, 7.484699999999941e-05, 7.484699999999941e-05, 7.447199999999904e-05, 7.486099999999898e-05, 7.494499999999987e-05, 7.458399999999907e-05, 7.45699999999995e-05, 7.44439999999999e-05, 7.495799999999997e-05, 7.49440000000004e-05, 7.483299999999984e-05, 7.465299999999744e-05, 7.474999999999843e-05, 7.466600000000101e-05, 7.472199999999929e-05, 7.461099999999873e-05, 7.452800000000079e-05, 7.44439999999999e-05, 7.477800000000104e-05, 7.472199999999929e-05, 7.463900000000134e-05, 7.468100000000005e-05, 7.498599999999911e-05, 7.49310000000003e-05, 7.462500000000177e-05]</msg>
<status status="PASS" starttime="20201030 10:58:00.918" endtime="20201030 10:58:00.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.913" endtime="20201030 10:58:00.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.925" endtime="20201030 10:58:00.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.923" endtime="20201030 10:58:00.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.922" endtime="20201030 10:58:00.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.566" endtime="20201030 10:58:00.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.566" endtime="20201030 10:58:00.945"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.954" endtime="20201030 10:58:00.972"></status>
</kw>
<msg timestamp="20201030 10:58:00.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.952" endtime="20201030 10:58:00.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.973" endtime="20201030 10:58:00.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.976" endtime="20201030 10:58:00.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.950" endtime="20201030 10:58:00.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.948" endtime="20201030 10:58:00.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.985" endtime="20201030 10:58:01.271"></status>
</kw>
<msg timestamp="20201030 10:58:01.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.983" endtime="20201030 10:58:01.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.275" endtime="20201030 10:58:01.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.283" endtime="20201030 10:58:01.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.981" endtime="20201030 10:58:01.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.979" endtime="20201030 10:58:01.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.290" level="INFO">${RESULT} = [{'diff': 7.619400000000165e-05}, {'diff': 7.584700000000041e-05}, {'diff': 7.568100000000105e-05}, {'diff': 7.566700000000148e-05}, {'diff': 7.584799999999989e-05}, {'diff': 7.56249999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:01.287" endtime="20201030 10:58:01.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.294" level="INFO">${ACCURACY} = {'diff': [7.619400000000165e-05, 7.584700000000041e-05, 7.568100000000105e-05, 7.566700000000148e-05, 7.584799999999989e-05, 7.56249999999993e-05, 7.554099999999841e-05, 7.590199999999922e-05, 7.55550...</msg>
<status status="PASS" starttime="20201030 10:58:01.291" endtime="20201030 10:58:01.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.299" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.298" endtime="20201030 10:58:01.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.301" level="INFO">VALUE: [7.619400000000165e-05, 7.584700000000041e-05, 7.568100000000105e-05, 7.566700000000148e-05, 7.584799999999989e-05, 7.56249999999993e-05, 7.554099999999841e-05, 7.590199999999922e-05, 7.555500000000145e-05, 7.590300000000216e-05, 7.594399999999793e-05, 7.592999999999836e-05, 7.565300000000191e-05, 7.561099999999973e-05, 7.591700000000173e-05, 7.563899999999887e-05, 7.574999999999943e-05, 7.573599999999986e-05, 7.5763999999999e-05, 7.590300000000216e-05, 7.54310000000008e-05, 7.597200000000054e-05, 7.547200000000004e-05, 7.562500000000277e-05, 7.565299999999844e-05, 7.555499999999798e-05, 7.59029999999987e-05, 7.579099999999866e-05, 7.552699999999885e-05, 7.569399999999768e-05, 7.554099999999841e-05, 7.604099999999892e-05, 7.590300000000216e-05, 7.599999999999968e-05, 7.551399999999875e-05, 7.577800000000204e-05, 7.569399999999768e-05, 7.579199999999814e-05, 7.59440000000014e-05, 7.551400000000222e-05, 7.565299999999844e-05, 7.567999999999811e-05, 7.57500000000029e-05, 7.581999999999728e-05, 7.577799999999857e-05, 7.573599999999986e-05, 7.576400000000247e-05, 7.598600000000011e-05, 7.592999999999836e-05, 7.563900000000234e-05]</msg>
<status status="PASS" starttime="20201030 10:58:01.300" endtime="20201030 10:58:01.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.295" endtime="20201030 10:58:01.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.306" endtime="20201030 10:58:01.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.305" endtime="20201030 10:58:01.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.303" endtime="20201030 10:58:01.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.946" endtime="20201030 10:58:01.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.946" endtime="20201030 10:58:01.327"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.336" endtime="20201030 10:58:01.356"></status>
</kw>
<msg timestamp="20201030 10:58:01.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.334" endtime="20201030 10:58:01.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.358" endtime="20201030 10:58:01.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.361" endtime="20201030 10:58:01.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.331" endtime="20201030 10:58:01.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.329" endtime="20201030 10:58:01.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.371" endtime="20201030 10:58:01.660"></status>
</kw>
<msg timestamp="20201030 10:58:01.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025042486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025119583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.369" endtime="20201030 10:58:01.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025042486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025119583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.665" endtime="20201030 10:58:01.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.673" endtime="20201030 10:58:01.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.366" endtime="20201030 10:58:01.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.364" endtime="20201030 10:58:01.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.680" level="INFO">${RESULT} = [{'diff': 7.709700000000166e-05}, {'diff': 7.727800000000007e-05}, {'diff': 7.670900000000119e-05}, {'diff': 7.672200000000129e-05}, {'diff': 7.661200000000021e-05}, {'diff': 7.702799999999982e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:01.677" endtime="20201030 10:58:01.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.684" level="INFO">${ACCURACY} = {'diff': [7.709700000000166e-05, 7.727800000000007e-05, 7.670900000000119e-05, 7.672200000000129e-05, 7.661200000000021e-05, 7.702799999999982e-05, 7.674999999999696e-05, 7.655600000000193e-05, 7.6680...</msg>
<status status="PASS" starttime="20201030 10:58:01.681" endtime="20201030 10:58:01.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.689" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.688" endtime="20201030 10:58:01.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.691" level="INFO">VALUE: [7.709700000000166e-05, 7.727800000000007e-05, 7.670900000000119e-05, 7.672200000000129e-05, 7.661200000000021e-05, 7.702799999999982e-05, 7.674999999999696e-05, 7.655600000000193e-05, 7.668099999999858e-05, 7.679099999999967e-05, 7.656899999999855e-05, 7.694399999999893e-05, 7.647200000000104e-05, 7.697199999999807e-05, 7.686100000000098e-05, 7.683299999999837e-05, 7.655499999999898e-05, 7.686100000000098e-05, 7.673599999999739e-05, 7.6764e-05, 7.693099999999883e-05, 7.665299999999944e-05, 7.668100000000205e-05, 7.648599999999714e-05, 7.679199999999914e-05, 7.661100000000073e-05, 7.659700000000116e-05, 7.686200000000046e-05, 7.651399999999975e-05, 7.654199999999889e-05, 7.708299999999862e-05, 7.638800000000015e-05, 7.677799999999957e-05, 7.647199999999757e-05, 7.694399999999893e-05, 7.694399999999893e-05, 7.688900000000012e-05, 7.637500000000005e-05, 7.701400000000025e-05, 7.661100000000073e-05, 7.684699999999794e-05, 7.647200000000104e-05, 7.647200000000104e-05, 7.679199999999914e-05, 7.673599999999739e-05, 7.693099999999883e-05, 7.688900000000012e-05, 7.684800000000089e-05, 7.691700000000273e-05, 7.656899999999855e-05]</msg>
<status status="PASS" starttime="20201030 10:58:01.690" endtime="20201030 10:58:01.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.685" endtime="20201030 10:58:01.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.697" endtime="20201030 10:58:01.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.696" endtime="20201030 10:58:01.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.695" endtime="20201030 10:58:01.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.328" endtime="20201030 10:58:01.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.327" endtime="20201030 10:58:01.718"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.727" endtime="20201030 10:58:01.745"></status>
</kw>
<msg timestamp="20201030 10:58:01.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.726" endtime="20201030 10:58:01.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.747" endtime="20201030 10:58:01.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.749" endtime="20201030 10:58:01.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.723" endtime="20201030 10:58:01.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.721" endtime="20201030 10:58:01.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.758" endtime="20201030 10:58:02.051"></status>
</kw>
<msg timestamp="20201030 10:58:02.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.757" endtime="20201030 10:58:02.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.060" endtime="20201030 10:58:02.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.080" endtime="20201030 10:58:02.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.754" endtime="20201030 10:58:02.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.752" endtime="20201030 10:58:02.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.094" level="INFO">${RESULT} = [{'diff': 7.81389999999979e-05}, {'diff': 7.825000000000193e-05}, {'diff': 7.791700000000026e-05}, {'diff': 7.787500000000155e-05}, {'diff': 7.790299999999722e-05}, {'diff': 7.769399999999968e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:02.087" endtime="20201030 10:58:02.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:02.106" level="INFO">${ACCURACY} = {'diff': [7.81389999999979e-05, 7.825000000000193e-05, 7.791700000000026e-05, 7.787500000000155e-05, 7.790299999999722e-05, 7.769399999999968e-05, 7.79579999999995e-05, 7.775000000000143e-05, 7.766600...</msg>
<status status="PASS" starttime="20201030 10:58:02.097" endtime="20201030 10:58:02.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.116" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 10:58:02.113" endtime="20201030 10:58:02.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.121" level="INFO">VALUE: [7.81389999999979e-05, 7.825000000000193e-05, 7.791700000000026e-05, 7.787500000000155e-05, 7.790299999999722e-05, 7.769399999999968e-05, 7.79579999999995e-05, 7.775000000000143e-05, 7.766600000000054e-05, 7.801400000000125e-05, 7.794399999999993e-05, 7.787500000000155e-05, 7.793099999999983e-05, 7.794399999999993e-05, 7.79030000000007e-05, 7.761100000000173e-05, 7.766700000000001e-05, 7.775000000000143e-05, 7.783399999999885e-05, 7.791700000000026e-05, 7.754199999999989e-05, 7.748599999999814e-05, 7.762499999999783e-05, 7.768099999999958e-05, 7.797200000000254e-05, 7.791600000000079e-05, 7.77770000000011e-05, 7.765300000000044e-05, 7.755499999999999e-05, 7.794399999999993e-05, 7.786099999999851e-05, 7.786099999999851e-05, 7.761099999999826e-05, 7.777800000000057e-05, 7.751400000000075e-05, 7.773600000000186e-05, 7.768099999999958e-05, 7.797199999999907e-05, 7.75839999999986e-05, 7.75700000000025e-05, 7.801400000000125e-05, 7.787500000000155e-05, 7.758400000000207e-05, 7.79449999999994e-05, 7.741600000000029e-05, 7.7457999999999e-05, 7.754100000000042e-05, 7.79449999999994e-05, 7.801399999999778e-05, 7.748600000000161e-05]</msg>
<status status="PASS" starttime="20201030 10:58:02.118" endtime="20201030 10:58:02.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.108" endtime="20201030 10:58:02.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:02.132" endtime="20201030 10:58:02.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.129" endtime="20201030 10:58:02.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.126" endtime="20201030 10:58:02.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.719" endtime="20201030 10:58:02.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.719" endtime="20201030 10:58:02.154"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.163" endtime="20201030 10:58:02.181"></status>
</kw>
<msg timestamp="20201030 10:58:02.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.161" endtime="20201030 10:58:02.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.182" endtime="20201030 10:58:02.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.185" endtime="20201030 10:58:02.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.158" endtime="20201030 10:58:02.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.156" endtime="20201030 10:58:02.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.194" endtime="20201030 10:58:02.483"></status>
</kw>
<msg timestamp="20201030 10:58:02.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.192" endtime="20201030 10:58:02.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.487" endtime="20201030 10:58:02.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.496" endtime="20201030 10:58:02.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.190" endtime="20201030 10:58:02.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.188" endtime="20201030 10:58:02.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.502" level="INFO">${RESULT} = [{'diff': 7.866700000000101e-05}, {'diff': 7.924999999999946e-05}, {'diff': 7.86250000000023e-05}, {'diff': 7.8764000000002e-05}, {'diff': 7.870800000000025e-05}, {'diff': 7.884699999999994e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:02.499" endtime="20201030 10:58:02.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:02.507" level="INFO">${ACCURACY} = {'diff': [7.866700000000101e-05, 7.924999999999946e-05, 7.86250000000023e-05, 7.8764000000002e-05, 7.870800000000025e-05, 7.884699999999994e-05, 7.841600000000129e-05, 7.894400000000093e-05, 7.8750000...</msg>
<status status="PASS" starttime="20201030 10:58:02.503" endtime="20201030 10:58:02.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.511" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 10:58:02.510" endtime="20201030 10:58:02.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.514" level="INFO">VALUE: [7.866700000000101e-05, 7.924999999999946e-05, 7.86250000000023e-05, 7.8764000000002e-05, 7.870800000000025e-05, 7.884699999999994e-05, 7.841600000000129e-05, 7.894400000000093e-05, 7.875000000000243e-05, 7.87779999999981e-05, 7.87779999999981e-05, 7.867999999999764e-05, 7.848599999999914e-05, 7.893000000000136e-05, 7.898599999999964e-05, 7.912499999999933e-05, 7.884699999999994e-05, 7.872199999999982e-05, 7.89169999999978e-05, 7.866700000000101e-05, 7.884799999999942e-05, 7.870899999999972e-05, 7.89169999999978e-05, 7.870800000000025e-05, 7.886199999999899e-05, 7.856900000000056e-05, 7.855600000000046e-05, 7.8764000000002e-05, 7.862499999999883e-05, 7.892999999999789e-05, 7.851400000000175e-05, 7.847199999999957e-05, 7.893000000000136e-05, 7.847199999999957e-05, 7.857000000000003e-05, 7.844400000000043e-05, 7.84449999999999e-05, 7.880600000000071e-05, 7.872199999999982e-05, 7.84449999999999e-05, 7.883399999999985e-05, 7.841700000000076e-05, 7.880600000000071e-05, 7.902699999999888e-05, 7.866700000000101e-05, 7.884699999999994e-05, 7.906899999999759e-05, 7.891599999999832e-05, 7.844400000000043e-05, 7.87770000000021e-05]</msg>
<status status="PASS" starttime="20201030 10:58:02.512" endtime="20201030 10:58:02.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.508" endtime="20201030 10:58:02.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:02.519" endtime="20201030 10:58:02.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.518" endtime="20201030 10:58:02.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.516" endtime="20201030 10:58:02.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.155" endtime="20201030 10:58:02.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.154" endtime="20201030 10:58:02.540"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.549" endtime="20201030 10:58:02.568"></status>
</kw>
<msg timestamp="20201030 10:58:02.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.547" endtime="20201030 10:58:02.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.569" endtime="20201030 10:58:02.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.572" endtime="20201030 10:58:02.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.545" endtime="20201030 10:58:02.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.542" endtime="20201030 10:58:02.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.581" endtime="20201030 10:58:02.867"></status>
</kw>
<msg timestamp="20201030 10:58:02.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023601903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023681819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.580" endtime="20201030 10:58:02.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023601903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023681819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.871" endtime="20201030 10:58:02.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.879" endtime="20201030 10:58:02.881"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.577" endtime="20201030 10:58:02.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.575" endtime="20201030 10:58:02.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.886" level="INFO">${RESULT} = [{'diff': 7.991599999999932e-05}, {'diff': 7.962499999999983e-05}, {'diff': 7.987500000000008e-05}, {'diff': 7.948600000000014e-05}, {'diff': 7.976399999999953e-05}, {'diff': 7.954100000000242e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:02.883" endtime="20201030 10:58:02.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:02.891" level="INFO">${ACCURACY} = {'diff': [7.991599999999932e-05, 7.962499999999983e-05, 7.987500000000008e-05, 7.948600000000014e-05, 7.976399999999953e-05, 7.954100000000242e-05, 7.990299999999922e-05, 7.993099999999836e-05, 7.9818...</msg>
<status status="PASS" starttime="20201030 10:58:02.887" endtime="20201030 10:58:02.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.895" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 10:58:02.894" endtime="20201030 10:58:02.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.898" level="INFO">VALUE: [7.991599999999932e-05, 7.962499999999983e-05, 7.987500000000008e-05, 7.948600000000014e-05, 7.976399999999953e-05, 7.954100000000242e-05, 7.990299999999922e-05, 7.993099999999836e-05, 7.981899999999834e-05, 7.954200000000189e-05, 7.966599999999907e-05, 7.993000000000236e-05, 7.998600000000064e-05, 7.9458000000001e-05, 7.981899999999834e-05, 7.95970000000007e-05, 7.994399999999846e-05, 7.973600000000039e-05, 7.958299999999766e-05, 7.96389999999994e-05, 7.962499999999983e-05, 7.997200000000107e-05, 7.961100000000026e-05, 7.997200000000107e-05, 7.95970000000007e-05, 7.976399999999953e-05, 7.993100000000183e-05, 7.972299999999682e-05, 8.002799999999935e-05, 7.988800000000018e-05, 7.957000000000103e-05, 7.995799999999803e-05, 7.95970000000007e-05, 7.997200000000107e-05, 7.95970000000007e-05, 7.997200000000107e-05, 7.962499999999983e-05, 7.98190000000018e-05, 7.972200000000082e-05, 7.965299999999897e-05, 7.986099999999705e-05, 7.954199999999842e-05, 7.950000000000318e-05, 7.986100000000051e-05, 7.965300000000244e-05, 7.947200000000057e-05, 7.974999999999996e-05, 8.002799999999935e-05, 7.974999999999996e-05, 7.966699999999854e-05]</msg>
<status status="PASS" starttime="20201030 10:58:02.896" endtime="20201030 10:58:02.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.891" endtime="20201030 10:58:02.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:02.904" endtime="20201030 10:58:02.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.902" endtime="20201030 10:58:02.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.901" endtime="20201030 10:58:02.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.541" endtime="20201030 10:58:02.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.540" endtime="20201030 10:58:02.925"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.934" endtime="20201030 10:58:02.952"></status>
</kw>
<msg timestamp="20201030 10:58:02.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.932" endtime="20201030 10:58:02.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.953" endtime="20201030 10:58:02.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.956" endtime="20201030 10:58:02.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.930" endtime="20201030 10:58:02.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.927" endtime="20201030 10:58:02.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.965" endtime="20201030 10:58:03.251"></status>
</kw>
<msg timestamp="20201030 10:58:03.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02230425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:02.963" endtime="20201030 10:58:03.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02230425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:03.256" endtime="20201030 10:58:03.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.264" endtime="20201030 10:58:03.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.961" endtime="20201030 10:58:03.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.959" endtime="20201030 10:58:03.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.271" level="INFO">${RESULT} = [{'diff': 8.06109999999978e-05}, {'diff': 8.079199999999967e-05}, {'diff': 8.06390000000004e-05}, {'diff': 8.097200000000207e-05}, {'diff': 8.070800000000225e-05}, {'diff': 8.06520000000005e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:03.267" endtime="20201030 10:58:03.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:03.276" level="INFO">${ACCURACY} = {'diff': [8.06109999999978e-05, 8.079199999999967e-05, 8.06390000000004e-05, 8.097200000000207e-05, 8.070800000000225e-05, 8.06520000000005e-05, 8.067999999999964e-05, 8.070800000000225e-05, 8.0764000...</msg>
<status status="PASS" starttime="20201030 10:58:03.272" endtime="20201030 10:58:03.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.281" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 10:58:03.280" endtime="20201030 10:58:03.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.283" level="INFO">VALUE: [8.06109999999978e-05, 8.079199999999967e-05, 8.06390000000004e-05, 8.097200000000207e-05, 8.070800000000225e-05, 8.06520000000005e-05, 8.067999999999964e-05, 8.070800000000225e-05, 8.076400000000053e-05, 8.07780000000001e-05, 8.069399999999921e-05, 8.079200000000314e-05, 8.068099999999911e-05, 8.04719999999981e-05, 8.04450000000019e-05, 8.068100000000258e-05, 8.052700000000038e-05, 8.079199999999967e-05, 8.082000000000228e-05, 8.04450000000019e-05, 8.044499999999843e-05, 8.090200000000075e-05, 8.07780000000001e-05, 8.073600000000139e-05, 8.056899999999909e-05, 8.045799999999853e-05, 8.048599999999767e-05, 8.087500000000108e-05, 8.065299999999997e-05, 8.073600000000139e-05, 8.076400000000053e-05, 8.094499999999893e-05, 8.044399999999896e-05, 8.092999999999989e-05, 8.05970000000017e-05, 8.097200000000207e-05, 8.081999999999881e-05, 8.087499999999762e-05, 8.051400000000028e-05, 8.062500000000083e-05, 8.07910000000002e-05, 8.063899999999694e-05, 8.104100000000045e-05, 8.08329999999989e-05, 8.092999999999989e-05, 8.068099999999911e-05, 8.086100000000151e-05, 8.07910000000002e-05, 8.06390000000004e-05, 8.048599999999767e-05]</msg>
<status status="PASS" starttime="20201030 10:58:03.282" endtime="20201030 10:58:03.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.277" endtime="20201030 10:58:03.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.288" endtime="20201030 10:58:03.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.287" endtime="20201030 10:58:03.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.286" endtime="20201030 10:58:03.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.926" endtime="20201030 10:58:03.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.925" endtime="20201030 10:58:03.309"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.318" endtime="20201030 10:58:03.336"></status>
</kw>
<msg timestamp="20201030 10:58:03.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.317" endtime="20201030 10:58:03.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.338" endtime="20201030 10:58:03.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.340" endtime="20201030 10:58:03.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.314" endtime="20201030 10:58:03.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.312" endtime="20201030 10:58:03.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.351" endtime="20201030 10:58:03.638"></status>
</kw>
<msg timestamp="20201030 10:58:03.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.349" endtime="20201030 10:58:03.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.642" endtime="20201030 10:58:03.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.651" endtime="20201030 10:58:03.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.346" endtime="20201030 10:58:03.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.344" endtime="20201030 10:58:03.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.658" level="INFO">${RESULT} = [{'diff': 8.169499999999968e-05}, {'diff': 8.158299999999966e-05}, {'diff': 8.173599999999892e-05}, {'diff': 8.165199999999803e-05}, {'diff': 8.149999999999824e-05}, {'diff': 8.173599999999892e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:03.654" endtime="20201030 10:58:03.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:03.662" level="INFO">${ACCURACY} = {'diff': [8.169499999999968e-05, 8.158299999999966e-05, 8.173599999999892e-05, 8.165199999999803e-05, 8.149999999999824e-05, 8.173599999999892e-05, 8.18049999999973e-05, 8.18329999999999e-05, 8.154200...</msg>
<status status="PASS" starttime="20201030 10:58:03.659" endtime="20201030 10:58:03.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.667" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 10:58:03.666" endtime="20201030 10:58:03.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.669" level="INFO">VALUE: [8.169499999999968e-05, 8.158299999999966e-05, 8.173599999999892e-05, 8.165199999999803e-05, 8.149999999999824e-05, 8.173599999999892e-05, 8.18049999999973e-05, 8.18329999999999e-05, 8.154200000000042e-05, 8.165300000000097e-05, 8.151400000000128e-05, 8.155599999999999e-05, 8.154200000000042e-05, 8.162499999999837e-05, 8.155499999999705e-05, 8.186099999999905e-05, 8.166699999999708e-05, 8.168000000000064e-05, 8.184799999999895e-05, 8.170799999999978e-05, 8.17910000000012e-05, 8.177700000000163e-05, 8.184699999999948e-05, 8.150000000000171e-05, 8.152800000000085e-05, 8.172200000000282e-05, 8.151400000000128e-05, 8.144499999999943e-05, 8.175000000000196e-05, 8.17780000000011e-05, 8.17780000000011e-05, 8.166700000000054e-05, 8.175000000000196e-05, 8.14450000000029e-05, 8.148600000000214e-05, 8.187500000000208e-05, 8.168100000000011e-05, 8.170899999999925e-05, 8.183399999999938e-05, 8.204200000000092e-05, 8.179099999999773e-05, 8.152800000000085e-05, 8.159699999999923e-05, 8.151399999999781e-05, 8.198599999999917e-05, 8.149999999999824e-05, 8.156900000000009e-05, 8.186099999999905e-05, 8.148599999999867e-05, 8.144399999999996e-05]</msg>
<status status="PASS" starttime="20201030 10:58:03.668" endtime="20201030 10:58:03.670"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.663" endtime="20201030 10:58:03.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.674" endtime="20201030 10:58:03.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.673" endtime="20201030 10:58:03.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.672" endtime="20201030 10:58:03.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.310" endtime="20201030 10:58:03.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.309" endtime="20201030 10:58:03.695"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.704" endtime="20201030 10:58:03.724"></status>
</kw>
<msg timestamp="20201030 10:58:03.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.703" endtime="20201030 10:58:03.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.726" endtime="20201030 10:58:03.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.729" endtime="20201030 10:58:03.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.700" endtime="20201030 10:58:03.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.698" endtime="20201030 10:58:03.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.739" endtime="20201030 10:58:04.026"></status>
</kw>
<msg timestamp="20201030 10:58:04.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023221292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023303764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.737" endtime="20201030 10:58:04.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023221292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023303764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.030" endtime="20201030 10:58:04.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.038" endtime="20201030 10:58:04.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.735" endtime="20201030 10:58:04.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.733" endtime="20201030 10:58:04.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.045" level="INFO">${RESULT} = [{'diff': 8.24720000000001e-05}, {'diff': 8.329099999999923e-05}, {'diff': 8.28049999999983e-05}, {'diff': 8.269400000000121e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.277699999999916e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:04.042" endtime="20201030 10:58:04.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:04.049" level="INFO">${ACCURACY} = {'diff': [8.24720000000001e-05, 8.329099999999923e-05, 8.28049999999983e-05, 8.269400000000121e-05, 8.286100000000005e-05, 8.277699999999916e-05, 8.243000000000139e-05, 8.269399999999774e-05, 8.261099...</msg>
<status status="PASS" starttime="20201030 10:58:04.046" endtime="20201030 10:58:04.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.054" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 10:58:04.053" endtime="20201030 10:58:04.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.057" level="INFO">VALUE: [8.24720000000001e-05, 8.329099999999923e-05, 8.28049999999983e-05, 8.269400000000121e-05, 8.286100000000005e-05, 8.277699999999916e-05, 8.243000000000139e-05, 8.269399999999774e-05, 8.26109999999998e-05, 8.26529999999985e-05, 8.248600000000314e-05, 8.252799999999838e-05, 8.28330000000009e-05, 8.274999999999949e-05, 8.263899999999894e-05, 8.26529999999985e-05, 8.248599999999967e-05, 8.284799999999995e-05, 8.251399999999881e-05, 8.276399999999906e-05, 8.308300000000116e-05, 8.258300000000066e-05, 8.270800000000078e-05, 8.290300000000222e-05, 8.270800000000078e-05, 8.249999999999924e-05, 8.244399999999749e-05, 8.254199999999795e-05, 8.290300000000222e-05, 8.276400000000253e-05, 8.291699999999833e-05, 8.27919999999982e-05, 8.29170000000018e-05, 8.274999999999949e-05, 8.287499999999962e-05, 8.283400000000038e-05, 8.290299999999876e-05, 8.29590000000005e-05, 8.290299999999876e-05, 8.290299999999876e-05, 8.26109999999998e-05, 8.259700000000023e-05, 8.277699999999916e-05, 8.281899999999787e-05, 8.256900000000109e-05, 8.256899999999762e-05, 8.287499999999962e-05, 8.279200000000167e-05, 8.288900000000265e-05, 8.273599999999992e-05]</msg>
<status status="PASS" starttime="20201030 10:58:04.055" endtime="20201030 10:58:04.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.050" endtime="20201030 10:58:04.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.063" endtime="20201030 10:58:04.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.061" endtime="20201030 10:58:04.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.060" endtime="20201030 10:58:04.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.696" endtime="20201030 10:58:04.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.696" endtime="20201030 10:58:04.083"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.093" endtime="20201030 10:58:04.112"></status>
</kw>
<msg timestamp="20201030 10:58:04.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.091" endtime="20201030 10:58:04.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.113" endtime="20201030 10:58:04.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.116" endtime="20201030 10:58:04.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.088" endtime="20201030 10:58:04.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.086" endtime="20201030 10:58:04.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.125" endtime="20201030 10:58:04.411"></status>
</kw>
<msg timestamp="20201030 10:58:04.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.124" endtime="20201030 10:58:04.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.416" endtime="20201030 10:58:04.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.425" endtime="20201030 10:58:04.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.121" endtime="20201030 10:58:04.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.119" endtime="20201030 10:58:04.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.432" level="INFO">${RESULT} = [{'diff': 8.387500000000062e-05}, {'diff': 8.441699999999983e-05}, {'diff': 8.381900000000234e-05}, {'diff': 8.398600000000117e-05}, {'diff': 8.405599999999902e-05}, {'diff': 8.390299999999976e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:04.428" endtime="20201030 10:58:04.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:04.437" level="INFO">${ACCURACY} = {'diff': [8.387500000000062e-05, 8.441699999999983e-05, 8.381900000000234e-05, 8.398600000000117e-05, 8.405599999999902e-05, 8.390299999999976e-05, 8.37780000000031e-05, 8.356900000000209e-05, 8.36389...</msg>
<status status="PASS" starttime="20201030 10:58:04.433" endtime="20201030 10:58:04.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.442" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 10:58:04.441" endtime="20201030 10:58:04.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.444" level="INFO">VALUE: [8.387500000000062e-05, 8.441699999999983e-05, 8.381900000000234e-05, 8.398600000000117e-05, 8.405599999999902e-05, 8.390299999999976e-05, 8.37780000000031e-05, 8.356900000000209e-05, 8.363899999999994e-05, 8.36110000000008e-05, 8.370799999999831e-05, 8.383299999999844e-05, 8.383400000000138e-05, 8.345899999999754e-05, 8.372300000000082e-05, 8.348600000000067e-05, 8.365300000000297e-05, 8.391599999999985e-05, 8.3846999999998e-05, 8.384700000000148e-05, 8.355499999999905e-05, 8.394500000000193e-05, 8.36659999999996e-05, 8.355499999999905e-05, 8.375000000000049e-05, 8.363899999999994e-05, 8.362500000000037e-05, 8.372200000000135e-05, 8.345799999999806e-05, 8.362500000000037e-05, 8.369500000000168e-05, 8.39309999999989e-05, 8.39309999999989e-05, 8.352799999999938e-05, 8.357000000000156e-05, 8.370900000000125e-05, 8.391699999999933e-05, 8.362500000000037e-05, 8.400000000000074e-05, 8.361099999999733e-05, 8.37919999999992e-05, 8.344399999999849e-05, 8.379099999999973e-05, 8.400000000000074e-05, 8.3846999999998e-05, 8.384700000000148e-05, 8.350000000000024e-05, 8.351399999999981e-05, 8.400000000000074e-05, 8.36249999999969e-05]</msg>
<status status="PASS" starttime="20201030 10:58:04.443" endtime="20201030 10:58:04.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.438" endtime="20201030 10:58:04.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.449" endtime="20201030 10:58:04.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.448" endtime="20201030 10:58:04.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.447" endtime="20201030 10:58:04.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.084" endtime="20201030 10:58:04.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.084" endtime="20201030 10:58:04.470"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.479" endtime="20201030 10:58:04.497"></status>
</kw>
<msg timestamp="20201030 10:58:04.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.478" endtime="20201030 10:58:04.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.499" endtime="20201030 10:58:04.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.501" endtime="20201030 10:58:04.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.475" endtime="20201030 10:58:04.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.473" endtime="20201030 10:58:04.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.511" endtime="20201030 10:58:04.798"></status>
</kw>
<msg timestamp="20201030 10:58:04.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.509" endtime="20201030 10:58:04.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.802" endtime="20201030 10:58:04.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.810" endtime="20201030 10:58:04.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.507" endtime="20201030 10:58:04.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.505" endtime="20201030 10:58:04.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.817" level="INFO">${RESULT} = [{'diff': 8.483299999999944e-05}, {'diff': 8.523600000000242e-05}, {'diff': 8.466700000000008e-05}, {'diff': 8.494499999999947e-05}, {'diff': 8.456999999999909e-05}, {'diff': 8.488900000000119e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:04.814" endtime="20201030 10:58:04.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:04.821" level="INFO">${ACCURACY} = {'diff': [8.483299999999944e-05, 8.523600000000242e-05, 8.466700000000008e-05, 8.494499999999947e-05, 8.456999999999909e-05, 8.488900000000119e-05, 8.461099999999833e-05, 8.4846999999999e-05, 8.461200...</msg>
<status status="PASS" starttime="20201030 10:58:04.818" endtime="20201030 10:58:04.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.827" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 10:58:04.826" endtime="20201030 10:58:04.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.830" level="INFO">VALUE: [8.483299999999944e-05, 8.523600000000242e-05, 8.466700000000008e-05, 8.494499999999947e-05, 8.456999999999909e-05, 8.488900000000119e-05, 8.461099999999833e-05, 8.4846999999999e-05, 8.461200000000127e-05, 8.502800000000088e-05, 8.487500000000162e-05, 8.494499999999947e-05, 8.479100000000073e-05, 8.48050000000003e-05, 8.470799999999931e-05, 8.447199999999863e-05, 8.490199999999781e-05, 8.469400000000321e-05, 8.497199999999913e-05, 8.462500000000137e-05, 8.47920000000002e-05, 8.458299999999919e-05, 8.459699999999876e-05, 8.472199999999888e-05, 8.491700000000033e-05, 8.458399999999866e-05, 8.465299999999704e-05, 8.458300000000266e-05, 8.469499999999922e-05, 8.472300000000182e-05, 8.491600000000085e-05, 8.490300000000076e-05, 8.468000000000017e-05, 8.499999999999827e-05, 8.481899999999987e-05, 8.449999999999777e-05, 8.44859999999982e-05, 8.469399999999974e-05, 8.47920000000002e-05, 8.494399999999999e-05, 8.505600000000002e-05, 8.454199999999995e-05, 8.461200000000127e-05, 8.461099999999833e-05, 8.495899999999904e-05, 8.454199999999995e-05, 8.462500000000137e-05, 8.469500000000268e-05, 8.468099999999965e-05, 8.469499999999922e-05]</msg>
<status status="PASS" starttime="20201030 10:58:04.828" endtime="20201030 10:58:04.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.822" endtime="20201030 10:58:04.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.835" endtime="20201030 10:58:04.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.834" endtime="20201030 10:58:04.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.832" endtime="20201030 10:58:04.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.471" endtime="20201030 10:58:04.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.471" endtime="20201030 10:58:04.856"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.865" endtime="20201030 10:58:04.887"></status>
</kw>
<msg timestamp="20201030 10:58:04.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.863" endtime="20201030 10:58:04.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.889" endtime="20201030 10:58:04.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.891" endtime="20201030 10:58:04.893"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.861" endtime="20201030 10:58:04.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.859" endtime="20201030 10:58:04.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.901" endtime="20201030 10:58:05.187"></status>
</kw>
<msg timestamp="20201030 10:58:05.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025880903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025967042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.899" endtime="20201030 10:58:05.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025880903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025967042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.191" endtime="20201030 10:58:05.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.200" endtime="20201030 10:58:05.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.897" endtime="20201030 10:58:05.202"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.895" endtime="20201030 10:58:05.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.206" level="INFO">${RESULT} = [{'diff': 8.613899999999897e-05}, {'diff': 8.619400000000124e-05}, {'diff': 8.56530000000015e-05}, {'diff': 8.576400000000206e-05}, {'diff': 8.597199999999666e-05}, {'diff': 8.555600000000052e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:05.203" endtime="20201030 10:58:05.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.211" level="INFO">${ACCURACY} = {'diff': [8.613899999999897e-05, 8.619400000000124e-05, 8.56530000000015e-05, 8.576400000000206e-05, 8.597199999999666e-05, 8.555600000000052e-05, 8.559699999999976e-05, 8.558300000000019e-05, 8.54589...</msg>
<status status="PASS" starttime="20201030 10:58:05.207" endtime="20201030 10:58:05.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.215" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.214" endtime="20201030 10:58:05.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.218" level="INFO">VALUE: [8.613899999999897e-05, 8.619400000000124e-05, 8.56530000000015e-05, 8.576400000000206e-05, 8.597199999999666e-05, 8.555600000000052e-05, 8.559699999999976e-05, 8.558300000000019e-05, 8.545899999999954e-05, 8.554200000000095e-05, 8.56249999999989e-05, 8.559799999999923e-05, 8.572299999999936e-05, 8.59729999999996e-05, 8.568100000000065e-05, 8.562500000000237e-05, 8.54859999999992e-05, 8.592999999999795e-05, 8.572199999999988e-05, 8.555500000000105e-05, 8.576399999999859e-05, 8.5847e-05, 8.552799999999791e-05, 8.591699999999786e-05, 8.590299999999829e-05, 8.591700000000133e-05, 8.545799999999659e-05, 8.56249999999989e-05, 8.563900000000194e-05, 8.552800000000138e-05, 8.577800000000163e-05, 8.548700000000214e-05, 8.54310000000004e-05, 8.563899999999847e-05, 8.59859999999997e-05, 8.606900000000112e-05, 8.554100000000148e-05, 8.576299999999912e-05, 8.549999999999877e-05, 8.579099999999826e-05, 8.545800000000006e-05, 8.5847e-05, 8.557000000000009e-05, 8.54859999999992e-05, 8.58059999999973e-05, 8.591700000000133e-05, 8.591700000000133e-05, 8.568100000000065e-05, 8.552800000000138e-05, 8.587499999999915e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.216" endtime="20201030 10:58:05.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.211" endtime="20201030 10:58:05.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.231" endtime="20201030 10:58:05.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.229" endtime="20201030 10:58:05.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.228" endtime="20201030 10:58:05.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.857" endtime="20201030 10:58:05.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.856" endtime="20201030 10:58:05.252"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.261" endtime="20201030 10:58:05.279"></status>
</kw>
<msg timestamp="20201030 10:58:05.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.259" endtime="20201030 10:58:05.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.281" endtime="20201030 10:58:05.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.283" endtime="20201030 10:58:05.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.256" endtime="20201030 10:58:05.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.254" endtime="20201030 10:58:05.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.293" endtime="20201030 10:58:05.579"></status>
</kw>
<msg timestamp="20201030 10:58:05.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.291" endtime="20201030 10:58:05.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.583" endtime="20201030 10:58:05.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.592" endtime="20201030 10:58:05.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.288" endtime="20201030 10:58:05.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.286" endtime="20201030 10:58:05.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.598" level="INFO">${RESULT} = [{'diff': 8.720799999999834e-05}, {'diff': 8.738900000000022e-05}, {'diff': 8.701400000000331e-05}, {'diff': 8.677799999999916e-05}, {'diff': 8.691699999999886e-05}, {'diff': 8.682000000000134e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:05.595" endtime="20201030 10:58:05.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.604" level="INFO">${ACCURACY} = {'diff': [8.720799999999834e-05, 8.738900000000022e-05, 8.701400000000331e-05, 8.677799999999916e-05, 8.691699999999886e-05, 8.682000000000134e-05, 8.694500000000147e-05, 8.673600000000045e-05, 8.6820...</msg>
<status status="PASS" starttime="20201030 10:58:05.600" endtime="20201030 10:58:05.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.608" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.607" endtime="20201030 10:58:05.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.611" level="INFO">VALUE: [8.720799999999834e-05, 8.738900000000022e-05, 8.701400000000331e-05, 8.677799999999916e-05, 8.691699999999886e-05, 8.682000000000134e-05, 8.694500000000147e-05, 8.673600000000045e-05, 8.682000000000134e-05, 8.672200000000088e-05, 8.677699999999969e-05, 8.694399999999852e-05, 8.686100000000058e-05, 8.66249999999999e-05, 8.677800000000263e-05, 8.661100000000033e-05, 8.670800000000131e-05, 8.665299999999904e-05, 8.691700000000233e-05, 8.647200000000063e-05, 8.644500000000097e-05, 8.67920000000022e-05, 8.693099999999843e-05, 8.66249999999999e-05, 8.638899999999922e-05, 8.656900000000162e-05, 8.665299999999904e-05, 8.672300000000036e-05, 8.681999999999787e-05, 8.681900000000187e-05, 8.654099999999901e-05, 8.676399999999959e-05, 8.663899999999947e-05, 8.702799999999941e-05, 8.683299999999797e-05, 8.697200000000113e-05, 8.688899999999972e-05, 8.683300000000144e-05, 8.676399999999959e-05, 8.691699999999886e-05, 8.658299999999772e-05, 8.669500000000122e-05, 8.690300000000276e-05, 8.661100000000033e-05, 8.700000000000027e-05, 8.672300000000036e-05, 8.659700000000076e-05, 8.672200000000088e-05, 8.658300000000119e-05, 8.669399999999827e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.609" endtime="20201030 10:58:05.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.605" endtime="20201030 10:58:05.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.616" endtime="20201030 10:58:05.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.615" endtime="20201030 10:58:05.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.613" endtime="20201030 10:58:05.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.253" endtime="20201030 10:58:05.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.252" endtime="20201030 10:58:05.637"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.646" endtime="20201030 10:58:05.665"></status>
</kw>
<msg timestamp="20201030 10:58:05.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.644" endtime="20201030 10:58:05.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.666" endtime="20201030 10:58:05.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.669" endtime="20201030 10:58:05.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.642" endtime="20201030 10:58:05.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.640" endtime="20201030 10:58:05.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.678" endtime="20201030 10:58:05.965"></status>
</kw>
<msg timestamp="20201030 10:58:05.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.677" endtime="20201030 10:58:05.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.969" endtime="20201030 10:58:05.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.978" endtime="20201030 10:58:05.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.674" endtime="20201030 10:58:05.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.672" endtime="20201030 10:58:05.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.985" level="INFO">${RESULT} = [{'diff': 8.795799999999909e-05}, {'diff': 8.83189999999999e-05}, {'diff': 8.776399999999712e-05}, {'diff': 8.797200000000213e-05}, {'diff': 8.780499999999983e-05}, {'diff': 8.741699999999936e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:05.981" endtime="20201030 10:58:05.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.989" level="INFO">${ACCURACY} = {'diff': [8.795799999999909e-05, 8.83189999999999e-05, 8.776399999999712e-05, 8.797200000000213e-05, 8.780499999999983e-05, 8.741699999999936e-05, 8.802799999999694e-05, 8.795800000000256e-05, 8.77359...</msg>
<status status="PASS" starttime="20201030 10:58:05.986" endtime="20201030 10:58:05.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.994" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.993" endtime="20201030 10:58:05.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.996" level="INFO">VALUE: [8.795799999999909e-05, 8.83189999999999e-05, 8.776399999999712e-05, 8.797200000000213e-05, 8.780499999999983e-05, 8.741699999999936e-05, 8.802799999999694e-05, 8.795800000000256e-05, 8.773599999999798e-05, 8.756999999999862e-05, 8.795799999999909e-05, 8.750000000000077e-05, 8.738900000000022e-05, 8.7944999999999e-05, 8.747299999999764e-05, 8.769500000000222e-05, 8.758400000000166e-05, 8.784699999999854e-05, 8.769399999999927e-05, 8.756900000000262e-05, 8.794399999999952e-05, 8.78189999999994e-05, 8.747199999999816e-05, 8.777800000000016e-05, 8.775000000000102e-05, 8.795799999999909e-05, 8.756899999999915e-05, 8.754199999999948e-05, 8.756999999999862e-05, 8.758399999999819e-05, 8.751400000000034e-05, 8.765300000000004e-05, 8.76250000000009e-05, 8.770899999999832e-05, 8.78189999999994e-05, 8.755499999999958e-05, 8.805500000000008e-05, 8.765200000000056e-05, 8.752700000000044e-05, 8.747200000000163e-05, 8.750000000000077e-05, 8.802800000000041e-05, 8.773599999999798e-05, 8.783300000000244e-05, 8.754199999999948e-05, 8.777800000000016e-05, 8.761099999999786e-05, 8.766600000000013e-05, 8.756999999999862e-05, 8.76250000000009e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.995" endtime="20201030 10:58:05.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.990" endtime="20201030 10:58:05.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.002" endtime="20201030 10:58:06.021"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.000" endtime="20201030 10:58:06.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.999" endtime="20201030 10:58:06.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.638" endtime="20201030 10:58:06.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.637" endtime="20201030 10:58:06.022"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.032" endtime="20201030 10:58:06.051"></status>
</kw>
<msg timestamp="20201030 10:58:06.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.031" endtime="20201030 10:58:06.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.053" endtime="20201030 10:58:06.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.055" endtime="20201030 10:58:06.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.028" endtime="20201030 10:58:06.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.026" endtime="20201030 10:58:06.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.065" endtime="20201030 10:58:06.351"></status>
</kw>
<msg timestamp="20201030 10:58:06.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024163583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024252806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.063" endtime="20201030 10:58:06.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024163583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024252806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.355" endtime="20201030 10:58:06.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.364" endtime="20201030 10:58:06.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.060" endtime="20201030 10:58:06.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.059" endtime="20201030 10:58:06.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.371" level="INFO">${RESULT} = [{'diff': 8.922299999999939e-05}, {'diff': 8.859799999999876e-05}, {'diff': 8.861099999999886e-05}, {'diff': 8.888900000000172e-05}, {'diff': 8.870799999999984e-05}, {'diff': 8.887500000000215e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:06.368" endtime="20201030 10:58:06.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:06.375" level="INFO">${ACCURACY} = {'diff': [8.922299999999939e-05, 8.859799999999876e-05, 8.861099999999886e-05, 8.888900000000172e-05, 8.870799999999984e-05, 8.887500000000215e-05, 8.86670000000006e-05, 8.883400000000291e-05, 8.85000...</msg>
<status status="PASS" starttime="20201030 10:58:06.372" endtime="20201030 10:58:06.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.380" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 10:58:06.379" endtime="20201030 10:58:06.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.382" level="INFO">VALUE: [8.922299999999939e-05, 8.859799999999876e-05, 8.861099999999886e-05, 8.888900000000172e-05, 8.870799999999984e-05, 8.887500000000215e-05, 8.86670000000006e-05, 8.883400000000291e-05, 8.850000000000177e-05, 8.8638999999998e-05, 8.883299999999997e-05, 8.873599999999898e-05, 8.895800000000009e-05, 8.845799999999959e-05, 8.884699999999954e-05, 8.847199999999916e-05, 8.901399999999837e-05, 8.861099999999886e-05, 8.897199999999966e-05, 8.89730000000026e-05, 8.876299999999865e-05, 8.869400000000027e-05, 8.858299999999972e-05, 8.888900000000172e-05, 8.870899999999932e-05, 8.877800000000116e-05, 8.872300000000236e-05, 8.855500000000058e-05, 8.88190000000004e-05, 8.858299999999972e-05, 8.859700000000276e-05, 8.841599999999741e-05, 8.892999999999748e-05, 8.845799999999959e-05, 8.861099999999886e-05, 8.883299999999997e-05, 8.892999999999748e-05, 8.880500000000083e-05, 8.856900000000015e-05, 8.877799999999769e-05, 8.858299999999972e-05, 8.84999999999983e-05, 8.879199999999726e-05, 8.851399999999787e-05, 8.897299999999914e-05, 8.865300000000104e-05, 8.863900000000147e-05, 8.870799999999984e-05, 8.843000000000045e-05, 8.876400000000159e-05]</msg>
<status status="PASS" starttime="20201030 10:58:06.381" endtime="20201030 10:58:06.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.376" endtime="20201030 10:58:06.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.389" endtime="20201030 10:58:06.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.387" endtime="20201030 10:58:06.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.386" endtime="20201030 10:58:06.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.024" endtime="20201030 10:58:06.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.023" endtime="20201030 10:58:06.410"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.419" endtime="20201030 10:58:06.438"></status>
</kw>
<msg timestamp="20201030 10:58:06.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.418" endtime="20201030 10:58:06.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.439" endtime="20201030 10:58:06.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.442" endtime="20201030 10:58:06.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.415" endtime="20201030 10:58:06.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.412" endtime="20201030 10:58:06.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.451" endtime="20201030 10:58:06.737"></status>
</kw>
<msg timestamp="20201030 10:58:06.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.450" endtime="20201030 10:58:06.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.742" endtime="20201030 10:58:06.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.750" endtime="20201030 10:58:06.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.447" endtime="20201030 10:58:06.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.445" endtime="20201030 10:58:06.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.757" level="INFO">${RESULT} = [{'diff': 9.008300000000122e-05}, {'diff': 8.944399999999755e-05}, {'diff': 8.973699999999946e-05}, {'diff': 8.958399999999672e-05}, {'diff': 8.987499999999968e-05}, {'diff': 8.973599999999998e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:06.753" endtime="20201030 10:58:06.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:06.762" level="INFO">${ACCURACY} = {'diff': [9.008300000000122e-05, 8.944399999999755e-05, 8.973699999999946e-05, 8.958399999999672e-05, 8.987499999999968e-05, 8.973599999999998e-05, 8.955499999999811e-05, 8.995800000000109e-05, 8.9666...</msg>
<status status="PASS" starttime="20201030 10:58:06.758" endtime="20201030 10:58:06.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.767" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 10:58:06.766" endtime="20201030 10:58:06.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.769" level="INFO">VALUE: [9.008300000000122e-05, 8.944399999999755e-05, 8.973699999999946e-05, 8.958399999999672e-05, 8.987499999999968e-05, 8.973599999999998e-05, 8.955499999999811e-05, 8.995800000000109e-05, 8.966600000000213e-05, 8.979200000000173e-05, 8.947200000000016e-05, 8.970800000000084e-05, 8.959699999999682e-05, 8.99999999999998e-05, 8.982000000000087e-05, 8.959799999999976e-05, 8.993099999999796e-05, 8.94450000000005e-05, 9.006900000000165e-05, 8.982000000000087e-05, 8.94869999999992e-05, 8.995800000000109e-05, 8.980499999999836e-05, 8.972200000000041e-05, 8.955499999999811e-05, 8.937499999999918e-05, 8.944400000000102e-05, 8.980499999999836e-05, 8.940299999999832e-05, 8.998600000000023e-05, 8.994399999999805e-05, 8.952799999999844e-05, 8.972200000000041e-05, 8.956999999999715e-05, 8.952799999999844e-05, 8.96670000000016e-05, 8.955599999999758e-05, 8.993000000000195e-05, 8.972299999999989e-05, 8.99999999999998e-05, 8.957000000000062e-05, 8.987499999999968e-05, 8.954100000000201e-05, 9.001399999999937e-05, 8.9638999999999e-05, 8.979099999999879e-05, 8.959700000000029e-05, 8.970800000000084e-05, 8.950000000000277e-05, 8.952799999999844e-05]</msg>
<status status="PASS" starttime="20201030 10:58:06.768" endtime="20201030 10:58:06.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.763" endtime="20201030 10:58:06.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.775" endtime="20201030 10:58:06.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.773" endtime="20201030 10:58:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.772" endtime="20201030 10:58:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.411" endtime="20201030 10:58:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.410" endtime="20201030 10:58:06.795"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.804" endtime="20201030 10:58:06.824"></status>
</kw>
<msg timestamp="20201030 10:58:06.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.803" endtime="20201030 10:58:06.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.826" endtime="20201030 10:58:06.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.828" endtime="20201030 10:58:06.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.800" endtime="20201030 10:58:06.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.798" endtime="20201030 10:58:06.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.838" endtime="20201030 10:58:07.124"></status>
</kw>
<msg timestamp="20201030 10:58:07.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.836" endtime="20201030 10:58:07.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.128" endtime="20201030 10:58:07.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.136" endtime="20201030 10:58:07.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.833" endtime="20201030 10:58:07.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.832" endtime="20201030 10:58:07.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.143" level="INFO">${RESULT} = [{'diff': 9.102799999999994e-05}, {'diff': 9.059699999999782e-05}, {'diff': 9.076400000000012e-05}, {'diff': 9.090200000000034e-05}, {'diff': 9.083300000000197e-05}, {'diff': 9.091699999999939e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:07.140" endtime="20201030 10:58:07.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.148" level="INFO">${ACCURACY} = {'diff': [9.102799999999994e-05, 9.059699999999782e-05, 9.076400000000012e-05, 9.090200000000034e-05, 9.083300000000197e-05, 9.091699999999939e-05, 9.091699999999939e-05, 9.047200000000116e-05, 9.0861...</msg>
<status status="PASS" starttime="20201030 10:58:07.144" endtime="20201030 10:58:07.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.152" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.151" endtime="20201030 10:58:07.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.155" level="INFO">VALUE: [9.102799999999994e-05, 9.059699999999782e-05, 9.076400000000012e-05, 9.090200000000034e-05, 9.083300000000197e-05, 9.091699999999939e-05, 9.091699999999939e-05, 9.047200000000116e-05, 9.086100000000111e-05, 9.083400000000144e-05, 9.075000000000055e-05, 9.08329999999985e-05, 9.095800000000209e-05, 9.047200000000116e-05, 9.067999999999923e-05, 9.095800000000209e-05, 9.10000000000008e-05, 9.10139999999969e-05, 9.0639e-05, 9.097199999999819e-05, 9.077799999999969e-05, 9.084700000000154e-05, 9.04450000000015e-05, 9.038899999999975e-05, 9.093099999999896e-05, 9.084800000000101e-05, 9.095799999999862e-05, 9.048599999999726e-05, 9.047200000000116e-05, 9.05000000000003e-05, 9.080599999999883e-05, 9.095800000000209e-05, 9.054099999999954e-05, 9.081899999999893e-05, 9.077799999999969e-05, 9.098599999999776e-05, 9.10000000000008e-05, 9.052799999999944e-05, 9.076400000000012e-05, 9.081899999999893e-05, 9.051399999999987e-05, 9.073600000000098e-05, 9.043099999999846e-05, 9.062499999999696e-05, 9.080599999999883e-05, 9.040299999999932e-05, 9.086200000000058e-05, 9.065299999999957e-05, 9.095799999999862e-05, 9.045800000000159e-05]</msg>
<status status="PASS" starttime="20201030 10:58:07.153" endtime="20201030 10:58:07.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.148" endtime="20201030 10:58:07.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.160" endtime="20201030 10:58:07.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.158" endtime="20201030 10:58:07.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.157" endtime="20201030 10:58:07.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.796" endtime="20201030 10:58:07.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.796" endtime="20201030 10:58:07.181"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.190" endtime="20201030 10:58:07.208"></status>
</kw>
<msg timestamp="20201030 10:58:07.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.188" endtime="20201030 10:58:07.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.210" endtime="20201030 10:58:07.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.212" endtime="20201030 10:58:07.214"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.185" endtime="20201030 10:58:07.215"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.183" endtime="20201030 10:58:07.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.222" endtime="20201030 10:58:07.510"></status>
</kw>
<msg timestamp="20201030 10:58:07.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02313725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023229444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:07.220" endtime="20201030 10:58:07.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02313725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023229444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:07.514" endtime="20201030 10:58:07.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.522" endtime="20201030 10:58:07.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.218" endtime="20201030 10:58:07.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.216" endtime="20201030 10:58:07.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.529" level="INFO">${RESULT} = [{'diff': 9.219399999999683e-05}, {'diff': 9.244399999999708e-05}, {'diff': 9.154200000000001e-05}, {'diff': 9.162500000000143e-05}, {'diff': 9.152800000000044e-05}, {'diff': 9.162499999999796e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:07.526" endtime="20201030 10:58:07.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.533" level="INFO">${ACCURACY} = {'diff': [9.219399999999683e-05, 9.244399999999708e-05, 9.154200000000001e-05, 9.162500000000143e-05, 9.152800000000044e-05, 9.162499999999796e-05, 9.197299999999867e-05, 9.184799999999854e-05, 9.1665...</msg>
<status status="PASS" starttime="20201030 10:58:07.530" endtime="20201030 10:58:07.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.538" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.537" endtime="20201030 10:58:07.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.540" level="INFO">VALUE: [9.219399999999683e-05, 9.244399999999708e-05, 9.154200000000001e-05, 9.162500000000143e-05, 9.152800000000044e-05, 9.162499999999796e-05, 9.197299999999867e-05, 9.184799999999854e-05, 9.16659999999972e-05, 9.14719999999987e-05, 9.180500000000036e-05, 9.162500000000143e-05, 9.191600000000091e-05, 9.173599999999851e-05, 9.151400000000087e-05, 9.151400000000087e-05, 9.20000000000018e-05, 9.176400000000112e-05, 9.145799999999912e-05, 9.154200000000001e-05, 9.147200000000216e-05, 9.141699999999989e-05, 9.175000000000155e-05, 9.195799999999962e-05, 9.191700000000039e-05, 9.198699999999824e-05, 9.184699999999907e-05, 9.199999999999833e-05, 9.15269999999975e-05, 9.162499999999796e-05, 9.209700000000279e-05, 9.144400000000302e-05, 9.166700000000014e-05, 9.205500000000061e-05, 9.15000000000013e-05, 9.198599999999876e-05, 9.198599999999876e-05, 9.186099999999864e-05, 9.154200000000001e-05, 9.177799999999722e-05, 9.161100000000186e-05, 9.161100000000186e-05, 9.179100000000079e-05, 9.16939999999998e-05, 9.193099999999996e-05, 9.151400000000087e-05, 9.19719999999992e-05, 9.170799999999937e-05, 9.159699999999882e-05, 9.14719999999987e-05]</msg>
<status status="PASS" starttime="20201030 10:58:07.539" endtime="20201030 10:58:07.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.534" endtime="20201030 10:58:07.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.547" endtime="20201030 10:58:07.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.545" endtime="20201030 10:58:07.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.544" endtime="20201030 10:58:07.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.182" endtime="20201030 10:58:07.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.181" endtime="20201030 10:58:07.568"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.577" endtime="20201030 10:58:07.596"></status>
</kw>
<msg timestamp="20201030 10:58:07.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.575" endtime="20201030 10:58:07.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.597" endtime="20201030 10:58:07.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.600" endtime="20201030 10:58:07.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.572" endtime="20201030 10:58:07.602"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.570" endtime="20201030 10:58:07.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.609" endtime="20201030 10:58:07.897"></status>
</kw>
<msg timestamp="20201030 10:58:07.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.608" endtime="20201030 10:58:07.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.901" endtime="20201030 10:58:07.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.909" endtime="20201030 10:58:07.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.605" endtime="20201030 10:58:07.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.603" endtime="20201030 10:58:07.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.915" level="INFO">${RESULT} = [{'diff': 9.316600000000216e-05}, {'diff': 9.319500000000078e-05}, {'diff': 9.254200000000101e-05}, {'diff': 9.279199999999779e-05}, {'diff': 9.279199999999779e-05}, {'diff': 9.307000000000065e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:07.912" endtime="20201030 10:58:07.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.920" level="INFO">${ACCURACY} = {'diff': [9.316600000000216e-05, 9.319500000000078e-05, 9.254200000000101e-05, 9.279199999999779e-05, 9.279199999999779e-05, 9.307000000000065e-05, 9.257000000000015e-05, 9.258300000000025e-05, 9.2680...</msg>
<status status="PASS" starttime="20201030 10:58:07.916" endtime="20201030 10:58:07.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.925" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.924" endtime="20201030 10:58:07.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.927" level="INFO">VALUE: [9.316600000000216e-05, 9.319500000000078e-05, 9.254200000000101e-05, 9.279199999999779e-05, 9.279199999999779e-05, 9.307000000000065e-05, 9.257000000000015e-05, 9.258300000000025e-05, 9.268099999999724e-05, 9.279199999999779e-05, 9.269500000000028e-05, 9.277700000000222e-05, 9.251400000000187e-05, 9.251400000000187e-05, 9.248599999999926e-05, 9.286099999999964e-05, 9.293000000000148e-05, 9.301400000000237e-05, 9.24719999999997e-05, 9.277799999999822e-05, 9.261099999999939e-05, 9.277800000000169e-05, 9.287500000000268e-05, 9.265300000000157e-05, 9.258399999999972e-05, 9.241700000000089e-05, 9.273699999999899e-05, 9.261100000000286e-05, 9.244399999999708e-05, 9.290299999999835e-05, 9.272199999999994e-05, 9.298599999999976e-05, 9.261099999999939e-05, 9.25000000000023e-05, 9.290299999999835e-05, 9.272199999999994e-05, 9.293000000000148e-05, 9.259699999999982e-05, 9.262500000000243e-05, 9.293100000000096e-05, 9.236099999999914e-05, 9.265300000000157e-05, 9.268000000000123e-05, 9.29590000000001e-05, 9.25139999999984e-05, 9.305600000000108e-05, 9.265199999999862e-05, 9.291600000000191e-05, 9.261100000000286e-05, 9.284700000000007e-05]</msg>
<status status="PASS" starttime="20201030 10:58:07.926" endtime="20201030 10:58:07.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.921" endtime="20201030 10:58:07.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.932" endtime="20201030 10:58:07.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.931" endtime="20201030 10:58:07.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.929" endtime="20201030 10:58:07.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.568" endtime="20201030 10:58:07.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.568" endtime="20201030 10:58:07.953"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.961" endtime="20201030 10:58:07.980"></status>
</kw>
<msg timestamp="20201030 10:58:07.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.960" endtime="20201030 10:58:07.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.981" endtime="20201030 10:58:07.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.984" endtime="20201030 10:58:07.985"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.957" endtime="20201030 10:58:07.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.955" endtime="20201030 10:58:07.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.993" endtime="20201030 10:58:08.279"></status>
</kw>
<msg timestamp="20201030 10:58:08.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.991" endtime="20201030 10:58:08.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.284" endtime="20201030 10:58:08.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.292" endtime="20201030 10:58:08.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.989" endtime="20201030 10:58:08.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.987" endtime="20201030 10:58:08.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.298" level="INFO">${RESULT} = [{'diff': 9.388899999999978e-05}, {'diff': 9.419399999999883e-05}, {'diff': 9.355500000000211e-05}, {'diff': 9.352799999999897e-05}, {'diff': 9.3639000000003e-05}, {'diff': 9.36659999999992e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:08.295" endtime="20201030 10:58:08.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:08.302" level="INFO">${ACCURACY} = {'diff': [9.388899999999978e-05, 9.419399999999883e-05, 9.355500000000211e-05, 9.352799999999897e-05, 9.3639000000003e-05, 9.36659999999992e-05, 9.359700000000082e-05, 9.358299999999778e-05, 9.3958000...</msg>
<status status="PASS" starttime="20201030 10:58:08.299" endtime="20201030 10:58:08.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.307" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 10:58:08.306" endtime="20201030 10:58:08.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.309" level="INFO">VALUE: [9.388899999999978e-05, 9.419399999999883e-05, 9.355500000000211e-05, 9.352799999999897e-05, 9.3639000000003e-05, 9.36659999999992e-05, 9.359700000000082e-05, 9.358299999999778e-05, 9.395800000000162e-05, 9.369500000000128e-05, 9.355600000000158e-05, 9.381999999999793e-05, 9.34590000000006e-05, 9.34590000000006e-05, 9.372300000000042e-05, 9.395799999999815e-05, 9.394399999999858e-05, 9.395799999999815e-05, 9.390199999999987e-05, 9.398600000000076e-05, 9.36659999999992e-05, 9.395799999999815e-05, 9.390299999999935e-05, 9.372199999999747e-05, 9.394399999999858e-05, 9.372200000000094e-05, 9.388899999999978e-05, 9.375000000000008e-05, 9.394499999999806e-05, 9.386100000000064e-05, 9.352799999999897e-05, 9.355499999999864e-05, 9.340199999999937e-05, 9.398600000000076e-05, 9.36659999999992e-05, 9.373600000000051e-05, 9.381899999999846e-05, 9.395800000000162e-05, 9.372199999999747e-05, 9.387500000000021e-05, 9.373600000000051e-05, 9.341700000000189e-05, 9.397199999999772e-05, 9.388899999999978e-05, 9.344500000000103e-05, 9.390299999999935e-05, 9.387499999999674e-05, 9.343100000000146e-05, 9.379200000000226e-05, 9.394499999999806e-05]</msg>
<status status="PASS" starttime="20201030 10:58:08.308" endtime="20201030 10:58:08.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.303" endtime="20201030 10:58:08.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.314" endtime="20201030 10:58:08.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.313" endtime="20201030 10:58:08.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.312" endtime="20201030 10:58:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.954" endtime="20201030 10:58:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.953" endtime="20201030 10:58:08.335"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.343" endtime="20201030 10:58:08.366"></status>
</kw>
<msg timestamp="20201030 10:58:08.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.342" endtime="20201030 10:58:08.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.367" endtime="20201030 10:58:08.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.370" endtime="20201030 10:58:08.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.339" endtime="20201030 10:58:08.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.337" endtime="20201030 10:58:08.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.379" endtime="20201030 10:58:08.678"></status>
</kw>
<msg timestamp="20201030 10:58:08.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024980819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025075986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.377" endtime="20201030 10:58:08.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024980819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025075986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.682" endtime="20201030 10:58:08.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.690" endtime="20201030 10:58:08.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.375" endtime="20201030 10:58:08.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.373" endtime="20201030 10:58:08.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.697" level="INFO">${RESULT} = [{'diff': 9.516700000000017e-05}, {'diff': 9.536099999999867e-05}, {'diff': 9.44859999999978e-05}, {'diff': 9.491699999999992e-05}, {'diff': 9.500000000000133e-05}, {'diff': 9.450000000000083e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:08.694" endtime="20201030 10:58:08.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:08.701" level="INFO">${ACCURACY} = {'diff': [9.516700000000017e-05, 9.536099999999867e-05, 9.44859999999978e-05, 9.491699999999992e-05, 9.500000000000133e-05, 9.450000000000083e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.4666999...</msg>
<status status="PASS" starttime="20201030 10:58:08.698" endtime="20201030 10:58:08.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.705" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 10:58:08.704" endtime="20201030 10:58:08.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.708" level="INFO">VALUE: [9.516700000000017e-05, 9.536099999999867e-05, 9.44859999999978e-05, 9.491699999999992e-05, 9.500000000000133e-05, 9.450000000000083e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.466699999999967e-05, 9.494499999999906e-05, 9.490300000000035e-05, 9.455599999999911e-05, 9.479199999999979e-05, 9.488900000000078e-05, 9.472199999999847e-05, 9.473599999999804e-05, 9.48339999999985e-05, 9.450000000000083e-05, 9.49590000000021e-05, 9.472199999999847e-05, 9.458299999999878e-05, 9.467999999999976e-05, 9.481899999999946e-05, 9.442999999999951e-05, 9.499999999999786e-05, 9.479099999999685e-05, 9.486100000000164e-05, 9.459699999999835e-05, 9.495799999999915e-05, 9.495799999999915e-05, 9.472200000000194e-05, 9.47079999999989e-05, 9.450000000000083e-05, 9.455499999999964e-05, 9.448600000000126e-05, 9.46530000000001e-05, 9.49729999999982e-05, 9.440200000000037e-05, 9.46940000000028e-05, 9.46530000000001e-05, 9.473600000000151e-05, 9.46530000000001e-05, 9.463899999999706e-05, 9.495799999999915e-05, 9.511099999999842e-05, 9.447199999999822e-05, 9.511100000000189e-05, 9.466699999999967e-05, 9.459700000000182e-05, 9.501399999999743e-05]</msg>
<status status="PASS" starttime="20201030 10:58:08.707" endtime="20201030 10:58:08.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.702" endtime="20201030 10:58:08.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.714" endtime="20201030 10:58:08.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.712" endtime="20201030 10:58:08.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.711" endtime="20201030 10:58:08.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.336" endtime="20201030 10:58:08.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.335" endtime="20201030 10:58:08.734"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.743" endtime="20201030 10:58:08.762"></status>
</kw>
<msg timestamp="20201030 10:58:08.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.741" endtime="20201030 10:58:08.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.763" endtime="20201030 10:58:08.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.766" endtime="20201030 10:58:08.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.739" endtime="20201030 10:58:08.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.737" endtime="20201030 10:58:08.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.775" endtime="20201030 10:58:09.059"></status>
</kw>
<msg timestamp="20201030 10:58:09.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.773" endtime="20201030 10:58:09.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.063" endtime="20201030 10:58:09.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.072" endtime="20201030 10:58:09.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.771" endtime="20201030 10:58:09.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.769" endtime="20201030 10:58:09.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.078" level="INFO">${RESULT} = [{'diff': 9.574999999999861e-05}, {'diff': 9.57079999999999e-05}, {'diff': 9.56799999999973e-05}, {'diff': 9.561099999999892e-05}, {'diff': 9.558299999999978e-05}, {'diff': 9.590299999999788e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:09.075" endtime="20201030 10:58:09.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:09.083" level="INFO">${ACCURACY} = {'diff': [9.574999999999861e-05, 9.57079999999999e-05, 9.56799999999973e-05, 9.561099999999892e-05, 9.558299999999978e-05, 9.590299999999788e-05, 9.579200000000079e-05, 9.6027999999998e-05, 9.58060000...</msg>
<status status="PASS" starttime="20201030 10:58:09.079" endtime="20201030 10:58:09.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.087" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 10:58:09.086" endtime="20201030 10:58:09.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.090" level="INFO">VALUE: [9.574999999999861e-05, 9.57079999999999e-05, 9.56799999999973e-05, 9.561099999999892e-05, 9.558299999999978e-05, 9.590299999999788e-05, 9.579200000000079e-05, 9.6027999999998e-05, 9.580600000000036e-05, 9.543099999999999e-05, 9.581900000000046e-05, 9.54729999999987e-05, 9.543099999999999e-05, 9.595899999999963e-05, 9.58469999999996e-05, 9.577700000000175e-05, 9.600000000000233e-05, 9.576399999999818e-05, 9.613899999999856e-05, 9.580499999999742e-05, 9.595799999999668e-05, 9.561100000000239e-05, 9.576399999999818e-05, 9.583300000000003e-05, 9.559699999999935e-05, 9.595899999999963e-05, 9.595899999999963e-05, 9.577800000000122e-05, 9.59859999999993e-05, 9.58339999999995e-05, 9.573700000000199e-05, 9.580500000000089e-05, 9.587500000000221e-05, 9.605500000000114e-05, 9.545799999999965e-05, 9.556999999999968e-05, 9.547199999999922e-05, 9.543099999999999e-05, 9.59729999999992e-05, 9.576399999999818e-05, 9.556999999999968e-05, 9.593100000000049e-05, 9.547199999999922e-05, 9.58339999999995e-05, 9.573599999999904e-05, 9.556999999999968e-05, 9.561199999999839e-05, 9.58880000000023e-05, 9.559699999999935e-05, 9.591600000000144e-05]</msg>
<status status="PASS" starttime="20201030 10:58:09.089" endtime="20201030 10:58:09.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.084" endtime="20201030 10:58:09.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.095" endtime="20201030 10:58:09.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.093" endtime="20201030 10:58:09.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.092" endtime="20201030 10:58:09.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.735" endtime="20201030 10:58:09.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.735" endtime="20201030 10:58:09.115"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.124" endtime="20201030 10:58:09.143"></status>
</kw>
<msg timestamp="20201030 10:58:09.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.122" endtime="20201030 10:58:09.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.144" endtime="20201030 10:58:09.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.147" endtime="20201030 10:58:09.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.120" endtime="20201030 10:58:09.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.118" endtime="20201030 10:58:09.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.156" endtime="20201030 10:58:09.443"></status>
</kw>
<msg timestamp="20201030 10:58:09.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021582, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:09.154" endtime="20201030 10:58:09.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021582, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:09.448" endtime="20201030 10:58:09.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.456" endtime="20201030 10:58:09.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.152" endtime="20201030 10:58:09.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.150" endtime="20201030 10:58:09.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.462" level="INFO">${RESULT} = [{'diff': 9.647200000000022e-05}, {'diff': 9.663799999999959e-05}, {'diff': 9.701399999999943e-05}, {'diff': 9.679099999999885e-05}, {'diff': 9.69730000000002e-05}, {'diff': 9.65270000000025e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:09.459" endtime="20201030 10:58:09.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:09.466" level="INFO">${ACCURACY} = {'diff': [9.647200000000022e-05, 9.663799999999959e-05, 9.701399999999943e-05, 9.679099999999885e-05, 9.69730000000002e-05, 9.65270000000025e-05, 9.683299999999756e-05, 9.651399999999893e-05, 9.658300...</msg>
<status status="PASS" starttime="20201030 10:58:09.463" endtime="20201030 10:58:09.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.471" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 10:58:09.470" endtime="20201030 10:58:09.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.473" level="INFO">VALUE: [9.647200000000022e-05, 9.663799999999959e-05, 9.701399999999943e-05, 9.679099999999885e-05, 9.69730000000002e-05, 9.65270000000025e-05, 9.683299999999756e-05, 9.651399999999893e-05, 9.658300000000078e-05, 9.687499999999974e-05, 9.688899999999931e-05, 9.683299999999756e-05, 9.659700000000035e-05, 9.659700000000035e-05, 9.683300000000103e-05, 9.655599999999764e-05, 9.64859999999998e-05, 9.690300000000235e-05, 9.673600000000004e-05, 9.648699999999927e-05, 9.665299999999863e-05, 9.691599999999898e-05, 9.69860000000003e-05, 9.656899999999774e-05, 9.681900000000146e-05, 9.674999999999961e-05, 9.701399999999943e-05, 9.659700000000035e-05, 9.66530000000021e-05, 9.654199999999807e-05, 9.686100000000017e-05, 9.690300000000235e-05, 9.65279999999985e-05, 9.681900000000146e-05, 9.652800000000197e-05, 9.694499999999759e-05, 9.677799999999875e-05, 9.654199999999807e-05, 9.687499999999974e-05, 9.654100000000207e-05, 9.65409999999986e-05, 9.694399999999812e-05, 9.643000000000151e-05, 9.69860000000003e-05, 9.640299999999838e-05, 9.705600000000161e-05, 9.65140000000024e-05, 9.647200000000022e-05, 9.654200000000154e-05, 9.657000000000068e-05]</msg>
<status status="PASS" starttime="20201030 10:58:09.472" endtime="20201030 10:58:09.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.467" endtime="20201030 10:58:09.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.478" endtime="20201030 10:58:09.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.477" endtime="20201030 10:58:09.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.476" endtime="20201030 10:58:09.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.116" endtime="20201030 10:58:09.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.116" endtime="20201030 10:58:09.499"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.507" endtime="20201030 10:58:09.528"></status>
</kw>
<msg timestamp="20201030 10:58:09.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.506" endtime="20201030 10:58:09.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.530" endtime="20201030 10:58:09.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.532" endtime="20201030 10:58:09.534"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.503" endtime="20201030 10:58:09.534"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.501" endtime="20201030 10:58:09.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.541" endtime="20201030 10:58:09.826"></status>
</kw>
<msg timestamp="20201030 10:58:09.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022836736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.539" endtime="20201030 10:58:09.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022836736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.831" endtime="20201030 10:58:09.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.839" endtime="20201030 10:58:09.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.537" endtime="20201030 10:58:09.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.535" endtime="20201030 10:58:09.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.845" level="INFO">${RESULT} = [{'diff': 9.840300000000038e-05}, {'diff': 9.840300000000038e-05}, {'diff': 9.795899999999816e-05}, {'diff': 9.788900000000031e-05}, {'diff': 9.790299999999988e-05}, {'diff': 9.741699999999895e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:09.842" endtime="20201030 10:58:09.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:09.849" level="INFO">${ACCURACY} = {'diff': [9.840300000000038e-05, 9.840300000000038e-05, 9.795899999999816e-05, 9.788900000000031e-05, 9.790299999999988e-05, 9.741699999999895e-05, 9.79860000000013e-05, 9.793000000000301e-05, 9.79029...</msg>
<status status="PASS" starttime="20201030 10:58:09.846" endtime="20201030 10:58:09.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.854" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 10:58:09.853" endtime="20201030 10:58:09.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.856" level="INFO">VALUE: [9.840300000000038e-05, 9.840300000000038e-05, 9.795899999999816e-05, 9.788900000000031e-05, 9.790299999999988e-05, 9.741699999999895e-05, 9.79860000000013e-05, 9.793000000000301e-05, 9.790299999999988e-05, 9.744400000000208e-05, 9.787500000000074e-05, 9.772200000000147e-05, 9.784699999999813e-05, 9.772300000000095e-05, 9.773600000000104e-05, 9.747200000000122e-05, 9.762499999999702e-05, 9.769499999999834e-05, 9.75279999999995e-05, 9.74860000000008e-05, 9.808300000000228e-05, 9.798599999999782e-05, 9.795900000000163e-05, 9.762500000000049e-05, 9.770899999999791e-05, 9.763900000000006e-05, 9.763900000000006e-05, 9.745799999999818e-05, 9.776400000000018e-05, 9.755499999999917e-05, 9.762500000000049e-05, 9.769399999999887e-05, 9.773599999999757e-05, 9.79860000000013e-05, 9.750000000000036e-05, 9.74999999999969e-05, 9.762500000000049e-05, 9.743099999999852e-05, 9.793100000000249e-05, 9.787500000000074e-05, 9.806999999999871e-05, 9.775000000000061e-05, 9.761100000000092e-05, 9.766599999999973e-05, 9.761100000000092e-05, 9.765299999999963e-05, 9.794399999999912e-05, 9.750000000000036e-05, 9.783299999999856e-05, 9.782000000000193e-05]</msg>
<status status="PASS" starttime="20201030 10:58:09.855" endtime="20201030 10:58:09.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.850" endtime="20201030 10:58:09.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.862" endtime="20201030 10:58:09.881"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.861" endtime="20201030 10:58:09.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.859" endtime="20201030 10:58:09.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.500" endtime="20201030 10:58:09.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.499" endtime="20201030 10:58:09.883"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.891" endtime="20201030 10:58:09.911"></status>
</kw>
<msg timestamp="20201030 10:58:09.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.890" endtime="20201030 10:58:09.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.912" endtime="20201030 10:58:09.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.915" endtime="20201030 10:58:09.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.887" endtime="20201030 10:58:09.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.885" endtime="20201030 10:58:09.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.924" endtime="20201030 10:58:10.209"></status>
</kw>
<msg timestamp="20201030 10:58:10.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.922" endtime="20201030 10:58:10.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021860708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.213" endtime="20201030 10:58:10.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.221" endtime="20201030 10:58:10.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.920" endtime="20201030 10:58:10.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.918" endtime="20201030 10:58:10.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.228" level="INFO">${RESULT} = [{'diff': 9.923599999999907e-05}, {'diff': 9.86670000000002e-05}, {'diff': 9.869499999999934e-05}, {'diff': 9.869399999999987e-05}, {'diff': 9.845899999999866e-05}, {'diff': 9.844499999999909e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:10.224" endtime="20201030 10:58:10.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.233" level="INFO">${ACCURACY} = {'diff': [9.923599999999907e-05, 9.86670000000002e-05, 9.869499999999934e-05, 9.869399999999987e-05, 9.845899999999866e-05, 9.844499999999909e-05, 9.879200000000032e-05, 9.88470000000026e-05, 9.862499...</msg>
<status status="PASS" starttime="20201030 10:58:10.229" endtime="20201030 10:58:10.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.237" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 10:58:10.236" endtime="20201030 10:58:10.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.240" level="INFO">VALUE: [9.923599999999907e-05, 9.86670000000002e-05, 9.869499999999934e-05, 9.869399999999987e-05, 9.845899999999866e-05, 9.844499999999909e-05, 9.879200000000032e-05, 9.88470000000026e-05, 9.862499999999802e-05, 9.89159999999975e-05, 9.870799999999944e-05, 9.845799999999919e-05, 9.854200000000007e-05, 9.897199999999926e-05, 9.845799999999919e-05, 9.8721999999999e-05, 9.850000000000136e-05, 9.883399999999903e-05, 9.856999999999921e-05, 9.859699999999888e-05, 9.858399999999878e-05, 9.897299999999873e-05, 9.873699999999805e-05, 9.888799999999837e-05, 9.8721999999999e-05, 9.89020000000014e-05, 9.894400000000012e-05, 9.897199999999926e-05, 9.895799999999969e-05, 9.890299999999741e-05, 9.890300000000088e-05, 9.88479999999986e-05, 9.88609999999987e-05, 9.883399999999903e-05, 9.86670000000002e-05, 9.855599999999964e-05, 9.85280000000005e-05, 9.843099999999952e-05, 9.898700000000177e-05, 9.88340000000025e-05, 9.868099999999977e-05, 9.893000000000055e-05, 9.884699999999913e-05, 9.9028000000001e-05, 9.865299999999716e-05, 9.88340000000025e-05, 9.863899999999759e-05, 9.88059999999999e-05, 9.862499999999802e-05, 9.843100000000299e-05]</msg>
<status status="PASS" starttime="20201030 10:58:10.238" endtime="20201030 10:58:10.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.233" endtime="20201030 10:58:10.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.245" endtime="20201030 10:58:10.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.243" endtime="20201030 10:58:10.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.242" endtime="20201030 10:58:10.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.884" endtime="20201030 10:58:10.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.883" endtime="20201030 10:58:10.266"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.274" endtime="20201030 10:58:10.294"></status>
</kw>
<msg timestamp="20201030 10:58:10.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.273" endtime="20201030 10:58:10.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.296" endtime="20201030 10:58:10.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.298" endtime="20201030 10:58:10.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.270" endtime="20201030 10:58:10.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.268" endtime="20201030 10:58:10.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.307" endtime="20201030 10:58:10.594"></status>
</kw>
<msg timestamp="20201030 10:58:10.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.306" endtime="20201030 10:58:10.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.599" endtime="20201030 10:58:10.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.607" endtime="20201030 10:58:10.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.303" endtime="20201030 10:58:10.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.301" endtime="20201030 10:58:10.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.613" level="INFO">${RESULT} = [{'diff': 9.991700000000145e-05}, {'diff': 9.977800000000175e-05}, {'diff': 9.958300000000031e-05}, {'diff': 9.96939999999974e-05}, {'diff': 9.959699999999988e-05}, {'diff': 9.954200000000107e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:10.610" endtime="20201030 10:58:10.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.617" level="INFO">${ACCURACY} = {'diff': [9.991700000000145e-05, 9.977800000000175e-05, 9.958300000000031e-05, 9.96939999999974e-05, 9.959699999999988e-05, 9.954200000000107e-05, 9.959699999999988e-05, 9.99159999999985e-05, 9.998699...</msg>
<status status="PASS" starttime="20201030 10:58:10.614" endtime="20201030 10:58:10.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.622" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 10:58:10.621" endtime="20201030 10:58:10.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.624" level="INFO">VALUE: [9.991700000000145e-05, 9.977800000000175e-05, 9.958300000000031e-05, 9.96939999999974e-05, 9.959699999999988e-05, 9.954200000000107e-05, 9.959699999999988e-05, 9.99159999999985e-05, 9.99869999999993e-05, 9.94999999999989e-05, 9.955500000000117e-05, 9.95280000000015e-05, 9.9415999999998e-05, 9.990300000000188e-05, 9.9722e-05, 9.993000000000155e-05, 9.993099999999755e-05, 9.995800000000069e-05, 9.979200000000132e-05, 9.959699999999988e-05, 0.00010004200000000157, 9.99020000000024e-05, 9.976399999999871e-05, 9.977799999999828e-05, 9.994500000000059e-05, 9.961100000000292e-05, 9.987499999999927e-05, 9.994400000000112e-05, 9.981900000000099e-05, 9.973599999999957e-05, 9.997199999999679e-05, 9.995800000000069e-05, 9.952799999999803e-05, 0.00010002799999999853, 9.959699999999988e-05, 9.993099999999755e-05, 9.984700000000013e-05, 9.991700000000145e-05, 9.945899999999966e-05, 9.990300000000188e-05, 9.98060000000009e-05, 9.962499999999902e-05, 9.965199999999869e-05, 9.993100000000102e-05, 9.997200000000026e-05, 9.983299999999709e-05, 9.99159999999985e-05, 9.977800000000175e-05, 0.00010002799999999853, 9.959799999999935e-05]</msg>
<status status="PASS" starttime="20201030 10:58:10.623" endtime="20201030 10:58:10.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.618" endtime="20201030 10:58:10.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.629" endtime="20201030 10:58:10.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.628" endtime="20201030 10:58:10.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.627" endtime="20201030 10:58:10.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.267" endtime="20201030 10:58:10.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.266" endtime="20201030 10:58:10.650"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.659" endtime="20201030 10:58:10.678"></status>
</kw>
<msg timestamp="20201030 10:58:10.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.657" endtime="20201030 10:58:10.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.680" endtime="20201030 10:58:10.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.682" endtime="20201030 10:58:10.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.654" endtime="20201030 10:58:10.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.652" endtime="20201030 10:58:10.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.691" endtime="20201030 10:58:10.976"></status>
</kw>
<msg timestamp="20201030 10:58:10.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02264325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:10.690" endtime="20201030 10:58:10.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02264325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:10.980" endtime="20201030 10:58:10.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.988" endtime="20201030 10:58:10.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.687" endtime="20201030 10:58:10.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.685" endtime="20201030 10:58:10.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.994" level="INFO">${RESULT} = [{'diff': 0.00010047200000000076}, {'diff': 0.00010069400000000187}, {'diff': 0.00010097200000000126}, {'diff': 0.00010084700000000113}, {'diff': 0.0001006939999999984}, {'diff': 0.0001004999999999999...</msg>
<status status="PASS" starttime="20201030 10:58:10.991" endtime="20201030 10:58:10.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.998" level="INFO">${ACCURACY} = {'diff': [0.00010047200000000076, 0.00010069400000000187, 0.00010097200000000126, 0.00010084700000000113, 0.0001006939999999984, 0.0001004999999999999, 0.00010108299999999834, 0.0001008610000000007, 0...</msg>
<status status="PASS" starttime="20201030 10:58:10.995" endtime="20201030 10:58:10.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.003" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 10:58:11.002" endtime="20201030 10:58:11.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.005" level="INFO">VALUE: [0.00010047200000000076, 0.00010069400000000187, 0.00010097200000000126, 0.00010084700000000113, 0.0001006939999999984, 0.0001004999999999999, 0.00010108299999999834, 0.0001008610000000007, 0.0001007359999999971, 0.000100722000000001, 0.00010083299999999809, 0.00010083400000000103, 0.00010077800000000275, 0.00010094499999999812, 0.0001008610000000007, 0.00010061199999999992, 0.00010070799999999797, 0.00010084700000000113, 0.00010042999999999858, 0.00010061100000000045, 0.00010105500000000267, 0.00010048600000000033, 0.00010062500000000002, 0.00010061100000000045, 0.00010045800000000119, 0.00010062500000000002, 0.00010093100000000202, 0.00010087500000000027, 0.00010091700000000245, 0.00010051399999999946, 0.00010054200000000207, 0.00010080599999999842, 0.0001004869999999998, 0.00010079099999999938, 0.00010070799999999797, 0.00010062500000000002, 0.0001008610000000007, 0.00010094399999999865, 0.00010088899999999984, 0.00010079199999999885, 0.000100722000000001, 0.00010077799999999928, 0.00010065300000000263, 0.00010069499999999787, 0.00010058400000000078, 0.00010066699999999873, 0.00010057000000000121, 0.0001008480000000006, 0.00010070800000000144, 0.00010087500000000027]</msg>
<status status="PASS" starttime="20201030 10:58:11.004" endtime="20201030 10:58:11.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.999" endtime="20201030 10:58:11.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.011" endtime="20201030 10:58:11.030"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.010" endtime="20201030 10:58:11.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.008" endtime="20201030 10:58:11.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.651" endtime="20201030 10:58:11.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.650" endtime="20201030 10:58:11.032"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.040" endtime="20201030 10:58:11.059"></status>
</kw>
<msg timestamp="20201030 10:58:11.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.039" endtime="20201030 10:58:11.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.061" endtime="20201030 10:58:11.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.063" endtime="20201030 10:58:11.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.036" endtime="20201030 10:58:11.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.034" endtime="20201030 10:58:11.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.072" endtime="20201030 10:58:11.357"></status>
</kw>
<msg timestamp="20201030 10:58:11.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.071" endtime="20201030 10:58:11.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.361" endtime="20201030 10:58:11.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.369" endtime="20201030 10:58:11.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.068" endtime="20201030 10:58:11.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.066" endtime="20201030 10:58:11.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.376" level="INFO">${RESULT} = [{'diff': 0.00010194399999999965}, {'diff': 0.00010152699999999709}, {'diff': 0.0001018610000000017}, {'diff': 0.00010148600000000133}, {'diff': 0.00010181899999999952}, {'diff': 0.0001019579999999992...</msg>
<status status="PASS" starttime="20201030 10:58:11.372" endtime="20201030 10:58:11.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:11.381" level="INFO">${ACCURACY} = {'diff': [0.00010194399999999965, 0.00010152699999999709, 0.0001018610000000017, 0.00010148600000000133, 0.00010181899999999952, 0.00010195799999999922, 0.0001016939999999994, 0.0001015000000000009, 0...</msg>
<status status="PASS" starttime="20201030 10:58:11.377" endtime="20201030 10:58:11.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.385" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 10:58:11.384" endtime="20201030 10:58:11.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.388" level="INFO">VALUE: [0.00010194399999999965, 0.00010152699999999709, 0.0001018610000000017, 0.00010148600000000133, 0.00010181899999999952, 0.00010195799999999922, 0.0001016939999999994, 0.0001015000000000009, 0.00010198599999999836, 0.00010137500000000077, 0.00010198599999999836, 0.00010175000000000115, 0.00010156899999999927, 0.00010177800000000028, 0.00010194399999999965, 0.00010197299999999826, 0.00010190300000000041, 0.00010151300000000099, 0.00010173600000000158, 0.00010152800000000003, 0.00010188899999999737, 0.00010158300000000231, 0.00010181899999999952, 0.00010162499999999755, 0.00010176399999999725, 0.0001015419999999996, 0.00010197199999999879, 0.0001017359999999981, 0.00010143099999999905, 0.00010197300000000173, 0.00010197200000000226, 0.00010190300000000041, 0.00010174999999999768, 0.00010198599999999836, 0.00010190300000000041, 0.00010147199999999829, 0.0001015549999999997, 0.00010174999999999768, 0.00010159699999999841, 0.00010176400000000071, 0.00010198600000000183, 0.00010159699999999841, 0.00010179199999999985, 0.00010158400000000178, 0.00010148600000000133, 0.00010180499999999995, 0.00010149999999999743, 0.00010198599999999836, 0.00010154100000000013, 0.0001015549999999997]</msg>
<status status="PASS" starttime="20201030 10:58:11.386" endtime="20201030 10:58:11.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.381" endtime="20201030 10:58:11.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.392" endtime="20201030 10:58:11.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.391" endtime="20201030 10:58:11.412"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.390" endtime="20201030 10:58:11.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.033" endtime="20201030 10:58:11.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.032" endtime="20201030 10:58:11.413"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.422" endtime="20201030 10:58:11.441"></status>
</kw>
<msg timestamp="20201030 10:58:11.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.420" endtime="20201030 10:58:11.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.443" endtime="20201030 10:58:11.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.445" endtime="20201030 10:58:11.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.418" endtime="20201030 10:58:11.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.416" endtime="20201030 10:58:11.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.454" endtime="20201030 10:58:11.741"></status>
</kw>
<msg timestamp="20201030 10:58:11.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.453" endtime="20201030 10:58:11.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.745" endtime="20201030 10:58:11.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.753" endtime="20201030 10:58:11.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.450" endtime="20201030 10:58:11.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.448" endtime="20201030 10:58:11.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.760" level="INFO">${RESULT} = [{'diff': 0.0001025420000000006}, {'diff': 0.0001025420000000006}, {'diff': 0.00010304099999999816}, {'diff': 0.0001028749999999988}, {'diff': 0.00010290200000000194}, {'diff': 0.00010244400000000015}...</msg>
<status status="PASS" starttime="20201030 10:58:11.757" endtime="20201030 10:58:11.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:11.764" level="INFO">${ACCURACY} = {'diff': [0.0001025420000000006, 0.0001025420000000006, 0.00010304099999999816, 0.0001028749999999988, 0.00010290200000000194, 0.00010244400000000015, 0.0001030000000000024, 0.00010244400000000015, 0....</msg>
<status status="PASS" starttime="20201030 10:58:11.761" endtime="20201030 10:58:11.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.768" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 10:58:11.767" endtime="20201030 10:58:11.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.771" level="INFO">VALUE: [0.0001025420000000006, 0.0001025420000000006, 0.00010304099999999816, 0.0001028749999999988, 0.00010290200000000194, 0.00010244400000000015, 0.0001030000000000024, 0.00010244400000000015, 0.00010291700000000098, 0.00010272199999999954, 0.00010293099999999708, 0.00010245799999999972, 0.00010243100000000005, 0.00010272199999999954, 0.00010269499999999987, 0.00010249999999999843, 0.00010294500000000012, 0.00010283399999999956, 0.00010272199999999954, 0.00010288899999999837, 0.00010244400000000015, 0.00010283300000000009, 0.00010258299999999984, 0.00010244400000000015, 0.00010304199999999764, 0.00010248600000000233, 0.00010297199999999979, 0.00010293099999999708, 0.0001026810000000003, 0.00010255600000000017, 0.00010280499999999748, 0.0001026810000000003, 0.0001025550000000007, 0.00010277700000000181, 0.00010265200000000169, 0.00010276300000000224, 0.00010247200000000276, 0.00010290300000000141, 0.00010263900000000159, 0.00010284699999999966, 0.00010247199999999929, 0.00010248599999999886, 0.00010297199999999979, 0.00010244499999999962, 0.00010262499999999855, 0.00010259699999999941, 0.00010249999999999843, 0.00010263900000000159, 0.00010262500000000202, 0.00010249999999999843]</msg>
<status status="PASS" starttime="20201030 10:58:11.769" endtime="20201030 10:58:11.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.765" endtime="20201030 10:58:11.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.776" endtime="20201030 10:58:11.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.774" endtime="20201030 10:58:11.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.773" endtime="20201030 10:58:11.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.414" endtime="20201030 10:58:11.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.413" endtime="20201030 10:58:11.796"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.805" endtime="20201030 10:58:11.828"></status>
</kw>
<msg timestamp="20201030 10:58:11.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.803" endtime="20201030 10:58:11.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.829" endtime="20201030 10:58:11.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.832" endtime="20201030 10:58:11.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.801" endtime="20201030 10:58:11.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.799" endtime="20201030 10:58:11.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.840" endtime="20201030 10:58:12.126"></status>
</kw>
<msg timestamp="20201030 10:58:12.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025043333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025147528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.839" endtime="20201030 10:58:12.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025043333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025147528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.130" endtime="20201030 10:58:12.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.137" endtime="20201030 10:58:12.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.836" endtime="20201030 10:58:12.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.835" endtime="20201030 10:58:12.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.144" level="INFO">${RESULT} = [{'diff': 0.0001041949999999979}, {'diff': 0.00010426300000000027}, {'diff': 0.00010344399999999768}, {'diff': 0.00010395800000000122}, {'diff': 0.00010363900000000259}, {'diff': 0.0001035829999999973...</msg>
<status status="PASS" starttime="20201030 10:58:12.141" endtime="20201030 10:58:12.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.148" level="INFO">${ACCURACY} = {'diff': [0.0001041949999999979, 0.00010426300000000027, 0.00010344399999999768, 0.00010395800000000122, 0.00010363900000000259, 0.00010358299999999737, 0.00010370800000000097, 0.00010376399999999925,...</msg>
<status status="PASS" starttime="20201030 10:58:12.145" endtime="20201030 10:58:12.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.152" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.151" endtime="20201030 10:58:12.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.155" level="INFO">VALUE: [0.0001041949999999979, 0.00010426300000000027, 0.00010344399999999768, 0.00010395800000000122, 0.00010363900000000259, 0.00010358299999999737, 0.00010370800000000097, 0.00010376399999999925, 0.00010372199999999707, 0.00010380600000000142, 0.00010358300000000084, 0.00010368099999999783, 0.00010358400000000031, 0.00010390300000000241, 0.00010395900000000069, 0.00010358400000000031, 0.00010390300000000241, 0.00010374999999999968, 0.00010365200000000269, 0.00010358299999999737, 0.00010379199999999839, 0.00010354100000000213, 0.00010355499999999823, 0.00010377799999999882, 0.00010390300000000241, 0.00010361099999999998, 0.00010399999999999993, 0.00010375000000000315, 0.00010395899999999722, 0.0001035420000000016, 0.00010356999999999728, 0.00010383400000000056, 0.00010397200000000079, 0.00010366599999999879, 0.00010348599999999986, 0.0001035550000000017, 0.0001035689999999978, 0.00010388899999999937, 0.00010402799999999907, 0.00010359700000000041, 0.0001037360000000001, 0.00010344399999999768, 0.0001038749999999998, 0.000103513999999999, 0.00010397199999999732, 0.00010372300000000001, 0.00010376399999999925, 0.0001040689999999983, 0.00010388899999999937, 0.0001035550000000017]</msg>
<status status="PASS" starttime="20201030 10:58:12.153" endtime="20201030 10:58:12.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.149" endtime="20201030 10:58:12.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.160" endtime="20201030 10:58:12.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.159" endtime="20201030 10:58:12.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.158" endtime="20201030 10:58:12.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.797" endtime="20201030 10:58:12.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.797" endtime="20201030 10:58:12.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.899" endtime="20201030 10:58:12.181"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:33.826" endtime="20201030 10:58:12.182" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.190" endtime="20201030 10:58:12.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.188" endtime="20201030 10:58:12.210"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.222" endtime="20201030 10:58:12.238"></status>
</kw>
<msg timestamp="20201030 10:58:12.239" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.221" endtime="20201030 10:58:12.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.241" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.240" endtime="20201030 10:58:12.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.244" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:12.242" endtime="20201030 10:58:12.245"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:12.218" endtime="20201030 10:58:12.245"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:12.216" endtime="20201030 10:58:12.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.215" endtime="20201030 10:58:12.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:12.250" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:12.249" endtime="20201030 10:58:12.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.247" endtime="20201030 10:58:12.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.214" endtime="20201030 10:58:12.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.213" endtime="20201030 10:58:12.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.251" endtime="20201030 10:58:12.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.212" endtime="20201030 10:58:12.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.210" endtime="20201030 10:58:12.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.186" endtime="20201030 10:58:12.254"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.265" endtime="20201030 10:58:12.279"></status>
</kw>
<msg timestamp="20201030 10:58:12.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.264" endtime="20201030 10:58:12.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.280" endtime="20201030 10:58:12.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.283" endtime="20201030 10:58:12.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.260" endtime="20201030 10:58:12.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.258" endtime="20201030 10:58:12.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.292" endtime="20201030 10:58:12.579"></status>
</kw>
<msg timestamp="20201030 10:58:12.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068069917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068074903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.291" endtime="20201030 10:58:12.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068069917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068074903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.583" endtime="20201030 10:58:12.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.591" endtime="20201030 10:58:12.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.288" endtime="20201030 10:58:12.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.286" endtime="20201030 10:58:12.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.598" level="INFO">${RESULT} = [{'diff': 4.9860000000123694e-06}, {'diff': 3.9720000000048605e-06}, {'diff': 3.52800000000264e-06}, {'diff': 3.778000000009829e-06}, {'diff': 4.402999999986168e-06}, {'diff': 3.542000000009149e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:58:12.595" endtime="20201030 10:58:12.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.602" level="INFO">${ACCURACY} = {'diff': [4.9860000000123694e-06, 3.9720000000048605e-06, 3.52800000000264e-06, 3.778000000009829e-06, 4.402999999986168e-06, 3.542000000009149e-06, 3.805999999995091e-06, 3.4029999999990457e-06, 3.74...</msg>
<status status="PASS" starttime="20201030 10:58:12.599" endtime="20201030 10:58:12.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.607" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.606" endtime="20201030 10:58:12.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.610" level="INFO">VALUE: [4.9860000000123694e-06, 3.9720000000048605e-06, 3.52800000000264e-06, 3.778000000009829e-06, 4.402999999986168e-06, 3.542000000009149e-06, 3.805999999995091e-06, 3.4029999999990457e-06, 3.7499999999968114e-06, 3.388000000006941e-06, 3.7779999999959513e-06, 3.7639999999894425e-06, 3.4309999999981855e-06, 3.778000000009829e-06, 3.388999999992537e-06, 3.7769999999964776e-06, 3.7779999999959513e-06, 3.7630000000038466e-06, 4.402000000000572e-06, 3.8200000000016e-06, 3.8200000000016e-06, 4.277999999996451e-06, 3.4579999999978517e-06, 4.402000000000572e-06, 3.833999999994231e-06, 3.52800000000264e-06, 3.778000000009829e-06, 3.4029999999990457e-06, 3.415999999992203e-06, 3.4029999999990457e-06, 3.7919999999885823e-06, 3.7910000000029864e-06, 3.429999999998712e-06, 3.7779999999959513e-06, 3.7639999999894425e-06, 4.403000000000046e-06, 3.8050000000094952e-06, 3.52800000000264e-06, 3.7779999999959513e-06, 3.7779999999959513e-06, 3.416000000006081e-06, 3.7640000000033202e-06, 3.778000000009829e-06, 3.7779999999959513e-06, 3.4170000000055545e-06, 3.7359999999903026e-06, 4.416999999992677e-06, 3.52800000000264e-06, 3.7499999999968114e-06, 3.79200000000246e-06]</msg>
<status status="PASS" starttime="20201030 10:58:12.608" endtime="20201030 10:58:12.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.603" endtime="20201030 10:58:12.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.614" endtime="20201030 10:58:12.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.612" endtime="20201030 10:58:12.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.611" endtime="20201030 10:58:12.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.256" endtime="20201030 10:58:12.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.256" endtime="20201030 10:58:12.635"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.644" endtime="20201030 10:58:12.658"></status>
</kw>
<msg timestamp="20201030 10:58:12.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.642" endtime="20201030 10:58:12.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.659" endtime="20201030 10:58:12.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.662" endtime="20201030 10:58:12.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.639" endtime="20201030 10:58:12.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.637" endtime="20201030 10:58:12.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.671" endtime="20201030 10:58:12.960"></status>
</kw>
<msg timestamp="20201030 10:58:12.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.669" endtime="20201030 10:58:12.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.964" endtime="20201030 10:58:12.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.972" endtime="20201030 10:58:12.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.667" endtime="20201030 10:58:12.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.665" endtime="20201030 10:58:12.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.979" level="INFO">${RESULT} = [{'diff': 5.444999999999756e-06}, {'diff': 4.8339999999987004e-06}, {'diff': 4.416999999999616e-06}, {'diff': 4.805999999999561e-06}, {'diff': 4.708000000002571e-06}, {'diff': 4.7089999999985754e-06},...</msg>
<status status="PASS" starttime="20201030 10:58:12.976" endtime="20201030 10:58:12.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.984" level="INFO">${ACCURACY} = {'diff': [5.444999999999756e-06, 4.8339999999987004e-06, 4.416999999999616e-06, 4.805999999999561e-06, 4.708000000002571e-06, 4.7089999999985754e-06, 4.389000000000476e-06, 4.666000000000392e-06, 4.74...</msg>
<status status="PASS" starttime="20201030 10:58:12.980" endtime="20201030 10:58:12.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.988" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.987" endtime="20201030 10:58:12.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.991" level="INFO">VALUE: [5.444999999999756e-06, 4.8339999999987004e-06, 4.416999999999616e-06, 4.805999999999561e-06, 4.708000000002571e-06, 4.7089999999985754e-06, 4.389000000000476e-06, 4.666000000000392e-06, 4.7499999999978115e-06, 4.401999999997103e-06, 4.861000000001836e-06, 4.723000000001615e-06, 5.180000000000462e-06, 4.707999999999102e-06, 4.707999999999102e-06, 4.403000000000046e-06, 4.846999999998797e-06, 4.403000000000046e-06, 4.707999999999102e-06, 4.721999999998672e-06, 4.3749999999974365e-06, 4.847000000002266e-06, 4.722000000002141e-06, 4.417000000003085e-06, 4.846999999998797e-06, 4.86200000000131e-06, 4.403000000000046e-06, 4.8749999999979365e-06, 4.8749999999979365e-06, 4.860999999998367e-06, 4.860999999998367e-06, 4.846999999998797e-06, 4.735999999998242e-06, 4.861000000001836e-06, 4.763000000001377e-06, 4.403000000000046e-06, 4.7089999999985754e-06, 4.388999999997006e-06, 4.416999999999616e-06, 4.7089999999985754e-06, 4.402999999996576e-06, 4.846999999998797e-06, 4.846999999998797e-06, 4.680999999999436e-06, 4.416999999999616e-06, 4.723000000001615e-06, 4.403000000000046e-06, 4.861000000001836e-06, 4.459000000001795e-06, 4.764000000000851e-06]</msg>
<status status="PASS" starttime="20201030 10:58:12.989" endtime="20201030 10:58:12.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.985" endtime="20201030 10:58:12.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.995" endtime="20201030 10:58:13.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.994" endtime="20201030 10:58:13.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.992" endtime="20201030 10:58:13.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.636" endtime="20201030 10:58:13.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.635" endtime="20201030 10:58:13.016"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.025" endtime="20201030 10:58:13.039"></status>
</kw>
<msg timestamp="20201030 10:58:13.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.023" endtime="20201030 10:58:13.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.040" endtime="20201030 10:58:13.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.043" endtime="20201030 10:58:13.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.021" endtime="20201030 10:58:13.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.019" endtime="20201030 10:58:13.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.051" endtime="20201030 10:58:13.342"></status>
</kw>
<msg timestamp="20201030 10:58:13.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.050" endtime="20201030 10:58:13.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.346" endtime="20201030 10:58:13.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.354" endtime="20201030 10:58:13.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.048" endtime="20201030 10:58:13.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.046" endtime="20201030 10:58:13.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.361" level="INFO">${RESULT} = [{'diff': 6.7779999999989515e-06}, {'diff': 5.7229999999991454e-06}, {'diff': 5.611000000002586e-06}, {'diff': 5.596999999999547e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.1939999999975626e-06}...</msg>
<status status="PASS" starttime="20201030 10:58:13.358" endtime="20201030 10:58:13.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:13.365" level="INFO">${ACCURACY} = {'diff': [6.7779999999989515e-06, 5.7229999999991454e-06, 5.611000000002586e-06, 5.596999999999547e-06, 6.054999999997868e-06, 6.1939999999975626e-06, 5.695000000000006e-06, 6.040999999998298e-06, 6.1...</msg>
<status status="PASS" starttime="20201030 10:58:13.362" endtime="20201030 10:58:13.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.369" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 10:58:13.368" endtime="20201030 10:58:13.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.372" level="INFO">VALUE: [6.7779999999989515e-06, 5.7229999999991454e-06, 5.611000000002586e-06, 5.596999999999547e-06, 6.054999999997868e-06, 6.1939999999975626e-06, 5.695000000000006e-06, 6.040999999998298e-06, 6.194000000001032e-06, 5.749999999998812e-06, 6.042000000001241e-06, 5.291000000001017e-06, 6.055000000001337e-06, 5.722000000003141e-06, 5.750000000002281e-06, 5.305000000000587e-06, 5.721999999999672e-06, 5.735999999999242e-06, 5.7079999999966324e-06, 5.278000000000921e-06, 5.5979999999990204e-06, 5.5979999999990204e-06, 5.540999999997798e-06, 5.292000000000491e-06, 6.041999999997771e-06, 5.305000000000587e-06, 5.722000000003141e-06, 5.736999999998715e-06, 5.750000000002281e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.735999999999242e-06, 5.722000000003141e-06, 5.596999999999547e-06, 5.735999999999242e-06, 5.5979999999990204e-06, 5.721999999999672e-06, 5.790999999998048e-06, 5.624999999998687e-06, 5.708000000000102e-06, 5.764000000001851e-06, 5.582999999999977e-06, 6.180000000001462e-06, 5.610999999999117e-06, 5.292000000000491e-06, 5.611000000002586e-06, 5.735999999999242e-06, 5.305000000000587e-06, 5.596999999999547e-06, 5.749999999998812e-06]</msg>
<status status="PASS" starttime="20201030 10:58:13.370" endtime="20201030 10:58:13.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.366" endtime="20201030 10:58:13.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.376" endtime="20201030 10:58:13.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.375" endtime="20201030 10:58:13.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.374" endtime="20201030 10:58:13.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.017" endtime="20201030 10:58:13.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.016" endtime="20201030 10:58:13.397"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.407" endtime="20201030 10:58:13.421"></status>
</kw>
<msg timestamp="20201030 10:58:13.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.404" endtime="20201030 10:58:13.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.423" endtime="20201030 10:58:13.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.425" endtime="20201030 10:58:13.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.402" endtime="20201030 10:58:13.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.400" endtime="20201030 10:58:13.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.434" endtime="20201030 10:58:13.732"></status>
</kw>
<msg timestamp="20201030 10:58:13.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022642667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.433" endtime="20201030 10:58:13.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022642667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.737" endtime="20201030 10:58:13.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.746" endtime="20201030 10:58:13.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.430" endtime="20201030 10:58:13.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.429" endtime="20201030 10:58:13.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.753" level="INFO">${RESULT} = [{'diff': 7.527999999999702e-06}, {'diff': 6.9719999999974525e-06}, {'diff': 6.6119999999995904e-06}, {'diff': 6.624999999999687e-06}, {'diff': 6.513999999999132e-06}, {'diff': 7.389000000000007e-06},...</msg>
<status status="PASS" starttime="20201030 10:58:13.749" endtime="20201030 10:58:13.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:13.757" level="INFO">${ACCURACY} = {'diff': [7.527999999999702e-06, 6.9719999999974525e-06, 6.6119999999995904e-06, 6.624999999999687e-06, 6.513999999999132e-06, 7.389000000000007e-06, 6.513999999999132e-06, 6.472000000000422e-06, 6.94...</msg>
<status status="PASS" starttime="20201030 10:58:13.754" endtime="20201030 10:58:13.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.762" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 10:58:13.761" endtime="20201030 10:58:13.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.764" level="INFO">VALUE: [7.527999999999702e-06, 6.9719999999974525e-06, 6.6119999999995904e-06, 6.624999999999687e-06, 6.513999999999132e-06, 7.389000000000007e-06, 6.513999999999132e-06, 6.472000000000422e-06, 6.944000000001782e-06, 6.889000000002976e-06, 6.569000000001407e-06, 6.624999999999687e-06, 6.930999999998216e-06, 6.499999999999562e-06, 7.374999999996967e-06, 6.499999999999562e-06, 6.638999999999257e-06, 6.624999999999687e-06, 6.667000000001866e-06, 6.429999999998243e-06, 6.6669999999983964e-06, 6.624999999999687e-06, 6.945000000001256e-06, 6.485999999999992e-06, 6.610999999996647e-06, 6.930000000002212e-06, 6.485999999999992e-06, 6.638999999999257e-06, 6.444000000001282e-06, 6.929999999998743e-06, 6.472000000000422e-06, 6.499999999999562e-06, 6.638999999999257e-06, 6.624999999999687e-06, 6.624999999999687e-06, 6.485999999999992e-06, 6.624999999999687e-06, 6.667000000001866e-06, 6.638999999999257e-06, 6.485999999999992e-06, 6.6119999999995904e-06, 6.514000000002601e-06, 6.931000000001686e-06, 6.611000000000117e-06, 6.4729999999998955e-06, 6.958000000001352e-06, 6.443999999997813e-06, 6.638999999999257e-06, 6.637999999999783e-06, 6.638999999999257e-06]</msg>
<status status="PASS" starttime="20201030 10:58:13.763" endtime="20201030 10:58:13.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.758" endtime="20201030 10:58:13.767"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.770" endtime="20201030 10:58:13.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.769" endtime="20201030 10:58:13.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.768" endtime="20201030 10:58:13.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.398" endtime="20201030 10:58:13.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.398" endtime="20201030 10:58:13.791"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.800" endtime="20201030 10:58:13.815"></status>
</kw>
<msg timestamp="20201030 10:58:13.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.799" endtime="20201030 10:58:13.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.817" endtime="20201030 10:58:13.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.819" endtime="20201030 10:58:13.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.796" endtime="20201030 10:58:13.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.794" endtime="20201030 10:58:13.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.830" endtime="20201030 10:58:14.116"></status>
</kw>
<msg timestamp="20201030 10:58:14.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:13.828" endtime="20201030 10:58:14.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:14.120" endtime="20201030 10:58:14.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.128" endtime="20201030 10:58:14.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.825" endtime="20201030 10:58:14.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.822" endtime="20201030 10:58:14.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.134" level="INFO">${RESULT} = [{'diff': 8.555999999999842e-06}, {'diff': 7.971999999998453e-06}, {'diff': 7.846999999998328e-06}, {'diff': 7.5419999999992715e-06}, {'diff': 7.473000000000896e-06}, {'diff': 7.402000000000103e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:58:14.131" endtime="20201030 10:58:14.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:14.139" level="INFO">${ACCURACY} = {'diff': [8.555999999999842e-06, 7.971999999998453e-06, 7.846999999998328e-06, 7.5419999999992715e-06, 7.473000000000896e-06, 7.402000000000103e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.514...</msg>
<status status="PASS" starttime="20201030 10:58:14.135" endtime="20201030 10:58:14.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.144" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 10:58:14.143" endtime="20201030 10:58:14.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.146" level="INFO">VALUE: [8.555999999999842e-06, 7.971999999998453e-06, 7.846999999998328e-06, 7.5419999999992715e-06, 7.473000000000896e-06, 7.402000000000103e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.513999999996662e-06, 7.819000000002657e-06, 7.846999999998328e-06, 7.459000000001326e-06, 7.360999999997397e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.833999999998231e-06, 7.499999999997092e-06, 7.875000000000937e-06, 7.8340000000017e-06, 7.513000000000658e-06, 7.514000000000132e-06, 7.972999999997926e-06, 7.972999999997926e-06, 7.514000000000132e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7.832999999998758e-06, 7.457999999998383e-06, 8.000000000001062e-06, 7.388000000000533e-06, 7.818999999999188e-06, 7.486000000000992e-06, 7.847000000001797e-06, 7.569000000002407e-06, 7.833999999998231e-06, 7.375000000000437e-06, 7.375000000000437e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.402000000000103e-06, 7.514000000000132e-06, 7.819999999998661e-06, 7.388000000000533e-06, 7.389000000000007e-06, 7.777999999999952e-06, 7.415999999999673e-06, 7.500000000000562e-06, 7.514000000000132e-06]</msg>
<status status="PASS" starttime="20201030 10:58:14.145" endtime="20201030 10:58:14.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.140" endtime="20201030 10:58:14.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.151" endtime="20201030 10:58:14.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.150" endtime="20201030 10:58:14.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.148" endtime="20201030 10:58:14.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.792" endtime="20201030 10:58:14.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.792" endtime="20201030 10:58:14.172"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.180" endtime="20201030 10:58:14.195"></status>
</kw>
<msg timestamp="20201030 10:58:14.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.179" endtime="20201030 10:58:14.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.196" endtime="20201030 10:58:14.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.198" endtime="20201030 10:58:14.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.176" endtime="20201030 10:58:14.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.174" endtime="20201030 10:58:14.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.208" endtime="20201030 10:58:14.509"></status>
</kw>
<msg timestamp="20201030 10:58:14.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021650167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.206" endtime="20201030 10:58:14.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021650167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.514" endtime="20201030 10:58:14.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.522" endtime="20201030 10:58:14.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.203" endtime="20201030 10:58:14.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.202" endtime="20201030 10:58:14.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.529" level="INFO">${RESULT} = [{'diff': 1.0223000000000176e-05}, {'diff': 8.722000000002672e-06}, {'diff': 8.430999999999716e-06}, {'diff': 8.403000000000577e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.833999999999231e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:58:14.526" endtime="20201030 10:58:14.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:14.533" level="INFO">${ACCURACY} = {'diff': [1.0223000000000176e-05, 8.722000000002672e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.707999999999633e-06, 8.833999999999231e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.860...</msg>
<status status="PASS" starttime="20201030 10:58:14.530" endtime="20201030 10:58:14.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.537" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 10:58:14.536" endtime="20201030 10:58:14.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.540" level="INFO">VALUE: [1.0223000000000176e-05, 8.722000000002672e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.707999999999633e-06, 8.833999999999231e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.860999999998898e-06, 8.723000000002146e-06, 8.417000000000147e-06, 8.846999999999328e-06, 8.806000000000092e-06, 8.417000000000147e-06, 8.707999999999633e-06, 8.458999999998856e-06, 8.749999999998342e-06, 8.388999999997537e-06, 8.389000000001007e-06, 8.416000000000673e-06, 8.722000000002672e-06, 8.375000000001437e-06, 8.846999999999328e-06, 8.721999999999203e-06, 8.415999999997203e-06, 8.86200000000184e-06, 8.417000000000147e-06, 8.402999999997107e-06, 8.860999999998898e-06, 8.723000000002146e-06, 8.749999999998342e-06, 8.847000000002797e-06, 8.874999999998467e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.832999999999758e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.263999999997412e-06, 8.403000000000577e-06, 8.722999999998676e-06, 9.290999999998079e-06, 8.694000000000063e-06, 8.374999999997967e-06, 8.458999999998856e-06, 8.680999999999967e-06, 8.388999999997537e-06, 8.736000000002242e-06, 8.806000000000092e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201030 10:58:14.538" endtime="20201030 10:58:14.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.534" endtime="20201030 10:58:14.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.545" endtime="20201030 10:58:14.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.543" endtime="20201030 10:58:14.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.542" endtime="20201030 10:58:14.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.173" endtime="20201030 10:58:14.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.172" endtime="20201030 10:58:14.566"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.574" endtime="20201030 10:58:14.589"></status>
</kw>
<msg timestamp="20201030 10:58:14.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.572" endtime="20201030 10:58:14.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.591" endtime="20201030 10:58:14.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.593" endtime="20201030 10:58:14.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.570" endtime="20201030 10:58:14.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.568" endtime="20201030 10:58:14.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.602" endtime="20201030 10:58:14.885"></status>
</kw>
<msg timestamp="20201030 10:58:14.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.601" endtime="20201030 10:58:14.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.889" endtime="20201030 10:58:14.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.897" endtime="20201030 10:58:14.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.598" endtime="20201030 10:58:14.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.597" endtime="20201030 10:58:14.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.904" level="INFO">${RESULT} = [{'diff': 1.0791999999999052e-05}, {'diff': 1.0041999999998302e-05}, {'diff': 9.735999999999773e-06}, {'diff': 9.597000000000078e-06}, {'diff': 9.597999999999551e-06}, {'diff': 9.250000000002312e-06},...</msg>
<status status="PASS" starttime="20201030 10:58:14.900" endtime="20201030 10:58:14.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:14.908" level="INFO">${ACCURACY} = {'diff': [1.0791999999999052e-05, 1.0041999999998302e-05, 9.735999999999773e-06, 9.597000000000078e-06, 9.597999999999551e-06, 9.250000000002312e-06, 9.306000000000592e-06, 9.597000000000078e-06, 9.30...</msg>
<status status="PASS" starttime="20201030 10:58:14.905" endtime="20201030 10:58:14.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.912" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 10:58:14.911" endtime="20201030 10:58:14.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.915" level="INFO">VALUE: [1.0791999999999052e-05, 1.0041999999998302e-05, 9.735999999999773e-06, 9.597000000000078e-06, 9.597999999999551e-06, 9.250000000002312e-06, 9.306000000000592e-06, 9.597000000000078e-06, 9.305000000001118e-06, 1.0056000000001342e-05, 1.0179999999998524e-05, 1.0055000000001868e-05, 9.570000000000412e-06, 9.305999999997122e-06, 1.0054999999998399e-05, 9.306000000000592e-06, 9.610999999999648e-06, 9.597000000000078e-06, 1.0181000000001467e-05, 9.306000000000592e-06, 9.624999999999218e-06, 9.305000000001118e-06, 1.0055000000001868e-05, 9.306000000000592e-06, 9.749999999999343e-06, 9.722000000000203e-06, 1.0068999999997968e-05, 9.722000000000203e-06, 9.749999999999343e-06, 9.597999999999551e-06, 9.735999999999773e-06, 9.749999999999343e-06, 9.610999999999648e-06, 1.0027999999998732e-05, 9.749999999999343e-06, 9.597000000000078e-06, 9.290999999998079e-06, 9.763999999998912e-06, 9.708000000000633e-06, 1.0054999999998399e-05, 9.735999999999773e-06, 1.0041000000002298e-05, 9.597000000000078e-06, 9.610999999999648e-06, 9.735999999999773e-06, 1.0069000000001438e-05, 9.735999999999773e-06, 9.611999999999121e-06, 1.0179999999998524e-05, 9.583999999999981e-06]</msg>
<status status="PASS" starttime="20201030 10:58:14.913" endtime="20201030 10:58:14.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.909" endtime="20201030 10:58:14.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.920" endtime="20201030 10:58:14.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.919" endtime="20201030 10:58:14.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.918" endtime="20201030 10:58:14.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.566" endtime="20201030 10:58:14.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.566" endtime="20201030 10:58:14.941"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.950" endtime="20201030 10:58:14.964"></status>
</kw>
<msg timestamp="20201030 10:58:14.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.948" endtime="20201030 10:58:14.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.966" endtime="20201030 10:58:14.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.968" endtime="20201030 10:58:14.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.946" endtime="20201030 10:58:14.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.944" endtime="20201030 10:58:14.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.977" endtime="20201030 10:58:15.264"></status>
</kw>
<msg timestamp="20201030 10:58:15.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.976" endtime="20201030 10:58:15.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.268" endtime="20201030 10:58:15.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.277" endtime="20201030 10:58:15.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.973" endtime="20201030 10:58:15.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.971" endtime="20201030 10:58:15.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.283" level="INFO">${RESULT} = [{'diff': 1.1957999999999414e-05}, {'diff': 1.1111000000001148e-05}, {'diff': 1.0944999999998317e-05}, {'diff': 1.0598000000000551e-05}, {'diff': 1.1068999999998969e-05}, {'diff': 1.0500000000000093e-...</msg>
<status status="PASS" starttime="20201030 10:58:15.280" endtime="20201030 10:58:15.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:15.290" level="INFO">${ACCURACY} = {'diff': [1.1957999999999414e-05, 1.1111000000001148e-05, 1.0944999999998317e-05, 1.0598000000000551e-05, 1.1068999999998969e-05, 1.0500000000000093e-05, 1.0638000000000314e-05, 1.0612000000000121e-05...</msg>
<status status="PASS" starttime="20201030 10:58:15.284" endtime="20201030 10:58:15.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.295" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 10:58:15.294" endtime="20201030 10:58:15.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.297" level="INFO">VALUE: [1.1957999999999414e-05, 1.1111000000001148e-05, 1.0944999999998317e-05, 1.0598000000000551e-05, 1.1068999999998969e-05, 1.0500000000000093e-05, 1.0638000000000314e-05, 1.0612000000000121e-05, 1.0667000000002397e-05, 1.0945000000001787e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0513999999999663e-05, 1.0458999999997387e-05, 1.0459000000000857e-05, 1.0611000000000648e-05, 1.0945000000001787e-05, 1.0458000000001383e-05, 1.0610999999997178e-05, 1.0931000000002217e-05, 1.1375000000000968e-05, 1.0611000000000648e-05, 1.0486000000000523e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0930000000002743e-05, 1.0625000000000218e-05, 1.0929999999999274e-05, 1.1360999999997928e-05, 1.0486000000000523e-05, 1.0638999999999788e-05, 1.0486000000000523e-05, 1.0611000000000648e-05, 1.0513999999999663e-05, 1.0611000000000648e-05, 1.0944000000002313e-05, 1.0625000000000218e-05, 1.0638000000000314e-05, 1.0625000000000218e-05, 1.0513999999999663e-05, 1.0930000000002743e-05, 1.0943999999998844e-05, 1.1096999999998108e-05, 1.0472000000000953e-05, 1.0929999999999274e-05, 1.1389000000000538e-05, 1.0486000000000523e-05, 1.0931000000002217e-05, 1.0513999999999663e-05, 1.0513999999999663e-05]</msg>
<status status="PASS" starttime="20201030 10:58:15.296" endtime="20201030 10:58:15.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.291" endtime="20201030 10:58:15.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.306" endtime="20201030 10:58:15.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.305" endtime="20201030 10:58:15.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.303" endtime="20201030 10:58:15.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.942" endtime="20201030 10:58:15.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.941" endtime="20201030 10:58:15.327"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.335" endtime="20201030 10:58:15.350"></status>
</kw>
<msg timestamp="20201030 10:58:15.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.334" endtime="20201030 10:58:15.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.351" endtime="20201030 10:58:15.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.354" endtime="20201030 10:58:15.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.331" endtime="20201030 10:58:15.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.329" endtime="20201030 10:58:15.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.363" endtime="20201030 10:58:15.647"></status>
</kw>
<msg timestamp="20201030 10:58:15.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.361" endtime="20201030 10:58:15.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.651" endtime="20201030 10:58:15.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.659" endtime="20201030 10:58:15.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.359" endtime="20201030 10:58:15.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.357" endtime="20201030 10:58:15.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.665" level="INFO">${RESULT} = [{'diff': 1.2542000000000803e-05}, {'diff': 1.2278000000000983e-05}, {'diff': 1.1959000000002357e-05}, {'diff': 1.1527000000000759e-05}, {'diff': 1.1833000000002758e-05}, {'diff': 1.1957999999999414e-...</msg>
<status status="PASS" starttime="20201030 10:58:15.662" endtime="20201030 10:58:15.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:15.670" level="INFO">${ACCURACY} = {'diff': [1.2542000000000803e-05, 1.2278000000000983e-05, 1.1959000000002357e-05, 1.1527000000000759e-05, 1.1833000000002758e-05, 1.1957999999999414e-05, 1.1514000000000663e-05, 1.1972000000002453e-05...</msg>
<status status="PASS" starttime="20201030 10:58:15.666" endtime="20201030 10:58:15.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.674" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 10:58:15.673" endtime="20201030 10:58:15.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.676" level="INFO">VALUE: [1.2542000000000803e-05, 1.2278000000000983e-05, 1.1959000000002357e-05, 1.1527000000000759e-05, 1.1833000000002758e-05, 1.1957999999999414e-05, 1.1514000000000663e-05, 1.1972000000002453e-05, 1.1375000000000968e-05, 1.1847000000002328e-05, 1.1541000000000329e-05, 1.1957999999999414e-05, 1.1361000000001398e-05, 1.1846999999998858e-05, 1.2278000000000983e-05, 1.1541999999999802e-05, 1.1528000000000233e-05, 1.1791000000000579e-05, 1.1375000000000968e-05, 1.1778000000000483e-05, 1.2319000000000219e-05, 1.1736000000001773e-05, 1.1458000000002383e-05, 1.1971999999998983e-05, 1.1416000000000204e-05, 1.1832999999999289e-05, 1.1457999999998913e-05, 1.1957999999999414e-05, 1.1514000000000663e-05, 1.1971999999998983e-05, 1.1818999999999719e-05, 1.1403000000000107e-05, 1.1805999999999622e-05, 1.1805999999999622e-05, 1.1832999999999289e-05, 1.1513000000001189e-05, 1.1818999999999719e-05, 1.1818999999999719e-05, 1.1791000000000579e-05, 1.1958000000002883e-05, 1.1360999999997928e-05, 1.1500000000001093e-05, 1.1514000000000663e-05, 1.1958999999998887e-05, 1.1528000000000233e-05, 1.1846999999998858e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1513999999997193e-05, 1.1972999999998457e-05]</msg>
<status status="PASS" starttime="20201030 10:58:15.675" endtime="20201030 10:58:15.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.670" endtime="20201030 10:58:15.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.681" endtime="20201030 10:58:15.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.680" endtime="20201030 10:58:15.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.679" endtime="20201030 10:58:15.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.328" endtime="20201030 10:58:15.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.327" endtime="20201030 10:58:15.702"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.711" endtime="20201030 10:58:15.726"></status>
</kw>
<msg timestamp="20201030 10:58:15.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.709" endtime="20201030 10:58:15.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.728" endtime="20201030 10:58:15.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.730" endtime="20201030 10:58:15.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.706" endtime="20201030 10:58:15.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.704" endtime="20201030 10:58:15.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.739" endtime="20201030 10:58:16.026"></status>
</kw>
<msg timestamp="20201030 10:58:16.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022912389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.738" endtime="20201030 10:58:16.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022912389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.030" endtime="20201030 10:58:16.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.038" endtime="20201030 10:58:16.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.735" endtime="20201030 10:58:16.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.733" endtime="20201030 10:58:16.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.045" level="INFO">${RESULT} = [{'diff': 1.3750000000003343e-05}, {'diff': 1.3166000000001954e-05}, {'diff': 1.2402999999997638e-05}, {'diff': 1.2709000000003107e-05}, {'diff': 1.2874999999998998e-05}, {'diff': 1.2402999999997638e-...</msg>
<status status="PASS" starttime="20201030 10:58:16.041" endtime="20201030 10:58:16.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.049" level="INFO">${ACCURACY} = {'diff': [1.3750000000003343e-05, 1.3166000000001954e-05, 1.2402999999997638e-05, 1.2709000000003107e-05, 1.2874999999998998e-05, 1.2402999999997638e-05, 1.2721999999999734e-05, 1.2708999999999637e-05...</msg>
<status status="PASS" starttime="20201030 10:58:16.046" endtime="20201030 10:58:16.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.053" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.052" endtime="20201030 10:58:16.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.056" level="INFO">VALUE: [1.3750000000003343e-05, 1.3166000000001954e-05, 1.2402999999997638e-05, 1.2709000000003107e-05, 1.2874999999998998e-05, 1.2402999999997638e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2735999999999303e-05, 1.3263999999998943e-05, 1.2416000000001204e-05, 1.2403000000001108e-05, 1.2431000000000247e-05, 1.2860999999999428e-05, 1.2694000000000594e-05, 1.2263999999997943e-05, 1.2681000000000497e-05, 1.2708000000000164e-05, 1.2417000000000677e-05, 1.2708999999999637e-05, 1.2403000000001108e-05, 1.2402000000001634e-05, 1.2681000000000497e-05, 1.2777999999998013e-05, 1.2403000000001108e-05, 1.2694000000000594e-05, 1.2403000000001108e-05, 1.2735999999999303e-05, 1.2805000000001149e-05, 1.2402999999997638e-05, 1.2847999999999332e-05, 1.2874999999998998e-05, 1.2846999999999859e-05, 1.2401999999998164e-05, 1.283299999999682e-05, 1.2860999999999428e-05, 1.2415999999997734e-05, 1.2403000000001108e-05, 1.2735999999999303e-05, 1.2846999999999859e-05, 1.2695000000000067e-05, 1.2416000000001204e-05, 1.2847999999999332e-05, 1.2721999999999734e-05, 1.2708999999999637e-05, 1.2792000000001053e-05, 1.2860999999999428e-05, 1.2721999999999734e-05, 1.2374999999998498e-05, 1.2750000000002343e-05]</msg>
<status status="PASS" starttime="20201030 10:58:16.054" endtime="20201030 10:58:16.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.050" endtime="20201030 10:58:16.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.061" endtime="20201030 10:58:16.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.060" endtime="20201030 10:58:16.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.059" endtime="20201030 10:58:16.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.703" endtime="20201030 10:58:16.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.702" endtime="20201030 10:58:16.082"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.091" endtime="20201030 10:58:16.105"></status>
</kw>
<msg timestamp="20201030 10:58:16.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.089" endtime="20201030 10:58:16.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.107" endtime="20201030 10:58:16.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.109" endtime="20201030 10:58:16.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.087" endtime="20201030 10:58:16.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.084" endtime="20201030 10:58:16.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.118" endtime="20201030 10:58:16.403"></status>
</kw>
<msg timestamp="20201030 10:58:16.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021846583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.117" endtime="20201030 10:58:16.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021846583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.408" endtime="20201030 10:58:16.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.416" endtime="20201030 10:58:16.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.114" endtime="20201030 10:58:16.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.113" endtime="20201030 10:58:16.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.422" level="INFO">${RESULT} = [{'diff': 1.4861000000001429e-05}, {'diff': 1.4055000000002399e-05}, {'diff': 1.376299999999997e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.3597000000000609e-05}, {'diff': 1.3695000000001067e-0...</msg>
<status status="PASS" starttime="20201030 10:58:16.419" endtime="20201030 10:58:16.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.427" level="INFO">${ACCURACY} = {'diff': [1.4861000000001429e-05, 1.4055000000002399e-05, 1.376299999999997e-05, 1.3749999999999873e-05, 1.3597000000000609e-05, 1.3695000000001067e-05, 1.3749999999999873e-05, 1.4111000000000679e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:16.423" endtime="20201030 10:58:16.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.432" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.431" endtime="20201030 10:58:16.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.434" level="INFO">VALUE: [1.4861000000001429e-05, 1.4055000000002399e-05, 1.376299999999997e-05, 1.3749999999999873e-05, 1.3597000000000609e-05, 1.3695000000001067e-05, 1.3749999999999873e-05, 1.4111000000000679e-05, 1.3611000000000179e-05, 1.4042000000002303e-05, 1.3555000000001899e-05, 1.3610999999996709e-05, 1.358299999999757e-05, 1.3347000000000359e-05, 1.3638999999999318e-05, 1.3693999999998124e-05, 1.3249999999999373e-05, 1.4042000000002303e-05, 1.4165999999999485e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3597000000000609e-05, 1.3305000000001649e-05, 1.3749999999999873e-05, 1.3611999999999652e-05, 1.3735999999996834e-05, 1.3723000000000207e-05, 1.3722000000000734e-05, 1.3805999999998153e-05, 1.404099999999936e-05, 1.3347999999999832e-05, 1.358299999999757e-05, 1.3611999999999652e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.3598000000000082e-05, 1.3277999999998513e-05, 1.3749999999999873e-05, 1.3611999999999652e-05, 1.3584000000000512e-05, 1.3291999999998083e-05, 1.4041999999998833e-05, 1.3597000000000609e-05, 1.3624999999999748e-05, 1.3735999999996834e-05, 1.3763999999999443e-05, 1.3722999999996738e-05, 1.3611000000000179e-05, 1.3263999999998943e-05, 1.4055999999998403e-05]</msg>
<status status="PASS" starttime="20201030 10:58:16.433" endtime="20201030 10:58:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.428" endtime="20201030 10:58:16.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.439" endtime="20201030 10:58:16.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.438" endtime="20201030 10:58:16.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.437" endtime="20201030 10:58:16.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.083" endtime="20201030 10:58:16.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.082" endtime="20201030 10:58:16.460"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.468" endtime="20201030 10:58:16.484"></status>
</kw>
<msg timestamp="20201030 10:58:16.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.467" endtime="20201030 10:58:16.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.485" endtime="20201030 10:58:16.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.488" endtime="20201030 10:58:16.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.464" endtime="20201030 10:58:16.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.462" endtime="20201030 10:58:16.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.497" endtime="20201030 10:58:16.783"></status>
</kw>
<msg timestamp="20201030 10:58:16.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021752819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021768347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.495" endtime="20201030 10:58:16.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021752819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021768347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.787" endtime="20201030 10:58:16.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.795" endtime="20201030 10:58:16.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.493" endtime="20201030 10:58:16.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.491" endtime="20201030 10:58:16.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.801" level="INFO">${RESULT} = [{'diff': 1.5528000000000763e-05}, {'diff': 1.53750000000015e-05}, {'diff': 1.4473000000000957e-05}, {'diff': 1.4639000000000318e-05}, {'diff': 1.4486000000001054e-05}, {'diff': 1.4500000000000624e-05...</msg>
<status status="PASS" starttime="20201030 10:58:16.798" endtime="20201030 10:58:16.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.806" level="INFO">${ACCURACY} = {'diff': [1.5528000000000763e-05, 1.53750000000015e-05, 1.4473000000000957e-05, 1.4639000000000318e-05, 1.4486000000001054e-05, 1.4500000000000624e-05, 1.4625000000000749e-05, 1.4473000000000957e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:16.802" endtime="20201030 10:58:16.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.810" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.809" endtime="20201030 10:58:16.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.812" level="INFO">VALUE: [1.5528000000000763e-05, 1.53750000000015e-05, 1.4473000000000957e-05, 1.4639000000000318e-05, 1.4486000000001054e-05, 1.4500000000000624e-05, 1.4625000000000749e-05, 1.4473000000000957e-05, 1.4500000000000624e-05, 1.4625000000000749e-05, 1.4500000000000624e-05, 1.4527999999999763e-05, 1.4666999999999458e-05, 1.4611000000001179e-05, 1.4931000000002748e-05, 1.4944999999998848e-05, 1.4486000000001054e-05, 1.4611000000001179e-05, 1.4639000000000318e-05, 1.4471999999998014e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4943999999999374e-05, 1.4500000000000624e-05, 1.4666999999999458e-05, 1.4944999999998848e-05, 1.4430999999998778e-05, 1.4514000000000193e-05, 1.4485999999997584e-05, 1.4485999999997584e-05, 1.4930999999999278e-05, 1.4458999999997918e-05, 1.4652000000000415e-05, 1.4500000000000624e-05, 1.4931000000002748e-05, 1.461099999999771e-05, 1.4944999999998848e-05, 1.4486000000001054e-05, 1.4527999999999763e-05, 1.4930999999999278e-05, 1.4945000000002318e-05, 1.4639000000000318e-05, 1.4652000000000415e-05, 1.4665999999999985e-05, 1.4916999999999708e-05, 1.4611000000001179e-05, 1.4500000000000624e-05, 1.4624999999997279e-05, 1.5014000000000693e-05, 1.4625000000000749e-05]</msg>
<status status="PASS" starttime="20201030 10:58:16.811" endtime="20201030 10:58:16.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.806" endtime="20201030 10:58:16.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.817" endtime="20201030 10:58:16.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.816" endtime="20201030 10:58:16.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.815" endtime="20201030 10:58:16.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.461" endtime="20201030 10:58:16.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.460" endtime="20201030 10:58:16.838"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.847" endtime="20201030 10:58:16.862"></status>
</kw>
<msg timestamp="20201030 10:58:16.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.845" endtime="20201030 10:58:16.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.864" endtime="20201030 10:58:16.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.867" endtime="20201030 10:58:16.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.843" endtime="20201030 10:58:16.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.840" endtime="20201030 10:58:16.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.876" endtime="20201030 10:58:17.162"></status>
</kw>
<msg timestamp="20201030 10:58:17.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.874" endtime="20201030 10:58:17.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.166" endtime="20201030 10:58:17.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.174" endtime="20201030 10:58:17.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.871" endtime="20201030 10:58:17.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.870" endtime="20201030 10:58:17.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.181" level="INFO">${RESULT} = [{'diff': 1.686099999999996e-05}, {'diff': 1.584699999999939e-05}, {'diff': 1.5819999999999723e-05}, {'diff': 1.552700000000129e-05}, {'diff': 1.581900000000025e-05}, {'diff': 1.5500000000001624e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:17.178" endtime="20201030 10:58:17.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.185" level="INFO">${ACCURACY} = {'diff': [1.686099999999996e-05, 1.584699999999939e-05, 1.5819999999999723e-05, 1.552700000000129e-05, 1.581900000000025e-05, 1.5500000000001624e-05, 1.579100000000111e-05, 1.6278000000001513e-05, 1.5...</msg>
<status status="PASS" starttime="20201030 10:58:17.182" endtime="20201030 10:58:17.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.189" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.188" endtime="20201030 10:58:17.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.192" level="INFO">VALUE: [1.686099999999996e-05, 1.584699999999939e-05, 1.5819999999999723e-05, 1.552700000000129e-05, 1.581900000000025e-05, 1.5500000000001624e-05, 1.579100000000111e-05, 1.6278000000001513e-05, 1.538900000000107e-05, 1.5388000000001595e-05, 1.583299999999982e-05, 1.5514000000001194e-05, 1.5833999999999293e-05, 1.5528000000000763e-05, 1.5514000000001194e-05, 1.5528000000000763e-05, 1.552700000000129e-05, 1.5514000000001194e-05, 1.584699999999939e-05, 1.5499999999998154e-05, 1.5819999999999723e-05, 1.581900000000025e-05, 1.581900000000025e-05, 1.6263999999998474e-05, 1.5931000000000278e-05, 1.580500000000068e-05, 1.537499999999803e-05, 1.5457999999999444e-05, 1.5514000000001194e-05, 1.5833999999999293e-05, 1.5514000000001194e-05, 1.5499999999998154e-05, 1.583299999999982e-05, 1.5792000000000583e-05, 1.5500000000001624e-05, 1.5819999999999723e-05, 1.5472999999998488e-05, 1.580500000000068e-05, 1.53750000000015e-05, 1.5514000000001194e-05, 1.581900000000025e-05, 1.5514000000001194e-05, 1.580500000000068e-05, 1.581900000000025e-05, 1.580500000000068e-05, 1.5569999999999473e-05, 1.583299999999982e-05, 1.5486000000002054e-05, 1.584699999999939e-05, 1.583299999999982e-05]</msg>
<status status="PASS" starttime="20201030 10:58:17.190" endtime="20201030 10:58:17.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.186" endtime="20201030 10:58:17.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.197" endtime="20201030 10:58:17.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.196" endtime="20201030 10:58:17.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.195" endtime="20201030 10:58:17.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.839" endtime="20201030 10:58:17.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.838" endtime="20201030 10:58:17.218"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.227" endtime="20201030 10:58:17.242"></status>
</kw>
<msg timestamp="20201030 10:58:17.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.225" endtime="20201030 10:58:17.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.243" endtime="20201030 10:58:17.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.246" endtime="20201030 10:58:17.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.222" endtime="20201030 10:58:17.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.220" endtime="20201030 10:58:17.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.255" endtime="20201030 10:58:17.539"></status>
</kw>
<msg timestamp="20201030 10:58:17.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.253" endtime="20201030 10:58:17.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.543" endtime="20201030 10:58:17.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.552" endtime="20201030 10:58:17.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.251" endtime="20201030 10:58:17.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.249" endtime="20201030 10:58:17.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.559" level="INFO">${RESULT} = [{'diff': 1.78890000000001e-05}, {'diff': 1.6695000000000598e-05}, {'diff': 1.686099999999996e-05}, {'diff': 1.6416000000001735e-05}, {'diff': 1.683300000000082e-05}, {'diff': 1.684700000000039e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:17.556" endtime="20201030 10:58:17.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.564" level="INFO">${ACCURACY} = {'diff': [1.78890000000001e-05, 1.6695000000000598e-05, 1.686099999999996e-05, 1.6416000000001735e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.687499999999953e-05, 1.6722000000000264e-05, 1.68...</msg>
<status status="PASS" starttime="20201030 10:58:17.560" endtime="20201030 10:58:17.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.569" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.568" endtime="20201030 10:58:17.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.571" level="INFO">VALUE: [1.78890000000001e-05, 1.6695000000000598e-05, 1.686099999999996e-05, 1.6416000000001735e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.687499999999953e-05, 1.6722000000000264e-05, 1.6819999999997254e-05, 1.6777999999998544e-05, 1.63889999999986e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.6708000000000695e-05, 1.640299999999817e-05, 1.6820000000000723e-05, 1.686099999999996e-05, 1.6708000000000695e-05, 1.640299999999817e-05, 1.634699999999989e-05, 1.641700000000121e-05, 1.680500000000168e-05, 1.6861999999999433e-05, 1.686099999999996e-05, 1.6709000000000168e-05, 1.6402000000002165e-05, 1.7151999999999445e-05, 1.640299999999817e-05, 1.6722999999999738e-05, 1.63889999999986e-05, 1.640299999999817e-05, 1.6693999999997655e-05, 1.6445000000000348e-05, 1.6320000000000223e-05, 1.68889999999991e-05, 1.6707999999997225e-05, 1.6708000000000695e-05, 1.684700000000039e-05, 1.6695000000000598e-05, 1.729100000000261e-05, 1.6415999999998265e-05, 1.687499999999953e-05, 1.684700000000039e-05, 1.640299999999817e-05, 1.665299999999842e-05, 1.640300000000164e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.6430000000001305e-05, 1.6695000000000598e-05]</msg>
<status status="PASS" starttime="20201030 10:58:17.570" endtime="20201030 10:58:17.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.565" endtime="20201030 10:58:17.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.576" endtime="20201030 10:58:17.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.575" endtime="20201030 10:58:17.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.574" endtime="20201030 10:58:17.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.219" endtime="20201030 10:58:17.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.218" endtime="20201030 10:58:17.597"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.606" endtime="20201030 10:58:17.621"></status>
</kw>
<msg timestamp="20201030 10:58:17.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.604" endtime="20201030 10:58:17.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.622" endtime="20201030 10:58:17.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.625" endtime="20201030 10:58:17.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.602" endtime="20201030 10:58:17.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.600" endtime="20201030 10:58:17.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.633" endtime="20201030 10:58:17.920"></status>
</kw>
<msg timestamp="20201030 10:58:17.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021829736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.632" endtime="20201030 10:58:17.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021829736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.924" endtime="20201030 10:58:17.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.932" endtime="20201030 10:58:17.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.629" endtime="20201030 10:58:17.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.628" endtime="20201030 10:58:17.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.939" level="INFO">${RESULT} = [{'diff': 1.913899999999788e-05}, {'diff': 1.8179999999999585e-05}, {'diff': 1.7749999999996935e-05}, {'diff': 1.7612000000000183e-05}, {'diff': 1.7263999999999474e-05}, {'diff': 1.761100000000071e-05...</msg>
<status status="PASS" starttime="20201030 10:58:17.935" endtime="20201030 10:58:17.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.943" level="INFO">${ACCURACY} = {'diff': [1.913899999999788e-05, 1.8179999999999585e-05, 1.7749999999996935e-05, 1.7612000000000183e-05, 1.7263999999999474e-05, 1.761100000000071e-05, 1.730499999999871e-05, 1.7750000000000404e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:58:17.939" endtime="20201030 10:58:17.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.947" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.946" endtime="20201030 10:58:17.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.950" level="INFO">VALUE: [1.913899999999788e-05, 1.8179999999999585e-05, 1.7749999999996935e-05, 1.7612000000000183e-05, 1.7263999999999474e-05, 1.761100000000071e-05, 1.730499999999871e-05, 1.7750000000000404e-05, 1.7736000000000834e-05, 1.7777999999999544e-05, 1.7584000000001043e-05, 1.7291999999998614e-05, 1.730499999999871e-05, 1.811100000000121e-05, 1.7723000000000738e-05, 1.731900000000175e-05, 1.8013999999996755e-05, 1.759700000000114e-05, 1.7612000000000183e-05, 1.759700000000114e-05, 1.8056000000002403e-05, 1.7598000000000613e-05, 1.762500000000028e-05, 1.7598000000000613e-05, 1.7723000000000738e-05, 1.75829999999981e-05, 1.7708000000001695e-05, 1.7736000000000834e-05, 1.7763999999999974e-05, 1.804099999999989e-05, 1.804099999999989e-05, 1.729099999999914e-05, 1.804099999999989e-05, 1.759700000000114e-05, 1.729099999999914e-05, 1.7778000000003014e-05, 1.76950000000016e-05, 1.7584000000001043e-05, 1.7598000000000613e-05, 1.7291999999998614e-05, 1.75829999999981e-05, 1.759700000000114e-05, 1.7598000000000613e-05, 1.7736000000000834e-05, 1.759700000000114e-05, 1.805499999999946e-05, 1.7763999999999974e-05, 1.7584000000001043e-05, 1.7292000000002083e-05, 1.7750000000000404e-05]</msg>
<status status="PASS" starttime="20201030 10:58:17.948" endtime="20201030 10:58:17.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.943" endtime="20201030 10:58:17.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.955" endtime="20201030 10:58:17.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.953" endtime="20201030 10:58:17.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.952" endtime="20201030 10:58:17.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.598" endtime="20201030 10:58:17.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.597" endtime="20201030 10:58:17.975"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.984" endtime="20201030 10:58:18.000"></status>
</kw>
<msg timestamp="20201030 10:58:18.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.982" endtime="20201030 10:58:18.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.001" endtime="20201030 10:58:18.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.004" endtime="20201030 10:58:18.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.980" endtime="20201030 10:58:18.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.978" endtime="20201030 10:58:18.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.013" endtime="20201030 10:58:18.297"></status>
</kw>
<msg timestamp="20201030 10:58:18.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022788944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.011" endtime="20201030 10:58:18.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022788944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.301" endtime="20201030 10:58:18.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.309" endtime="20201030 10:58:18.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.009" endtime="20201030 10:58:18.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.007" endtime="20201030 10:58:18.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.316" level="INFO">${RESULT} = [{'diff': 1.969500000000013e-05}, {'diff': 1.9042000000000364e-05}, {'diff': 1.863899999999738e-05}, {'diff': 1.8887999999998156e-05}, {'diff': 1.8179999999999585e-05}, {'diff': 1.863900000000085e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:18.313" endtime="20201030 10:58:18.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.320" level="INFO">${ACCURACY} = {'diff': [1.969500000000013e-05, 1.9042000000000364e-05, 1.863899999999738e-05, 1.8887999999998156e-05, 1.8179999999999585e-05, 1.863900000000085e-05, 1.8541999999999864e-05, 1.859700000000214e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:58:18.317" endtime="20201030 10:58:18.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.325" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.324" endtime="20201030 10:58:18.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.328" level="INFO">VALUE: [1.969500000000013e-05, 1.9042000000000364e-05, 1.863899999999738e-05, 1.8887999999998156e-05, 1.8179999999999585e-05, 1.863900000000085e-05, 1.8541999999999864e-05, 1.859700000000214e-05, 1.861100000000171e-05, 1.8707999999999225e-05, 1.8513999999997255e-05, 1.893099999999981e-05, 1.8193999999999155e-05, 1.862499999999781e-05, 1.8943999999999905e-05, 1.8471999999998545e-05, 1.8485999999998115e-05, 1.863899999999738e-05, 1.863900000000085e-05, 1.8514000000000724e-05, 1.856899999999953e-05, 1.8930000000000335e-05, 1.891700000000024e-05, 1.8500000000001154e-05, 1.8514000000000724e-05, 1.855499999999996e-05, 1.893100000000328e-05, 1.8500000000001154e-05, 1.894499999999938e-05, 1.844499999999888e-05, 1.8485999999998115e-05, 1.8485999999998115e-05, 1.818100000000253e-05, 1.895899999999895e-05, 1.894499999999938e-05, 1.8486000000001584e-05, 1.8500000000001154e-05, 1.845899999999845e-05, 1.861100000000171e-05, 1.8528000000000294e-05, 1.862500000000128e-05, 1.863900000000085e-05, 1.845899999999845e-05, 1.8486000000001584e-05, 1.862500000000128e-05, 1.8487000000001058e-05, 1.9361999999998464e-05, 1.8500000000001154e-05, 1.862499999999781e-05, 1.8957999999999475e-05]</msg>
<status status="PASS" starttime="20201030 10:58:18.326" endtime="20201030 10:58:18.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.321" endtime="20201030 10:58:18.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.333" endtime="20201030 10:58:18.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.331" endtime="20201030 10:58:18.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.330" endtime="20201030 10:58:18.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.976" endtime="20201030 10:58:18.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.976" endtime="20201030 10:58:18.353"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.362" endtime="20201030 10:58:18.377"></status>
</kw>
<msg timestamp="20201030 10:58:18.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.361" endtime="20201030 10:58:18.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.379" endtime="20201030 10:58:18.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.381" endtime="20201030 10:58:18.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.358" endtime="20201030 10:58:18.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.356" endtime="20201030 10:58:18.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.390" endtime="20201030 10:58:18.675"></status>
</kw>
<msg timestamp="20201030 10:58:18.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02181525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:18.388" endtime="20201030 10:58:18.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02181525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:18.680" endtime="20201030 10:58:18.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.688" endtime="20201030 10:58:18.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.386" endtime="20201030 10:58:18.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.384" endtime="20201030 10:58:18.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.694" level="INFO">${RESULT} = [{'diff': 2.0542000000001864e-05}, {'diff': 2.0250000000002905e-05}, {'diff': 1.9485999999999115e-05}, {'diff': 1.9972000000000045e-05}, {'diff': 1.936100000000246e-05}, {'diff': 1.9820000000000254e-0...</msg>
<status status="PASS" starttime="20201030 10:58:18.691" endtime="20201030 10:58:18.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.701" level="INFO">${ACCURACY} = {'diff': [2.0542000000001864e-05, 2.0250000000002905e-05, 1.9485999999999115e-05, 1.9972000000000045e-05, 1.936100000000246e-05, 1.9820000000000254e-05, 1.9820000000000254e-05, 1.938899999999813e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:18.695" endtime="20201030 10:58:18.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.706" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.705" endtime="20201030 10:58:18.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.708" level="INFO">VALUE: [2.0542000000001864e-05, 2.0250000000002905e-05, 1.9485999999999115e-05, 1.9972000000000045e-05, 1.936100000000246e-05, 1.9820000000000254e-05, 1.9820000000000254e-05, 1.938899999999813e-05, 1.940300000000117e-05, 1.984699999999992e-05, 1.9528000000001294e-05, 1.9833999999999824e-05, 1.9457999999999975e-05, 1.9528000000001294e-05, 1.990300000000167e-05, 1.9958000000000475e-05, 1.9820000000000254e-05, 1.9833999999999824e-05, 1.9528000000001294e-05, 1.9556000000000434e-05, 1.983300000000035e-05, 1.9527999999997825e-05, 1.983300000000035e-05, 1.933299999999985e-05, 1.938899999999813e-05, 1.9820000000000254e-05, 1.984699999999992e-05, 1.937499999999856e-05, 1.9513999999998255e-05, 1.9401999999998226e-05, 1.9944000000000905e-05, 1.9972000000000045e-05, 1.981900000000078e-05, 1.937499999999856e-05, 1.994500000000038e-05, 1.9528000000001294e-05, 1.9500000000002154e-05, 1.984699999999992e-05, 1.9528000000001294e-05, 1.936099999999899e-05, 1.9499999999998685e-05, 1.9833999999999824e-05, 1.937499999999856e-05, 1.9485999999999115e-05, 1.95830000000001e-05, 1.9972000000000045e-05, 1.933299999999985e-05, 1.9943999999997436e-05, 1.951299999999878e-05, 1.9999999999999185e-05]</msg>
<status status="PASS" starttime="20201030 10:58:18.707" endtime="20201030 10:58:18.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.702" endtime="20201030 10:58:18.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.713" endtime="20201030 10:58:18.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.712" endtime="20201030 10:58:18.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.711" endtime="20201030 10:58:18.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.354" endtime="20201030 10:58:18.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.354" endtime="20201030 10:58:18.734"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.743" endtime="20201030 10:58:18.758"></status>
</kw>
<msg timestamp="20201030 10:58:18.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.741" endtime="20201030 10:58:18.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.759" endtime="20201030 10:58:18.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.761" endtime="20201030 10:58:18.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.739" endtime="20201030 10:58:18.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.737" endtime="20201030 10:58:18.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.770" endtime="20201030 10:58:19.100"></status>
</kw>
<msg timestamp="20201030 10:58:19.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.769" endtime="20201030 10:58:19.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.104" endtime="20201030 10:58:19.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.112" endtime="20201030 10:58:19.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.766" endtime="20201030 10:58:19.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.765" endtime="20201030 10:58:19.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.119" level="INFO">${RESULT} = [{'diff': 2.1778000000000075e-05}, {'diff': 2.081899999999831e-05}, {'diff': 2.116699999999902e-05}, {'diff': 2.131900000000228e-05}, {'diff': 2.083300000000135e-05}, {'diff': 2.072300000000027e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:19.116" endtime="20201030 10:58:19.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.123" level="INFO">${ACCURACY} = {'diff': [2.1778000000000075e-05, 2.081899999999831e-05, 2.116699999999902e-05, 2.131900000000228e-05, 2.083300000000135e-05, 2.072300000000027e-05, 2.03890000000026e-05, 2.0722000000000795e-05, 2.024...</msg>
<status status="PASS" starttime="20201030 10:58:19.120" endtime="20201030 10:58:19.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.127" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.126" endtime="20201030 10:58:19.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.130" level="INFO">VALUE: [2.1778000000000075e-05, 2.081899999999831e-05, 2.116699999999902e-05, 2.131900000000228e-05, 2.083300000000135e-05, 2.072300000000027e-05, 2.03890000000026e-05, 2.0722000000000795e-05, 2.0249999999999435e-05, 2.03890000000026e-05, 2.07090000000007e-05, 2.0708000000001225e-05, 2.0416000000002266e-05, 2.0415999999998796e-05, 2.0736000000000365e-05, 2.04029999999987e-05, 2.072300000000027e-05, 2.069500000000113e-05, 2.038899999999913e-05, 2.0429999999998366e-05, 2.07090000000007e-05, 2.036099999999999e-05, 2.0443999999997936e-05, 2.0763999999999505e-05, 2.04029999999987e-05, 2.086100000000049e-05, 2.0777999999999075e-05, 2.116699999999902e-05, 2.041700000000174e-05, 2.0472000000000545e-05, 2.0777999999999075e-05, 2.084699999999745e-05, 2.034700000000042e-05, 2.0736000000000365e-05, 2.0736000000000365e-05, 2.081900000000178e-05, 2.0707999999997756e-05, 2.083299999999788e-05, 2.0416000000002266e-05, 2.072300000000027e-05, 2.07090000000007e-05, 2.084700000000092e-05, 2.0722000000000795e-05, 2.037499999999956e-05, 2.083300000000135e-05, 2.066700000000199e-05, 2.041699999999827e-05, 2.0834000000000824e-05, 2.07090000000007e-05, 2.0736000000000365e-05]</msg>
<status status="PASS" starttime="20201030 10:58:19.129" endtime="20201030 10:58:19.131"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.124" endtime="20201030 10:58:19.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.135" endtime="20201030 10:58:19.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.133" endtime="20201030 10:58:19.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.132" endtime="20201030 10:58:19.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.735" endtime="20201030 10:58:19.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.734" endtime="20201030 10:58:19.156"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.165" endtime="20201030 10:58:19.180"></status>
</kw>
<msg timestamp="20201030 10:58:19.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.163" endtime="20201030 10:58:19.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.181" endtime="20201030 10:58:19.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.184" endtime="20201030 10:58:19.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.161" endtime="20201030 10:58:19.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.159" endtime="20201030 10:58:19.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.193" endtime="20201030 10:58:19.478"></status>
</kw>
<msg timestamp="20201030 10:58:19.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.191" endtime="20201030 10:58:19.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.482" endtime="20201030 10:58:19.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.490" endtime="20201030 10:58:19.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.189" endtime="20201030 10:58:19.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.187" endtime="20201030 10:58:19.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.497" level="INFO">${RESULT} = [{'diff': 2.263900000000138e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.161099999999777e-05}, {'diff': 2.15969999999982e-05}, {'diff': 2.159700000000167e-05}, {'diff': 2.1305999999998715e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:19.493" endtime="20201030 10:58:19.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.501" level="INFO">${ACCURACY} = {'diff': [2.263900000000138e-05, 2.2041999999999895e-05, 2.161099999999777e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.1305999999998715e-05, 2.211100000000174e-05, 2.1707999999998756e-05, 2.17...</msg>
<status status="PASS" starttime="20201030 10:58:19.498" endtime="20201030 10:58:19.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.506" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.505" endtime="20201030 10:58:19.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.508" level="INFO">VALUE: [2.263900000000138e-05, 2.2041999999999895e-05, 2.161099999999777e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.1305999999998715e-05, 2.211100000000174e-05, 2.1707999999998756e-05, 2.1750000000000935e-05, 2.2041999999999895e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.159700000000167e-05, 2.130499999999924e-05, 2.1292000000002614e-05, 2.162500000000081e-05, 2.1735999999997896e-05, 2.1750000000000935e-05, 2.161099999999777e-05, 2.15969999999982e-05, 2.1291999999999145e-05, 2.209700000000217e-05, 2.1291999999999145e-05, 2.1598000000001144e-05, 2.1584000000001574e-05, 2.1277999999999575e-05, 2.1764000000000505e-05, 2.1721999999998326e-05, 2.1778000000000075e-05, 2.161100000000124e-05, 2.1721999999998326e-05, 2.1735999999997896e-05, 2.1291999999999145e-05, 2.161100000000124e-05, 2.15969999999982e-05, 2.2041999999999895e-05, 2.1735999999997896e-05, 2.1721999999998326e-05, 2.1721999999998326e-05, 2.1736000000001365e-05, 2.204100000000042e-05, 2.1277999999999575e-05, 2.162500000000081e-05, 2.1735999999997896e-05, 2.130499999999924e-05, 2.204100000000042e-05, 2.1334000000001324e-05, 2.2041999999999895e-05, 2.1708000000002226e-05, 2.156899999999906e-05]</msg>
<status status="PASS" starttime="20201030 10:58:19.507" endtime="20201030 10:58:19.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.502" endtime="20201030 10:58:19.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.513" endtime="20201030 10:58:19.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.512" endtime="20201030 10:58:19.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.510" endtime="20201030 10:58:19.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.157" endtime="20201030 10:58:19.534"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.156" endtime="20201030 10:58:19.534"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.542" endtime="20201030 10:58:19.559"></status>
</kw>
<msg timestamp="20201030 10:58:19.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.541" endtime="20201030 10:58:19.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.560" endtime="20201030 10:58:19.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.563" endtime="20201030 10:58:19.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.538" endtime="20201030 10:58:19.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.536" endtime="20201030 10:58:19.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.572" endtime="20201030 10:58:19.858"></status>
</kw>
<msg timestamp="20201030 10:58:19.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.570" endtime="20201030 10:58:19.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.862" endtime="20201030 10:58:19.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.870" endtime="20201030 10:58:19.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.568" endtime="20201030 10:58:19.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.566" endtime="20201030 10:58:19.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.877" level="INFO">${RESULT} = [{'diff': 2.319500000000016e-05}, {'diff': 2.3083999999999605e-05}, {'diff': 2.2193999999999686e-05}, {'diff': 2.294499999999991e-05}, {'diff': 2.293100000000034e-05}, {'diff': 2.2500000000001685e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:19.874" endtime="20201030 10:58:19.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.881" level="INFO">${ACCURACY} = {'diff': [2.319500000000016e-05, 2.3083999999999605e-05, 2.2193999999999686e-05, 2.294499999999991e-05, 2.293100000000034e-05, 2.2500000000001685e-05, 2.266700000000052e-05, 2.2598000000002144e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:19.878" endtime="20201030 10:58:19.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.885" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.884" endtime="20201030 10:58:19.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.888" level="INFO">VALUE: [2.319500000000016e-05, 2.3083999999999605e-05, 2.2193999999999686e-05, 2.294499999999991e-05, 2.293100000000034e-05, 2.2500000000001685e-05, 2.266700000000052e-05, 2.2598000000002144e-05, 2.2499999999998216e-05, 2.261100000000224e-05, 2.30969999999997e-05, 2.2500000000001685e-05, 2.2500000000001685e-05, 2.2694000000000186e-05, 2.269499999999966e-05, 2.2485999999998646e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.2499999999998216e-05, 2.2555999999999965e-05, 2.265299999999748e-05, 2.268100000000009e-05, 2.2944000000000436e-05, 2.2500000000001685e-05, 2.262499999999834e-05, 2.2514000000001255e-05, 2.2500000000001685e-05, 2.263900000000138e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.269499999999966e-05, 2.262500000000181e-05, 2.2500000000001685e-05, 2.291700000000077e-05, 2.262500000000181e-05, 2.2638000000001907e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.293100000000034e-05, 2.294499999999991e-05, 2.2915999999997827e-05, 2.2485999999998646e-05, 2.2499999999998216e-05, 2.2485999999998646e-05, 2.262500000000181e-05, 2.262499999999834e-05, 2.265299999999748e-05, 2.294499999999991e-05, 2.2486000000002115e-05, 2.262499999999834e-05]</msg>
<status status="PASS" starttime="20201030 10:58:19.886" endtime="20201030 10:58:19.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.882" endtime="20201030 10:58:19.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.893" endtime="20201030 10:58:19.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.891" endtime="20201030 10:58:19.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.890" endtime="20201030 10:58:19.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.535" endtime="20201030 10:58:19.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.534" endtime="20201030 10:58:19.913"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.922" endtime="20201030 10:58:19.938"></status>
</kw>
<msg timestamp="20201030 10:58:19.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.920" endtime="20201030 10:58:19.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.940" endtime="20201030 10:58:19.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.942" endtime="20201030 10:58:19.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.918" endtime="20201030 10:58:19.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.916" endtime="20201030 10:58:19.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.951" endtime="20201030 10:58:20.236"></status>
</kw>
<msg timestamp="20201030 10:58:20.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.949" endtime="20201030 10:58:20.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.240" endtime="20201030 10:58:20.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.248" endtime="20201030 10:58:20.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.947" endtime="20201030 10:58:20.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.945" endtime="20201030 10:58:20.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.255" level="INFO">${RESULT} = [{'diff': 2.411100000000027e-05}, {'diff': 2.4346999999997482e-05}, {'diff': 2.383300000000088e-05}, {'diff': 2.383300000000088e-05}, {'diff': 2.383300000000088e-05}, {'diff': 2.337499999999909e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:20.252" endtime="20201030 10:58:20.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:20.259" level="INFO">${ACCURACY} = {'diff': [2.411100000000027e-05, 2.4346999999997482e-05, 2.383300000000088e-05, 2.383300000000088e-05, 2.383300000000088e-05, 2.337499999999909e-05, 2.3555999999997496e-05, 2.395900000000048e-05, 2.35...</msg>
<status status="PASS" starttime="20201030 10:58:20.256" endtime="20201030 10:58:20.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.263" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 10:58:20.262" endtime="20201030 10:58:20.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.267" level="INFO">VALUE: [2.411100000000027e-05, 2.4346999999997482e-05, 2.383300000000088e-05, 2.383300000000088e-05, 2.383300000000088e-05, 2.337499999999909e-05, 2.3555999999997496e-05, 2.395900000000048e-05, 2.352700000000235e-05, 2.384700000000045e-05, 2.3472000000000076e-05, 2.3818999999997842e-05, 2.3819999999997316e-05, 2.348700000000259e-05, 2.3804999999998272e-05, 2.4263999999999536e-05, 2.397300000000005e-05, 2.3387999999999187e-05, 2.395900000000048e-05, 2.35970000000002e-05, 2.383300000000088e-05, 2.336099999999952e-05, 2.388899999999916e-05, 2.3513999999998786e-05, 2.388899999999916e-05, 2.336099999999952e-05, 2.3485999999999646e-05, 2.387499999999959e-05, 2.3513999999998786e-05, 2.3820000000000785e-05, 2.338899999999866e-05, 2.337499999999909e-05, 2.3832999999997412e-05, 2.336099999999952e-05, 2.3820000000000785e-05, 2.337499999999909e-05, 2.3957999999997537e-05, 2.3791999999998176e-05, 2.3834000000000355e-05, 2.3514000000002255e-05, 2.3499999999999216e-05, 2.3972000000000576e-05, 2.3832999999997412e-05, 2.3499999999999216e-05, 2.3792000000001645e-05, 2.3791999999998176e-05, 2.380500000000174e-05, 2.337499999999909e-05, 2.336099999999952e-05, 2.386100000000002e-05]</msg>
<status status="PASS" starttime="20201030 10:58:20.264" endtime="20201030 10:58:20.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.260" endtime="20201030 10:58:20.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.272" endtime="20201030 10:58:20.291"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.270" endtime="20201030 10:58:20.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.269" endtime="20201030 10:58:20.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.914" endtime="20201030 10:58:20.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.914" endtime="20201030 10:58:20.292"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.301" endtime="20201030 10:58:20.316"></status>
</kw>
<msg timestamp="20201030 10:58:20.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.299" endtime="20201030 10:58:20.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.317" endtime="20201030 10:58:20.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.320" endtime="20201030 10:58:20.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.297" endtime="20201030 10:58:20.322"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.295" endtime="20201030 10:58:20.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.329" endtime="20201030 10:58:20.614"></status>
</kw>
<msg timestamp="20201030 10:58:20.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.327" endtime="20201030 10:58:20.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.619" endtime="20201030 10:58:20.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.627" endtime="20201030 10:58:20.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.325" endtime="20201030 10:58:20.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.323" endtime="20201030 10:58:20.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.633" level="INFO">${RESULT} = [{'diff': 2.54169999999998e-05}, {'diff': 2.5250000000000966e-05}, {'diff': 2.470899999999776e-05}, {'diff': 2.4679999999999147e-05}, {'diff': 2.440299999999923e-05}, {'diff': 2.4721999999997857e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:20.630" endtime="20201030 10:58:20.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:20.638" level="INFO">${ACCURACY} = {'diff': [2.54169999999998e-05, 2.5250000000000966e-05, 2.470899999999776e-05, 2.4679999999999147e-05, 2.440299999999923e-05, 2.4721999999997857e-05, 2.4819999999998316e-05, 2.513899999999694e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 10:58:20.634" endtime="20201030 10:58:20.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.643" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 10:58:20.642" endtime="20201030 10:58:20.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.645" level="INFO">VALUE: [2.54169999999998e-05, 2.5250000000000966e-05, 2.470899999999776e-05, 2.4679999999999147e-05, 2.440299999999923e-05, 2.4721999999997857e-05, 2.4819999999998316e-05, 2.513899999999694e-05, 2.486100000000102e-05, 2.4278000000002575e-05, 2.466700000000252e-05, 2.4458000000001506e-05, 2.473700000000037e-05, 2.4694000000002186e-05, 2.437500000000009e-05, 2.4666000000003047e-05, 2.4806000000002215e-05, 2.4722000000001326e-05, 2.491700000000277e-05, 2.4848000000000925e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.4430000000002366e-05, 2.4736000000000896e-05, 2.4820000000001785e-05, 2.440299999999923e-05, 2.4721999999997857e-05, 2.4832999999998412e-05, 2.4693999999998717e-05, 2.4792000000002645e-05, 2.4708000000001756e-05, 2.4263000000000062e-05, 2.470899999999776e-05, 2.438899999999966e-05, 2.438899999999966e-05, 2.44169999999988e-05, 2.4415999999999327e-05, 2.4444000000001936e-05, 2.4471999999997607e-05, 2.47230000000008e-05, 2.5291999999999676e-05, 2.4846999999997982e-05, 2.438899999999966e-05, 2.4764000000000036e-05, 2.4722000000001326e-05, 2.486100000000102e-05, 2.4334000000000855e-05, 2.438899999999966e-05, 2.441700000000227e-05, 2.488900000000016e-05]</msg>
<status status="PASS" starttime="20201030 10:58:20.644" endtime="20201030 10:58:20.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.639" endtime="20201030 10:58:20.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.654" endtime="20201030 10:58:20.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.652" endtime="20201030 10:58:20.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.651" endtime="20201030 10:58:20.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.293" endtime="20201030 10:58:20.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.293" endtime="20201030 10:58:20.675"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.683" endtime="20201030 10:58:20.698"></status>
</kw>
<msg timestamp="20201030 10:58:20.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.682" endtime="20201030 10:58:20.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.700" endtime="20201030 10:58:20.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.702" endtime="20201030 10:58:20.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.679" endtime="20201030 10:58:20.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.677" endtime="20201030 10:58:20.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.711" endtime="20201030 10:58:20.996"></status>
</kw>
<msg timestamp="20201030 10:58:20.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.710" endtime="20201030 10:58:20.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.000" endtime="20201030 10:58:21.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.009" endtime="20201030 10:58:21.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.707" endtime="20201030 10:58:21.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.706" endtime="20201030 10:58:21.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.015" level="INFO">${RESULT} = [{'diff': 2.7097999999999706e-05}, {'diff': 2.6055999999999996e-05}, {'diff': 2.5722000000002326e-05}, {'diff': 2.5291000000000202e-05}, {'diff': 2.5736000000001896e-05}, {'diff': 2.5776999999997663e-...</msg>
<status status="PASS" starttime="20201030 10:58:21.012" endtime="20201030 10:58:21.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:21.020" level="INFO">${ACCURACY} = {'diff': [2.7097999999999706e-05, 2.6055999999999996e-05, 2.5722000000002326e-05, 2.5291000000000202e-05, 2.5736000000001896e-05, 2.5776999999997663e-05, 2.5596999999998732e-05, 2.5652000000001007e-05...</msg>
<status status="PASS" starttime="20201030 10:58:21.016" endtime="20201030 10:58:21.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.024" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 10:58:21.023" endtime="20201030 10:58:21.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.026" level="INFO">VALUE: [2.7097999999999706e-05, 2.6055999999999996e-05, 2.5722000000002326e-05, 2.5291000000000202e-05, 2.5736000000001896e-05, 2.5776999999997663e-05, 2.5596999999998732e-05, 2.5652000000001007e-05, 2.5666000000000577e-05, 2.5598000000001675e-05, 2.5610999999998302e-05, 2.6028000000000856e-05, 2.5291999999999676e-05, 2.5624999999997872e-05, 2.562500000000134e-05, 2.5750000000001466e-05, 2.5750000000001466e-05, 2.5735999999998427e-05, 2.6069000000000092e-05, 2.5610999999998302e-05, 2.5749999999997997e-05, 2.5598000000001675e-05, 2.5582999999999162e-05, 2.5610999999998302e-05, 2.5735999999998427e-05, 2.55970000000022e-05, 2.570899999999876e-05, 2.5736000000001896e-05, 2.5610999999998302e-05, 2.5264000000000536e-05, 2.6055999999999996e-05, 2.5582999999999162e-05, 2.5292000000003145e-05, 2.5693999999999717e-05, 2.5610999999998302e-05, 2.5221999999998357e-05, 2.5735999999998427e-05, 2.55970000000022e-05, 2.5693999999999717e-05, 2.5750000000001466e-05, 2.5721999999998857e-05, 2.5304999999999772e-05, 2.5291999999999676e-05, 2.6042000000000426e-05, 2.5292000000003145e-05, 2.5610999999998302e-05, 2.570900000000223e-05, 2.5735999999998427e-05, 2.5721999999998857e-05, 2.5791999999996706e-05]</msg>
<status status="PASS" starttime="20201030 10:58:21.025" endtime="20201030 10:58:21.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.020" endtime="20201030 10:58:21.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.031" endtime="20201030 10:58:21.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.030" endtime="20201030 10:58:21.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.029" endtime="20201030 10:58:21.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.675" endtime="20201030 10:58:21.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.675" endtime="20201030 10:58:21.052"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.061" endtime="20201030 10:58:21.077"></status>
</kw>
<msg timestamp="20201030 10:58:21.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.059" endtime="20201030 10:58:21.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.078" endtime="20201030 10:58:21.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.081" endtime="20201030 10:58:21.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.057" endtime="20201030 10:58:21.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.054" endtime="20201030 10:58:21.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.090" endtime="20201030 10:58:21.375"></status>
</kw>
<msg timestamp="20201030 10:58:21.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.088" endtime="20201030 10:58:21.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.379" endtime="20201030 10:58:21.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.388" endtime="20201030 10:58:21.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.086" endtime="20201030 10:58:21.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.084" endtime="20201030 10:58:21.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.394" level="INFO">${RESULT} = [{'diff': 2.8084000000001136e-05}, {'diff': 2.7110999999999802e-05}, {'diff': 2.6930000000001397e-05}, {'diff': 2.643100000000037e-05}, {'diff': 2.6610999999999302e-05}, {'diff': 2.7056000000000996e-0...</msg>
<status status="PASS" starttime="20201030 10:58:21.391" endtime="20201030 10:58:21.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:21.398" level="INFO">${ACCURACY} = {'diff': [2.8084000000001136e-05, 2.7110999999999802e-05, 2.6930000000001397e-05, 2.643100000000037e-05, 2.6610999999999302e-05, 2.7056000000000996e-05, 2.6610999999999302e-05, 2.6624999999998872e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:21.395" endtime="20201030 10:58:21.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.403" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 10:58:21.402" endtime="20201030 10:58:21.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.406" level="INFO">VALUE: [2.8084000000001136e-05, 2.7110999999999802e-05, 2.6930000000001397e-05, 2.643100000000037e-05, 2.6610999999999302e-05, 2.7056000000000996e-05, 2.6610999999999302e-05, 2.6624999999998872e-05, 2.6485999999999177e-05, 2.6944000000000967e-05, 2.69309999999974e-05, 2.663900000000191e-05, 2.6485999999999177e-05, 2.6485999999999177e-05, 2.6958000000000537e-05, 2.694499999999697e-05, 2.662500000000234e-05, 2.6485999999999177e-05, 2.6624999999998872e-05, 2.669500000000019e-05, 2.6944000000000967e-05, 2.6943999999997498e-05, 2.6624999999998872e-05, 2.6499999999998747e-05, 2.6624999999998872e-05, 2.6513999999998317e-05, 2.7388999999999192e-05, 2.6499999999998747e-05, 2.693100000000087e-05, 2.665299999999801e-05, 2.643100000000037e-05, 2.6499999999998747e-05, 2.693100000000087e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.6596999999999732e-05, 2.6624999999998872e-05, 2.6624999999998872e-05, 2.6958000000000537e-05, 2.6485999999999177e-05, 2.666700000000105e-05, 2.663900000000191e-05, 2.6444000000000467e-05, 2.6638999999998442e-05, 2.6499999999998747e-05, 2.6610999999999302e-05, 2.663900000000191e-05, 2.663900000000191e-05, 2.6542000000000926e-05, 2.662500000000234e-05]</msg>
<status status="PASS" starttime="20201030 10:58:21.404" endtime="20201030 10:58:21.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.399" endtime="20201030 10:58:21.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.411" endtime="20201030 10:58:21.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.409" endtime="20201030 10:58:21.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.408" endtime="20201030 10:58:21.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.053" endtime="20201030 10:58:21.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.052" endtime="20201030 10:58:21.432"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.440" endtime="20201030 10:58:21.455"></status>
</kw>
<msg timestamp="20201030 10:58:21.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.439" endtime="20201030 10:58:21.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.457" endtime="20201030 10:58:21.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.459" endtime="20201030 10:58:21.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.436" endtime="20201030 10:58:21.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.434" endtime="20201030 10:58:21.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.468" endtime="20201030 10:58:21.753"></status>
</kw>
<msg timestamp="20201030 10:58:21.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.467" endtime="20201030 10:58:21.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.758" endtime="20201030 10:58:21.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.766" endtime="20201030 10:58:21.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.464" endtime="20201030 10:58:21.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.462" endtime="20201030 10:58:21.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.773" level="INFO">${RESULT} = [{'diff': 2.8554999999999553e-05}, {'diff': 2.8277999999999637e-05}, {'diff': 2.7834000000000886e-05}, {'diff': 2.7514000000002786e-05}, {'diff': 2.743100000000137e-05}, {'diff': 2.7499999999999747e-0...</msg>
<status status="PASS" starttime="20201030 10:58:21.769" endtime="20201030 10:58:21.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:21.778" level="INFO">${ACCURACY} = {'diff': [2.8554999999999553e-05, 2.8277999999999637e-05, 2.7834000000000886e-05, 2.7514000000002786e-05, 2.743100000000137e-05, 2.7499999999999747e-05, 2.7388999999999192e-05, 2.7528000000002356e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:21.774" endtime="20201030 10:58:21.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.782" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 10:58:21.781" endtime="20201030 10:58:21.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.785" level="INFO">VALUE: [2.8554999999999553e-05, 2.8277999999999637e-05, 2.7834000000000886e-05, 2.7514000000002786e-05, 2.743100000000137e-05, 2.7499999999999747e-05, 2.7388999999999192e-05, 2.7528000000002356e-05, 2.7387999999999718e-05, 2.7387999999999718e-05, 2.7374999999999622e-05, 2.7527999999998887e-05, 2.740299999999876e-05, 2.7833000000001412e-05, 2.7361000000000052e-05, 2.7777999999999137e-05, 2.7387999999999718e-05, 2.7804999999998803e-05, 2.7847000000000982e-05, 2.7513999999999317e-05, 2.7861000000000552e-05, 2.7374999999999622e-05, 2.7513999999999317e-05, 2.7833000000001412e-05, 2.7804999999998803e-05, 2.7513999999999317e-05, 2.7986000000000677e-05, 2.7832999999997943e-05, 2.7499999999999747e-05, 2.7861000000000552e-05, 2.737500000000309e-05, 2.7528000000002356e-05, 2.7527999999998887e-05, 2.7512999999999843e-05, 2.7527999999998887e-05, 2.7541999999998457e-05, 2.7499999999999747e-05, 2.7512999999999843e-05, 2.7943999999998498e-05, 2.7458000000001037e-05, 2.794500000000144e-05, 2.7777999999999137e-05, 2.7804999999998803e-05, 2.7513999999999317e-05, 2.7833000000001412e-05, 2.7833000000001412e-05, 2.741699999999833e-05, 2.7818999999998373e-05, 2.7833000000001412e-05, 2.737500000000309e-05]</msg>
<status status="PASS" starttime="20201030 10:58:21.783" endtime="20201030 10:58:21.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.778" endtime="20201030 10:58:21.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.789" endtime="20201030 10:58:21.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.788" endtime="20201030 10:58:21.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.787" endtime="20201030 10:58:21.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.432" endtime="20201030 10:58:21.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.432" endtime="20201030 10:58:21.810"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.819" endtime="20201030 10:58:21.834"></status>
</kw>
<msg timestamp="20201030 10:58:21.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.817" endtime="20201030 10:58:21.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.835" endtime="20201030 10:58:21.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.838" endtime="20201030 10:58:21.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.815" endtime="20201030 10:58:21.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.812" endtime="20201030 10:58:21.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.847" endtime="20201030 10:58:22.132"></status>
</kw>
<msg timestamp="20201030 10:58:22.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.845" endtime="20201030 10:58:22.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.137" endtime="20201030 10:58:22.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.145" endtime="20201030 10:58:22.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.843" endtime="20201030 10:58:22.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.841" endtime="20201030 10:58:22.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.152" level="INFO">${RESULT} = [{'diff': 2.9443999999999998e-05}, {'diff': 2.9207999999999318e-05}, {'diff': 2.870899999999829e-05}, {'diff': 2.8846999999998513e-05}, {'diff': 2.87370000000009e-05}, {'diff': 2.8443999999998998e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:22.148" endtime="20201030 10:58:22.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.156" level="INFO">${ACCURACY} = {'diff': [2.9443999999999998e-05, 2.9207999999999318e-05, 2.870899999999829e-05, 2.8846999999998513e-05, 2.87370000000009e-05, 2.8443999999998998e-05, 2.872300000000133e-05, 2.8389000000000192e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:22.153" endtime="20201030 10:58:22.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.160" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.159" endtime="20201030 10:58:22.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.163" level="INFO">VALUE: [2.9443999999999998e-05, 2.9207999999999318e-05, 2.870899999999829e-05, 2.8846999999998513e-05, 2.87370000000009e-05, 2.8443999999998998e-05, 2.872300000000133e-05, 2.8389000000000192e-05, 2.8429999999999428e-05, 2.9167000000000082e-05, 2.8694000000002717e-05, 2.8707999999998818e-05, 2.8861000000001552e-05, 2.8848000000001456e-05, 2.8707999999998818e-05, 2.870900000000176e-05, 2.8736000000001427e-05, 2.8721999999998388e-05, 2.8443999999998998e-05, 2.8875000000001122e-05, 2.8402999999999762e-05, 2.872300000000133e-05, 2.8375000000000622e-05, 2.8736000000001427e-05, 2.8707999999998818e-05, 2.870899999999829e-05, 2.8694000000002717e-05, 2.8735999999997958e-05, 2.8861000000001552e-05, 2.8862000000001026e-05, 2.841699999999933e-05, 2.8721999999998388e-05, 2.8707999999998818e-05, 2.8402999999999762e-05, 2.8848000000001456e-05, 2.8721999999998388e-05, 2.8847999999997986e-05, 2.8861000000001552e-05, 2.8818999999999373e-05, 2.8277999999999637e-05, 2.8402999999999762e-05, 2.8722000000001857e-05, 2.870899999999829e-05, 2.870900000000176e-05, 2.8861000000001552e-05, 2.84309999999989e-05, 2.8861000000001552e-05, 2.8361000000001052e-05, 2.8722000000001857e-05, 2.841699999999933e-05]</msg>
<status status="PASS" starttime="20201030 10:58:22.161" endtime="20201030 10:58:22.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.157" endtime="20201030 10:58:22.164"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.168" endtime="20201030 10:58:22.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.166" endtime="20201030 10:58:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.165" endtime="20201030 10:58:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.811" endtime="20201030 10:58:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.810" endtime="20201030 10:58:22.188"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.197" endtime="20201030 10:58:22.215"></status>
</kw>
<msg timestamp="20201030 10:58:22.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.195" endtime="20201030 10:58:22.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.216" endtime="20201030 10:58:22.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.219" endtime="20201030 10:58:22.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.193" endtime="20201030 10:58:22.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.191" endtime="20201030 10:58:22.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.228" endtime="20201030 10:58:22.513"></status>
</kw>
<msg timestamp="20201030 10:58:22.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024531111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.226" endtime="20201030 10:58:22.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024531111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.518" endtime="20201030 10:58:22.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.526" endtime="20201030 10:58:22.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.224" endtime="20201030 10:58:22.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.222" endtime="20201030 10:58:22.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.532" level="INFO">${RESULT} = [{'diff': 3.019500000000022e-05}, {'diff': 3.0042000000000957e-05}, {'diff': 2.9624999999998403e-05}, {'diff': 2.9819000000000373e-05}, {'diff': 2.9778000000001137e-05}, {'diff': 2.9763999999998098e-0...</msg>
<status status="PASS" starttime="20201030 10:58:22.529" endtime="20201030 10:58:22.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.537" level="INFO">${ACCURACY} = {'diff': [3.019500000000022e-05, 3.0042000000000957e-05, 2.9624999999998403e-05, 2.9819000000000373e-05, 2.9778000000001137e-05, 2.9763999999998098e-05, 2.9722000000002857e-05, 3.0096999999999763e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:22.533" endtime="20201030 10:58:22.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.541" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.540" endtime="20201030 10:58:22.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.543" level="INFO">VALUE: [3.019500000000022e-05, 3.0042000000000957e-05, 2.9624999999998403e-05, 2.9819000000000373e-05, 2.9778000000001137e-05, 2.9763999999998098e-05, 2.9722000000002857e-05, 3.0096999999999763e-05, 2.9611000000002302e-05, 2.9292000000000207e-05, 2.9611000000002302e-05, 2.9596999999999263e-05, 2.9610999999998833e-05, 2.9749999999998528e-05, 2.9749999999998528e-05, 2.9749999999998528e-05, 2.9596999999999263e-05, 2.9764000000001567e-05, 2.9735999999998958e-05, 2.9625000000001872e-05, 2.9598000000002206e-05, 2.9291999999996737e-05, 3.0042000000000957e-05, 2.9750000000001997e-05, 3.0027000000001913e-05, 2.9277999999997167e-05, 2.9625000000001872e-05, 2.9611999999998306e-05, 2.9624999999998403e-05, 2.9305000000000303e-05, 2.9750000000001997e-05, 2.9721999999999388e-05, 3.0055000000001053e-05, 2.9556000000000027e-05, 2.9570000000003066e-05, 2.9569000000000123e-05, 2.9735999999998958e-05, 2.9624999999998403e-05, 2.9653000000001012e-05, 2.9610999999998833e-05, 3.0208000000000318e-05, 2.9597000000002732e-05, 2.9291000000000733e-05, 2.9735999999998958e-05, 2.9763999999998098e-05, 2.9277999999997167e-05, 2.9611999999998306e-05, 2.9667000000000582e-05, 2.9778000000001137e-05, 2.9736000000002427e-05]</msg>
<status status="PASS" starttime="20201030 10:58:22.542" endtime="20201030 10:58:22.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.537" endtime="20201030 10:58:22.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.549" endtime="20201030 10:58:22.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.548" endtime="20201030 10:58:22.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.546" endtime="20201030 10:58:22.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.189" endtime="20201030 10:58:22.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.189" endtime="20201030 10:58:22.570"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.578" endtime="20201030 10:58:22.593"></status>
</kw>
<msg timestamp="20201030 10:58:22.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.577" endtime="20201030 10:58:22.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.595" endtime="20201030 10:58:22.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.597" endtime="20201030 10:58:22.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.574" endtime="20201030 10:58:22.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.572" endtime="20201030 10:58:22.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.606" endtime="20201030 10:58:22.893"></status>
</kw>
<msg timestamp="20201030 10:58:22.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.605" endtime="20201030 10:58:22.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.897" endtime="20201030 10:58:22.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.906" endtime="20201030 10:58:22.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.602" endtime="20201030 10:58:22.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.601" endtime="20201030 10:58:22.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.912" level="INFO">${RESULT} = [{'diff': 3.197200000000164e-05}, {'diff': 3.091699999999836e-05}, {'diff': 3.093099999999793e-05}, {'diff': 3.0181000000000652e-05}, {'diff': 3.091700000000183e-05}, {'diff': 3.06249999999994e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:22.909" endtime="20201030 10:58:22.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.917" level="INFO">${ACCURACY} = {'diff': [3.197200000000164e-05, 3.091699999999836e-05, 3.093099999999793e-05, 3.0181000000000652e-05, 3.091700000000183e-05, 3.06249999999994e-05, 3.063800000000297e-05, 3.0472000000000138e-05, 3.065...</msg>
<status status="PASS" starttime="20201030 10:58:22.913" endtime="20201030 10:58:22.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.922" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.921" endtime="20201030 10:58:22.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.924" level="INFO">VALUE: [3.197200000000164e-05, 3.091699999999836e-05, 3.093099999999793e-05, 3.0181000000000652e-05, 3.091700000000183e-05, 3.06249999999994e-05, 3.063800000000297e-05, 3.0472000000000138e-05, 3.065199999999907e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.070800000000082e-05, 3.065199999999907e-05, 3.063899999999897e-05, 3.048700000000265e-05, 3.093099999999793e-05, 3.0485999999999708e-05, 3.0485999999999708e-05, 3.06249999999994e-05, 3.065200000000254e-05, 3.093000000000193e-05, 3.140299999999929e-05, 3.0166000000001608e-05, 3.102800000000239e-05, 3.065300000000201e-05, 3.0512999999999374e-05, 3.0512999999999374e-05, 3.056900000000112e-05, 3.0485999999999708e-05, 3.063899999999897e-05, 3.044500000000047e-05, 3.063899999999897e-05, 3.066699999999811e-05, 3.108400000000067e-05, 3.0499999999999278e-05, 3.06249999999994e-05, 3.0513999999998848e-05, 3.094399999999803e-05, 3.090299999999879e-05, 3.138899999999972e-05, 3.063899999999897e-05, 3.0499999999999278e-05, 3.0194999999996752e-05, 3.098600000000021e-05, 3.095800000000107e-05, 3.063899999999897e-05, 3.0499999999999278e-05, 3.06249999999994e-05, 3.065299999999854e-05, 3.0416000000001858e-05]</msg>
<status status="PASS" starttime="20201030 10:58:22.923" endtime="20201030 10:58:22.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.918" endtime="20201030 10:58:22.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.929" endtime="20201030 10:58:22.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.928" endtime="20201030 10:58:22.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.926" endtime="20201030 10:58:22.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.571" endtime="20201030 10:58:22.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.570" endtime="20201030 10:58:22.950"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.958" endtime="20201030 10:58:22.974"></status>
</kw>
<msg timestamp="20201030 10:58:22.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.957" endtime="20201030 10:58:22.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.975" endtime="20201030 10:58:22.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.978" endtime="20201030 10:58:22.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.954" endtime="20201030 10:58:22.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.952" endtime="20201030 10:58:22.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.987" endtime="20201030 10:58:23.273"></status>
</kw>
<msg timestamp="20201030 10:58:23.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.985" endtime="20201030 10:58:23.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.277" endtime="20201030 10:58:23.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.286" endtime="20201030 10:58:23.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.983" endtime="20201030 10:58:23.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.981" endtime="20201030 10:58:23.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.292" level="INFO">${RESULT} = [{'diff': 3.2874999999998183e-05}, {'diff': 3.225000000000103e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.197199999999817e-05}, {'diff': 3.181999999999838e-05}, {'diff': 3.141699999999886e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:23.289" endtime="20201030 10:58:23.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:23.296" level="INFO">${ACCURACY} = {'diff': [3.2874999999998183e-05, 3.225000000000103e-05, 3.137500000000015e-05, 3.197199999999817e-05, 3.181999999999838e-05, 3.141699999999886e-05, 3.148599999999724e-05, 3.151399999999985e-05, 3.181...</msg>
<status status="PASS" starttime="20201030 10:58:23.293" endtime="20201030 10:58:23.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.301" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 10:58:23.300" endtime="20201030 10:58:23.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.303" level="INFO">VALUE: [3.2874999999998183e-05, 3.225000000000103e-05, 3.137500000000015e-05, 3.197199999999817e-05, 3.181999999999838e-05, 3.141699999999886e-05, 3.148599999999724e-05, 3.151399999999985e-05, 3.1818999999998904e-05, 3.130600000000178e-05, 3.1804999999999334e-05, 3.1818999999998904e-05, 3.183300000000194e-05, 3.181900000000237e-05, 3.140299999999929e-05, 3.151399999999985e-05, 3.152799999999942e-05, 3.180599999999881e-05, 3.152799999999942e-05, 3.136100000000058e-05, 3.138800000000025e-05, 3.183300000000194e-05, 3.138899999999972e-05, 3.151399999999985e-05, 3.144500000000147e-05, 3.184799999999752e-05, 3.1832999999998474e-05, 3.183399999999795e-05, 3.22640000000006e-05, 3.152800000000289e-05, 3.183400000000142e-05, 3.225000000000103e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.156999999999813e-05, 3.184800000000099e-05, 3.145900000000104e-05, 3.181999999999838e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.1513000000000374e-05, 3.181999999999838e-05, 3.144399999999853e-05, 3.190200000000032e-05, 3.182000000000185e-05, 3.195900000000154e-05, 3.140299999999929e-05, 3.152799999999942e-05, 3.183400000000142e-05, 3.140299999999929e-05]</msg>
<status status="PASS" starttime="20201030 10:58:23.302" endtime="20201030 10:58:23.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.297" endtime="20201030 10:58:23.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.308" endtime="20201030 10:58:23.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.307" endtime="20201030 10:58:23.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.305" endtime="20201030 10:58:23.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.951" endtime="20201030 10:58:23.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.950" endtime="20201030 10:58:23.329"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.337" endtime="20201030 10:58:23.354"></status>
</kw>
<msg timestamp="20201030 10:58:23.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.336" endtime="20201030 10:58:23.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.355" endtime="20201030 10:58:23.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.358" endtime="20201030 10:58:23.359"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.333" endtime="20201030 10:58:23.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.331" endtime="20201030 10:58:23.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.367" endtime="20201030 10:58:23.652"></status>
</kw>
<msg timestamp="20201030 10:58:23.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022762639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.365" endtime="20201030 10:58:23.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022762639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.656" endtime="20201030 10:58:23.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.665" endtime="20201030 10:58:23.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.363" endtime="20201030 10:58:23.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.361" endtime="20201030 10:58:23.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.671" level="INFO">${RESULT} = [{'diff': 4.1596999999997386e-05}, {'diff': 4.23059999999989e-05}, {'diff': 4.1902999999999385e-05}, {'diff': 4.1860999999997206e-05}, {'diff': 4.173600000000055e-05}, {'diff': 4.170800000000141e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:23.668" endtime="20201030 10:58:23.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:23.675" level="INFO">${ACCURACY} = {'diff': [4.1596999999997386e-05, 4.23059999999989e-05, 4.1902999999999385e-05, 4.1860999999997206e-05, 4.173600000000055e-05, 4.170800000000141e-05, 4.198599999999733e-05, 4.2097000000001356e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 10:58:23.672" endtime="20201030 10:58:23.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.680" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 10:58:23.679" endtime="20201030 10:58:23.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.682" level="INFO">VALUE: [4.1596999999997386e-05, 4.23059999999989e-05, 4.1902999999999385e-05, 4.1860999999997206e-05, 4.173600000000055e-05, 4.170800000000141e-05, 4.198599999999733e-05, 4.2097000000001356e-05, 4.2111000000000925e-05, 4.201399999999994e-05, 4.205600000000212e-05, 4.197200000000123e-05, 4.1917000000002425e-05, 4.1861000000000675e-05, 4.201399999999994e-05, 4.1860999999997206e-05, 4.19860000000008e-05, 4.201399999999994e-05, 4.201399999999994e-05, 4.2054999999999176e-05, 4.2124999999997026e-05, 4.1973000000000704e-05, 4.180600000000187e-05, 4.175000000000012e-05, 4.1723000000000454e-05, 4.1737000000000024e-05, 4.177799999999926e-05, 4.21660000000032e-05, 4.1875000000000245e-05, 4.191599999999948e-05, 4.191600000000295e-05, 4.2097000000001356e-05, 4.1875000000000245e-05, 4.2054999999999176e-05, 4.1526999999999537e-05, 4.151399999999944e-05, 4.182000000000144e-05, 4.225000000000062e-05, 4.1804999999998926e-05, 4.202799999999951e-05, 4.16660000000027e-05, 4.1902999999999385e-05, 4.2139000000000065e-05, 4.1903000000002855e-05, 4.2139000000000065e-05, 4.175000000000012e-05, 4.201399999999994e-05, 4.170800000000141e-05, 4.223599999999758e-05, 4.1902999999999385e-05]</msg>
<status status="PASS" starttime="20201030 10:58:23.681" endtime="20201030 10:58:23.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.676" endtime="20201030 10:58:23.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.688" endtime="20201030 10:58:23.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.686" endtime="20201030 10:58:23.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.685" endtime="20201030 10:58:23.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.330" endtime="20201030 10:58:23.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.329" endtime="20201030 10:58:23.709"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.717" endtime="20201030 10:58:23.734"></status>
</kw>
<msg timestamp="20201030 10:58:23.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.716" endtime="20201030 10:58:23.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.736" endtime="20201030 10:58:23.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.738" endtime="20201030 10:58:23.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.713" endtime="20201030 10:58:23.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.711" endtime="20201030 10:58:23.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.747" endtime="20201030 10:58:24.032"></status>
</kw>
<msg timestamp="20201030 10:58:24.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.746" endtime="20201030 10:58:24.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.036" endtime="20201030 10:58:24.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.045" endtime="20201030 10:58:24.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.743" endtime="20201030 10:58:24.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.741" endtime="20201030 10:58:24.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.051" level="INFO">${RESULT} = [{'diff': 4.2791000000000357e-05}, {'diff': 4.315199999999769e-05}, {'diff': 4.319399999999987e-05}, {'diff': 4.305499999999671e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.3096999999998886e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:24.048" endtime="20201030 10:58:24.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:24.056" level="INFO">${ACCURACY} = {'diff': [4.2791000000000357e-05, 4.315199999999769e-05, 4.319399999999987e-05, 4.305499999999671e-05, 4.277800000000026e-05, 4.3096999999998886e-05, 4.327800000000076e-05, 4.251400000000044e-05, 4.31...</msg>
<status status="PASS" starttime="20201030 10:58:24.052" endtime="20201030 10:58:24.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.060" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 10:58:24.059" endtime="20201030 10:58:24.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.063" level="INFO">VALUE: [4.2791000000000357e-05, 4.315199999999769e-05, 4.319399999999987e-05, 4.305499999999671e-05, 4.277800000000026e-05, 4.3096999999998886e-05, 4.327800000000076e-05, 4.251400000000044e-05, 4.3139000000001065e-05, 4.279199999999983e-05, 4.2818999999999496e-05, 4.323600000000205e-05, 4.3180999999999775e-05, 4.281999999999897e-05, 4.306999999999922e-05, 4.28059999999994e-05, 4.2931000000002995e-05, 4.302700000000104e-05, 4.2944999999999095e-05, 4.272200000000198e-05, 4.3237000000001524e-05, 4.3082999999999316e-05, 4.326400000000119e-05, 4.3291000000000857e-05, 4.286200000000115e-05, 4.281999999999897e-05, 4.304200000000008e-05, 4.313800000000159e-05, 4.3153000000000635e-05, 4.273599999999808e-05, 4.2708999999998415e-05, 4.269399999999937e-05, 4.298599999999833e-05, 4.291600000000048e-05, 4.3055000000000176e-05, 4.2846999999998636e-05, 4.2888999999997346e-05, 4.2861000000001676e-05, 4.266599999999676e-05, 4.3097000000002356e-05, 4.3068999999999746e-05, 4.3041000000000607e-05, 4.275000000000112e-05, 4.3082999999999316e-05, 4.2847000000002106e-05, 4.2846999999998636e-05, 4.284799999999811e-05, 4.251400000000044e-05, 4.3138999999997596e-05, 4.322199999999901e-05]</msg>
<status status="PASS" starttime="20201030 10:58:24.062" endtime="20201030 10:58:24.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.057" endtime="20201030 10:58:24.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.068" endtime="20201030 10:58:24.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.066" endtime="20201030 10:58:24.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.065" endtime="20201030 10:58:24.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.709" endtime="20201030 10:58:24.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.709" endtime="20201030 10:58:24.089"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.097" endtime="20201030 10:58:24.113"></status>
</kw>
<msg timestamp="20201030 10:58:24.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.096" endtime="20201030 10:58:24.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.115" endtime="20201030 10:58:24.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.117" endtime="20201030 10:58:24.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.093" endtime="20201030 10:58:24.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.091" endtime="20201030 10:58:24.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.126" endtime="20201030 10:58:24.413"></status>
</kw>
<msg timestamp="20201030 10:58:24.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.125" endtime="20201030 10:58:24.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.417" endtime="20201030 10:58:24.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.426" endtime="20201030 10:58:24.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.122" endtime="20201030 10:58:24.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.120" endtime="20201030 10:58:24.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.432" level="INFO">${RESULT} = [{'diff': 4.373600000000255e-05}, {'diff': 4.4153000000001635e-05}, {'diff': 4.391599999999801e-05}, {'diff': 4.369400000000037e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.420799999999697e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:24.429" endtime="20201030 10:58:24.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:24.436" level="INFO">${ACCURACY} = {'diff': [4.373600000000255e-05, 4.4153000000001635e-05, 4.391599999999801e-05, 4.369400000000037e-05, 4.3945000000000095e-05, 4.420799999999697e-05, 4.3819000000000496e-05, 4.376400000000169e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 10:58:24.433" endtime="20201030 10:58:24.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.441" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 10:58:24.440" endtime="20201030 10:58:24.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.443" level="INFO">VALUE: [4.373600000000255e-05, 4.4153000000001635e-05, 4.391599999999801e-05, 4.369400000000037e-05, 4.3945000000000095e-05, 4.420799999999697e-05, 4.3819000000000496e-05, 4.376400000000169e-05, 4.3833000000000066e-05, 4.4083000000000316e-05, 4.373599999999908e-05, 4.423599999999958e-05, 4.397199999999976e-05, 4.3861000000002676e-05, 4.4152999999998166e-05, 4.424999999999915e-05, 4.398599999999933e-05, 4.369400000000037e-05, 4.401400000000194e-05, 4.379199999999736e-05, 4.39999999999989e-05, 4.402800000000151e-05, 4.4055000000001177e-05, 4.374999999999865e-05, 4.373599999999908e-05, 4.405600000000065e-05, 4.4167000000001205e-05, 4.3708999999999415e-05, 4.427799999999829e-05, 4.377800000000126e-05, 4.3903000000001385e-05, 4.4124999999999026e-05, 4.3569000000000246e-05, 4.379199999999736e-05, 4.3833000000000066e-05, 4.381999999999997e-05, 4.3694999999999845e-05, 4.423599999999958e-05, 4.3833000000000066e-05, 4.420800000000044e-05, 4.3846999999999636e-05, 4.417999999999783e-05, 4.420800000000044e-05, 4.420800000000044e-05, 4.397199999999976e-05, 4.420800000000044e-05, 4.39999999999989e-05, 4.4096999999999886e-05, 4.393000000000105e-05, 4.3638999999998096e-05]</msg>
<status status="PASS" starttime="20201030 10:58:24.442" endtime="20201030 10:58:24.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.437" endtime="20201030 10:58:24.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.448" endtime="20201030 10:58:24.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.446" endtime="20201030 10:58:24.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.445" endtime="20201030 10:58:24.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.089" endtime="20201030 10:58:24.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.089" endtime="20201030 10:58:24.469"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.477" endtime="20201030 10:58:24.494"></status>
</kw>
<msg timestamp="20201030 10:58:24.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.476" endtime="20201030 10:58:24.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.495" endtime="20201030 10:58:24.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.498" endtime="20201030 10:58:24.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.473" endtime="20201030 10:58:24.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.471" endtime="20201030 10:58:24.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.507" endtime="20201030 10:58:24.792"></status>
</kw>
<msg timestamp="20201030 10:58:24.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:24.505" endtime="20201030 10:58:24.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:24.796" endtime="20201030 10:58:24.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.804" endtime="20201030 10:58:24.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.503" endtime="20201030 10:58:24.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.501" endtime="20201030 10:58:24.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.811" level="INFO">${RESULT} = [{'diff': 4.527799999999929e-05}, {'diff': 4.4680999999997806e-05}, {'diff': 4.477799999999879e-05}, {'diff': 4.5125000000000026e-05}, {'diff': 4.476399999999922e-05}, {'diff': 4.504200000000208e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:24.808" endtime="20201030 10:58:24.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:24.815" level="INFO">${ACCURACY} = {'diff': [4.527799999999929e-05, 4.4680999999997806e-05, 4.477799999999879e-05, 4.5125000000000026e-05, 4.476399999999922e-05, 4.504200000000208e-05, 4.4902999999998916e-05, 4.4888999999999346e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:58:24.812" endtime="20201030 10:58:24.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.820" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 10:58:24.819" endtime="20201030 10:58:24.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.822" level="INFO">VALUE: [4.527799999999929e-05, 4.4680999999997806e-05, 4.477799999999879e-05, 4.5125000000000026e-05, 4.476399999999922e-05, 4.504200000000208e-05, 4.4902999999998916e-05, 4.4888999999999346e-05, 4.493000000000205e-05, 4.4874999999999776e-05, 4.502700000000304e-05, 4.4833000000001066e-05, 4.524999999999668e-05, 4.476400000000269e-05, 4.520800000000144e-05, 4.4861000000000206e-05, 4.526399999999972e-05, 4.469400000000137e-05, 4.4917000000001955e-05, 4.504199999999861e-05, 4.4888999999999346e-05, 4.5083000000001316e-05, 4.477799999999879e-05, 4.4916999999998486e-05, 4.4861000000000206e-05, 4.477800000000226e-05, 4.473600000000008e-05, 4.470800000000094e-05, 4.476399999999922e-05, 4.473600000000008e-05, 4.525000000000015e-05, 4.5083000000001316e-05, 4.4737000000003024e-05, 4.4833000000001066e-05, 4.5125000000000026e-05, 4.4959000000000665e-05, 4.49999999999999e-05, 4.477800000000226e-05, 4.498600000000033e-05, 4.4847000000000636e-05, 4.505600000000165e-05, 4.511099999999699e-05, 4.479099999999889e-05, 4.5237000000000055e-05, 4.494399999999815e-05, 4.523599999999711e-05, 4.523600000000058e-05, 4.5083000000001316e-05, 4.472200000000051e-05, 4.525000000000015e-05]</msg>
<status status="PASS" starttime="20201030 10:58:24.821" endtime="20201030 10:58:24.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.816" endtime="20201030 10:58:24.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.828" endtime="20201030 10:58:24.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.826" endtime="20201030 10:58:24.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.825" endtime="20201030 10:58:24.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.469" endtime="20201030 10:58:24.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.469" endtime="20201030 10:58:24.849"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.857" endtime="20201030 10:58:24.873"></status>
</kw>
<msg timestamp="20201030 10:58:24.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.856" endtime="20201030 10:58:24.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.874" endtime="20201030 10:58:24.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.877" endtime="20201030 10:58:24.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.853" endtime="20201030 10:58:24.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.851" endtime="20201030 10:58:24.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.886" endtime="20201030 10:58:25.171"></status>
</kw>
<msg timestamp="20201030 10:58:25.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.884" endtime="20201030 10:58:25.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.175" endtime="20201030 10:58:25.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.183" endtime="20201030 10:58:25.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.882" endtime="20201030 10:58:25.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.880" endtime="20201030 10:58:25.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.190" level="INFO">${RESULT} = [{'diff': 4.566599999999976e-05}, {'diff': 4.591600000000001e-05}, {'diff': 4.580499999999946e-05}, {'diff': 4.580500000000293e-05}, {'diff': 4.602800000000004e-05}, {'diff': 4.599999999999743e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:25.187" endtime="20201030 10:58:25.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:25.195" level="INFO">${ACCURACY} = {'diff': [4.566599999999976e-05, 4.591600000000001e-05, 4.580499999999946e-05, 4.580500000000293e-05, 4.602800000000004e-05, 4.599999999999743e-05, 4.616600000000026e-05, 4.616599999999679e-05, 4.5847...</msg>
<status status="PASS" starttime="20201030 10:58:25.191" endtime="20201030 10:58:25.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.200" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 10:58:25.198" endtime="20201030 10:58:25.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.202" level="INFO">VALUE: [4.566599999999976e-05, 4.591600000000001e-05, 4.580499999999946e-05, 4.580500000000293e-05, 4.602800000000004e-05, 4.599999999999743e-05, 4.616600000000026e-05, 4.616599999999679e-05, 4.5847000000001636e-05, 4.5889000000000346e-05, 4.567999999999933e-05, 4.598599999999786e-05, 4.567999999999933e-05, 4.58060000000024e-05, 4.58190000000025e-05, 4.611099999999799e-05, 4.605599999999918e-05, 4.570799999999847e-05, 4.620799999999897e-05, 4.5833000000002067e-05, 4.598600000000133e-05, 4.626400000000072e-05, 4.5708999999997946e-05, 4.6139000000000596e-05, 4.60000000000009e-05, 4.576400000000022e-05, 4.6166999999999736e-05, 4.580599999999893e-05, 4.598599999999786e-05, 4.625000000000115e-05, 4.5723000000000985e-05, 4.6166999999999736e-05, 4.612499999999756e-05, 4.6013999999997e-05, 4.55000000000004e-05, 4.570799999999847e-05, 4.58329999999986e-05, 4.613799999999765e-05, 4.601400000000047e-05, 4.6111000000001456e-05, 4.591600000000001e-05, 4.604100000000014e-05, 4.597199999999829e-05, 4.601400000000047e-05, 4.570800000000194e-05, 4.602800000000004e-05, 4.597199999999829e-05, 4.608299999999885e-05, 4.597200000000176e-05, 4.6166999999999736e-05]</msg>
<status status="PASS" starttime="20201030 10:58:25.201" endtime="20201030 10:58:25.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.196" endtime="20201030 10:58:25.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.207" endtime="20201030 10:58:25.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.205" endtime="20201030 10:58:25.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.204" endtime="20201030 10:58:25.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.850" endtime="20201030 10:58:25.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.849" endtime="20201030 10:58:25.228"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.236" endtime="20201030 10:58:25.253"></status>
</kw>
<msg timestamp="20201030 10:58:25.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.234" endtime="20201030 10:58:25.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.254" endtime="20201030 10:58:25.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.257" endtime="20201030 10:58:25.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.232" endtime="20201030 10:58:25.259"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.230" endtime="20201030 10:58:25.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.266" endtime="20201030 10:58:25.552"></status>
</kw>
<msg timestamp="20201030 10:58:25.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02181925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:25.264" endtime="20201030 10:58:25.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02181925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:25.556" endtime="20201030 10:58:25.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.564" endtime="20201030 10:58:25.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.261" endtime="20201030 10:58:25.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.260" endtime="20201030 10:58:25.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.571" level="INFO">${RESULT} = [{'diff': 4.648599999999836e-05}, {'diff': 4.708299999999985e-05}, {'diff': 4.687499999999831e-05}, {'diff': 4.698599999999886e-05}, {'diff': 4.705600000000018e-05}, {'diff': 4.679200000000036e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:25.568" endtime="20201030 10:58:25.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:25.575" level="INFO">${ACCURACY} = {'diff': [4.648599999999836e-05, 4.708299999999985e-05, 4.687499999999831e-05, 4.698599999999886e-05, 4.705600000000018e-05, 4.679200000000036e-05, 4.7181000000000306e-05, 4.70000000000019e-05, 4.7056...</msg>
<status status="PASS" starttime="20201030 10:58:25.572" endtime="20201030 10:58:25.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.579" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 10:58:25.578" endtime="20201030 10:58:25.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.582" level="INFO">VALUE: [4.648599999999836e-05, 4.708299999999985e-05, 4.687499999999831e-05, 4.698599999999886e-05, 4.705600000000018e-05, 4.679200000000036e-05, 4.7181000000000306e-05, 4.70000000000019e-05, 4.705600000000018e-05, 4.7013999999998e-05, 4.698599999999886e-05, 4.708399999999932e-05, 4.7236999999998586e-05, 4.6944999999999626e-05, 4.704200000000061e-05, 4.701400000000147e-05, 4.705600000000018e-05, 4.701400000000147e-05, 4.720799999999997e-05, 4.684800000000211e-05, 4.717999999999736e-05, 4.723599999999911e-05, 4.7194999999999876e-05, 4.679100000000089e-05, 4.705499999999724e-05, 4.713800000000212e-05, 4.723600000000258e-05, 4.681900000000003e-05, 4.693000000000058e-05, 4.675000000000165e-05, 4.708299999999985e-05, 4.695800000000319e-05, 4.722199999999954e-05, 4.709699999999942e-05, 4.732e-05, 4.684699999999917e-05, 4.71940000000004e-05, 4.670799999999947e-05, 4.6944999999999626e-05, 4.7181000000000306e-05, 4.683400000000254e-05, 4.7167000000000736e-05, 4.723600000000258e-05, 4.699999999999843e-05, 4.720799999999997e-05, 4.709699999999942e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.679200000000036e-05, 4.698600000000233e-05]</msg>
<status status="PASS" starttime="20201030 10:58:25.581" endtime="20201030 10:58:25.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.576" endtime="20201030 10:58:25.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.587" endtime="20201030 10:58:25.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.585" endtime="20201030 10:58:25.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.584" endtime="20201030 10:58:25.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.228" endtime="20201030 10:58:25.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.228" endtime="20201030 10:58:25.608"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.616" endtime="20201030 10:58:25.636"></status>
</kw>
<msg timestamp="20201030 10:58:25.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.615" endtime="20201030 10:58:25.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.637" endtime="20201030 10:58:25.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.640" endtime="20201030 10:58:25.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.612" endtime="20201030 10:58:25.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.610" endtime="20201030 10:58:25.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.649" endtime="20201030 10:58:25.935"></status>
</kw>
<msg timestamp="20201030 10:58:25.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024802111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024850319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.647" endtime="20201030 10:58:25.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024802111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024850319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.939" endtime="20201030 10:58:25.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.947" endtime="20201030 10:58:25.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.645" endtime="20201030 10:58:25.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.643" endtime="20201030 10:58:25.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.953" level="INFO">${RESULT} = [{'diff': 4.82079999999975e-05}, {'diff': 4.809700000000042e-05}, {'diff': 4.780500000000146e-05}, {'diff': 4.791599999999854e-05}, {'diff': 4.799999999999943e-05}, {'diff': 4.813899999999913e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:25.950" endtime="20201030 10:58:25.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:25.958" level="INFO">${ACCURACY} = {'diff': [4.82079999999975e-05, 4.809700000000042e-05, 4.780500000000146e-05, 4.791599999999854e-05, 4.799999999999943e-05, 4.813899999999913e-05, 4.793000000000158e-05, 4.812499999999956e-05, 4.79159...</msg>
<status status="PASS" starttime="20201030 10:58:25.954" endtime="20201030 10:58:25.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.962" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 10:58:25.961" endtime="20201030 10:58:25.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.964" level="INFO">VALUE: [4.82079999999975e-05, 4.809700000000042e-05, 4.780500000000146e-05, 4.791599999999854e-05, 4.799999999999943e-05, 4.813899999999913e-05, 4.793000000000158e-05, 4.812499999999956e-05, 4.791599999999854e-05, 4.809700000000042e-05, 4.772200000000004e-05, 4.774999999999918e-05, 4.7917000000001486e-05, 4.819399999999793e-05, 4.822200000000054e-05, 4.811099999999999e-05, 4.7987000000002805e-05, 4.784700000000017e-05, 4.7959000000000196e-05, 4.8195000000000876e-05, 4.802800000000204e-05, 4.776399999999875e-05, 4.7681000000000806e-05, 4.7723000000002985e-05, 4.824999999999968e-05, 4.8181000000001306e-05, 4.78339999999966e-05, 4.7722999999999516e-05, 4.808400000000032e-05, 4.793099999999759e-05, 4.7722999999999516e-05, 4.824999999999968e-05, 4.81529999999987e-05, 4.798599999999986e-05, 4.819399999999793e-05, 4.804100000000214e-05, 4.779099999999842e-05, 4.770800000000047e-05, 4.818000000000183e-05, 4.804099999999867e-05, 4.824999999999968e-05, 4.781900000000103e-05, 4.820800000000097e-05, 4.812499999999956e-05, 4.798600000000333e-05, 4.777799999999832e-05, 4.776400000000222e-05, 4.8139000000002596e-05, 4.811099999999999e-05, 4.787499999999931e-05]</msg>
<status status="PASS" starttime="20201030 10:58:25.963" endtime="20201030 10:58:25.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.958" endtime="20201030 10:58:25.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.974" endtime="20201030 10:58:25.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.972" endtime="20201030 10:58:25.994"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.971" endtime="20201030 10:58:25.994"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.609" endtime="20201030 10:58:25.994"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.608" endtime="20201030 10:58:25.995"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.003" endtime="20201030 10:58:26.020"></status>
</kw>
<msg timestamp="20201030 10:58:26.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.001" endtime="20201030 10:58:26.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.021" endtime="20201030 10:58:26.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.023" endtime="20201030 10:58:26.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.999" endtime="20201030 10:58:26.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.997" endtime="20201030 10:58:26.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.033" endtime="20201030 10:58:26.318"></status>
</kw>
<msg timestamp="20201030 10:58:26.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.031" endtime="20201030 10:58:26.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.322" endtime="20201030 10:58:26.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.330" endtime="20201030 10:58:26.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.028" endtime="20201030 10:58:26.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.027" endtime="20201030 10:58:26.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.337" level="INFO">${RESULT} = [{'diff': 4.877699999999985e-05}, {'diff': 4.884700000000117e-05}, {'diff': 4.876399999999975e-05}, {'diff': 4.887500000000031e-05}, {'diff': 4.88330000000016e-05}, {'diff': 4.886100000000074e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:26.333" endtime="20201030 10:58:26.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:26.342" level="INFO">${ACCURACY} = {'diff': [4.877699999999985e-05, 4.884700000000117e-05, 4.876399999999975e-05, 4.887500000000031e-05, 4.88330000000016e-05, 4.886100000000074e-05, 4.923600000000111e-05, 4.912500000000056e-05, 4.91799...</msg>
<status status="PASS" starttime="20201030 10:58:26.338" endtime="20201030 10:58:26.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.346" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 10:58:26.345" endtime="20201030 10:58:26.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.348" level="INFO">VALUE: [4.877699999999985e-05, 4.884700000000117e-05, 4.876399999999975e-05, 4.887500000000031e-05, 4.88330000000016e-05, 4.886100000000074e-05, 4.923600000000111e-05, 4.912500000000056e-05, 4.917999999999936e-05, 4.897200000000129e-05, 4.925000000000068e-05, 4.890299999999945e-05, 4.925000000000068e-05, 4.912500000000056e-05, 4.9167000000002736e-05, 4.923600000000111e-05, 4.8945000000001626e-05, 4.922199999999807e-05, 4.879099999999942e-05, 4.891599999999954e-05, 4.894499999999816e-05, 4.912500000000056e-05, 4.912500000000056e-05, 4.911100000000099e-05, 4.905600000000218e-05, 4.900000000000043e-05, 4.888899999999988e-05, 4.8945000000001626e-05, 4.876300000000028e-05, 4.886200000000021e-05, 4.877700000000332e-05, 4.917999999999936e-05, 4.880499999999899e-05, 4.877800000000279e-05, 4.88880000000004e-05, 4.877699999999985e-05, 4.888899999999988e-05, 4.917999999999936e-05, 4.898600000000086e-05, 4.894399999999868e-05, 4.895800000000172e-05, 4.926400000000025e-05, 4.877800000000279e-05, 4.894400000000215e-05, 4.869399999999843e-05, 4.892999999999911e-05, 4.870800000000147e-05, 4.92079999999985e-05, 4.848600000000036e-05, 4.876399999999975e-05]</msg>
<status status="PASS" starttime="20201030 10:58:26.347" endtime="20201030 10:58:26.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.342" endtime="20201030 10:58:26.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.353" endtime="20201030 10:58:26.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.352" endtime="20201030 10:58:26.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.351" endtime="20201030 10:58:26.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.995" endtime="20201030 10:58:26.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.995" endtime="20201030 10:58:26.374"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.382" endtime="20201030 10:58:26.398"></status>
</kw>
<msg timestamp="20201030 10:58:26.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.381" endtime="20201030 10:58:26.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.400" endtime="20201030 10:58:26.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.402" endtime="20201030 10:58:26.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.379" endtime="20201030 10:58:26.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.376" endtime="20201030 10:58:26.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.411" endtime="20201030 10:58:26.697"></status>
</kw>
<msg timestamp="20201030 10:58:26.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.409" endtime="20201030 10:58:26.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.702" endtime="20201030 10:58:26.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.710" endtime="20201030 10:58:26.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.407" endtime="20201030 10:58:26.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.405" endtime="20201030 10:58:26.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.717" level="INFO">${RESULT} = [{'diff': 4.941600000000004e-05}, {'diff': 5.019399999999993e-05}, {'diff': 5.006899999999981e-05}, {'diff': 5.026399999999778e-05}, {'diff': 5.01530000000007e-05}, {'diff': 5.011099999999852e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:26.714" endtime="20201030 10:58:26.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:26.721" level="INFO">${ACCURACY} = {'diff': [4.941600000000004e-05, 5.019399999999993e-05, 5.006899999999981e-05, 5.026399999999778e-05, 5.01530000000007e-05, 5.011099999999852e-05, 5.02079999999995e-05, 4.990300000000045e-05, 4.969399...</msg>
<status status="PASS" starttime="20201030 10:58:26.718" endtime="20201030 10:58:26.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.726" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 10:58:26.725" endtime="20201030 10:58:26.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.729" level="INFO">VALUE: [4.941600000000004e-05, 5.019399999999993e-05, 5.006899999999981e-05, 5.026399999999778e-05, 5.01530000000007e-05, 5.011099999999852e-05, 5.02079999999995e-05, 4.990300000000045e-05, 4.969399999999943e-05, 4.979199999999989e-05, 4.988900000000088e-05, 5.009700000000242e-05, 5.018099999999984e-05, 4.997200000000229e-05, 5.000000000000143e-05, 5.0195000000002876e-05, 4.990300000000045e-05, 4.980599999999946e-05, 5.025000000000168e-05, 5.00270000000011e-05, 4.969499999999891e-05, 4.990200000000097e-05, 4.967999999999986e-05, 5.019499999999941e-05, 5.033400000000257e-05, 4.994399999999968e-05, 4.998599999999839e-05, 5.012500000000156e-05, 5.013900000000113e-05, 4.988899999999741e-05, 4.976400000000075e-05, 4.973599999999814e-05, 5.012499999999809e-05, 5.023599999999864e-05, 4.95140000000005e-05, 5.006899999999981e-05, 4.977800000000032e-05, 5.005500000000024e-05, 4.994399999999968e-05, 4.997199999999882e-05, 5.023599999999864e-05, 4.973599999999814e-05, 5.005599999999971e-05, 4.998599999999839e-05, 5.0014000000001e-05, 5.029100000000092e-05, 4.986099999999827e-05, 4.979199999999989e-05, 4.988899999999741e-05, 4.991700000000002e-05]</msg>
<status status="PASS" starttime="20201030 10:58:26.727" endtime="20201030 10:58:26.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.722" endtime="20201030 10:58:26.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.734" endtime="20201030 10:58:26.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.732" endtime="20201030 10:58:26.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.731" endtime="20201030 10:58:26.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.375" endtime="20201030 10:58:26.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.374" endtime="20201030 10:58:26.755"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.764" endtime="20201030 10:58:26.781"></status>
</kw>
<msg timestamp="20201030 10:58:26.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.762" endtime="20201030 10:58:26.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.782" endtime="20201030 10:58:26.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.785" endtime="20201030 10:58:26.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.759" endtime="20201030 10:58:26.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.757" endtime="20201030 10:58:26.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.795" endtime="20201030 10:58:27.080"></status>
</kw>
<msg timestamp="20201030 10:58:27.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023656236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023706875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.793" endtime="20201030 10:58:27.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023656236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023706875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.084" endtime="20201030 10:58:27.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.093" endtime="20201030 10:58:27.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.790" endtime="20201030 10:58:27.095"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.788" endtime="20201030 10:58:27.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.099" level="INFO">${RESULT} = [{'diff': 5.063899999999816e-05}, {'diff': 5.073600000000261e-05}, {'diff': 5.108300000000038e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.109699999999995e-05}, {'diff': 5.122200000000007e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:27.096" endtime="20201030 10:58:27.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.104" level="INFO">${ACCURACY} = {'diff': [5.063899999999816e-05, 5.073600000000261e-05, 5.108300000000038e-05, 5.112499999999909e-05, 5.109699999999995e-05, 5.122200000000007e-05, 5.080600000000046e-05, 5.076400000000175e-05, 5.1222...</msg>
<status status="PASS" starttime="20201030 10:58:27.101" endtime="20201030 10:58:27.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.108" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.107" endtime="20201030 10:58:27.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.111" level="INFO">VALUE: [5.063899999999816e-05, 5.073600000000261e-05, 5.108300000000038e-05, 5.112499999999909e-05, 5.109699999999995e-05, 5.122200000000007e-05, 5.080600000000046e-05, 5.076400000000175e-05, 5.122200000000007e-05, 5.119400000000093e-05, 5.076399999999828e-05, 5.099999999999896e-05, 5.109699999999995e-05, 5.112500000000256e-05, 5.104199999999767e-05, 5.091699999999755e-05, 5.127799999999835e-05, 5.076400000000175e-05, 5.106999999999681e-05, 5.082000000000003e-05, 5.111100000000299e-05, 5.08339999999996e-05, 5.119499999999694e-05, 5.086100000000274e-05, 5.086099999999927e-05, 5.0736999999998617e-05, 5.111100000000299e-05, 5.077699999999838e-05, 5.112499999999909e-05, 5.104100000000167e-05, 5.072200000000304e-05, 5.101299999999906e-05, 5.104100000000167e-05, 5.111099999999952e-05, 5.108300000000038e-05, 5.109699999999995e-05, 5.106900000000081e-05, 5.104100000000167e-05, 5.086100000000274e-05, 5.093100000000059e-05, 5.069400000000043e-05, 5.075000000000218e-05, 5.073600000000261e-05, 5.123599999999964e-05, 5.087499999999884e-05, 5.106900000000081e-05, 5.072200000000304e-05, 5.124999999999921e-05, 5.116700000000127e-05, 5.080600000000046e-05]</msg>
<status status="PASS" starttime="20201030 10:58:27.110" endtime="20201030 10:58:27.113"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.105" endtime="20201030 10:58:27.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.117" endtime="20201030 10:58:27.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.115" endtime="20201030 10:58:27.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.114" endtime="20201030 10:58:27.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.756" endtime="20201030 10:58:27.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.755" endtime="20201030 10:58:27.138"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.147" endtime="20201030 10:58:27.164"></status>
</kw>
<msg timestamp="20201030 10:58:27.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.145" endtime="20201030 10:58:27.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.165" endtime="20201030 10:58:27.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.168" endtime="20201030 10:58:27.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.142" endtime="20201030 10:58:27.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.140" endtime="20201030 10:58:27.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.177" endtime="20201030 10:58:27.463"></status>
</kw>
<msg timestamp="20201030 10:58:27.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.176" endtime="20201030 10:58:27.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.467" endtime="20201030 10:58:27.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.476" endtime="20201030 10:58:27.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.173" endtime="20201030 10:58:27.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.171" endtime="20201030 10:58:27.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.483" level="INFO">${RESULT} = [{'diff': 5.16669999999983e-05}, {'diff': 5.182000000000103e-05}, {'diff': 5.173600000000014e-05}, {'diff': 5.223600000000064e-05}, {'diff': 5.205599999999824e-05}, {'diff': 5.201399999999953e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:27.480" endtime="20201030 10:58:27.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.488" level="INFO">${ACCURACY} = {'diff': [5.16669999999983e-05, 5.182000000000103e-05, 5.173600000000014e-05, 5.223600000000064e-05, 5.205599999999824e-05, 5.201399999999953e-05, 5.220900000000098e-05, 5.227799999999935e-05, 5.18610...</msg>
<status status="PASS" starttime="20201030 10:58:27.484" endtime="20201030 10:58:27.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.493" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.492" endtime="20201030 10:58:27.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.495" level="INFO">VALUE: [5.16669999999983e-05, 5.182000000000103e-05, 5.173600000000014e-05, 5.223600000000064e-05, 5.205599999999824e-05, 5.201399999999953e-05, 5.220900000000098e-05, 5.227799999999935e-05, 5.186100000000027e-05, 5.219499999999794e-05, 5.182000000000103e-05, 5.213899999999966e-05, 5.2151999999999754e-05, 5.188899999999941e-05, 5.172200000000057e-05, 5.212500000000009e-05, 5.205499999999877e-05, 5.1985999999996924e-05, 5.205499999999877e-05, 5.2179999999998894e-05, 5.177800000000232e-05, 5.199999999999996e-05, 5.2221999999997604e-05, 5.201399999999953e-05, 5.188899999999941e-05, 5.180600000000146e-05, 5.174999999999971e-05, 5.190299999999898e-05, 5.2207999999998034e-05, 5.186100000000027e-05, 5.195800000000125e-05, 5.225000000000021e-05, 5.177699999999938e-05, 5.198600000000039e-05, 5.209700000000095e-05, 5.201399999999953e-05, 5.191700000000202e-05, 5.181999999999756e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.18340000000006e-05, 5.179199999999842e-05, 5.201399999999953e-05, 5.219499999999794e-05, 5.179100000000242e-05, 5.18470000000007e-05, 5.205500000000224e-05, 5.151299999999956e-05, 5.177699999999938e-05, 5.183299999999766e-05]</msg>
<status status="PASS" starttime="20201030 10:58:27.494" endtime="20201030 10:58:27.496"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.489" endtime="20201030 10:58:27.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.500" endtime="20201030 10:58:27.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.499" endtime="20201030 10:58:27.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.498" endtime="20201030 10:58:27.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.139" endtime="20201030 10:58:27.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.138" endtime="20201030 10:58:27.521"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.530" endtime="20201030 10:58:27.548"></status>
</kw>
<msg timestamp="20201030 10:58:27.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.529" endtime="20201030 10:58:27.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.549" endtime="20201030 10:58:27.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.552" endtime="20201030 10:58:27.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.526" endtime="20201030 10:58:27.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.524" endtime="20201030 10:58:27.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.561" endtime="20201030 10:58:27.848"></status>
</kw>
<msg timestamp="20201030 10:58:27.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022756681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.560" endtime="20201030 10:58:27.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022756681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.852" endtime="20201030 10:58:27.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.861" endtime="20201030 10:58:27.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.557" endtime="20201030 10:58:27.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.555" endtime="20201030 10:58:27.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.868" level="INFO">${RESULT} = [{'diff': 5.252700000000013e-05}, {'diff': 5.2957999999998784e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.2735999999997674e-05}, {'diff': 5.323600000000164e-05}, {'diff': 5.290299999999998e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:27.864" endtime="20201030 10:58:27.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.872" level="INFO">${ACCURACY} = {'diff': [5.252700000000013e-05, 5.2957999999998784e-05, 5.291699999999955e-05, 5.2735999999997674e-05, 5.323600000000164e-05, 5.290299999999998e-05, 5.277799999999985e-05, 5.301400000000053e-05, 5.29...</msg>
<status status="PASS" starttime="20201030 10:58:27.869" endtime="20201030 10:58:27.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.877" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.876" endtime="20201030 10:58:27.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.879" level="INFO">VALUE: [5.252700000000013e-05, 5.2957999999998784e-05, 5.291699999999955e-05, 5.2735999999997674e-05, 5.323600000000164e-05, 5.290299999999998e-05, 5.277799999999985e-05, 5.301400000000053e-05, 5.2929999999999644e-05, 5.28609999999978e-05, 5.290299999999998e-05, 5.32080000000025e-05, 5.268099999999887e-05, 5.315300000000023e-05, 5.30280000000001e-05, 5.2707999999998534e-05, 5.29730000000013e-05, 5.28470000000017e-05, 5.315300000000023e-05, 5.272299999999758e-05, 5.294500000000216e-05, 5.287500000000084e-05, 5.313900000000066e-05, 5.29730000000013e-05, 5.3138000000001184e-05, 5.281999999999856e-05, 5.281899999999909e-05, 5.277700000000038e-05, 5.3179999999999894e-05, 5.3179999999999894e-05, 5.309699999999848e-05, 5.306899999999934e-05, 5.283299999999866e-05, 5.294400000000268e-05, 5.25279999999996e-05, 5.3277999999996883e-05, 5.329199999999992e-05, 5.325000000000121e-05, 5.313900000000066e-05, 5.272200000000157e-05, 5.313900000000066e-05, 5.279199999999942e-05, 5.2763999999996813e-05, 5.2708000000002e-05, 5.283399999999813e-05, 5.3180000000003363e-05, 5.279199999999942e-05, 5.307000000000228e-05, 5.276400000000028e-05, 5.288900000000041e-05]</msg>
<status status="PASS" starttime="20201030 10:58:27.878" endtime="20201030 10:58:27.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.873" endtime="20201030 10:58:27.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.884" endtime="20201030 10:58:27.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.883" endtime="20201030 10:58:27.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.882" endtime="20201030 10:58:27.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.522" endtime="20201030 10:58:27.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.522" endtime="20201030 10:58:27.905"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.914" endtime="20201030 10:58:27.932"></status>
</kw>
<msg timestamp="20201030 10:58:27.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.913" endtime="20201030 10:58:27.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.934" endtime="20201030 10:58:27.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.936" endtime="20201030 10:58:27.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.910" endtime="20201030 10:58:27.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.908" endtime="20201030 10:58:27.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.946" endtime="20201030 10:58:28.233"></status>
</kw>
<msg timestamp="20201030 10:58:28.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023248875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023302792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.944" endtime="20201030 10:58:28.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023248875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023302792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.237" endtime="20201030 10:58:28.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.246" endtime="20201030 10:58:28.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.941" endtime="20201030 10:58:28.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.940" endtime="20201030 10:58:28.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.252" level="INFO">${RESULT} = [{'diff': 5.391700000000055e-05}, {'diff': 5.419499999999994e-05}, {'diff': 5.383399999999913e-05}, {'diff': 5.398700000000187e-05}, {'diff': 5.418100000000037e-05}, {'diff': 5.419499999999994e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:28.249" endtime="20201030 10:58:28.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:28.257" level="INFO">${ACCURACY} = {'diff': [5.391700000000055e-05, 5.419499999999994e-05, 5.383399999999913e-05, 5.398700000000187e-05, 5.418100000000037e-05, 5.419499999999994e-05, 5.4193999999996995e-05, 5.409699999999948e-05, 5.423...</msg>
<status status="PASS" starttime="20201030 10:58:28.253" endtime="20201030 10:58:28.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.261" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 10:58:28.260" endtime="20201030 10:58:28.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.264" level="INFO">VALUE: [5.391700000000055e-05, 5.419499999999994e-05, 5.383399999999913e-05, 5.398700000000187e-05, 5.418100000000037e-05, 5.419499999999994e-05, 5.4193999999996995e-05, 5.409699999999948e-05, 5.423600000000264e-05, 5.3957999999999784e-05, 5.405500000000077e-05, 5.4180000000000894e-05, 5.398600000000239e-05, 5.4180000000000894e-05, 5.40280000000011e-05, 5.3693999999999964e-05, 5.412499999999862e-05, 5.412500000000209e-05, 5.412499999999862e-05, 5.3527999999997133e-05, 5.38609999999988e-05, 5.4263999999998314e-05, 5.4263999999998314e-05, 5.408299999999991e-05, 5.427800000000135e-05, 5.369500000000291e-05, 5.427800000000135e-05, 5.384699999999923e-05, 5.3777999999997383e-05, 5.416699999999733e-05, 5.388899999999794e-05, 5.390300000000098e-05, 5.409799999999895e-05, 5.391700000000055e-05, 5.41670000000008e-05, 5.4194000000000464e-05, 5.3944000000000214e-05, 5.412499999999862e-05, 5.4180000000000894e-05, 5.405500000000077e-05, 5.379100000000095e-05, 5.4180000000000894e-05, 5.3930000000000644e-05, 5.401400000000153e-05, 5.3944000000000214e-05, 5.394499999999969e-05, 5.3971999999999354e-05, 5.41670000000008e-05, 5.390299999999751e-05, 5.3985999999998924e-05]</msg>
<status status="PASS" starttime="20201030 10:58:28.262" endtime="20201030 10:58:28.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.257" endtime="20201030 10:58:28.266"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.270" endtime="20201030 10:58:28.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.268" endtime="20201030 10:58:28.290"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.267" endtime="20201030 10:58:28.290"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.906" endtime="20201030 10:58:28.290"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.906" endtime="20201030 10:58:28.291"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.300" endtime="20201030 10:58:28.317"></status>
</kw>
<msg timestamp="20201030 10:58:28.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.298" endtime="20201030 10:58:28.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.318" endtime="20201030 10:58:28.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.321" endtime="20201030 10:58:28.323"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.295" endtime="20201030 10:58:28.323"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.293" endtime="20201030 10:58:28.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.330" endtime="20201030 10:58:28.625"></status>
</kw>
<msg timestamp="20201030 10:58:28.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.329" endtime="20201030 10:58:28.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.634" endtime="20201030 10:58:28.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.652" endtime="20201030 10:58:28.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.326" endtime="20201030 10:58:28.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.324" endtime="20201030 10:58:28.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.666" level="INFO">${RESULT} = [{'diff': 5.483400000000013e-05}, {'diff': 5.480600000000099e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.518100000000137e-05}, {'diff': 5.4958000000000784e-05}, {'diff': 5.480600000000099e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:28.659" endtime="20201030 10:58:28.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:28.676" level="INFO">${ACCURACY} = {'diff': [5.483400000000013e-05, 5.480600000000099e-05, 5.48609999999998e-05, 5.518100000000137e-05, 5.4958000000000784e-05, 5.480600000000099e-05, 5.5222000000000604e-05, 5.511100000000005e-05, 5.498...</msg>
<status status="PASS" starttime="20201030 10:58:28.668" endtime="20201030 10:58:28.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.681" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 10:58:28.680" endtime="20201030 10:58:28.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.683" level="INFO">VALUE: [5.483400000000013e-05, 5.480600000000099e-05, 5.48609999999998e-05, 5.518100000000137e-05, 5.4958000000000784e-05, 5.480600000000099e-05, 5.5222000000000604e-05, 5.511100000000005e-05, 5.4985999999999924e-05, 5.484700000000023e-05, 5.4763999999998814e-05, 5.4777999999998384e-05, 5.481899999999762e-05, 5.512499999999962e-05, 5.4958000000000784e-05, 5.484700000000023e-05, 5.477800000000185e-05, 5.4929999999998175e-05, 5.5249999999999744e-05, 5.491700000000155e-05, 5.4749999999999244e-05, 5.519500000000094e-05, 5.454200000000117e-05, 5.4985999999999924e-05, 5.479200000000142e-05, 5.475000000000271e-05, 5.508400000000038e-05, 5.527800000000235e-05, 5.494500000000069e-05, 5.486199999999927e-05, 5.477800000000185e-05, 5.522300000000008e-05, 5.490300000000198e-05, 5.512499999999962e-05, 5.495900000000026e-05, 5.486199999999927e-05, 5.479099999999848e-05, 5.480600000000099e-05, 5.483300000000066e-05, 5.5249999999999744e-05, 5.504099999999873e-05, 5.5165999999998855e-05, 5.476400000000228e-05, 5.5013999999999064e-05, 5.5165999999998855e-05, 5.4985999999999924e-05, 5.5013999999999064e-05, 5.476400000000228e-05, 5.4929999999998175e-05, 5.519500000000094e-05]</msg>
<status status="PASS" starttime="20201030 10:58:28.682" endtime="20201030 10:58:28.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.677" endtime="20201030 10:58:28.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.688" endtime="20201030 10:58:28.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.687" endtime="20201030 10:58:28.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.686" endtime="20201030 10:58:28.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.292" endtime="20201030 10:58:28.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.291" endtime="20201030 10:58:28.709"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.717" endtime="20201030 10:58:28.734"></status>
</kw>
<msg timestamp="20201030 10:58:28.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.716" endtime="20201030 10:58:28.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.736" endtime="20201030 10:58:28.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.738" endtime="20201030 10:58:28.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.713" endtime="20201030 10:58:28.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.711" endtime="20201030 10:58:28.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.747" endtime="20201030 10:58:29.034"></status>
</kw>
<msg timestamp="20201030 10:58:29.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.746" endtime="20201030 10:58:29.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.038" endtime="20201030 10:58:29.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.046" endtime="20201030 10:58:29.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.743" endtime="20201030 10:58:29.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.741" endtime="20201030 10:58:29.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.052" level="INFO">${RESULT} = [{'diff': 5.582000000000156e-05}, {'diff': 5.5999999999997024e-05}, {'diff': 5.605600000000224e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.573700000000015e-05}, {'diff': 5.6264000000000314e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:29.049" endtime="20201030 10:58:29.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.057" level="INFO">${ACCURACY} = {'diff': [5.582000000000156e-05, 5.5999999999997024e-05, 5.605600000000224e-05, 5.5777999999999384e-05, 5.573700000000015e-05, 5.6264000000000314e-05, 5.609700000000148e-05, 5.58610000000008e-05, 5.59...</msg>
<status status="PASS" starttime="20201030 10:58:29.053" endtime="20201030 10:58:29.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.061" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.060" endtime="20201030 10:58:29.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.063" level="INFO">VALUE: [5.582000000000156e-05, 5.5999999999997024e-05, 5.605600000000224e-05, 5.5777999999999384e-05, 5.573700000000015e-05, 5.6264000000000314e-05, 5.609700000000148e-05, 5.58610000000008e-05, 5.591699999999908e-05, 5.5736000000000674e-05, 5.590299999999951e-05, 5.590299999999951e-05, 5.612500000000062e-05, 5.584699999999776e-05, 5.5721999999997635e-05, 5.611100000000105e-05, 5.6014000000000064e-05, 5.611099999999758e-05, 5.588899999999994e-05, 5.611100000000105e-05, 5.615299999999976e-05, 5.588899999999994e-05, 5.5972000000001354e-05, 5.6055999999998773e-05, 5.588899999999994e-05, 5.594499999999822e-05, 5.61809999999989e-05, 5.6000000000000494e-05, 5.580600000000199e-05, 5.622300000000108e-05, 5.618100000000237e-05, 5.60549999999993e-05, 5.579099999999948e-05, 5.61809999999989e-05, 5.580600000000199e-05, 5.6235999999997704e-05, 5.5665999999999355e-05, 5.616699999999933e-05, 5.5708000000001534e-05, 5.579099999999948e-05, 5.5986000000000924e-05, 5.620899999999804e-05, 5.5693999999998495e-05, 5.58749999999969e-05, 5.5708000000001534e-05, 5.5527999999999134e-05, 5.5777999999999384e-05, 5.5763999999999814e-05, 5.590299999999951e-05, 5.6208000000002034e-05]</msg>
<status status="PASS" starttime="20201030 10:58:29.062" endtime="20201030 10:58:29.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.058" endtime="20201030 10:58:29.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.068" endtime="20201030 10:58:29.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.067" endtime="20201030 10:58:29.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.066" endtime="20201030 10:58:29.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.710" endtime="20201030 10:58:29.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.709" endtime="20201030 10:58:29.089"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.098" endtime="20201030 10:58:29.117"></status>
</kw>
<msg timestamp="20201030 10:58:29.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.096" endtime="20201030 10:58:29.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.118" endtime="20201030 10:58:29.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.121" endtime="20201030 10:58:29.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.093" endtime="20201030 10:58:29.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.091" endtime="20201030 10:58:29.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.130" endtime="20201030 10:58:29.416"></status>
</kw>
<msg timestamp="20201030 10:58:29.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024962, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:29.128" endtime="20201030 10:58:29.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024962, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:29.420" endtime="20201030 10:58:29.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.428" endtime="20201030 10:58:29.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.126" endtime="20201030 10:58:29.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.124" endtime="20201030 10:58:29.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.435" level="INFO">${RESULT} = [{'diff': 5.6555999999999274e-05}, {'diff': 5.6943999999999745e-05}, {'diff': 5.6986000000001924e-05}, {'diff': 5.677700000000091e-05}, {'diff': 5.704100000000073e-05}, {'diff': 5.6471999999998385e-05...</msg>
<status status="PASS" starttime="20201030 10:58:29.432" endtime="20201030 10:58:29.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.439" level="INFO">${ACCURACY} = {'diff': [5.6555999999999274e-05, 5.6943999999999745e-05, 5.6986000000001924e-05, 5.677700000000091e-05, 5.704100000000073e-05, 5.6471999999998385e-05, 5.7235999999998705e-05, 5.681899999999962e-05, 5...</msg>
<status status="PASS" starttime="20201030 10:58:29.436" endtime="20201030 10:58:29.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.443" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.442" endtime="20201030 10:58:29.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.446" level="INFO">VALUE: [5.6555999999999274e-05, 5.6943999999999745e-05, 5.6986000000001924e-05, 5.677700000000091e-05, 5.704100000000073e-05, 5.6471999999998385e-05, 5.7235999999998705e-05, 5.681899999999962e-05, 5.690300000000051e-05, 5.6778000000000384e-05, 5.681899999999962e-05, 5.7042000000000204e-05, 5.7180000000000425e-05, 5.6514000000000564e-05, 5.7000000000001494e-05, 5.687500000000137e-05, 5.7250000000001744e-05, 5.706899999999987e-05, 5.7014000000001064e-05, 5.7055999999999774e-05, 5.6819999999999093e-05, 5.712500000000162e-05, 5.691700000000008e-05, 5.68619999999978e-05, 5.7249999999998274e-05, 5.706899999999987e-05, 5.711099999999858e-05, 5.713900000000119e-05, 5.6778000000000384e-05, 5.670899999999854e-05, 5.6930000000000175e-05, 5.7207999999999565e-05, 5.6971999999998885e-05, 5.679100000000048e-05, 5.709699999999901e-05, 5.6985999999998455e-05, 5.716700000000033e-05, 5.683299999999919e-05, 5.7249999999998274e-05, 5.688899999999747e-05, 5.681899999999962e-05, 5.6707999999999065e-05, 5.7180000000000425e-05, 5.684699999999876e-05, 5.6972000000002354e-05, 5.7055999999999774e-05, 5.693099999999965e-05, 5.6764000000000814e-05, 5.716700000000033e-05, 5.68610000000018e-05]</msg>
<status status="PASS" starttime="20201030 10:58:29.444" endtime="20201030 10:58:29.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.440" endtime="20201030 10:58:29.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.451" endtime="20201030 10:58:29.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.450" endtime="20201030 10:58:29.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.449" endtime="20201030 10:58:29.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.090" endtime="20201030 10:58:29.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.089" endtime="20201030 10:58:29.472"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.481" endtime="20201030 10:58:29.497"></status>
</kw>
<msg timestamp="20201030 10:58:29.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.479" endtime="20201030 10:58:29.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.498" endtime="20201030 10:58:29.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.501" endtime="20201030 10:58:29.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.476" endtime="20201030 10:58:29.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.474" endtime="20201030 10:58:29.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.510" endtime="20201030 10:58:29.795"></status>
</kw>
<msg timestamp="20201030 10:58:29.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.508" endtime="20201030 10:58:29.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.799" endtime="20201030 10:58:29.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.808" endtime="20201030 10:58:29.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.506" endtime="20201030 10:58:29.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.504" endtime="20201030 10:58:29.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.814" level="INFO">${RESULT} = [{'diff': 5.8027999999998164e-05}, {'diff': 5.7985999999999455e-05}, {'diff': 5.8083999999999913e-05}, {'diff': 5.794500000000022e-05}, {'diff': 5.816699999999786e-05}, {'diff': 5.781900000000062e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:29.811" endtime="20201030 10:58:29.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.819" level="INFO">${ACCURACY} = {'diff': [5.8027999999998164e-05, 5.7985999999999455e-05, 5.8083999999999913e-05, 5.794500000000022e-05, 5.816699999999786e-05, 5.781900000000062e-05, 5.8208000000000565e-05, 5.78749999999989e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 10:58:29.815" endtime="20201030 10:58:29.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.824" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.823" endtime="20201030 10:58:29.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.826" level="INFO">VALUE: [5.8027999999998164e-05, 5.7985999999999455e-05, 5.8083999999999913e-05, 5.794500000000022e-05, 5.816699999999786e-05, 5.781900000000062e-05, 5.8208000000000565e-05, 5.78749999999989e-05, 5.7971999999999885e-05, 5.7944000000000745e-05, 5.7750000000002244e-05, 5.805499999999783e-05, 5.777699999999844e-05, 5.804100000000173e-05, 5.7708000000000065e-05, 5.8027999999998164e-05, 5.7971999999999885e-05, 5.804100000000173e-05, 5.7694000000000495e-05, 5.8193999999997525e-05, 5.80550000000013e-05, 5.7750000000002244e-05, 5.8000000000002494e-05, 5.793100000000065e-05, 5.8013999999998594e-05, 5.784699999999976e-05, 5.7735999999999205e-05, 5.8070000000000344e-05, 5.819500000000047e-05, 5.816700000000133e-05, 5.811099999999958e-05, 5.7820000000000094e-05, 5.798699999999893e-05, 5.7750000000002244e-05, 5.813899999999872e-05, 5.812499999999915e-05, 5.793100000000065e-05, 5.784700000000323e-05, 5.8193999999997525e-05, 5.7944000000000745e-05, 5.7999999999999025e-05, 5.8165999999998386e-05, 5.7694000000000495e-05, 5.7944000000000745e-05, 5.8083999999999913e-05, 5.7958000000000315e-05, 5.779099999999801e-05, 5.786099999999933e-05, 5.8014000000002064e-05, 5.793100000000065e-05]</msg>
<status status="PASS" starttime="20201030 10:58:29.825" endtime="20201030 10:58:29.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.820" endtime="20201030 10:58:29.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.831" endtime="20201030 10:58:29.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.830" endtime="20201030 10:58:29.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.829" endtime="20201030 10:58:29.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.473" endtime="20201030 10:58:29.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.472" endtime="20201030 10:58:29.852"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.861" endtime="20201030 10:58:29.877"></status>
</kw>
<msg timestamp="20201030 10:58:29.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.859" endtime="20201030 10:58:29.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.878" endtime="20201030 10:58:29.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.881" endtime="20201030 10:58:29.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.857" endtime="20201030 10:58:29.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.854" endtime="20201030 10:58:29.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.890" endtime="20201030 10:58:30.176"></status>
</kw>
<msg timestamp="20201030 10:58:30.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.888" endtime="20201030 10:58:30.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.181" endtime="20201030 10:58:30.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.189" endtime="20201030 10:58:30.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.886" endtime="20201030 10:58:30.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.884" endtime="20201030 10:58:30.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.195" level="INFO">${RESULT} = [{'diff': 5.877699999999944e-05}, {'diff': 5.844500000000072e-05}, {'diff': 5.8805999999998054e-05}, {'diff': 5.9194000000001995e-05}, {'diff': 5.9165999999999386e-05}, {'diff': 5.8901999999999566e-05...</msg>
<status status="PASS" starttime="20201030 10:58:30.192" endtime="20201030 10:58:30.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:30.200" level="INFO">${ACCURACY} = {'diff': [5.877699999999944e-05, 5.844500000000072e-05, 5.8805999999998054e-05, 5.9194000000001995e-05, 5.9165999999999386e-05, 5.8901999999999566e-05, 5.8749999999999775e-05, 5.8957999999997845e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:30.196" endtime="20201030 10:58:30.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.204" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 10:58:30.203" endtime="20201030 10:58:30.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.207" level="INFO">VALUE: [5.877699999999944e-05, 5.844500000000072e-05, 5.8805999999998054e-05, 5.9194000000001995e-05, 5.9165999999999386e-05, 5.8901999999999566e-05, 5.8749999999999775e-05, 5.8957999999997845e-05, 5.9291999999998984e-05, 5.906900000000187e-05, 5.9194000000001995e-05, 5.913899999999972e-05, 5.9180000000002425e-05, 5.890299999999904e-05, 5.893100000000165e-05, 5.9250000000000275e-05, 5.908300000000144e-05, 5.9250000000000275e-05, 5.895900000000079e-05, 5.893100000000165e-05, 5.895899999999732e-05, 5.890299999999904e-05, 5.8721999999997165e-05, 5.8763999999999345e-05, 5.898699999999993e-05, 5.891700000000208e-05, 5.886100000000033e-05, 5.9013999999999595e-05, 5.9098000000000483e-05, 5.9069999999997874e-05, 5.881900000000162e-05, 5.8679999999998456e-05, 5.912500000000015e-05, 5.9013999999999595e-05, 5.877699999999944e-05, 5.8679999999998456e-05, 5.915300000000276e-05, 5.905499999999883e-05, 5.9236000000000705e-05, 5.913899999999972e-05, 5.8929999999998706e-05, 5.906900000000187e-05, 5.8791999999998484e-05, 5.916699999999886e-05, 5.9013999999999595e-05, 5.9042000000002204e-05, 5.918099999999843e-05, 5.886100000000033e-05, 5.8986000000000455e-05, 5.926300000000037e-05]</msg>
<status status="PASS" starttime="20201030 10:58:30.205" endtime="20201030 10:58:30.207"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.200" endtime="20201030 10:58:30.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.211" endtime="20201030 10:58:30.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.210" endtime="20201030 10:58:30.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.209" endtime="20201030 10:58:30.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.853" endtime="20201030 10:58:30.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.852" endtime="20201030 10:58:30.232"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.241" endtime="20201030 10:58:30.259"></status>
</kw>
<msg timestamp="20201030 10:58:30.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.239" endtime="20201030 10:58:30.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.260" endtime="20201030 10:58:30.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.263" endtime="20201030 10:58:30.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.237" endtime="20201030 10:58:30.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.235" endtime="20201030 10:58:30.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.271" endtime="20201030 10:58:30.557"></status>
</kw>
<msg timestamp="20201030 10:58:30.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.270" endtime="20201030 10:58:30.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.561" endtime="20201030 10:58:30.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.569" endtime="20201030 10:58:30.571"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.267" endtime="20201030 10:58:30.571"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.266" endtime="20201030 10:58:30.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.575" level="INFO">${RESULT} = [{'diff': 5.962500000000065e-05}, {'diff': 5.9777999999999915e-05}, {'diff': 5.995900000000179e-05}, {'diff': 5.981899999999915e-05}, {'diff': 6.016699999999986e-05}, {'diff': 5.990300000000004e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:30.572" endtime="20201030 10:58:30.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:30.580" level="INFO">${ACCURACY} = {'diff': [5.962500000000065e-05, 5.9777999999999915e-05, 5.995900000000179e-05, 5.981899999999915e-05, 6.016699999999986e-05, 5.990300000000004e-05, 6.022300000000161e-05, 6.0055999999999304e-05, 5.97...</msg>
<status status="PASS" starttime="20201030 10:58:30.576" endtime="20201030 10:58:30.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.584" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 10:58:30.583" endtime="20201030 10:58:30.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.587" level="INFO">VALUE: [5.962500000000065e-05, 5.9777999999999915e-05, 5.995900000000179e-05, 5.981899999999915e-05, 6.016699999999986e-05, 5.990300000000004e-05, 6.022300000000161e-05, 6.0055999999999304e-05, 5.972300000000111e-05, 5.970899999999807e-05, 6.0041999999999734e-05, 5.979100000000001e-05, 6.005499999999983e-05, 6.008300000000244e-05, 5.981899999999915e-05, 5.9722000000001635e-05, 6.011099999999811e-05, 6.009699999999854e-05, 6.016699999999986e-05, 6.0028000000000165e-05, 5.9986000000001455e-05, 5.9527999999999665e-05, 5.984699999999829e-05, 5.9750000000000775e-05, 6.0055999999999304e-05, 6.013900000000072e-05, 5.986099999999786e-05, 5.9514000000000095e-05, 6.0193999999999526e-05, 6.011100000000158e-05, 5.9791999999999484e-05, 6.0249999999997805e-05, 6.0055999999999304e-05, 6.0084000000001914e-05, 6.0041999999999734e-05, 5.991699999999961e-05, 6.0000000000001025e-05, 5.9819999999998624e-05, 6.0221999999998665e-05, 5.9901999999997096e-05, 6.026300000000137e-05, 5.9972000000001885e-05, 5.986100000000133e-05, 5.981899999999915e-05, 6.009699999999854e-05, 5.9541999999999234e-05, 5.9750000000000775e-05, 5.9916000000000136e-05, 5.962499999999718e-05, 6.00689999999994e-05]</msg>
<status status="PASS" starttime="20201030 10:58:30.585" endtime="20201030 10:58:30.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.580" endtime="20201030 10:58:30.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.592" endtime="20201030 10:58:30.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.591" endtime="20201030 10:58:30.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.590" endtime="20201030 10:58:30.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.233" endtime="20201030 10:58:30.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.232" endtime="20201030 10:58:30.613"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.621" endtime="20201030 10:58:30.638"></status>
</kw>
<msg timestamp="20201030 10:58:30.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.620" endtime="20201030 10:58:30.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.640" endtime="20201030 10:58:30.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.642" endtime="20201030 10:58:30.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.617" endtime="20201030 10:58:30.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.615" endtime="20201030 10:58:30.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.651" endtime="20201030 10:58:30.937"></status>
</kw>
<msg timestamp="20201030 10:58:30.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.650" endtime="20201030 10:58:30.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021700028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.941" endtime="20201030 10:58:30.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.949" endtime="20201030 10:58:30.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.647" endtime="20201030 10:58:30.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.645" endtime="20201030 10:58:30.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.955" level="INFO">${RESULT} = [{'diff': 6.084699999999929e-05}, {'diff': 6.0749999999998305e-05}, {'diff': 6.0971999999999416e-05}, {'diff': 6.115300000000129e-05}, {'diff': 6.12080000000001e-05}, {'diff': 6.0986000000002455e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:30.952" endtime="20201030 10:58:30.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:30.960" level="INFO">${ACCURACY} = {'diff': [6.084699999999929e-05, 6.0749999999998305e-05, 6.0971999999999416e-05, 6.115300000000129e-05, 6.12080000000001e-05, 6.0986000000002455e-05, 6.0971999999999416e-05, 6.091700000000061e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 10:58:30.956" endtime="20201030 10:58:30.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.965" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 10:58:30.964" endtime="20201030 10:58:30.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.967" level="INFO">VALUE: [6.084699999999929e-05, 6.0749999999998305e-05, 6.0971999999999416e-05, 6.115300000000129e-05, 6.12080000000001e-05, 6.0986000000002455e-05, 6.0971999999999416e-05, 6.091700000000061e-05, 6.0847999999998764e-05, 6.0971999999999416e-05, 6.127800000000141e-05, 6.111099999999911e-05, 6.115300000000129e-05, 6.0778000000000915e-05, 6.0806000000000054e-05, 6.126399999999838e-05, 6.088900000000147e-05, 6.086099999999886e-05, 6.0750000000001775e-05, 6.119400000000053e-05, 6.0916000000001136e-05, 6.109700000000301e-05, 6.0694000000000026e-05, 6.105499999999736e-05, 6.086099999999886e-05, 6.090300000000104e-05, 6.10690000000004e-05, 6.0833999999999194e-05, 6.1000000000002025e-05, 6.08750000000019e-05, 6.087499999999843e-05, 6.104199999999727e-05, 6.112499999999868e-05, 6.0833999999999194e-05, 6.112499999999868e-05, 6.123699999999871e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.112500000000215e-05, 6.0791999999997015e-05, 6.090299999999757e-05, 6.116700000000086e-05, 6.1195e-05, 6.115300000000129e-05, 6.077700000000144e-05, 6.116600000000139e-05, 6.0651999999997847e-05, 6.0944000000000276e-05, 6.117999999999749e-05, 6.084699999999929e-05]</msg>
<status status="PASS" starttime="20201030 10:58:30.966" endtime="20201030 10:58:30.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.961" endtime="20201030 10:58:30.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.976" endtime="20201030 10:58:30.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.975" endtime="20201030 10:58:30.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.974" endtime="20201030 10:58:30.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.614" endtime="20201030 10:58:30.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.613" endtime="20201030 10:58:30.997"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.006" endtime="20201030 10:58:31.023"></status>
</kw>
<msg timestamp="20201030 10:58:31.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.004" endtime="20201030 10:58:31.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.025" endtime="20201030 10:58:31.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.027" endtime="20201030 10:58:31.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.002" endtime="20201030 10:58:31.030"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.999" endtime="20201030 10:58:31.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.036" endtime="20201030 10:58:31.321"></status>
</kw>
<msg timestamp="20201030 10:58:31.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02188, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941403, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:58:31.035" endtime="20201030 10:58:31.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02188, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941403, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:58:31.325" endtime="20201030 10:58:31.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.333" endtime="20201030 10:58:31.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.032" endtime="20201030 10:58:31.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.031" endtime="20201030 10:58:31.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.340" level="INFO">${RESULT} = [{'diff': 6.140300000000154e-05}, {'diff': 6.190299999999857e-05}, {'diff': 6.216700000000186e-05}, {'diff': 6.213899999999925e-05}, {'diff': 6.212499999999968e-05}, {'diff': 6.190300000000204e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:31.337" endtime="20201030 10:58:31.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:31.344" level="INFO">${ACCURACY} = {'diff': [6.140300000000154e-05, 6.190299999999857e-05, 6.216700000000186e-05, 6.213899999999925e-05, 6.212499999999968e-05, 6.190300000000204e-05, 6.179099999999854e-05, 6.180500000000158e-05, 6.2083...</msg>
<status status="PASS" starttime="20201030 10:58:31.341" endtime="20201030 10:58:31.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.349" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 10:58:31.348" endtime="20201030 10:58:31.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.351" level="INFO">VALUE: [6.140300000000154e-05, 6.190299999999857e-05, 6.216700000000186e-05, 6.213899999999925e-05, 6.212499999999968e-05, 6.190300000000204e-05, 6.179099999999854e-05, 6.180500000000158e-05, 6.208300000000097e-05, 6.205500000000183e-05, 6.192999999999824e-05, 6.195799999999738e-05, 6.204200000000173e-05, 6.22499999999998e-05, 6.194400000000128e-05, 6.227800000000241e-05, 6.20690000000014e-05, 6.175000000000277e-05, 6.198599999999999e-05, 6.187499999999943e-05, 6.169399999999756e-05, 6.199999999999956e-05, 6.215299999999882e-05, 6.177799999999845e-05, 6.22499999999998e-05, 6.219499999999753e-05, 6.226399999999938e-05, 6.197299999999989e-05, 6.20279999999987e-05, 6.18340000000002e-05, 6.176399999999888e-05, 6.18340000000002e-05, 6.219499999999753e-05, 6.182000000000062e-05, 6.179099999999854e-05, 6.172200000000017e-05, 6.201399999999913e-05, 6.220799999999763e-05, 6.166600000000189e-05, 6.186099999999986e-05, 6.190299999999857e-05, 6.208300000000097e-05, 6.209700000000054e-05, 6.199999999999956e-05, 6.230600000000155e-05, 6.197200000000042e-05, 6.22499999999998e-05, 6.212499999999968e-05, 6.187499999999943e-05, 6.201399999999913e-05]</msg>
<status status="PASS" starttime="20201030 10:58:31.350" endtime="20201030 10:58:31.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.345" endtime="20201030 10:58:31.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.357" endtime="20201030 10:58:31.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.355" endtime="20201030 10:58:31.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.354" endtime="20201030 10:58:31.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.998" endtime="20201030 10:58:31.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.997" endtime="20201030 10:58:31.377"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.386" endtime="20201030 10:58:31.404"></status>
</kw>
<msg timestamp="20201030 10:58:31.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.384" endtime="20201030 10:58:31.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.405" endtime="20201030 10:58:31.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.408" endtime="20201030 10:58:31.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.382" endtime="20201030 10:58:31.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.380" endtime="20201030 10:58:31.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.417" endtime="20201030 10:58:31.701"></status>
</kw>
<msg timestamp="20201030 10:58:31.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.415" endtime="20201030 10:58:31.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.706" endtime="20201030 10:58:31.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.714" endtime="20201030 10:58:31.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.413" endtime="20201030 10:58:31.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.411" endtime="20201030 10:58:31.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.720" level="INFO">${RESULT} = [{'diff': 6.32500000000008e-05}, {'diff': 6.284700000000129e-05}, {'diff': 6.286100000000086e-05}, {'diff': 6.283299999999825e-05}, {'diff': 6.281899999999868e-05}, {'diff': 6.29300000000027e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:31.717" endtime="20201030 10:58:31.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:31.724" level="INFO">${ACCURACY} = {'diff': [6.32500000000008e-05, 6.284700000000129e-05, 6.286100000000086e-05, 6.283299999999825e-05, 6.281899999999868e-05, 6.29300000000027e-05, 6.277799999999945e-05, 6.315299999999982e-05, 6.272200...</msg>
<status status="PASS" starttime="20201030 10:58:31.721" endtime="20201030 10:58:31.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.729" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 10:58:31.728" endtime="20201030 10:58:31.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.731" level="INFO">VALUE: [6.32500000000008e-05, 6.284700000000129e-05, 6.286100000000086e-05, 6.283299999999825e-05, 6.281899999999868e-05, 6.29300000000027e-05, 6.277799999999945e-05, 6.315299999999982e-05, 6.272200000000117e-05, 6.269400000000203e-05, 6.313900000000025e-05, 6.279199999999902e-05, 6.32080000000021e-05, 6.3276999999997e-05, 6.273599999999727e-05, 6.329100000000004e-05, 6.308399999999798e-05, 6.309699999999807e-05, 6.316700000000286e-05, 6.316699999999939e-05, 6.280599999999859e-05, 6.326400000000038e-05, 6.319399999999906e-05, 6.267999999999899e-05, 6.319399999999906e-05, 6.277699999999997e-05, 6.316599999999992e-05, 6.319399999999906e-05, 6.32500000000008e-05, 6.308300000000197e-05, 6.277799999999945e-05, 6.320799999999863e-05, 6.286100000000086e-05, 6.272200000000117e-05, 6.315299999999982e-05, 6.309700000000154e-05, 6.313900000000025e-05, 6.281999999999816e-05, 6.309700000000154e-05, 6.27500000000003e-05, 6.327799999999995e-05, 6.316699999999939e-05, 6.295900000000132e-05, 6.32089999999981e-05, 6.279200000000248e-05, 6.309800000000101e-05, 6.315200000000035e-05, 6.27500000000003e-05, 6.268000000000246e-05, 6.298600000000099e-05]</msg>
<status status="PASS" starttime="20201030 10:58:31.730" endtime="20201030 10:58:31.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.725" endtime="20201030 10:58:31.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.737" endtime="20201030 10:58:31.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.735" endtime="20201030 10:58:31.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.734" endtime="20201030 10:58:31.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.378" endtime="20201030 10:58:31.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.378" endtime="20201030 10:58:31.758"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.767" endtime="20201030 10:58:31.784"></status>
</kw>
<msg timestamp="20201030 10:58:31.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.765" endtime="20201030 10:58:31.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.786" endtime="20201030 10:58:31.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.788" endtime="20201030 10:58:31.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.762" endtime="20201030 10:58:31.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.760" endtime="20201030 10:58:31.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.797" endtime="20201030 10:58:32.082"></status>
</kw>
<msg timestamp="20201030 10:58:32.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022502056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.796" endtime="20201030 10:58:32.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022502056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.087" endtime="20201030 10:58:32.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.095" endtime="20201030 10:58:32.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.793" endtime="20201030 10:58:32.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.791" endtime="20201030 10:58:32.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.101" level="INFO">${RESULT} = [{'diff': 6.37630000000014e-05}, {'diff': 6.416700000000039e-05}, {'diff': 6.395799999999938e-05}, {'diff': 6.372200000000217e-05}, {'diff': 6.377700000000097e-05}, {'diff': 6.426400000000138e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:32.098" endtime="20201030 10:58:32.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.106" level="INFO">${ACCURACY} = {'diff': [6.37630000000014e-05, 6.416700000000039e-05, 6.395799999999938e-05, 6.372200000000217e-05, 6.377700000000097e-05, 6.426400000000138e-05, 6.393000000000024e-05, 6.416600000000092e-05, 6.39300...</msg>
<status status="PASS" starttime="20201030 10:58:32.102" endtime="20201030 10:58:32.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.111" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.110" endtime="20201030 10:58:32.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.113" level="INFO">VALUE: [6.37630000000014e-05, 6.416700000000039e-05, 6.395799999999938e-05, 6.372200000000217e-05, 6.377700000000097e-05, 6.426400000000138e-05, 6.393000000000024e-05, 6.416600000000092e-05, 6.393000000000024e-05, 6.42219999999992e-05, 6.3889000000001e-05, 6.415300000000082e-05, 6.39439999999998e-05, 6.423599999999877e-05, 6.413900000000125e-05, 6.426400000000138e-05, 6.401400000000113e-05, 6.42219999999992e-05, 6.369499999999903e-05, 6.408399999999898e-05, 6.374999999999784e-05, 6.42089999999991e-05, 6.399999999999809e-05, 6.409799999999855e-05, 6.37219999999987e-05, 6.352699999999725e-05, 6.390199999999763e-05, 6.426299999999843e-05, 6.415199999999788e-05, 6.390199999999763e-05, 6.417999999999702e-05, 6.411099999999864e-05, 6.42639999999979e-05, 6.405499999999689e-05, 6.379200000000002e-05, 6.394400000000328e-05, 6.384700000000229e-05, 6.387500000000143e-05, 6.37080000000026e-05, 6.37080000000026e-05, 6.413900000000125e-05, 6.383300000000272e-05, 6.415300000000082e-05, 6.412499999999821e-05, 6.405599999999984e-05, 6.404200000000027e-05, 6.42500000000018e-05, 6.40280000000007e-05, 6.427800000000095e-05, 6.411200000000158e-05]</msg>
<status status="PASS" starttime="20201030 10:58:32.112" endtime="20201030 10:58:32.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.107" endtime="20201030 10:58:32.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.118" endtime="20201030 10:58:32.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.117" endtime="20201030 10:58:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.116" endtime="20201030 10:58:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.759" endtime="20201030 10:58:32.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.758" endtime="20201030 10:58:32.139"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.147" endtime="20201030 10:58:32.164"></status>
</kw>
<msg timestamp="20201030 10:58:32.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.146" endtime="20201030 10:58:32.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.165" endtime="20201030 10:58:32.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.168" endtime="20201030 10:58:32.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.143" endtime="20201030 10:58:32.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.141" endtime="20201030 10:58:32.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.177" endtime="20201030 10:58:32.463"></status>
</kw>
<msg timestamp="20201030 10:58:32.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.175" endtime="20201030 10:58:32.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.467" endtime="20201030 10:58:32.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.476" endtime="20201030 10:58:32.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.173" endtime="20201030 10:58:32.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.171" endtime="20201030 10:58:32.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.482" level="INFO">${RESULT} = [{'diff': 6.480500000000111e-05}, {'diff': 6.500000000000256e-05}, {'diff': 6.480500000000111e-05}, {'diff': 6.520800000000063e-05}, {'diff': 6.519400000000106e-05}, {'diff': 6.512499999999921e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:32.479" endtime="20201030 10:58:32.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.486" level="INFO">${ACCURACY} = {'diff': [6.480500000000111e-05, 6.500000000000256e-05, 6.480500000000111e-05, 6.520800000000063e-05, 6.519400000000106e-05, 6.512499999999921e-05, 6.498599999999952e-05, 6.470800000000013e-05, 6.5097...</msg>
<status status="PASS" starttime="20201030 10:58:32.483" endtime="20201030 10:58:32.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.490" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.489" endtime="20201030 10:58:32.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.493" level="INFO">VALUE: [6.480500000000111e-05, 6.500000000000256e-05, 6.480500000000111e-05, 6.520800000000063e-05, 6.519400000000106e-05, 6.512499999999921e-05, 6.498599999999952e-05, 6.470800000000013e-05, 6.509700000000007e-05, 6.504200000000127e-05, 6.474999999999884e-05, 6.483300000000025e-05, 6.504200000000127e-05, 6.519500000000053e-05, 6.50830000000005e-05, 6.488899999999853e-05, 6.479200000000102e-05, 6.519499999999706e-05, 6.479200000000102e-05, 6.522299999999967e-05, 6.495899999999985e-05, 6.52639999999989e-05, 6.509799999999955e-05, 6.52220000000002e-05, 6.495900000000332e-05, 6.487499999999896e-05, 6.479100000000154e-05, 6.47500000000023e-05, 6.491600000000167e-05, 6.473599999999927e-05, 6.518000000000149e-05, 6.519400000000106e-05, 6.487499999999896e-05, 6.502799999999823e-05, 6.50280000000017e-05, 6.47219999999997e-05, 6.508299999999703e-05, 6.477800000000145e-05, 6.509700000000007e-05, 6.509700000000007e-05, 6.486099999999939e-05, 6.493100000000071e-05, 6.47219999999997e-05, 6.522299999999967e-05, 6.518100000000096e-05, 6.515300000000182e-05, 6.481999999999669e-05, 6.501399999999866e-05, 6.47089999999996e-05, 6.49020000000021e-05]</msg>
<status status="PASS" starttime="20201030 10:58:32.492" endtime="20201030 10:58:32.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.487" endtime="20201030 10:58:32.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.498" endtime="20201030 10:58:32.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.496" endtime="20201030 10:58:32.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.495" endtime="20201030 10:58:32.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.140" endtime="20201030 10:58:32.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.139" endtime="20201030 10:58:32.519"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.527" endtime="20201030 10:58:32.547"></status>
</kw>
<msg timestamp="20201030 10:58:32.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.526" endtime="20201030 10:58:32.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.548" endtime="20201030 10:58:32.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.551" endtime="20201030 10:58:32.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.523" endtime="20201030 10:58:32.553"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.521" endtime="20201030 10:58:32.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.560" endtime="20201030 10:58:32.854"></status>
</kw>
<msg timestamp="20201030 10:58:32.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024759569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.558" endtime="20201030 10:58:32.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024759569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024825111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.858" endtime="20201030 10:58:32.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.866" endtime="20201030 10:58:32.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.556" endtime="20201030 10:58:32.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.554" endtime="20201030 10:58:32.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.873" level="INFO">${RESULT} = [{'diff': 6.554200000000177e-05}, {'diff': 6.59029999999991e-05}, {'diff': 6.573600000000027e-05}, {'diff': 6.615299999999935e-05}, {'diff': 6.616700000000239e-05}, {'diff': 6.582000000000116e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:32.870" endtime="20201030 10:58:32.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.877" level="INFO">${ACCURACY} = {'diff': [6.554200000000177e-05, 6.59029999999991e-05, 6.573600000000027e-05, 6.615299999999935e-05, 6.616700000000239e-05, 6.582000000000116e-05, 6.579200000000202e-05, 6.619499999999806e-05, 6.62779...</msg>
<status status="PASS" starttime="20201030 10:58:32.874" endtime="20201030 10:58:32.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.881" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.880" endtime="20201030 10:58:32.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.884" level="INFO">VALUE: [6.554200000000177e-05, 6.59029999999991e-05, 6.573600000000027e-05, 6.615299999999935e-05, 6.616700000000239e-05, 6.582000000000116e-05, 6.579200000000202e-05, 6.619499999999806e-05, 6.627799999999948e-05, 6.594500000000128e-05, 6.591699999999867e-05, 6.622300000000067e-05, 6.572300000000017e-05, 6.62090000000011e-05, 6.579099999999907e-05, 6.60830000000015e-05, 6.62639999999999e-05, 6.586100000000039e-05, 6.613899999999978e-05, 6.604099999999932e-05, 6.591600000000267e-05, 6.583300000000125e-05, 6.581899999999821e-05, 6.592999999999877e-05, 6.580499999999864e-05, 6.627799999999948e-05, 6.623600000000077e-05, 6.619400000000206e-05, 6.59029999999991e-05, 6.570800000000113e-05, 6.584700000000082e-05, 6.551400000000263e-05, 6.627799999999948e-05, 6.62220000000012e-05, 6.625000000000034e-05, 6.622300000000067e-05, 6.577799999999898e-05, 6.612500000000021e-05, 6.587499999999996e-05, 6.587499999999996e-05, 6.59440000000018e-05, 6.595799999999791e-05, 6.62359999999973e-05, 6.60830000000015e-05, 6.617999999999902e-05, 6.595800000000138e-05, 6.619399999999859e-05, 6.602799999999923e-05, 6.591699999999867e-05, 6.569400000000156e-05]</msg>
<status status="PASS" starttime="20201030 10:58:32.882" endtime="20201030 10:58:32.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.878" endtime="20201030 10:58:32.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.890" endtime="20201030 10:58:32.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.888" endtime="20201030 10:58:32.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.887" endtime="20201030 10:58:32.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.520" endtime="20201030 10:58:32.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.519" endtime="20201030 10:58:32.910"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.919" endtime="20201030 10:58:32.936"></status>
</kw>
<msg timestamp="20201030 10:58:32.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.917" endtime="20201030 10:58:32.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.937" endtime="20201030 10:58:32.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.940" endtime="20201030 10:58:32.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.915" endtime="20201030 10:58:32.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.912" endtime="20201030 10:58:32.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.949" endtime="20201030 10:58:33.234"></status>
</kw>
<msg timestamp="20201030 10:58:33.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.947" endtime="20201030 10:58:33.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.239" endtime="20201030 10:58:33.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.247" endtime="20201030 10:58:33.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.945" endtime="20201030 10:58:33.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.943" endtime="20201030 10:58:33.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:33.253" level="INFO">${RESULT} = [{'diff': 6.688799999999759e-05}, {'diff': 6.666599999999995e-05}, {'diff': 6.72220000000022e-05}, {'diff': 6.698600000000152e-05}, {'diff': 6.681899999999921e-05}, {'diff': 6.679100000000007e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:33.250" endtime="20201030 10:58:33.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:33.258" level="INFO">${ACCURACY} = {'diff': [6.688799999999759e-05, 6.666599999999995e-05, 6.72220000000022e-05, 6.698600000000152e-05, 6.681899999999921e-05, 6.679100000000007e-05, 6.705499999999989e-05, 6.701400000000066e-05, 6.70280...</msg>
<status status="PASS" starttime="20201030 10:58:33.254" endtime="20201030 10:58:33.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.263" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 10:58:33.262" endtime="20201030 10:58:33.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.265" level="INFO">VALUE: [6.688799999999759e-05, 6.666599999999995e-05, 6.72220000000022e-05, 6.698600000000152e-05, 6.681899999999921e-05, 6.679100000000007e-05, 6.705499999999989e-05, 6.701400000000066e-05, 6.702800000000023e-05, 6.677799999999998e-05, 6.670800000000213e-05, 6.698600000000152e-05, 6.680599999999912e-05, 6.72640000000009e-05, 6.693100000000271e-05, 6.693100000000271e-05, 6.668100000000246e-05, 6.702800000000023e-05, 6.697199999999848e-05, 6.693099999999924e-05, 6.680599999999912e-05, 6.677799999999998e-05, 6.670799999999866e-05, 6.7277000000001e-05, 6.673700000000074e-05, 6.647199999999798e-05, 6.695799999999891e-05, 6.651300000000068e-05, 6.67640000000004e-05, 6.695799999999891e-05, 6.722199999999873e-05, 6.705499999999989e-05, 6.705499999999989e-05, 6.713900000000078e-05, 6.681899999999921e-05, 6.69030000000001e-05, 6.718099999999949e-05, 6.720899999999863e-05, 6.680600000000259e-05, 6.69030000000001e-05, 6.673600000000127e-05, 6.715300000000035e-05, 6.715300000000035e-05, 6.693100000000271e-05, 6.723600000000177e-05, 6.726300000000143e-05, 6.67640000000004e-05, 6.723700000000124e-05, 6.70419999999998e-05, 6.711199999999765e-05]</msg>
<status status="PASS" starttime="20201030 10:58:33.264" endtime="20201030 10:58:33.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.259" endtime="20201030 10:58:33.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:33.270" endtime="20201030 10:58:33.290"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.269" endtime="20201030 10:58:33.290"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.268" endtime="20201030 10:58:33.290"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.911" endtime="20201030 10:58:33.291"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.910" endtime="20201030 10:58:33.291"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.300" endtime="20201030 10:58:33.317"></status>
</kw>
<msg timestamp="20201030 10:58:33.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.298" endtime="20201030 10:58:33.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.319" endtime="20201030 10:58:33.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.321" endtime="20201030 10:58:33.322"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.296" endtime="20201030 10:58:33.323"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.293" endtime="20201030 10:58:33.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.330" endtime="20201030 10:58:33.618"></status>
</kw>
<msg timestamp="20201030 10:58:33.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:33.328" endtime="20201030 10:58:33.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:33.623" endtime="20201030 10:58:33.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.642" endtime="20201030 10:58:33.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.326" endtime="20201030 10:58:33.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.324" endtime="20201030 10:58:33.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:33.657" level="INFO">${RESULT} = [{'diff': 6.788900000000153e-05}, {'diff': 6.812500000000221e-05}, {'diff': 6.805600000000037e-05}, {'diff': 6.770799999999966e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.802799999999776e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:33.650" endtime="20201030 10:58:33.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:33.667" level="INFO">${ACCURACY} = {'diff': [6.788900000000153e-05, 6.812500000000221e-05, 6.805600000000037e-05, 6.770799999999966e-05, 6.824999999999887e-05, 6.802799999999776e-05, 6.820800000000016e-05, 6.827800000000148e-05, 6.7778...</msg>
<status status="PASS" starttime="20201030 10:58:33.659" endtime="20201030 10:58:33.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.676" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 10:58:33.674" endtime="20201030 10:58:33.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.682" level="INFO">VALUE: [6.788900000000153e-05, 6.812500000000221e-05, 6.805600000000037e-05, 6.770799999999966e-05, 6.824999999999887e-05, 6.802799999999776e-05, 6.820800000000016e-05, 6.827800000000148e-05, 6.777800000000098e-05, 6.80420000000008e-05, 6.816699999999745e-05, 6.805500000000089e-05, 6.781999999999969e-05, 6.77640000000014e-05, 6.801400000000166e-05, 6.798600000000252e-05, 6.819400000000059e-05, 6.77359999999988e-05, 6.822199999999973e-05, 6.779200000000055e-05, 6.788899999999806e-05, 6.794499999999981e-05, 6.80969999999996e-05, 6.77640000000014e-05, 6.780499999999717e-05, 6.770799999999966e-05, 6.801399999999819e-05, 6.815300000000135e-05, 6.816700000000092e-05, 6.824999999999887e-05, 6.783299999999978e-05, 6.800000000000209e-05, 6.793100000000024e-05, 6.816700000000092e-05, 6.801399999999819e-05, 6.788899999999806e-05, 6.788900000000153e-05, 6.788900000000153e-05, 6.773700000000174e-05, 6.797199999999948e-05, 6.818000000000102e-05, 6.806900000000046e-05, 6.795799999999991e-05, 6.780500000000064e-05, 6.793000000000077e-05, 6.820800000000016e-05, 6.806900000000046e-05, 6.823600000000277e-05, 6.812499999999874e-05, 6.780500000000064e-05]</msg>
<status status="PASS" starttime="20201030 10:58:33.679" endtime="20201030 10:58:33.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.668" endtime="20201030 10:58:33.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:33.693" endtime="20201030 10:58:33.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.689" endtime="20201030 10:58:33.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.687" endtime="20201030 10:58:33.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.292" endtime="20201030 10:58:33.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.291" endtime="20201030 10:58:33.718"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.732" endtime="20201030 10:58:33.750"></status>
</kw>
<msg timestamp="20201030 10:58:33.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.730" endtime="20201030 10:58:33.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.752" endtime="20201030 10:58:33.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.754" endtime="20201030 10:58:33.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.727" endtime="20201030 10:58:33.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.723" endtime="20201030 10:58:33.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.764" endtime="20201030 10:58:34.050"></status>
</kw>
<msg timestamp="20201030 10:58:34.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031962361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032031069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.762" endtime="20201030 10:58:34.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031962361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032031069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.054" endtime="20201030 10:58:34.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.063" endtime="20201030 10:58:34.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.759" endtime="20201030 10:58:34.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.758" endtime="20201030 10:58:34.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.069" level="INFO">${RESULT} = [{'diff': 6.870800000000066e-05}, {'diff': 6.883299999999731e-05}, {'diff': 6.913799999999637e-05}, {'diff': 6.918000000000202e-05}, {'diff': 6.872200000000023e-05}, {'diff': 6.90830000000045e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:34.066" endtime="20201030 10:58:34.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.073" level="INFO">${ACCURACY} = {'diff': [6.870800000000066e-05, 6.883299999999731e-05, 6.913799999999637e-05, 6.918000000000202e-05, 6.872200000000023e-05, 6.90830000000045e-05, 6.924999999999987e-05, 6.927799999999901e-05, 6.89440...</msg>
<status status="PASS" starttime="20201030 10:58:34.070" endtime="20201030 10:58:34.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.078" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.077" endtime="20201030 10:58:34.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.080" level="INFO">VALUE: [6.870800000000066e-05, 6.883299999999731e-05, 6.913799999999637e-05, 6.918000000000202e-05, 6.872200000000023e-05, 6.90830000000045e-05, 6.924999999999987e-05, 6.927799999999901e-05, 6.894400000000134e-05, 6.918000000000202e-05, 6.880500000000511e-05, 6.912499999999627e-05, 6.874999999999937e-05, 6.906999999999747e-05, 6.918100000000149e-05, 6.879199999999808e-05, 6.920800000000116e-05, 6.879199999999808e-05, 6.893100000000124e-05, 6.904200000000527e-05, 6.909800000000355e-05, 6.90559999999979e-05, 6.888900000000253e-05, 6.891700000000167e-05, 6.891700000000167e-05, 6.869400000000109e-05, 6.876399999999894e-05, 6.874999999999937e-05, 6.899999999999962e-05, 6.905500000000536e-05, 6.91109999999967e-05, 6.893000000000177e-05, 6.876399999999894e-05, 6.922200000000073e-05, 6.893100000000124e-05, 6.89030000000021e-05, 6.918000000000202e-05, 6.911100000000364e-05, 6.894400000000134e-05, 6.891699999999473e-05, 6.899999999999962e-05, 6.895800000000091e-05, 6.869500000000056e-05, 6.883300000000425e-05, 6.887499999999602e-05, 6.880599999999765e-05, 6.887500000000296e-05, 6.909800000000355e-05, 6.899999999999962e-05, 6.87229999999997e-05]</msg>
<status status="PASS" starttime="20201030 10:58:34.079" endtime="20201030 10:58:34.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.074" endtime="20201030 10:58:34.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.086" endtime="20201030 10:58:34.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.084" endtime="20201030 10:58:34.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.083" endtime="20201030 10:58:34.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.720" endtime="20201030 10:58:34.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.718" endtime="20201030 10:58:34.106"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.115" endtime="20201030 10:58:34.133"></status>
</kw>
<msg timestamp="20201030 10:58:34.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.113" endtime="20201030 10:58:34.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.134" endtime="20201030 10:58:34.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.137" endtime="20201030 10:58:34.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.111" endtime="20201030 10:58:34.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.109" endtime="20201030 10:58:34.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.146" endtime="20201030 10:58:34.432"></status>
</kw>
<msg timestamp="20201030 10:58:34.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.144" endtime="20201030 10:58:34.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.437" endtime="20201030 10:58:34.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.455" endtime="20201030 10:58:34.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.142" endtime="20201030 10:58:34.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.140" endtime="20201030 10:58:34.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.469" level="INFO">${RESULT} = [{'diff': 6.97909999999996e-05}, {'diff': 7.007000000000194e-05}, {'diff': 7.006999999999847e-05}, {'diff': 6.983399999999779e-05}, {'diff': 7.009800000000108e-05}, {'diff': 7.004199999999933e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:34.462" endtime="20201030 10:58:34.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.479" level="INFO">${ACCURACY} = {'diff': [6.97909999999996e-05, 7.007000000000194e-05, 7.006999999999847e-05, 6.983399999999779e-05, 7.009800000000108e-05, 7.004199999999933e-05, 6.968099999999852e-05, 7.002699999999681e-05, 6.97500...</msg>
<status status="PASS" starttime="20201030 10:58:34.471" endtime="20201030 10:58:34.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.488" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.486" endtime="20201030 10:58:34.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.493" level="INFO">VALUE: [6.97909999999996e-05, 7.007000000000194e-05, 7.006999999999847e-05, 6.983399999999779e-05, 7.009800000000108e-05, 7.004199999999933e-05, 6.968099999999852e-05, 7.002699999999681e-05, 6.975000000000037e-05, 6.991700000000267e-05, 7.004099999999985e-05, 7.02360000000013e-05, 6.986100000000092e-05, 7.006899999999899e-05, 7.020799999999869e-05, 6.995800000000191e-05, 7.00559999999989e-05, 7.009699999999813e-05, 6.980600000000212e-05, 7.006899999999899e-05, 6.998599999999758e-05, 6.980600000000212e-05, 7.001400000000019e-05, 6.990299999999963e-05, 6.973599999999733e-05, 6.994500000000181e-05, 7.011200000000065e-05, 7.020899999999816e-05, 7.007000000000194e-05, 6.975000000000037e-05, 6.970799999999819e-05, 7.022199999999826e-05, 7.008300000000203e-05, 7.019399999999912e-05, 6.988900000000006e-05, 6.99299999999993e-05, 7.004099999999985e-05, 6.991599999999973e-05, 7.006899999999899e-05, 7.001400000000019e-05, 7.023599999999783e-05, 6.994399999999887e-05, 7.00970000000016e-05, 6.976399999999994e-05, 7.019499999999859e-05, 7.006999999999847e-05, 6.969500000000156e-05, 6.988900000000006e-05, 7.022199999999826e-05, 7.012500000000074e-05]</msg>
<status status="PASS" starttime="20201030 10:58:34.491" endtime="20201030 10:58:34.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.481" endtime="20201030 10:58:34.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.504" endtime="20201030 10:58:34.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.501" endtime="20201030 10:58:34.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.498" endtime="20201030 10:58:34.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.107" endtime="20201030 10:58:34.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.107" endtime="20201030 10:58:34.528"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.541" endtime="20201030 10:58:34.558"></status>
</kw>
<msg timestamp="20201030 10:58:34.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.540" endtime="20201030 10:58:34.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.559" endtime="20201030 10:58:34.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.562" endtime="20201030 10:58:34.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.537" endtime="20201030 10:58:34.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.533" endtime="20201030 10:58:34.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.571" endtime="20201030 10:58:34.871"></status>
</kw>
<msg timestamp="20201030 10:58:34.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02948125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029552069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:34.569" endtime="20201030 10:58:34.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02948125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029552069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:34.876" endtime="20201030 10:58:34.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.884" endtime="20201030 10:58:34.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.567" endtime="20201030 10:58:34.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.565" endtime="20201030 10:58:34.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.890" level="INFO">${RESULT} = [{'diff': 7.081899999999974e-05}, {'diff': 7.126400000000144e-05}, {'diff': 7.123599999999883e-05}, {'diff': 7.1069e-05}, {'diff': 7.07360000000018e-05}, {'diff': 7.076400000000094e-05}, {'diff': 7.12...</msg>
<status status="PASS" starttime="20201030 10:58:34.887" endtime="20201030 10:58:34.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.895" level="INFO">${ACCURACY} = {'diff': [7.081899999999974e-05, 7.126400000000144e-05, 7.123599999999883e-05, 7.1069e-05, 7.07360000000018e-05, 7.076400000000094e-05, 7.123599999999883e-05, 7.097199999999901e-05, 7.102800000000076e...</msg>
<status status="PASS" starttime="20201030 10:58:34.891" endtime="20201030 10:58:34.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.899" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.898" endtime="20201030 10:58:34.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.901" level="INFO">VALUE: [7.081899999999974e-05, 7.126400000000144e-05, 7.123599999999883e-05, 7.1069e-05, 7.07360000000018e-05, 7.076400000000094e-05, 7.123599999999883e-05, 7.097199999999901e-05, 7.102800000000076e-05, 7.113900000000131e-05, 7.101400000000119e-05, 7.126400000000144e-05, 7.116700000000045e-05, 7.081999999999922e-05, 7.088900000000106e-05, 7.129200000000058e-05, 7.083399999999879e-05, 7.120899999999916e-05, 7.101400000000119e-05, 7.10559999999999e-05, 7.072299999999823e-05, 7.116700000000045e-05, 7.1069e-05, 7.116600000000098e-05, 7.070799999999919e-05, 7.073599999999486e-05, 7.052700000000078e-05, 7.076400000000094e-05, 7.102800000000076e-05, 7.118100000000349e-05, 7.125000000000187e-05, 7.101400000000119e-05, 7.080500000000017e-05, 7.072200000000223e-05, 7.087499999999802e-05, 7.095900000000238e-05, 7.10559999999999e-05, 7.088900000000453e-05, 7.130600000000015e-05, 7.097300000000195e-05, 7.068099999999605e-05, 7.07230000000017e-05, 7.086199999999793e-05, 7.112499999999827e-05, 7.100000000000162e-05, 7.080500000000017e-05, 7.076400000000094e-05, 7.098600000000205e-05, 7.095799999999597e-05, 7.125000000000187e-05]</msg>
<status status="PASS" starttime="20201030 10:58:34.900" endtime="20201030 10:58:34.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.895" endtime="20201030 10:58:34.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.906" endtime="20201030 10:58:34.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.905" endtime="20201030 10:58:34.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.904" endtime="20201030 10:58:34.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.530" endtime="20201030 10:58:34.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.529" endtime="20201030 10:58:34.927"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.936" endtime="20201030 10:58:34.953"></status>
</kw>
<msg timestamp="20201030 10:58:34.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.934" endtime="20201030 10:58:34.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.955" endtime="20201030 10:58:34.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.957" endtime="20201030 10:58:34.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.931" endtime="20201030 10:58:34.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.929" endtime="20201030 10:58:34.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.966" endtime="20201030 10:58:35.252"></status>
</kw>
<msg timestamp="20201030 10:58:35.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.965" endtime="20201030 10:58:35.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.256" endtime="20201030 10:58:35.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.264" endtime="20201030 10:58:35.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.962" endtime="20201030 10:58:35.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.960" endtime="20201030 10:58:35.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:35.271" level="INFO">${RESULT} = [{'diff': 7.184699999999988e-05}, {'diff': 7.199999999999915e-05}, {'diff': 7.197299999999948e-05}, {'diff': 7.218099999999755e-05}, {'diff': 7.183300000000031e-05}, {'diff': 7.188799999999912e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:35.268" endtime="20201030 10:58:35.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:35.275" level="INFO">${ACCURACY} = {'diff': [7.184699999999988e-05, 7.199999999999915e-05, 7.197299999999948e-05, 7.218099999999755e-05, 7.183300000000031e-05, 7.188799999999912e-05, 7.201400000000219e-05, 7.219399999999765e-05, 7.1819...</msg>
<status status="PASS" starttime="20201030 10:58:35.272" endtime="20201030 10:58:35.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.279" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 10:58:35.278" endtime="20201030 10:58:35.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.282" level="INFO">VALUE: [7.184699999999988e-05, 7.199999999999915e-05, 7.197299999999948e-05, 7.218099999999755e-05, 7.183300000000031e-05, 7.188799999999912e-05, 7.201400000000219e-05, 7.219399999999765e-05, 7.181900000000074e-05, 7.191600000000173e-05, 7.180500000000117e-05, 7.205500000000142e-05, 7.176399999999847e-05, 7.175000000000237e-05, 7.173599999999933e-05, 7.170800000000019e-05, 7.213900000000231e-05, 7.184699999999988e-05, 7.208300000000056e-05, 7.22499999999994e-05, 7.179200000000108e-05, 7.202799999999829e-05, 7.207000000000047e-05, 7.223599999999983e-05, 7.207000000000047e-05, 7.182000000000022e-05, 7.201400000000219e-05, 7.205500000000142e-05, 7.199999999999915e-05, 7.227699999999906e-05, 7.154100000000135e-05, 7.222200000000026e-05, 7.222200000000026e-05, 7.176399999999847e-05, 7.204100000000185e-05, 7.175000000000237e-05, 7.184699999999988e-05, 7.188899999999859e-05, 7.176400000000194e-05, 7.192999999999783e-05, 7.216699999999798e-05, 7.195800000000044e-05, 7.215300000000188e-05, 7.213899999999884e-05, 7.204199999999786e-05, 7.198599999999958e-05, 7.21109999999997e-05, 7.184799999999936e-05, 7.22499999999994e-05, 7.205599999999743e-05]</msg>
<status status="PASS" starttime="20201030 10:58:35.280" endtime="20201030 10:58:35.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.276" endtime="20201030 10:58:35.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:35.288" endtime="20201030 10:58:35.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.286" endtime="20201030 10:58:35.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.285" endtime="20201030 10:58:35.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.928" endtime="20201030 10:58:35.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.927" endtime="20201030 10:58:35.308"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.317" endtime="20201030 10:58:35.335"></status>
</kw>
<msg timestamp="20201030 10:58:35.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.315" endtime="20201030 10:58:35.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.336" endtime="20201030 10:58:35.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.339" endtime="20201030 10:58:35.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.313" endtime="20201030 10:58:35.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.311" endtime="20201030 10:58:35.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.348" endtime="20201030 10:58:35.634"></status>
</kw>
<msg timestamp="20201030 10:58:35.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021736542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.346" endtime="20201030 10:58:35.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021736542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.638" endtime="20201030 10:58:35.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.646" endtime="20201030 10:58:35.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.344" endtime="20201030 10:58:35.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.342" endtime="20201030 10:58:35.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:35.652" level="INFO">${RESULT} = [{'diff': 7.265199999999944e-05}, {'diff': 7.272199999999729e-05}, {'diff': 7.269400000000162e-05}, {'diff': 7.30829999999981e-05}, {'diff': 7.283300000000131e-05}, {'diff': 7.306899999999852e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:35.649" endtime="20201030 10:58:35.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:35.657" level="INFO">${ACCURACY} = {'diff': [7.265199999999944e-05, 7.272199999999729e-05, 7.269400000000162e-05, 7.30829999999981e-05, 7.283300000000131e-05, 7.306899999999852e-05, 7.316700000000245e-05, 7.313899999999984e-05, 7.30139...</msg>
<status status="PASS" starttime="20201030 10:58:35.653" endtime="20201030 10:58:35.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.662" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 10:58:35.661" endtime="20201030 10:58:35.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.664" level="INFO">VALUE: [7.265199999999944e-05, 7.272199999999729e-05, 7.269400000000162e-05, 7.30829999999981e-05, 7.283300000000131e-05, 7.306899999999852e-05, 7.316700000000245e-05, 7.313899999999984e-05, 7.301399999999972e-05, 7.270800000000119e-05, 7.291699999999873e-05, 7.293100000000177e-05, 7.291699999999873e-05, 7.322200000000126e-05, 7.276399999999947e-05, 7.304100000000285e-05, 7.312500000000027e-05, 7.300000000000015e-05, 7.316700000000245e-05, 7.286100000000045e-05, 7.286199999999993e-05, 7.302799999999929e-05, 7.309699999999766e-05, 7.312500000000027e-05, 7.316599999999951e-05, 7.302800000000276e-05, 7.287500000000002e-05, 7.315299999999941e-05, 7.31110000000007e-05, 7.29439999999984e-05, 7.279200000000208e-05, 7.288899999999959e-05, 7.272200000000076e-05, 7.268100000000152e-05, 7.316699999999898e-05, 7.317999999999908e-05, 7.272200000000076e-05, 7.273600000000033e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.293100000000177e-05, 7.27499999999999e-05, 7.317999999999908e-05, 7.302799999999929e-05, 7.327799999999954e-05, 7.291599999999926e-05, 7.276399999999947e-05, 7.290299999999916e-05, 7.284699999999741e-05, 7.277799999999904e-05]</msg>
<status status="PASS" starttime="20201030 10:58:35.663" endtime="20201030 10:58:35.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.658" endtime="20201030 10:58:35.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:35.669" endtime="20201030 10:58:35.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.668" endtime="20201030 10:58:35.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.667" endtime="20201030 10:58:35.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.309" endtime="20201030 10:58:35.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.309" endtime="20201030 10:58:35.690"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.699" endtime="20201030 10:58:35.717"></status>
</kw>
<msg timestamp="20201030 10:58:35.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.697" endtime="20201030 10:58:35.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.718" endtime="20201030 10:58:35.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.721" endtime="20201030 10:58:35.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.695" endtime="20201030 10:58:35.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.692" endtime="20201030 10:58:35.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.730" endtime="20201030 10:58:36.039"></status>
</kw>
<msg timestamp="20201030 10:58:36.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.728" endtime="20201030 10:58:36.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.049" endtime="20201030 10:58:36.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.061" endtime="20201030 10:58:36.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.726" endtime="20201030 10:58:36.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.724" endtime="20201030 10:58:36.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.068" level="INFO">${RESULT} = [{'diff': 7.366699999999948e-05}, {'diff': 7.376400000000047e-05}, {'diff': 7.386100000000145e-05}, {'diff': 7.419399999999965e-05}, {'diff': 7.386100000000145e-05}, {'diff': 7.387500000000102e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:36.065" endtime="20201030 10:58:36.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.072" level="INFO">${ACCURACY} = {'diff': [7.366699999999948e-05, 7.376400000000047e-05, 7.386100000000145e-05, 7.419399999999965e-05, 7.386100000000145e-05, 7.387500000000102e-05, 7.381899999999927e-05, 7.370799999999872e-05, 7.3930...</msg>
<status status="PASS" starttime="20201030 10:58:36.069" endtime="20201030 10:58:36.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.076" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.075" endtime="20201030 10:58:36.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.079" level="INFO">VALUE: [7.366699999999948e-05, 7.376400000000047e-05, 7.386100000000145e-05, 7.419399999999965e-05, 7.386100000000145e-05, 7.387500000000102e-05, 7.381899999999927e-05, 7.370799999999872e-05, 7.39309999999993e-05, 7.42500000000014e-05, 7.377800000000004e-05, 7.419499999999912e-05, 7.419499999999912e-05, 7.405599999999943e-05, 7.42639999999975e-05, 7.402799999999682e-05, 7.398700000000105e-05, 7.370800000000219e-05, 7.409700000000213e-05, 7.409699999999866e-05, 7.379100000000013e-05, 7.373599999999786e-05, 7.411099999999823e-05, 7.383299999999884e-05, 7.395800000000244e-05, 7.400000000000115e-05, 7.402800000000029e-05, 7.405499999999995e-05, 7.369499999999862e-05, 7.383299999999884e-05, 7.3763999999997e-05, 7.409700000000213e-05, 7.400000000000115e-05, 7.351400000000022e-05, 7.39309999999993e-05, 7.402800000000029e-05, 7.368099999999905e-05, 7.370900000000166e-05, 7.390300000000016e-05, 7.402800000000029e-05, 7.39309999999993e-05, 7.377700000000056e-05, 7.404099999999691e-05, 7.40829999999991e-05, 7.391600000000026e-05, 7.409700000000213e-05, 7.387500000000102e-05, 7.426400000000097e-05, 7.351400000000022e-05, 7.415300000000041e-05]</msg>
<status status="PASS" starttime="20201030 10:58:36.077" endtime="20201030 10:58:36.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.073" endtime="20201030 10:58:36.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.084" endtime="20201030 10:58:36.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.082" endtime="20201030 10:58:36.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.081" endtime="20201030 10:58:36.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.691" endtime="20201030 10:58:36.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.690" endtime="20201030 10:58:36.105"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.114" endtime="20201030 10:58:36.135"></status>
</kw>
<msg timestamp="20201030 10:58:36.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.112" endtime="20201030 10:58:36.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.136" endtime="20201030 10:58:36.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.139" endtime="20201030 10:58:36.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.109" endtime="20201030 10:58:36.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.107" endtime="20201030 10:58:36.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.148" endtime="20201030 10:58:36.433"></status>
</kw>
<msg timestamp="20201030 10:58:36.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025369236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025444458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.146" endtime="20201030 10:58:36.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025369236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025444458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.437" endtime="20201030 10:58:36.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.446" endtime="20201030 10:58:36.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.144" endtime="20201030 10:58:36.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.142" endtime="20201030 10:58:36.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.452" level="INFO">${RESULT} = [{'diff': 7.522199999999979e-05}, {'diff': 7.513800000000237e-05}, {'diff': 7.479200000000061e-05}, {'diff': 7.504199999999739e-05}, {'diff': 7.51249999999988e-05}, {'diff': 7.487499999999855e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:36.449" endtime="20201030 10:58:36.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.456" level="INFO">${ACCURACY} = {'diff': [7.522199999999979e-05, 7.513800000000237e-05, 7.479200000000061e-05, 7.504199999999739e-05, 7.51249999999988e-05, 7.487499999999855e-05, 7.497199999999954e-05, 7.481900000000027e-05, 7.50270...</msg>
<status status="PASS" starttime="20201030 10:58:36.453" endtime="20201030 10:58:36.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.461" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.460" endtime="20201030 10:58:36.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.463" level="INFO">VALUE: [7.522199999999979e-05, 7.513800000000237e-05, 7.479200000000061e-05, 7.504199999999739e-05, 7.51249999999988e-05, 7.487499999999855e-05, 7.497199999999954e-05, 7.481900000000027e-05, 7.502700000000181e-05, 7.501399999999825e-05, 7.486099999999898e-05, 7.49029999999977e-05, 7.509699999999966e-05, 7.480600000000018e-05, 7.520800000000022e-05, 7.504200000000086e-05, 7.481999999999975e-05, 7.449999999999818e-05, 7.501399999999825e-05, 7.519500000000012e-05, 7.479199999999714e-05, 7.527800000000154e-05, 7.523599999999936e-05, 7.526400000000197e-05, 7.484799999999889e-05, 7.52639999999985e-05, 7.486199999999846e-05, 7.486099999999898e-05, 7.490200000000169e-05, 7.490200000000169e-05, 7.488899999999812e-05, 7.527799999999807e-05, 7.504100000000138e-05, 7.490300000000116e-05, 7.519400000000065e-05, 7.490300000000116e-05, 7.522199999999979e-05, 7.497199999999954e-05, 7.502799999999782e-05, 7.501399999999825e-05, 7.50830000000001e-05, 7.527800000000154e-05, 7.495799999999997e-05, 7.501400000000172e-05, 7.491699999999726e-05, 7.491700000000073e-05, 7.498599999999911e-05, 7.473599999999886e-05, 7.472300000000223e-05, 7.490300000000116e-05]</msg>
<status status="PASS" starttime="20201030 10:58:36.462" endtime="20201030 10:58:36.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.457" endtime="20201030 10:58:36.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.469" endtime="20201030 10:58:36.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.467" endtime="20201030 10:58:36.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.466" endtime="20201030 10:58:36.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.106" endtime="20201030 10:58:36.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.105" endtime="20201030 10:58:36.489"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.498" endtime="20201030 10:58:36.516"></status>
</kw>
<msg timestamp="20201030 10:58:36.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.497" endtime="20201030 10:58:36.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.517" endtime="20201030 10:58:36.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.520" endtime="20201030 10:58:36.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.494" endtime="20201030 10:58:36.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.492" endtime="20201030 10:58:36.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.528" endtime="20201030 10:58:36.814"></status>
</kw>
<msg timestamp="20201030 10:58:36.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.527" endtime="20201030 10:58:36.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.818" endtime="20201030 10:58:36.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.826" endtime="20201030 10:58:36.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.524" endtime="20201030 10:58:36.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.523" endtime="20201030 10:58:36.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.833" level="INFO">${RESULT} = [{'diff': 7.544500000000037e-05}, {'diff': 7.577700000000256e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.606900000000152e-05}, {'diff': 7.574999999999943e-05}, {'diff': 7.623600000000036e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:36.830" endtime="20201030 10:58:36.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.838" level="INFO">${ACCURACY} = {'diff': [7.544500000000037e-05, 7.577700000000256e-05, 7.599999999999968e-05, 7.606900000000152e-05, 7.574999999999943e-05, 7.623600000000036e-05, 7.602800000000229e-05, 7.623600000000036e-05, 7.5888...</msg>
<status status="PASS" starttime="20201030 10:58:36.834" endtime="20201030 10:58:36.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.843" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.841" endtime="20201030 10:58:36.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.845" level="INFO">VALUE: [7.544500000000037e-05, 7.577700000000256e-05, 7.599999999999968e-05, 7.606900000000152e-05, 7.574999999999943e-05, 7.623600000000036e-05, 7.602800000000229e-05, 7.623600000000036e-05, 7.588899999999912e-05, 7.572200000000029e-05, 7.598600000000011e-05, 7.597200000000054e-05, 7.595800000000097e-05, 7.604199999999839e-05, 7.580600000000118e-05, 7.604199999999839e-05, 7.574999999999943e-05, 7.605600000000143e-05, 7.604199999999839e-05, 7.584799999999989e-05, 7.615299999999894e-05, 7.577800000000204e-05, 7.580599999999771e-05, 7.59310000000013e-05, 7.597199999999707e-05, 7.627800000000254e-05, 7.616600000000251e-05, 7.570800000000072e-05, 7.60830000000011e-05, 7.613900000000284e-05, 7.579200000000161e-05, 7.573599999999986e-05, 7.583300000000084e-05, 7.617999999999861e-05, 7.606900000000152e-05, 7.60830000000011e-05, 7.552800000000179e-05, 7.584700000000041e-05, 7.591699999999826e-05, 7.608400000000057e-05, 7.569500000000062e-05, 7.59449999999974e-05, 7.598699999999958e-05, 7.579199999999814e-05, 7.598600000000011e-05, 7.598699999999958e-05, 7.583300000000084e-05, 7.595800000000097e-05, 7.622200000000079e-05, 7.587499999999955e-05]</msg>
<status status="PASS" starttime="20201030 10:58:36.844" endtime="20201030 10:58:36.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.839" endtime="20201030 10:58:36.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.851" endtime="20201030 10:58:36.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.849" endtime="20201030 10:58:36.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.848" endtime="20201030 10:58:36.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.490" endtime="20201030 10:58:36.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.490" endtime="20201030 10:58:36.872"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.880" endtime="20201030 10:58:36.897"></status>
</kw>
<msg timestamp="20201030 10:58:36.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.879" endtime="20201030 10:58:36.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.899" endtime="20201030 10:58:36.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.901" endtime="20201030 10:58:36.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.876" endtime="20201030 10:58:36.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.874" endtime="20201030 10:58:36.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.910" endtime="20201030 10:58:37.197"></status>
</kw>
<msg timestamp="20201030 10:58:37.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.909" endtime="20201030 10:58:37.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.201" endtime="20201030 10:58:37.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.209" endtime="20201030 10:58:37.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.906" endtime="20201030 10:58:37.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.904" endtime="20201030 10:58:37.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.216" level="INFO">${RESULT} = [{'diff': 7.695900000000144e-05}, {'diff': 7.693099999999883e-05}, {'diff': 7.687499999999708e-05}, {'diff': 7.701400000000025e-05}, {'diff': 7.723599999999789e-05}, {'diff': 7.702700000000035e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:37.212" endtime="20201030 10:58:37.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:37.220" level="INFO">${ACCURACY} = {'diff': [7.695900000000144e-05, 7.693099999999883e-05, 7.687499999999708e-05, 7.701400000000025e-05, 7.723599999999789e-05, 7.702700000000035e-05, 7.688800000000065e-05, 7.674999999999696e-05, 7.6708...</msg>
<status status="PASS" starttime="20201030 10:58:37.217" endtime="20201030 10:58:37.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.224" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 10:58:37.223" endtime="20201030 10:58:37.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.227" level="INFO">VALUE: [7.695900000000144e-05, 7.693099999999883e-05, 7.687499999999708e-05, 7.701400000000025e-05, 7.723599999999789e-05, 7.702700000000035e-05, 7.688800000000065e-05, 7.674999999999696e-05, 7.670800000000172e-05, 7.723599999999789e-05, 7.670799999999825e-05, 7.693000000000283e-05, 7.715299999999994e-05, 7.69579999999985e-05, 7.722200000000179e-05, 7.6764e-05, 7.701400000000025e-05, 7.712499999999733e-05, 7.693099999999883e-05, 7.71250000000008e-05, 7.698599999999764e-05, 7.700000000000068e-05, 7.680600000000218e-05, 7.684699999999794e-05, 7.687499999999708e-05, 7.687500000000055e-05, 7.687500000000055e-05, 7.715200000000047e-05, 7.688800000000065e-05, 7.695800000000197e-05, 7.713900000000037e-05, 7.666599999999954e-05, 7.683299999999837e-05, 7.722200000000179e-05, 7.684700000000141e-05, 7.679199999999914e-05, 7.711100000000123e-05, 7.683300000000184e-05, 7.680599999999871e-05, 7.720799999999875e-05, 7.706899999999905e-05, 7.691699999999926e-05, 7.679199999999914e-05, 7.697300000000101e-05, 7.684800000000089e-05, 7.71250000000008e-05, 7.709799999999767e-05, 7.668100000000205e-05, 7.701400000000025e-05, 7.687500000000055e-05]</msg>
<status status="PASS" starttime="20201030 10:58:37.225" endtime="20201030 10:58:37.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.221" endtime="20201030 10:58:37.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.232" endtime="20201030 10:58:37.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.230" endtime="20201030 10:58:37.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.229" endtime="20201030 10:58:37.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.873" endtime="20201030 10:58:37.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.872" endtime="20201030 10:58:37.252"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.261" endtime="20201030 10:58:37.279"></status>
</kw>
<msg timestamp="20201030 10:58:37.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.259" endtime="20201030 10:58:37.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.280" endtime="20201030 10:58:37.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.283" endtime="20201030 10:58:37.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.257" endtime="20201030 10:58:37.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.255" endtime="20201030 10:58:37.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.292" endtime="20201030 10:58:37.577"></status>
</kw>
<msg timestamp="20201030 10:58:37.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.290" endtime="20201030 10:58:37.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.581" endtime="20201030 10:58:37.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.589" endtime="20201030 10:58:37.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.288" endtime="20201030 10:58:37.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.286" endtime="20201030 10:58:37.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.596" level="INFO">${RESULT} = [{'diff': 7.75830000000026e-05}, {'diff': 7.80969999999992e-05}, {'diff': 7.798699999999811e-05}, {'diff': 7.752800000000032e-05}, {'diff': 7.766700000000001e-05}, {'diff': 7.776299999999806e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:37.592" endtime="20201030 10:58:37.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:37.600" level="INFO">${ACCURACY} = {'diff': [7.75830000000026e-05, 7.80969999999992e-05, 7.798699999999811e-05, 7.752800000000032e-05, 7.766700000000001e-05, 7.776299999999806e-05, 7.824999999999846e-05, 7.786099999999851e-05, 7.805599...</msg>
<status status="PASS" starttime="20201030 10:58:37.597" endtime="20201030 10:58:37.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.604" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 10:58:37.603" endtime="20201030 10:58:37.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.607" level="INFO">VALUE: [7.75830000000026e-05, 7.80969999999992e-05, 7.798699999999811e-05, 7.752800000000032e-05, 7.766700000000001e-05, 7.776299999999806e-05, 7.824999999999846e-05, 7.786099999999851e-05, 7.805599999999996e-05, 7.774999999999796e-05, 7.804100000000092e-05, 7.825000000000193e-05, 7.775000000000143e-05, 7.816600000000104e-05, 7.81250000000018e-05, 7.815300000000094e-05, 7.791600000000079e-05, 7.827800000000107e-05, 7.79579999999995e-05, 7.818000000000061e-05, 7.815300000000094e-05, 7.791700000000026e-05, 7.773600000000186e-05, 7.752800000000032e-05, 7.80969999999992e-05, 7.779200000000014e-05, 7.825000000000193e-05, 7.774999999999796e-05, 7.786099999999851e-05, 7.799999999999821e-05, 7.795899999999897e-05, 7.806999999999953e-05, 7.804200000000039e-05, 7.81250000000018e-05, 7.825000000000193e-05, 7.776300000000153e-05, 7.79030000000007e-05, 7.818000000000061e-05, 7.779200000000014e-05, 7.800000000000168e-05, 7.82640000000015e-05, 7.823600000000236e-05, 7.775000000000143e-05, 7.819400000000018e-05, 7.818100000000008e-05, 7.795899999999897e-05, 7.818100000000008e-05, 7.797200000000254e-05, 7.787500000000155e-05, 7.779200000000014e-05]</msg>
<status status="PASS" starttime="20201030 10:58:37.605" endtime="20201030 10:58:37.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.601" endtime="20201030 10:58:37.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.612" endtime="20201030 10:58:37.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.611" endtime="20201030 10:58:37.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.610" endtime="20201030 10:58:37.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.253" endtime="20201030 10:58:37.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.253" endtime="20201030 10:58:37.633"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.642" endtime="20201030 10:58:37.660"></status>
</kw>
<msg timestamp="20201030 10:58:37.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.640" endtime="20201030 10:58:37.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.661" endtime="20201030 10:58:37.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.664" endtime="20201030 10:58:37.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.638" endtime="20201030 10:58:37.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.635" endtime="20201030 10:58:37.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.673" endtime="20201030 10:58:37.958"></status>
</kw>
<msg timestamp="20201030 10:58:37.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022242069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.671" endtime="20201030 10:58:37.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022242069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.962" endtime="20201030 10:58:37.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.971" endtime="20201030 10:58:37.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.669" endtime="20201030 10:58:37.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.667" endtime="20201030 10:58:37.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.977" level="INFO">${RESULT} = [{'diff': 7.865300000000144e-05}, {'diff': 7.905600000000096e-05}, {'diff': 7.91389999999989e-05}, {'diff': 7.919400000000118e-05}, {'diff': 7.905600000000096e-05}, {'diff': 7.923700000000283e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:37.974" endtime="20201030 10:58:37.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:37.982" level="INFO">${ACCURACY} = {'diff': [7.865300000000144e-05, 7.905600000000096e-05, 7.91389999999989e-05, 7.919400000000118e-05, 7.905600000000096e-05, 7.923700000000283e-05, 7.888899999999865e-05, 7.922200000000032e-05, 7.90419...</msg>
<status status="PASS" starttime="20201030 10:58:37.978" endtime="20201030 10:58:37.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.987" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 10:58:37.985" endtime="20201030 10:58:37.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.989" level="INFO">VALUE: [7.865300000000144e-05, 7.905600000000096e-05, 7.91389999999989e-05, 7.919400000000118e-05, 7.905600000000096e-05, 7.923700000000283e-05, 7.888899999999865e-05, 7.922200000000032e-05, 7.904199999999792e-05, 7.879200000000114e-05, 7.87229999999993e-05, 7.893099999999736e-05, 7.874999999999896e-05, 7.883399999999985e-05, 7.884800000000289e-05, 7.869400000000068e-05, 7.923599999999989e-05, 7.897200000000007e-05, 7.890199999999875e-05, 7.926399999999903e-05, 7.901400000000225e-05, 7.916699999999804e-05, 7.922200000000032e-05, 7.879200000000114e-05, 7.870800000000025e-05, 7.911099999999976e-05, 7.887499999999908e-05, 7.918100000000108e-05, 7.920800000000075e-05, 7.901399999999878e-05, 7.895899999999997e-05, 7.89169999999978e-05, 7.905500000000149e-05, 7.919500000000065e-05, 7.912499999999933e-05, 7.887499999999908e-05, 7.908300000000063e-05, 7.870799999999678e-05, 7.916599999999857e-05, 7.906900000000106e-05, 7.906900000000106e-05, 7.906899999999759e-05, 7.880500000000124e-05, 7.893000000000136e-05, 7.873599999999939e-05, 7.905599999999749e-05, 7.923599999999989e-05, 7.880600000000071e-05, 7.879199999999767e-05, 7.870899999999972e-05]</msg>
<status status="PASS" starttime="20201030 10:58:37.988" endtime="20201030 10:58:37.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.983" endtime="20201030 10:58:37.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.994" endtime="20201030 10:58:38.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.992" endtime="20201030 10:58:38.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.991" endtime="20201030 10:58:38.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.634" endtime="20201030 10:58:38.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.633" endtime="20201030 10:58:38.015"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.023" endtime="20201030 10:58:38.041"></status>
</kw>
<msg timestamp="20201030 10:58:38.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.022" endtime="20201030 10:58:38.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.042" endtime="20201030 10:58:38.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.045" endtime="20201030 10:58:38.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.019" endtime="20201030 10:58:38.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.017" endtime="20201030 10:58:38.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.054" endtime="20201030 10:58:38.340"></status>
</kw>
<msg timestamp="20201030 10:58:38.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021895431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.052" endtime="20201030 10:58:38.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021895431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.344" endtime="20201030 10:58:38.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.353" endtime="20201030 10:58:38.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.050" endtime="20201030 10:58:38.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.048" endtime="20201030 10:58:38.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:38.359" level="INFO">${RESULT} = [{'diff': 7.980499999999877e-05}, {'diff': 8.008399999999763e-05}, {'diff': 7.986199999999999e-05}, {'diff': 8.002699999999988e-05}, {'diff': 7.977699999999963e-05}, {'diff': 7.976300000000006e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:38.356" endtime="20201030 10:58:38.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:38.363" level="INFO">${ACCURACY} = {'diff': [7.980499999999877e-05, 8.008399999999763e-05, 7.986199999999999e-05, 8.002699999999988e-05, 7.977699999999963e-05, 7.976300000000006e-05, 8.020799999999828e-05, 8.001399999999978e-05, 8.0193...</msg>
<status status="PASS" starttime="20201030 10:58:38.360" endtime="20201030 10:58:38.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.368" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 10:58:38.367" endtime="20201030 10:58:38.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.370" level="INFO">VALUE: [7.980499999999877e-05, 8.008399999999763e-05, 7.986199999999999e-05, 8.002699999999988e-05, 7.977699999999963e-05, 7.976300000000006e-05, 8.020799999999828e-05, 8.001399999999978e-05, 8.019399999999871e-05, 8.006900000000206e-05, 7.991599999999932e-05, 8.009699999999773e-05, 8.02779999999996e-05, 8.019399999999871e-05, 8.018100000000208e-05, 8.025000000000046e-05, 8.012500000000033e-05, 7.954199999999842e-05, 7.980600000000171e-05, 7.988899999999965e-05, 8.009800000000067e-05, 7.997300000000054e-05, 8.009800000000067e-05, 7.990199999999975e-05, 8.017999999999914e-05, 7.981899999999834e-05, 8.008300000000163e-05, 7.972199999999735e-05, 7.986100000000051e-05, 7.970800000000125e-05, 7.99719999999976e-05, 7.984700000000094e-05, 7.980599999999824e-05, 8.022200000000132e-05, 8.012500000000033e-05, 8.015299999999947e-05, 7.97779999999991e-05, 8.019499999999818e-05, 8.012500000000033e-05, 7.954200000000189e-05, 7.991700000000226e-05, 7.97779999999991e-05, 7.984800000000042e-05, 8.017999999999914e-05, 7.999999999999674e-05, 7.984700000000094e-05, 7.981899999999834e-05, 8.001399999999978e-05, 8.004099999999945e-05, 7.984699999999748e-05]</msg>
<status status="PASS" starttime="20201030 10:58:38.369" endtime="20201030 10:58:38.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.364" endtime="20201030 10:58:38.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:38.375" endtime="20201030 10:58:38.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.374" endtime="20201030 10:58:38.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.372" endtime="20201030 10:58:38.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.016" endtime="20201030 10:58:38.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.015" endtime="20201030 10:58:38.396"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.404" endtime="20201030 10:58:38.423"></status>
</kw>
<msg timestamp="20201030 10:58:38.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.403" endtime="20201030 10:58:38.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.424" endtime="20201030 10:58:38.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.427" endtime="20201030 10:58:38.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.400" endtime="20201030 10:58:38.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.398" endtime="20201030 10:58:38.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.436" endtime="20201030 10:58:38.722"></status>
</kw>
<msg timestamp="20201030 10:58:38.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022981333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.434" endtime="20201030 10:58:38.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022981333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.726" endtime="20201030 10:58:38.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.734" endtime="20201030 10:58:38.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.432" endtime="20201030 10:58:38.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.430" endtime="20201030 10:58:38.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:38.740" level="INFO">${RESULT} = [{'diff': 8.06390000000004e-05}, {'diff': 8.109699999999873e-05}, {'diff': 8.101400000000078e-05}, {'diff': 8.11109999999983e-05}, {'diff': 8.111100000000177e-05}, {'diff': 8.087500000000108e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:38.737" endtime="20201030 10:58:38.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:38.745" level="INFO">${ACCURACY} = {'diff': [8.06390000000004e-05, 8.109699999999873e-05, 8.101400000000078e-05, 8.11109999999983e-05, 8.111100000000177e-05, 8.087500000000108e-05, 8.093099999999936e-05, 8.070899999999825e-05, 8.081999...</msg>
<status status="PASS" starttime="20201030 10:58:38.741" endtime="20201030 10:58:38.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.749" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 10:58:38.748" endtime="20201030 10:58:38.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.751" level="INFO">VALUE: [8.06390000000004e-05, 8.109699999999873e-05, 8.101400000000078e-05, 8.11109999999983e-05, 8.111100000000177e-05, 8.087500000000108e-05, 8.093099999999936e-05, 8.070899999999825e-05, 8.081999999999881e-05, 8.124999999999799e-05, 8.126399999999756e-05, 8.086099999999805e-05, 8.075000000000096e-05, 8.105599999999949e-05, 8.112500000000133e-05, 8.079199999999967e-05, 8.06520000000005e-05, 8.09719999999986e-05, 8.116700000000004e-05, 8.118000000000014e-05, 8.104099999999698e-05, 8.090300000000022e-05, 8.076400000000053e-05, 8.07780000000001e-05, 8.067999999999964e-05, 8.109699999999873e-05, 8.086099999999805e-05, 8.119499999999918e-05, 8.075000000000096e-05, 8.083400000000185e-05, 8.097200000000207e-05, 8.084800000000142e-05, 8.098700000000111e-05, 8.118099999999961e-05, 8.104100000000045e-05, 8.076400000000053e-05, 8.105500000000002e-05, 8.102700000000088e-05, 8.098600000000164e-05, 8.1152000000001e-05, 8.088900000000065e-05, 8.116600000000057e-05, 8.092999999999989e-05, 8.080499999999977e-05, 8.087500000000108e-05, 8.075000000000096e-05, 8.093100000000283e-05, 8.100000000000121e-05, 8.104199999999992e-05, 8.09589999999985e-05]</msg>
<status status="PASS" starttime="20201030 10:58:38.750" endtime="20201030 10:58:38.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.745" endtime="20201030 10:58:38.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:38.757" endtime="20201030 10:58:38.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.756" endtime="20201030 10:58:38.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.755" endtime="20201030 10:58:38.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.397" endtime="20201030 10:58:38.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.396" endtime="20201030 10:58:38.778"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.786" endtime="20201030 10:58:38.804"></status>
</kw>
<msg timestamp="20201030 10:58:38.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.785" endtime="20201030 10:58:38.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.805" endtime="20201030 10:58:38.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.808" endtime="20201030 10:58:38.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.782" endtime="20201030 10:58:38.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.780" endtime="20201030 10:58:38.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.817" endtime="20201030 10:58:39.102"></status>
</kw>
<msg timestamp="20201030 10:58:39.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.815" endtime="20201030 10:58:39.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.106" endtime="20201030 10:58:39.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.115" endtime="20201030 10:58:39.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.813" endtime="20201030 10:58:39.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.811" endtime="20201030 10:58:39.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.121" level="INFO">${RESULT} = [{'diff': 8.144399999999996e-05}, {'diff': 8.187499999999862e-05}, {'diff': 8.172200000000282e-05}, {'diff': 8.222200000000332e-05}, {'diff': 8.172199999999935e-05}, {'diff': 8.201399999999831e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:39.118" endtime="20201030 10:58:39.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.126" level="INFO">${ACCURACY} = {'diff': [8.144399999999996e-05, 8.187499999999862e-05, 8.172200000000282e-05, 8.222200000000332e-05, 8.172199999999935e-05, 8.201399999999831e-05, 8.17910000000012e-05, 8.19719999999996e-05, 8.215300...</msg>
<status status="PASS" starttime="20201030 10:58:39.122" endtime="20201030 10:58:39.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.130" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.129" endtime="20201030 10:58:39.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.133" level="INFO">VALUE: [8.144399999999996e-05, 8.187499999999862e-05, 8.172200000000282e-05, 8.222200000000332e-05, 8.172199999999935e-05, 8.201399999999831e-05, 8.17910000000012e-05, 8.19719999999996e-05, 8.215300000000147e-05, 8.21390000000019e-05, 8.204199999999745e-05, 8.170799999999978e-05, 8.199999999999874e-05, 8.22780000000016e-05, 8.208399999999963e-05, 8.207000000000006e-05, 8.207000000000006e-05, 8.181999999999981e-05, 8.227699999999866e-05, 8.175000000000196e-05, 8.181900000000034e-05, 8.205499999999755e-05, 8.201399999999831e-05, 8.19719999999996e-05, 8.194400000000046e-05, 8.222199999999985e-05, 8.187500000000208e-05, 8.216699999999758e-05, 8.205599999999702e-05, 8.181900000000034e-05, 8.218100000000061e-05, 8.184799999999895e-05, 8.19719999999996e-05, 8.200000000000221e-05, 8.220899999999975e-05, 8.176400000000153e-05, 8.170899999999925e-05, 8.21390000000019e-05, 8.197300000000254e-05, 8.168100000000011e-05, 8.223599999999942e-05, 8.209699999999973e-05, 8.187500000000208e-05, 8.190300000000122e-05, 8.17910000000012e-05, 8.174999999999849e-05, 8.218100000000061e-05, 8.21390000000019e-05, 8.219400000000071e-05, 8.193100000000036e-05]</msg>
<status status="PASS" starttime="20201030 10:58:39.131" endtime="20201030 10:58:39.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.127" endtime="20201030 10:58:39.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.138" endtime="20201030 10:58:39.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.136" endtime="20201030 10:58:39.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.135" endtime="20201030 10:58:39.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.779" endtime="20201030 10:58:39.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.778" endtime="20201030 10:58:39.158"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.167" endtime="20201030 10:58:39.185"></status>
</kw>
<msg timestamp="20201030 10:58:39.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.166" endtime="20201030 10:58:39.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.187" endtime="20201030 10:58:39.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.189" endtime="20201030 10:58:39.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.163" endtime="20201030 10:58:39.191"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.161" endtime="20201030 10:58:39.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.198" endtime="20201030 10:58:39.485"></status>
</kw>
<msg timestamp="20201030 10:58:39.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.197" endtime="20201030 10:58:39.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.489" endtime="20201030 10:58:39.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.497" endtime="20201030 10:58:39.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.194" endtime="20201030 10:58:39.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.192" endtime="20201030 10:58:39.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.504" level="INFO">${RESULT} = [{'diff': 8.247299999999957e-05}, {'diff': 8.276300000000306e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.268000000000164e-05}, {'diff': 8.270800000000078e-05}, {'diff': 8.309700000000073e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:39.501" endtime="20201030 10:58:39.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.508" level="INFO">${ACCURACY} = {'diff': [8.247299999999957e-05, 8.276300000000306e-05, 8.31110000000003e-05, 8.268000000000164e-05, 8.270800000000078e-05, 8.309700000000073e-05, 8.318100000000161e-05, 8.280500000000177e-05, 8.30969...</msg>
<status status="PASS" starttime="20201030 10:58:39.505" endtime="20201030 10:58:39.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.512" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.511" endtime="20201030 10:58:39.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.515" level="INFO">VALUE: [8.247299999999957e-05, 8.276300000000306e-05, 8.31110000000003e-05, 8.268000000000164e-05, 8.270800000000078e-05, 8.309700000000073e-05, 8.318100000000161e-05, 8.280500000000177e-05, 8.309699999999726e-05, 8.273599999999992e-05, 8.320799999999781e-05, 8.274999999999949e-05, 8.306900000000159e-05, 8.294399999999799e-05, 8.28330000000009e-05, 8.302799999999888e-05, 8.284700000000048e-05, 8.3152999999999e-05, 8.272299999999982e-05, 8.280599999999777e-05, 8.288899999999919e-05, 8.315300000000247e-05, 8.272299999999982e-05, 8.280500000000177e-05, 8.31659999999991e-05, 8.294400000000146e-05, 8.312499999999987e-05, 8.31659999999991e-05, 8.291699999999833e-05, 8.283400000000038e-05, 8.306899999999812e-05, 8.326399999999956e-05, 8.29720000000006e-05, 8.309700000000073e-05, 8.252800000000185e-05, 8.27919999999982e-05, 8.304199999999845e-05, 8.31390000000029e-05, 8.309699999999726e-05, 8.327799999999913e-05, 8.290300000000222e-05, 8.308400000000063e-05, 8.301399999999931e-05, 8.277699999999916e-05, 8.31659999999991e-05, 8.273599999999992e-05, 8.276400000000253e-05, 8.320800000000128e-05, 8.309700000000073e-05, 8.305599999999802e-05]</msg>
<status status="PASS" starttime="20201030 10:58:39.514" endtime="20201030 10:58:39.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.509" endtime="20201030 10:58:39.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.520" endtime="20201030 10:58:39.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.518" endtime="20201030 10:58:39.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.517" endtime="20201030 10:58:39.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.159" endtime="20201030 10:58:39.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.159" endtime="20201030 10:58:39.540"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.549" endtime="20201030 10:58:39.571"></status>
</kw>
<msg timestamp="20201030 10:58:39.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.548" endtime="20201030 10:58:39.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.572" endtime="20201030 10:58:39.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.575" endtime="20201030 10:58:39.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.545" endtime="20201030 10:58:39.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.543" endtime="20201030 10:58:39.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.584" endtime="20201030 10:58:39.869"></status>
</kw>
<msg timestamp="20201030 10:58:39.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0252215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025305125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:39.582" endtime="20201030 10:58:39.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0252215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025305125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:39.874" endtime="20201030 10:58:39.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.882" endtime="20201030 10:58:39.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.580" endtime="20201030 10:58:39.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.578" endtime="20201030 10:58:39.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.889" level="INFO">${RESULT} = [{'diff': 8.362500000000037e-05}, {'diff': 8.402799999999988e-05}, {'diff': 8.39859999999977e-05}, {'diff': 8.386100000000105e-05}, {'diff': 8.390299999999976e-05}, {'diff': 8.4153e-05}, {'diff': 8.40...</msg>
<status status="PASS" starttime="20201030 10:58:39.886" endtime="20201030 10:58:39.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.893" level="INFO">${ACCURACY} = {'diff': [8.362500000000037e-05, 8.402799999999988e-05, 8.39859999999977e-05, 8.386100000000105e-05, 8.390299999999976e-05, 8.4153e-05, 8.406999999999859e-05, 8.39729999999976e-05, 8.394399999999899e-...</msg>
<status status="PASS" starttime="20201030 10:58:39.890" endtime="20201030 10:58:39.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.898" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.897" endtime="20201030 10:58:39.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.901" level="INFO">VALUE: [8.362500000000037e-05, 8.402799999999988e-05, 8.39859999999977e-05, 8.386100000000105e-05, 8.390299999999976e-05, 8.4153e-05, 8.406999999999859e-05, 8.39729999999976e-05, 8.394399999999899e-05, 8.406899999999912e-05, 8.400000000000074e-05, 8.373599999999745e-05, 8.352699999999991e-05, 8.424999999999752e-05, 8.422200000000185e-05, 8.372200000000135e-05, 8.398600000000117e-05, 8.399999999999727e-05, 8.380600000000224e-05, 8.426400000000056e-05, 8.4153e-05, 8.43049999999998e-05, 8.377799999999963e-05, 8.380599999999877e-05, 8.388900000000019e-05, 8.422300000000132e-05, 8.376400000000006e-05, 8.356900000000209e-05, 8.422300000000132e-05, 8.41110000000013e-05, 8.408299999999869e-05, 8.3846999999998e-05, 8.39859999999977e-05, 8.39720000000016e-05, 8.372200000000135e-05, 8.41249999999974e-05, 8.425000000000099e-05, 8.384700000000148e-05, 8.408299999999869e-05, 8.383299999999844e-05, 8.386100000000105e-05, 8.38330000000019e-05, 8.390299999999976e-05, 8.381999999999834e-05, 8.376400000000006e-05, 8.401400000000031e-05, 8.39309999999989e-05, 8.390199999999681e-05, 8.425000000000099e-05, 8.387500000000062e-05]</msg>
<status status="PASS" starttime="20201030 10:58:39.899" endtime="20201030 10:58:39.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.894" endtime="20201030 10:58:39.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.907" endtime="20201030 10:58:39.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.905" endtime="20201030 10:58:39.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.904" endtime="20201030 10:58:39.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.541" endtime="20201030 10:58:39.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.541" endtime="20201030 10:58:39.927"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.936" endtime="20201030 10:58:39.954"></status>
</kw>
<msg timestamp="20201030 10:58:39.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.934" endtime="20201030 10:58:39.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.955" endtime="20201030 10:58:39.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.958" endtime="20201030 10:58:39.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.932" endtime="20201030 10:58:39.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.930" endtime="20201030 10:58:39.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.967" endtime="20201030 10:58:40.252"></status>
</kw>
<msg timestamp="20201030 10:58:40.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.965" endtime="20201030 10:58:40.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.256" endtime="20201030 10:58:40.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.264" endtime="20201030 10:58:40.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.962" endtime="20201030 10:58:40.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.961" endtime="20201030 10:58:40.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.270" level="INFO">${RESULT} = [{'diff': 8.47920000000002e-05}, {'diff': 8.499999999999827e-05}, {'diff': 8.483399999999891e-05}, {'diff': 8.493000000000042e-05}, {'diff': 8.469499999999922e-05}, {'diff': 8.501400000000131e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:40.267" endtime="20201030 10:58:40.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.275" level="INFO">${ACCURACY} = {'diff': [8.47920000000002e-05, 8.499999999999827e-05, 8.483399999999891e-05, 8.493000000000042e-05, 8.469499999999922e-05, 8.501400000000131e-05, 8.49720000000026e-05, 8.487500000000162e-05, 8.451399...</msg>
<status status="PASS" starttime="20201030 10:58:40.271" endtime="20201030 10:58:40.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.280" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.279" endtime="20201030 10:58:40.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.282" level="INFO">VALUE: [8.47920000000002e-05, 8.499999999999827e-05, 8.483399999999891e-05, 8.493000000000042e-05, 8.469499999999922e-05, 8.501400000000131e-05, 8.49720000000026e-05, 8.487500000000162e-05, 8.451399999999734e-05, 8.51249999999984e-05, 8.520799999999981e-05, 8.522199999999938e-05, 8.502799999999741e-05, 8.486099999999858e-05, 8.4846999999999e-05, 8.497199999999913e-05, 8.491700000000033e-05, 8.506999999999959e-05, 8.526399999999809e-05, 8.511099999999883e-05, 8.477800000000063e-05, 8.476400000000106e-05, 8.526400000000156e-05, 8.51249999999984e-05, 8.500000000000174e-05, 8.495799999999956e-05, 8.491600000000085e-05, 8.508299999999969e-05, 8.486100000000205e-05, 8.491600000000085e-05, 8.491700000000033e-05, 8.473600000000192e-05, 8.47920000000002e-05, 8.470800000000278e-05, 8.49309999999999e-05, 8.5153000000001e-05, 8.494499999999947e-05, 8.520800000000328e-05, 8.49720000000026e-05, 8.477799999999716e-05, 8.505600000000002e-05, 8.49309999999999e-05, 8.475000000000149e-05, 8.498699999999818e-05, 8.499999999999827e-05, 8.487499999999815e-05, 8.522199999999938e-05, 8.490299999999729e-05, 8.51249999999984e-05, 8.501399999999784e-05]</msg>
<status status="PASS" starttime="20201030 10:58:40.281" endtime="20201030 10:58:40.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.276" endtime="20201030 10:58:40.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.287" endtime="20201030 10:58:40.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.286" endtime="20201030 10:58:40.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.285" endtime="20201030 10:58:40.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.928" endtime="20201030 10:58:40.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.928" endtime="20201030 10:58:40.308"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.317" endtime="20201030 10:58:40.335"></status>
</kw>
<msg timestamp="20201030 10:58:40.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.315" endtime="20201030 10:58:40.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.337" endtime="20201030 10:58:40.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.339" endtime="20201030 10:58:40.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.312" endtime="20201030 10:58:40.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.310" endtime="20201030 10:58:40.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.348" endtime="20201030 10:58:40.636"></status>
</kw>
<msg timestamp="20201030 10:58:40.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022152403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.346" endtime="20201030 10:58:40.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022152403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.640" endtime="20201030 10:58:40.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.649" endtime="20201030 10:58:40.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.344" endtime="20201030 10:58:40.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.342" endtime="20201030 10:58:40.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.656" level="INFO">${RESULT} = [{'diff': 8.566700000000108e-05}, {'diff': 8.588899999999872e-05}, {'diff': 8.582000000000034e-05}, {'diff': 8.580600000000077e-05}, {'diff': 8.620800000000081e-05}, {'diff': 8.619500000000072e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:40.653" endtime="20201030 10:58:40.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.660" level="INFO">${ACCURACY} = {'diff': [8.566700000000108e-05, 8.588899999999872e-05, 8.582000000000034e-05, 8.580600000000077e-05, 8.620800000000081e-05, 8.619500000000072e-05, 8.598699999999918e-05, 8.587499999999915e-05, 8.6222...</msg>
<status status="PASS" starttime="20201030 10:58:40.657" endtime="20201030 10:58:40.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.665" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.664" endtime="20201030 10:58:40.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.667" level="INFO">VALUE: [8.566700000000108e-05, 8.588899999999872e-05, 8.582000000000034e-05, 8.580600000000077e-05, 8.620800000000081e-05, 8.619500000000072e-05, 8.598699999999918e-05, 8.587499999999915e-05, 8.622200000000038e-05, 8.618000000000167e-05, 8.590199999999881e-05, 8.586099999999958e-05, 8.601399999999884e-05, 8.591599999999838e-05, 8.580600000000077e-05, 8.594400000000099e-05, 8.595800000000056e-05, 8.599999999999927e-05, 8.624999999999952e-05, 8.573699999999893e-05, 8.582000000000034e-05, 8.576399999999859e-05, 8.624999999999952e-05, 8.577799999999816e-05, 8.622200000000038e-05, 8.570800000000031e-05, 8.608299999999722e-05, 8.594400000000099e-05, 8.586099999999958e-05, 8.599999999999927e-05, 8.580499999999783e-05, 8.594400000000099e-05, 8.586099999999958e-05, 8.620800000000081e-05, 8.573599999999945e-05, 8.604200000000145e-05, 8.5847e-05, 8.61669999999981e-05, 8.573600000000292e-05, 8.607000000000059e-05, 8.586099999999958e-05, 8.576400000000206e-05, 8.572299999999936e-05, 8.586099999999958e-05, 8.605600000000102e-05, 8.620800000000081e-05, 8.577699999999869e-05, 8.625000000000299e-05, 8.577799999999816e-05, 8.572199999999988e-05]</msg>
<status status="PASS" starttime="20201030 10:58:40.666" endtime="20201030 10:58:40.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.661" endtime="20201030 10:58:40.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.673" endtime="20201030 10:58:40.692"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.671" endtime="20201030 10:58:40.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.670" endtime="20201030 10:58:40.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.309" endtime="20201030 10:58:40.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.308" endtime="20201030 10:58:40.693"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.702" endtime="20201030 10:58:40.722"></status>
</kw>
<msg timestamp="20201030 10:58:40.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.701" endtime="20201030 10:58:40.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.723" endtime="20201030 10:58:40.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.726" endtime="20201030 10:58:40.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.698" endtime="20201030 10:58:40.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.696" endtime="20201030 10:58:40.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.736" endtime="20201030 10:58:41.032"></status>
</kw>
<msg timestamp="20201030 10:58:41.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023348292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023435444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.734" endtime="20201030 10:58:41.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023348292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023435444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.042" endtime="20201030 10:58:41.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.062" endtime="20201030 10:58:41.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.731" endtime="20201030 10:58:41.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.729" endtime="20201030 10:58:41.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.076" level="INFO">${RESULT} = [{'diff': 8.715200000000006e-05}, {'diff': 8.705500000000255e-05}, {'diff': 8.708300000000169e-05}, {'diff': 8.725000000000052e-05}, {'diff': 8.709700000000126e-05}, {'diff': 8.709700000000126e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:41.069" endtime="20201030 10:58:41.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.086" level="INFO">${ACCURACY} = {'diff': [8.715200000000006e-05, 8.705500000000255e-05, 8.708300000000169e-05, 8.725000000000052e-05, 8.709700000000126e-05, 8.709700000000126e-05, 8.683300000000144e-05, 8.701399999999984e-05, 8.6778...</msg>
<status status="PASS" starttime="20201030 10:58:41.078" endtime="20201030 10:58:41.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.095" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.093" endtime="20201030 10:58:41.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.098" level="INFO">VALUE: [8.715200000000006e-05, 8.705500000000255e-05, 8.708300000000169e-05, 8.725000000000052e-05, 8.709700000000126e-05, 8.709700000000126e-05, 8.683300000000144e-05, 8.701399999999984e-05, 8.677800000000263e-05, 8.702799999999941e-05, 8.697200000000113e-05, 8.694399999999852e-05, 8.686100000000058e-05, 8.683299999999797e-05, 8.725000000000052e-05, 8.697200000000113e-05, 8.6944999999998e-05, 8.69860000000007e-05, 8.727700000000019e-05, 8.68050000000023e-05, 8.692999999999895e-05, 8.677699999999969e-05, 8.701300000000037e-05, 8.679099999999926e-05, 8.682000000000134e-05, 8.687500000000015e-05, 8.670799999999784e-05, 8.690299999999929e-05, 8.71250000000004e-05, 8.705600000000202e-05, 8.677799999999916e-05, 8.702799999999941e-05, 8.691700000000233e-05, 8.720899999999782e-05, 8.69860000000007e-05, 8.690299999999929e-05, 8.700000000000027e-05, 8.672200000000088e-05, 8.673699999999993e-05, 8.724999999999705e-05, 8.651299999999987e-05, 8.709699999999779e-05, 8.71250000000004e-05, 8.686100000000058e-05, 8.6944999999998e-05, 8.702799999999941e-05, 8.687500000000015e-05, 8.719399999999877e-05, 8.71250000000004e-05, 8.672200000000088e-05]</msg>
<status status="PASS" starttime="20201030 10:58:41.097" endtime="20201030 10:58:41.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.087" endtime="20201030 10:58:41.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.109" endtime="20201030 10:58:41.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.107" endtime="20201030 10:58:41.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.106" endtime="20201030 10:58:41.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.694" endtime="20201030 10:58:41.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.694" endtime="20201030 10:58:41.130"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.139" endtime="20201030 10:58:41.157"></status>
</kw>
<msg timestamp="20201030 10:58:41.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.137" endtime="20201030 10:58:41.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.158" endtime="20201030 10:58:41.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.161" endtime="20201030 10:58:41.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.134" endtime="20201030 10:58:41.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.132" endtime="20201030 10:58:41.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.170" endtime="20201030 10:58:41.456"></status>
</kw>
<msg timestamp="20201030 10:58:41.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02233675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:41.169" endtime="20201030 10:58:41.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02233675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:41.460" endtime="20201030 10:58:41.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.469" endtime="20201030 10:58:41.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.166" endtime="20201030 10:58:41.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.164" endtime="20201030 10:58:41.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.476" level="INFO">${RESULT} = [{'diff': 8.78189999999994e-05}, {'diff': 8.808300000000269e-05}, {'diff': 8.81250000000014e-05}, {'diff': 8.809700000000226e-05}, {'diff': 8.792999999999995e-05}, {'diff': 8.809699999999879e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:41.472" endtime="20201030 10:58:41.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.481" level="INFO">${ACCURACY} = {'diff': [8.78189999999994e-05, 8.808300000000269e-05, 8.81250000000014e-05, 8.809700000000226e-05, 8.792999999999995e-05, 8.809699999999879e-05, 8.816600000000063e-05, 8.808299999999922e-05, 8.826399...</msg>
<status status="PASS" starttime="20201030 10:58:41.477" endtime="20201030 10:58:41.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.486" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.484" endtime="20201030 10:58:41.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.488" level="INFO">VALUE: [8.78189999999994e-05, 8.808300000000269e-05, 8.81250000000014e-05, 8.809700000000226e-05, 8.792999999999995e-05, 8.809699999999879e-05, 8.816600000000063e-05, 8.808299999999922e-05, 8.826399999999762e-05, 8.811099999999836e-05, 8.797200000000213e-05, 8.775000000000102e-05, 8.815300000000054e-05, 8.775000000000102e-05, 8.805500000000008e-05, 8.806900000000312e-05, 8.809799999999826e-05, 8.804099999999704e-05, 8.769499999999875e-05, 8.769400000000274e-05, 8.793099999999943e-05, 8.783300000000244e-05, 8.779100000000026e-05, 8.812499999999793e-05, 8.787500000000115e-05, 8.815300000000054e-05, 8.827799999999719e-05, 8.770799999999884e-05, 8.818099999999968e-05, 8.805600000000302e-05, 8.781999999999887e-05, 8.770900000000179e-05, 8.795899999999857e-05, 8.815300000000054e-05, 8.805599999999955e-05, 8.802800000000041e-05, 8.790199999999734e-05, 8.798700000000118e-05, 8.805500000000008e-05, 8.805500000000008e-05, 8.772200000000188e-05, 8.779100000000026e-05, 8.802800000000041e-05, 8.811099999999836e-05, 8.783299999999897e-05, 8.805500000000008e-05, 8.822200000000238e-05, 8.783299999999897e-05, 8.777800000000016e-05, 8.775000000000102e-05]</msg>
<status status="PASS" starttime="20201030 10:58:41.487" endtime="20201030 10:58:41.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.482" endtime="20201030 10:58:41.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.493" endtime="20201030 10:58:41.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.492" endtime="20201030 10:58:41.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.490" endtime="20201030 10:58:41.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.131" endtime="20201030 10:58:41.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.130" endtime="20201030 10:58:41.514"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.523" endtime="20201030 10:58:41.541"></status>
</kw>
<msg timestamp="20201030 10:58:41.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.521" endtime="20201030 10:58:41.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.543" endtime="20201030 10:58:41.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.545" endtime="20201030 10:58:41.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.519" endtime="20201030 10:58:41.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.517" endtime="20201030 10:58:41.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.555" endtime="20201030 10:58:41.843"></status>
</kw>
<msg timestamp="20201030 10:58:41.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.553" endtime="20201030 10:58:41.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.848" endtime="20201030 10:58:41.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.856" endtime="20201030 10:58:41.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.550" endtime="20201030 10:58:41.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.549" endtime="20201030 10:58:41.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.863" level="INFO">${RESULT} = [{'diff': 8.872299999999889e-05}, {'diff': 8.887499999999868e-05}, {'diff': 8.897200000000313e-05}, {'diff': 8.880499999999736e-05}, {'diff': 8.869400000000027e-05}, {'diff': 8.879200000000073e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:41.859" endtime="20201030 10:58:41.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.867" level="INFO">${ACCURACY} = {'diff': [8.872299999999889e-05, 8.887499999999868e-05, 8.897200000000313e-05, 8.880499999999736e-05, 8.869400000000027e-05, 8.879200000000073e-05, 8.905500000000108e-05, 8.907000000000012e-05, 8.9042...</msg>
<status status="PASS" starttime="20201030 10:58:41.864" endtime="20201030 10:58:41.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.872" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.871" endtime="20201030 10:58:41.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.874" level="INFO">VALUE: [8.872299999999889e-05, 8.887499999999868e-05, 8.897200000000313e-05, 8.880499999999736e-05, 8.869400000000027e-05, 8.879200000000073e-05, 8.905500000000108e-05, 8.907000000000012e-05, 8.904200000000098e-05, 8.920800000000034e-05, 8.886099999999911e-05, 8.879200000000073e-05, 8.901399999999837e-05, 8.873600000000245e-05, 8.887500000000215e-05, 8.916699999999764e-05, 8.915299999999807e-05, 8.88060000000003e-05, 8.8945e-05, 8.905500000000108e-05, 8.900000000000227e-05, 8.91519999999986e-05, 8.906900000000065e-05, 8.924999999999905e-05, 8.906900000000065e-05, 8.91389999999985e-05, 8.908300000000022e-05, 8.865300000000104e-05, 8.874999999999855e-05, 8.88060000000003e-05, 8.902800000000141e-05, 8.918099999999721e-05, 8.872299999999889e-05, 8.872199999999941e-05, 8.877800000000116e-05, 8.893100000000043e-05, 8.91670000000011e-05, 8.883399999999944e-05, 8.890299999999782e-05, 8.929199999999776e-05, 8.888900000000172e-05, 8.883299999999997e-05, 8.870800000000331e-05, 8.911099999999936e-05, 8.873599999999898e-05, 8.908400000000316e-05, 8.886199999999858e-05, 8.911100000000283e-05, 8.924999999999905e-05, 8.909699999999979e-05]</msg>
<status status="PASS" starttime="20201030 10:58:41.873" endtime="20201030 10:58:41.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.868" endtime="20201030 10:58:41.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.879" endtime="20201030 10:58:41.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.878" endtime="20201030 10:58:41.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.877" endtime="20201030 10:58:41.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.515" endtime="20201030 10:58:41.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.514" endtime="20201030 10:58:41.900"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.909" endtime="20201030 10:58:41.929"></status>
</kw>
<msg timestamp="20201030 10:58:41.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.908" endtime="20201030 10:58:41.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.930" endtime="20201030 10:58:41.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.933" endtime="20201030 10:58:41.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.905" endtime="20201030 10:58:41.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.903" endtime="20201030 10:58:41.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.943" endtime="20201030 10:58:42.228"></status>
</kw>
<msg timestamp="20201030 10:58:42.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023376361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023466528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.941" endtime="20201030 10:58:42.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023376361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023466528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.233" endtime="20201030 10:58:42.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.241" endtime="20201030 10:58:42.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.938" endtime="20201030 10:58:42.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.936" endtime="20201030 10:58:42.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.248" level="INFO">${RESULT} = [{'diff': 9.01670000000021e-05}, {'diff': 9.022199999999744e-05}, {'diff': 9.012499999999993e-05}, {'diff': 8.974999999999955e-05}, {'diff': 9.011100000000036e-05}, {'diff': 8.993099999999796e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:42.245" endtime="20201030 10:58:42.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.252" level="INFO">${ACCURACY} = {'diff': [9.01670000000021e-05, 9.022199999999744e-05, 9.012499999999993e-05, 8.974999999999955e-05, 9.011100000000036e-05, 8.993099999999796e-05, 8.997300000000014e-05, 8.974999999999955e-05, 8.98200...</msg>
<status status="PASS" starttime="20201030 10:58:42.249" endtime="20201030 10:58:42.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.257" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.256" endtime="20201030 10:58:42.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.260" level="INFO">VALUE: [9.01670000000021e-05, 9.022199999999744e-05, 9.012499999999993e-05, 8.974999999999955e-05, 9.011100000000036e-05, 8.993099999999796e-05, 8.997300000000014e-05, 8.974999999999955e-05, 8.982000000000087e-05, 9.026400000000309e-05, 9.023600000000048e-05, 9.023600000000048e-05, 9.025000000000005e-05, 8.98190000000014e-05, 8.976399999999912e-05, 8.979200000000173e-05, 9.01389999999995e-05, 9.018099999999821e-05, 9.009699999999732e-05, 8.987499999999968e-05, 8.998600000000023e-05, 9.012499999999993e-05, 9.025000000000005e-05, 8.98060000000013e-05, 9.009800000000026e-05, 8.972200000000041e-05, 9.005600000000155e-05, 8.973599999999998e-05, 8.972200000000041e-05, 9.004099999999904e-05, 8.988900000000272e-05, 8.973599999999998e-05, 8.987499999999968e-05, 9.011100000000036e-05, 8.972200000000041e-05, 9.025000000000005e-05, 8.998600000000023e-05, 9.023600000000048e-05, 9.019500000000125e-05, 8.970900000000032e-05, 8.972200000000041e-05, 9.018100000000168e-05, 8.995900000000057e-05, 9.008400000000069e-05, 9.023699999999996e-05, 9.008400000000069e-05, 9.015300000000254e-05, 9.006900000000165e-05, 8.998600000000023e-05, 8.980500000000183e-05]</msg>
<status status="PASS" starttime="20201030 10:58:42.258" endtime="20201030 10:58:42.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.253" endtime="20201030 10:58:42.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.266" endtime="20201030 10:58:42.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.264" endtime="20201030 10:58:42.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.263" endtime="20201030 10:58:42.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.901" endtime="20201030 10:58:42.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.901" endtime="20201030 10:58:42.286"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.295" endtime="20201030 10:58:42.314"></status>
</kw>
<msg timestamp="20201030 10:58:42.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.294" endtime="20201030 10:58:42.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.315" endtime="20201030 10:58:42.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.318" endtime="20201030 10:58:42.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.291" endtime="20201030 10:58:42.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.289" endtime="20201030 10:58:42.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.327" endtime="20201030 10:58:42.614"></status>
</kw>
<msg timestamp="20201030 10:58:42.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.326" endtime="20201030 10:58:42.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.618" endtime="20201030 10:58:42.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.628" endtime="20201030 10:58:42.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.323" endtime="20201030 10:58:42.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.321" endtime="20201030 10:58:42.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.635" level="INFO">${RESULT} = [{'diff': 9.108399999999822e-05}, {'diff': 9.080499999999936e-05}, {'diff': 9.101400000000037e-05}, {'diff': 9.090200000000034e-05}, {'diff': 9.084700000000154e-05}, {'diff': 9.079099999999979e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:42.631" endtime="20201030 10:58:42.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.640" level="INFO">${ACCURACY} = {'diff': [9.108399999999822e-05, 9.080499999999936e-05, 9.101400000000037e-05, 9.090200000000034e-05, 9.084700000000154e-05, 9.079099999999979e-05, 9.072200000000141e-05, 9.120799999999887e-05, 9.1068...</msg>
<status status="PASS" starttime="20201030 10:58:42.636" endtime="20201030 10:58:42.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.644" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.643" endtime="20201030 10:58:42.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.647" level="INFO">VALUE: [9.108399999999822e-05, 9.080499999999936e-05, 9.101400000000037e-05, 9.090200000000034e-05, 9.084700000000154e-05, 9.079099999999979e-05, 9.072200000000141e-05, 9.120799999999887e-05, 9.106899999999918e-05, 9.112499999999746e-05, 9.073600000000098e-05, 9.122200000000191e-05, 9.094499999999853e-05, 9.127800000000019e-05, 9.070800000000184e-05, 9.087500000000068e-05, 9.098599999999776e-05, 9.129100000000029e-05, 9.072300000000089e-05, 9.112500000000093e-05, 9.077700000000022e-05, 9.066699999999914e-05, 9.094399999999905e-05, 9.077799999999969e-05, 9.120799999999887e-05, 9.070799999999837e-05, 9.054199999999901e-05, 9.116600000000016e-05, 9.072199999999794e-05, 9.113899999999703e-05, 9.091699999999939e-05, 9.123599999999801e-05, 9.116699999999964e-05, 9.070800000000184e-05, 9.126400000000062e-05, 9.075000000000055e-05, 9.123599999999801e-05, 9.093100000000243e-05, 9.077700000000022e-05, 9.104100000000004e-05, 9.10000000000008e-05, 9.104100000000004e-05, 9.084700000000154e-05, 9.108400000000169e-05, 9.092999999999948e-05, 9.10139999999969e-05, 9.101400000000037e-05, 9.070800000000184e-05, 9.102799999999994e-05, 9.116699999999964e-05]</msg>
<status status="PASS" starttime="20201030 10:58:42.646" endtime="20201030 10:58:42.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.641" endtime="20201030 10:58:42.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.652" endtime="20201030 10:58:42.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.651" endtime="20201030 10:58:42.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.649" endtime="20201030 10:58:42.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.287" endtime="20201030 10:58:42.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.287" endtime="20201030 10:58:42.673"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.682" endtime="20201030 10:58:42.700"></status>
</kw>
<msg timestamp="20201030 10:58:42.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.680" endtime="20201030 10:58:42.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.701" endtime="20201030 10:58:42.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.704" endtime="20201030 10:58:42.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.678" endtime="20201030 10:58:42.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.676" endtime="20201030 10:58:42.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.713" endtime="20201030 10:58:43.001"></status>
</kw>
<msg timestamp="20201030 10:58:43.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.712" endtime="20201030 10:58:43.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.005" endtime="20201030 10:58:43.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.013" endtime="20201030 10:58:43.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.709" endtime="20201030 10:58:43.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.707" endtime="20201030 10:58:43.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.020" level="INFO">${RESULT} = [{'diff': 9.199999999999833e-05}, {'diff': 9.174999999999808e-05}, {'diff': 9.213899999999803e-05}, {'diff': 9.223599999999901e-05}, {'diff': 9.226399999999815e-05}, {'diff': 9.191700000000039e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:43.017" endtime="20201030 10:58:43.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.026" level="INFO">${ACCURACY} = {'diff': [9.199999999999833e-05, 9.174999999999808e-05, 9.213899999999803e-05, 9.223599999999901e-05, 9.226399999999815e-05, 9.191700000000039e-05, 9.180599999999983e-05, 9.186200000000158e-05, 9.1777...</msg>
<status status="PASS" starttime="20201030 10:58:43.021" endtime="20201030 10:58:43.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.030" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.029" endtime="20201030 10:58:43.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.033" level="INFO">VALUE: [9.199999999999833e-05, 9.174999999999808e-05, 9.213899999999803e-05, 9.223599999999901e-05, 9.226399999999815e-05, 9.191700000000039e-05, 9.180599999999983e-05, 9.186200000000158e-05, 9.177700000000122e-05, 9.193000000000048e-05, 9.205500000000061e-05, 9.191600000000091e-05, 9.218000000000073e-05, 9.191600000000091e-05, 9.194400000000005e-05, 9.172200000000241e-05, 9.204199999999704e-05, 9.177800000000069e-05, 9.186099999999864e-05, 9.190299999999735e-05, 9.186099999999864e-05, 9.206999999999965e-05, 9.187499999999821e-05, 9.198599999999876e-05, 9.190300000000082e-05, 9.179200000000026e-05, 9.206900000000018e-05, 9.223599999999901e-05, 9.172199999999894e-05, 9.226400000000162e-05, 9.198600000000223e-05, 9.204100000000104e-05, 9.206900000000018e-05, 9.21390000000015e-05, 9.184700000000254e-05, 9.215300000000107e-05, 9.191700000000039e-05, 9.198600000000223e-05, 9.222199999999944e-05, 9.209700000000279e-05, 9.169499999999928e-05, 9.226400000000162e-05, 9.18199999999994e-05, 9.179199999999679e-05, 9.194400000000005e-05, 9.186099999999864e-05, 9.194400000000005e-05, 9.190199999999787e-05, 9.19719999999992e-05, 9.198599999999876e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.031" endtime="20201030 10:58:43.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.027" endtime="20201030 10:58:43.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.038" endtime="20201030 10:58:43.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.037" endtime="20201030 10:58:43.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.035" endtime="20201030 10:58:43.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.674" endtime="20201030 10:58:43.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.673" endtime="20201030 10:58:43.059"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.068" endtime="20201030 10:58:43.090"></status>
</kw>
<msg timestamp="20201030 10:58:43.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.066" endtime="20201030 10:58:43.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.092" endtime="20201030 10:58:43.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.095" endtime="20201030 10:58:43.096"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.064" endtime="20201030 10:58:43.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.062" endtime="20201030 10:58:43.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.104" endtime="20201030 10:58:43.390"></status>
</kw>
<msg timestamp="20201030 10:58:43.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025925417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026018014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.103" endtime="20201030 10:58:43.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025925417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026018014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.394" endtime="20201030 10:58:43.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.403" endtime="20201030 10:58:43.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.100" endtime="20201030 10:58:43.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.098" endtime="20201030 10:58:43.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.410" level="INFO">${RESULT} = [{'diff': 9.259699999999982e-05}, {'diff': 9.276400000000212e-05}, {'diff': 9.291700000000139e-05}, {'diff': 9.305599999999761e-05}, {'diff': 9.298599999999976e-05}, {'diff': 9.29720000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:43.406" endtime="20201030 10:58:43.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.414" level="INFO">${ACCURACY} = {'diff': [9.259699999999982e-05, 9.276400000000212e-05, 9.291700000000139e-05, 9.305599999999761e-05, 9.298599999999976e-05, 9.29720000000002e-05, 9.31529999999986e-05, 9.297299999999967e-05, 9.325000...</msg>
<status status="PASS" starttime="20201030 10:58:43.411" endtime="20201030 10:58:43.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.419" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.417" endtime="20201030 10:58:43.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.421" level="INFO">VALUE: [9.259699999999982e-05, 9.276400000000212e-05, 9.291700000000139e-05, 9.305599999999761e-05, 9.298599999999976e-05, 9.29720000000002e-05, 9.31529999999986e-05, 9.297299999999967e-05, 9.325000000000305e-05, 9.311199999999936e-05, 9.304100000000204e-05, 9.267999999999776e-05, 9.280499999999789e-05, 9.318000000000173e-05, 9.288899999999878e-05, 9.305499999999814e-05, 9.291700000000139e-05, 9.311099999999989e-05, 9.274999999999908e-05, 9.324999999999958e-05, 9.327800000000219e-05, 9.299999999999933e-05, 9.290300000000182e-05, 9.291700000000139e-05, 9.313899999999903e-05, 9.297299999999967e-05, 9.297299999999967e-05, 9.31529999999986e-05, 9.291599999999844e-05, 9.306899999999771e-05, 9.29720000000002e-05, 9.294400000000105e-05, 9.304200000000151e-05, 9.272199999999994e-05, 9.318100000000121e-05, 9.322200000000044e-05, 9.266699999999767e-05, 9.293100000000096e-05, 9.284700000000007e-05, 9.266699999999767e-05, 9.277699999999875e-05, 9.318100000000121e-05, 9.309799999999979e-05, 9.316700000000164e-05, 9.316700000000164e-05, 9.309700000000032e-05, 9.291599999999844e-05, 9.276400000000212e-05, 9.298599999999976e-05, 9.291700000000139e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.420" endtime="20201030 10:58:43.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.415" endtime="20201030 10:58:43.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.428" endtime="20201030 10:58:43.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.427" endtime="20201030 10:58:43.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.425" endtime="20201030 10:58:43.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.060" endtime="20201030 10:58:43.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.059" endtime="20201030 10:58:43.449"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.458" endtime="20201030 10:58:43.477"></status>
</kw>
<msg timestamp="20201030 10:58:43.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.456" endtime="20201030 10:58:43.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.478" endtime="20201030 10:58:43.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.481" endtime="20201030 10:58:43.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.454" endtime="20201030 10:58:43.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.451" endtime="20201030 10:58:43.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.490" endtime="20201030 10:58:43.776"></status>
</kw>
<msg timestamp="20201030 10:58:43.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022871903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.489" endtime="20201030 10:58:43.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022871903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.780" endtime="20201030 10:58:43.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.788" endtime="20201030 10:58:43.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.486" endtime="20201030 10:58:43.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.484" endtime="20201030 10:58:43.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.795" level="INFO">${RESULT} = [{'diff': 9.402799999999947e-05}, {'diff': 9.409700000000132e-05}, {'diff': 9.390299999999935e-05}, {'diff': 9.377700000000322e-05}, {'diff': 9.413800000000055e-05}, {'diff': 9.39590000000011e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:43.792" endtime="20201030 10:58:43.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.800" level="INFO">${ACCURACY} = {'diff': [9.402799999999947e-05, 9.409700000000132e-05, 9.390299999999935e-05, 9.377700000000322e-05, 9.413800000000055e-05, 9.39590000000011e-05, 9.391600000000291e-05, 9.423600000000101e-05, 9.37219...</msg>
<status status="PASS" starttime="20201030 10:58:43.796" endtime="20201030 10:58:43.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.805" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.804" endtime="20201030 10:58:43.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.808" level="INFO">VALUE: [9.402799999999947e-05, 9.409700000000132e-05, 9.390299999999935e-05, 9.377700000000322e-05, 9.413800000000055e-05, 9.39590000000011e-05, 9.391600000000291e-05, 9.423600000000101e-05, 9.372199999999747e-05, 9.402799999999947e-05, 9.39720000000012e-05, 9.423600000000101e-05, 9.402799999999947e-05, 9.405599999999861e-05, 9.391700000000239e-05, 9.376399999999965e-05, 9.377800000000269e-05, 9.425000000000058e-05, 9.405599999999861e-05, 9.411200000000036e-05, 9.38469999999976e-05, 9.377699999999975e-05, 9.39720000000012e-05, 9.395799999999815e-05, 9.423599999999754e-05, 9.391599999999944e-05, 9.426400000000015e-05, 9.408300000000175e-05, 9.391699999999892e-05, 9.376399999999965e-05, 9.379099999999932e-05, 9.405599999999861e-05, 9.420900000000135e-05, 9.408299999999828e-05, 9.388900000000325e-05, 9.38200000000014e-05, 9.369499999999781e-05, 9.392999999999901e-05, 9.381900000000193e-05, 9.375000000000008e-05, 9.387500000000021e-05, 9.379099999999932e-05, 9.390299999999935e-05, 9.377800000000269e-05, 9.411099999999742e-05, 9.426400000000015e-05, 9.373600000000051e-05, 9.373600000000051e-05, 9.391700000000239e-05, 9.386100000000064e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.806" endtime="20201030 10:58:43.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.801" endtime="20201030 10:58:43.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.813" endtime="20201030 10:58:43.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.811" endtime="20201030 10:58:43.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.810" endtime="20201030 10:58:43.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.450" endtime="20201030 10:58:43.833"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.449" endtime="20201030 10:58:43.833"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.842" endtime="20201030 10:58:43.861"></status>
</kw>
<msg timestamp="20201030 10:58:43.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.841" endtime="20201030 10:58:43.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.862" endtime="20201030 10:58:43.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.865" endtime="20201030 10:58:43.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.838" endtime="20201030 10:58:43.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.836" endtime="20201030 10:58:43.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.874" endtime="20201030 10:58:44.162"></status>
</kw>
<msg timestamp="20201030 10:58:44.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.873" endtime="20201030 10:58:44.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.167" endtime="20201030 10:58:44.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.175" endtime="20201030 10:58:44.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.870" endtime="20201030 10:58:44.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.868" endtime="20201030 10:58:44.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.182" level="INFO">${RESULT} = [{'diff': 9.490300000000035e-05}, {'diff': 9.518000000000026e-05}, {'diff': 9.490299999999688e-05}, {'diff': 9.493100000000296e-05}, {'diff': 9.484700000000207e-05}, {'diff': 9.48330000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:44.179" endtime="20201030 10:58:44.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.186" level="INFO">${ACCURACY} = {'diff': [9.490300000000035e-05, 9.518000000000026e-05, 9.490299999999688e-05, 9.493100000000296e-05, 9.484700000000207e-05, 9.48330000000025e-05, 9.479199999999979e-05, 9.500000000000133e-05, 9.48059...</msg>
<status status="PASS" starttime="20201030 10:58:44.183" endtime="20201030 10:58:44.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.191" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.190" endtime="20201030 10:58:44.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.194" level="INFO">VALUE: [9.490300000000035e-05, 9.518000000000026e-05, 9.490299999999688e-05, 9.493100000000296e-05, 9.484700000000207e-05, 9.48330000000025e-05, 9.479199999999979e-05, 9.500000000000133e-05, 9.480599999999936e-05, 9.505599999999961e-05, 9.501399999999743e-05, 9.484799999999807e-05, 9.48469999999986e-05, 9.469399999999933e-05, 9.501300000000143e-05, 9.475000000000108e-05, 9.519399999999983e-05, 9.52079999999994e-05, 9.519399999999983e-05, 9.512499999999799e-05, 9.504200000000004e-05, 9.512499999999799e-05, 9.452799999999997e-05, 9.516700000000017e-05, 9.498600000000176e-05, 9.533299999999953e-05, 9.491699999999992e-05, 9.505599999999961e-05, 9.474999999999761e-05, 9.481899999999946e-05, 9.49729999999982e-05, 9.523600000000201e-05, 9.479099999999685e-05, 9.523600000000201e-05, 9.518000000000026e-05, 9.524999999999811e-05, 9.47079999999989e-05, 9.479199999999979e-05, 9.52079999999994e-05, 9.497199999999872e-05, 9.490299999999688e-05, 9.49859999999983e-05, 9.498600000000176e-05, 9.530500000000039e-05, 9.469500000000228e-05, 9.494499999999906e-05, 9.523599999999854e-05, 9.491699999999992e-05, 9.509699999999885e-05, 9.47079999999989e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.192" endtime="20201030 10:58:44.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.187" endtime="20201030 10:58:44.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.199" endtime="20201030 10:58:44.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.197" endtime="20201030 10:58:44.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.196" endtime="20201030 10:58:44.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.834" endtime="20201030 10:58:44.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.834" endtime="20201030 10:58:44.220"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.230" endtime="20201030 10:58:44.250"></status>
</kw>
<msg timestamp="20201030 10:58:44.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.228" endtime="20201030 10:58:44.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.251" endtime="20201030 10:58:44.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.254" endtime="20201030 10:58:44.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.225" endtime="20201030 10:58:44.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.222" endtime="20201030 10:58:44.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.263" endtime="20201030 10:58:44.549"></status>
</kw>
<msg timestamp="20201030 10:58:44.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024329958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024426264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.262" endtime="20201030 10:58:44.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024329958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024426264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.553" endtime="20201030 10:58:44.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.562" endtime="20201030 10:58:44.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.259" endtime="20201030 10:58:44.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.257" endtime="20201030 10:58:44.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.568" level="INFO">${RESULT} = [{'diff': 9.630600000000086e-05}, {'diff': 9.624999999999911e-05}, {'diff': 9.627800000000172e-05}, {'diff': 9.590300000000135e-05}, {'diff': 9.618099999999727e-05}, {'diff': 9.61799999999978e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:44.565" endtime="20201030 10:58:44.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.573" level="INFO">${ACCURACY} = {'diff': [9.630600000000086e-05, 9.624999999999911e-05, 9.627800000000172e-05, 9.590300000000135e-05, 9.618099999999727e-05, 9.61799999999978e-05, 9.590299999999788e-05, 9.599999999999886e-05, 9.60140...</msg>
<status status="PASS" starttime="20201030 10:58:44.569" endtime="20201030 10:58:44.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.577" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.576" endtime="20201030 10:58:44.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.580" level="INFO">VALUE: [9.630600000000086e-05, 9.624999999999911e-05, 9.627800000000172e-05, 9.590300000000135e-05, 9.618099999999727e-05, 9.61799999999978e-05, 9.590299999999788e-05, 9.599999999999886e-05, 9.60140000000019e-05, 9.612499999999899e-05, 9.605499999999767e-05, 9.593000000000101e-05, 9.624999999999911e-05, 9.604200000000104e-05, 9.576400000000165e-05, 9.613899999999856e-05, 9.58339999999995e-05, 9.616700000000117e-05, 9.618100000000074e-05, 9.627800000000172e-05, 9.59859999999993e-05, 9.573599999999904e-05, 9.583300000000003e-05, 9.607000000000018e-05, 9.616599999999823e-05, 9.597199999999972e-05, 9.616599999999823e-05, 9.59859999999993e-05, 9.573599999999904e-05, 9.583300000000003e-05, 9.576399999999818e-05, 9.587499999999874e-05, 9.568100000000024e-05, 9.61530000000016e-05, 9.572199999999947e-05, 9.623600000000301e-05, 9.613799999999909e-05, 9.574999999999861e-05, 9.587500000000221e-05, 9.61530000000016e-05, 9.6027999999998e-05, 9.587499999999874e-05, 9.579100000000132e-05, 9.6027000000002e-05, 9.604100000000157e-05, 9.555600000000011e-05, 9.624999999999911e-05, 9.619399999999736e-05, 9.597199999999972e-05, 9.587499999999874e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.578" endtime="20201030 10:58:44.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.573" endtime="20201030 10:58:44.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.586" endtime="20201030 10:58:44.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.584" endtime="20201030 10:58:44.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.583" endtime="20201030 10:58:44.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.221" endtime="20201030 10:58:44.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.220" endtime="20201030 10:58:44.607"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.616" endtime="20201030 10:58:44.634"></status>
</kw>
<msg timestamp="20201030 10:58:44.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.614" endtime="20201030 10:58:44.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.636" endtime="20201030 10:58:44.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.638" endtime="20201030 10:58:44.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.611" endtime="20201030 10:58:44.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.609" endtime="20201030 10:58:44.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.648" endtime="20201030 10:58:44.934"></status>
</kw>
<msg timestamp="20201030 10:58:44.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.646" endtime="20201030 10:58:44.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.938" endtime="20201030 10:58:44.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.947" endtime="20201030 10:58:44.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.643" endtime="20201030 10:58:44.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.641" endtime="20201030 10:58:44.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.953" level="INFO">${RESULT} = [{'diff': 9.649999999999936e-05}, {'diff': 9.699999999999986e-05}, {'diff': 9.708300000000128e-05}, {'diff': 9.679199999999832e-05}, {'diff': 9.669500000000081e-05}, {'diff': 9.699999999999986e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:44.950" endtime="20201030 10:58:44.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.959" level="INFO">${ACCURACY} = {'diff': [9.649999999999936e-05, 9.699999999999986e-05, 9.708300000000128e-05, 9.679199999999832e-05, 9.669500000000081e-05, 9.699999999999986e-05, 9.699999999999986e-05, 9.715299999999913e-05, 9.7111...</msg>
<status status="PASS" starttime="20201030 10:58:44.954" endtime="20201030 10:58:44.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.964" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.963" endtime="20201030 10:58:44.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.967" level="INFO">VALUE: [9.649999999999936e-05, 9.699999999999986e-05, 9.708300000000128e-05, 9.679199999999832e-05, 9.669500000000081e-05, 9.699999999999986e-05, 9.699999999999986e-05, 9.715299999999913e-05, 9.711199999999989e-05, 9.679099999999885e-05, 9.694400000000158e-05, 9.688899999999931e-05, 9.683300000000103e-05, 9.690299999999888e-05, 9.7027999999999e-05, 9.720799999999793e-05, 9.68470000000006e-05, 9.725000000000011e-05, 9.690299999999888e-05, 9.68340000000005e-05, 9.718099999999827e-05, 9.691700000000192e-05, 9.672299999999995e-05, 9.69730000000002e-05, 9.713899999999956e-05, 9.709699999999738e-05, 9.708300000000128e-05, 9.692999999999855e-05, 9.680499999999842e-05, 9.706900000000171e-05, 9.687499999999974e-05, 9.722200000000097e-05, 9.725000000000011e-05, 9.690300000000235e-05, 9.725000000000011e-05, 9.699999999999986e-05, 9.725000000000011e-05, 9.672200000000047e-05, 9.681999999999746e-05, 9.670900000000038e-05, 9.677799999999875e-05, 9.668100000000124e-05, 9.701399999999943e-05, 9.7027999999999e-05, 9.680499999999842e-05, 9.711100000000042e-05, 9.676399999999918e-05, 9.719400000000183e-05, 9.679099999999885e-05, 9.715299999999913e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.965" endtime="20201030 10:58:44.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.960" endtime="20201030 10:58:44.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.973" endtime="20201030 10:58:44.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.971" endtime="20201030 10:58:44.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.969" endtime="20201030 10:58:44.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.608" endtime="20201030 10:58:44.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.607" endtime="20201030 10:58:44.993"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.003" endtime="20201030 10:58:45.021"></status>
</kw>
<msg timestamp="20201030 10:58:45.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.001" endtime="20201030 10:58:45.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.023" endtime="20201030 10:58:45.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.027" endtime="20201030 10:58:45.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.998" endtime="20201030 10:58:45.029"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.996" endtime="20201030 10:58:45.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.036" endtime="20201030 10:58:45.321"></status>
</kw>
<msg timestamp="20201030 10:58:45.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.034" endtime="20201030 10:58:45.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.326" endtime="20201030 10:58:45.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.340" endtime="20201030 10:58:45.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.031" endtime="20201030 10:58:45.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.030" endtime="20201030 10:58:45.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.353" level="INFO">${RESULT} = [{'diff': 9.758300000000178e-05}, {'diff': 9.813900000000056e-05}, {'diff': 9.820799999999894e-05}, {'diff': 9.812500000000099e-05}, {'diff': 9.807000000000218e-05}, {'diff': 9.784800000000107e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:45.347" endtime="20201030 10:58:45.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.363" level="INFO">${ACCURACY} = {'diff': [9.758300000000178e-05, 9.813900000000056e-05, 9.820799999999894e-05, 9.812500000000099e-05, 9.807000000000218e-05, 9.784800000000107e-05, 9.812500000000099e-05, 9.815300000000013e-05, 9.8237...</msg>
<status status="PASS" starttime="20201030 10:58:45.356" endtime="20201030 10:58:45.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.372" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.370" endtime="20201030 10:58:45.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.377" level="INFO">VALUE: [9.758300000000178e-05, 9.813900000000056e-05, 9.820799999999894e-05, 9.812500000000099e-05, 9.807000000000218e-05, 9.784800000000107e-05, 9.812500000000099e-05, 9.815300000000013e-05, 9.823700000000102e-05, 9.78470000000016e-05, 9.819399999999937e-05, 9.794399999999912e-05, 9.774999999999714e-05, 9.833399999999853e-05, 9.770799999999843e-05, 9.78609999999977e-05, 9.770799999999843e-05, 9.822200000000197e-05, 9.800000000000086e-05, 9.770899999999791e-05, 9.794399999999912e-05, 9.787500000000074e-05, 9.812500000000099e-05, 9.795899999999816e-05, 9.797299999999773e-05, 9.787500000000074e-05, 9.79860000000013e-05, 9.797200000000172e-05, 9.801400000000043e-05, 9.79999999999974e-05, 9.792999999999955e-05, 9.794399999999912e-05, 9.786100000000117e-05, 9.79999999999974e-05, 9.772200000000147e-05, 9.772200000000147e-05, 9.777799999999975e-05, 9.774999999999714e-05, 9.787500000000074e-05, 9.770900000000138e-05, 9.793099999999902e-05, 9.792999999999955e-05, 9.826299999999774e-05, 9.776400000000018e-05, 9.800000000000086e-05, 9.797199999999825e-05, 9.770799999999843e-05, 9.777799999999975e-05, 9.824999999999764e-05, 9.805499999999967e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.374" endtime="20201030 10:58:45.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.364" endtime="20201030 10:58:45.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.387" endtime="20201030 10:58:45.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.384" endtime="20201030 10:58:45.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.381" endtime="20201030 10:58:45.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.994" endtime="20201030 10:58:45.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.994" endtime="20201030 10:58:45.411"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.429" endtime="20201030 10:58:45.452"></status>
</kw>
<msg timestamp="20201030 10:58:45.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.426" endtime="20201030 10:58:45.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.453" endtime="20201030 10:58:45.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.456" endtime="20201030 10:58:45.457"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.421" endtime="20201030 10:58:45.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.417" endtime="20201030 10:58:45.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.465" endtime="20201030 10:58:45.750"></status>
</kw>
<msg timestamp="20201030 10:58:45.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037059889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037158583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.463" endtime="20201030 10:58:45.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037059889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037158583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.754" endtime="20201030 10:58:45.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.762" endtime="20201030 10:58:45.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.461" endtime="20201030 10:58:45.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.459" endtime="20201030 10:58:45.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.769" level="INFO">${RESULT} = [{'diff': 9.869400000000333e-05}, {'diff': 9.879100000000085e-05}, {'diff': 9.913900000000503e-05}, {'diff': 9.883299999999956e-05}, {'diff': 9.894400000000358e-05}, {'diff': 9.87080000000029e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:45.765" endtime="20201030 10:58:45.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.773" level="INFO">${ACCURACY} = {'diff': [9.869400000000333e-05, 9.879100000000085e-05, 9.913900000000503e-05, 9.883299999999956e-05, 9.894400000000358e-05, 9.87080000000029e-05, 9.893100000000349e-05, 9.909699999999938e-05, 9.90560...</msg>
<status status="PASS" starttime="20201030 10:58:45.770" endtime="20201030 10:58:45.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.777" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.776" endtime="20201030 10:58:45.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.780" level="INFO">VALUE: [9.869400000000333e-05, 9.879100000000085e-05, 9.913900000000503e-05, 9.883299999999956e-05, 9.894400000000358e-05, 9.87080000000029e-05, 9.893100000000349e-05, 9.909699999999938e-05, 9.905600000000014e-05, 9.891699999999698e-05, 9.913899999999809e-05, 9.897200000000272e-05, 9.879200000000032e-05, 9.904200000000057e-05, 9.888899999999784e-05, 9.911099999999895e-05, 9.905500000000067e-05, 9.881899999999999e-05, 9.915199999999819e-05, 9.918000000000426e-05, 9.91939999999969e-05, 9.876400000000118e-05, 9.86939999999964e-05, 9.854200000000007e-05, 9.92359999999956e-05, 9.916700000000417e-05, 9.912499999999852e-05, 9.894500000000306e-05, 9.909799999999885e-05, 9.911100000000589e-05, 9.883399999999903e-05, 9.876400000000118e-05, 9.901400000000143e-05, 9.884699999999913e-05, 9.902700000000153e-05, 9.905499999999373e-05, 9.851400000000093e-05, 9.905499999999373e-05, 9.925000000000211e-05, 9.88609999999987e-05, 9.926400000000168e-05, 9.904200000000057e-05, 9.888899999999784e-05, 9.919499999999637e-05, 9.927700000000178e-05, 9.877800000000075e-05, 9.890300000000435e-05, 9.919499999999637e-05, 9.872300000000195e-05, 9.869499999999587e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.778" endtime="20201030 10:58:45.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.773" endtime="20201030 10:58:45.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.785" endtime="20201030 10:58:45.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.784" endtime="20201030 10:58:45.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.783" endtime="20201030 10:58:45.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.413" endtime="20201030 10:58:45.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.412" endtime="20201030 10:58:45.806"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.815" endtime="20201030 10:58:45.834"></status>
</kw>
<msg timestamp="20201030 10:58:45.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.813" endtime="20201030 10:58:45.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.835" endtime="20201030 10:58:45.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.838" endtime="20201030 10:58:45.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.810" endtime="20201030 10:58:45.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.808" endtime="20201030 10:58:45.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.846" endtime="20201030 10:58:46.132"></status>
</kw>
<msg timestamp="20201030 10:58:46.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.845" endtime="20201030 10:58:46.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.136" endtime="20201030 10:58:46.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.144" endtime="20201030 10:58:46.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.842" endtime="20201030 10:58:46.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.841" endtime="20201030 10:58:46.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.158" level="INFO">${RESULT} = [{'diff': 0.00010030499999999845}, {'diff': 9.997200000000026e-05}, {'diff': 9.988900000000231e-05}, {'diff': 9.977800000000175e-05}, {'diff': 9.983300000000056e-05}, {'diff': 9.987499999999927e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:46.151" endtime="20201030 10:58:46.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.170" level="INFO">${ACCURACY} = {'diff': [0.00010030499999999845, 9.997200000000026e-05, 9.988900000000231e-05, 9.977800000000175e-05, 9.983300000000056e-05, 9.987499999999927e-05, 0.00010009699999999691, 9.979200000000132e-05, 0.00...</msg>
<status status="PASS" starttime="20201030 10:58:46.161" endtime="20201030 10:58:46.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.179" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.177" endtime="20201030 10:58:46.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.185" level="INFO">VALUE: [0.00010030499999999845, 9.997200000000026e-05, 9.988900000000231e-05, 9.977800000000175e-05, 9.983300000000056e-05, 9.987499999999927e-05, 0.00010009699999999691, 9.979200000000132e-05, 0.00010020900000000041, 0.00010002700000000253, 0.00010011099999999995, 0.00010011099999999995, 9.9819999999997e-05, 9.969400000000087e-05, 9.997200000000026e-05, 0.00010009700000000038, 0.00010005500000000167, 9.976400000000218e-05, 9.984700000000013e-05, 9.974999999999914e-05, 0.00010008300000000081, 9.98609999999997e-05, 9.987499999999927e-05, 9.968100000000077e-05, 0.00010020800000000094, 0.0001002220000000005, 9.995800000000069e-05, 0.00010001399999999896, 9.993100000000102e-05, 0.00010005500000000167, 9.977699999999881e-05, 0.00010006900000000124, 9.984700000000013e-05, 0.00010009700000000038, 9.96800000000013e-05, 0.00010004099999999863, 9.990299999999841e-05, 0.00010011099999999995, 9.984700000000013e-05, 9.973599999999957e-05, 9.98609999999997e-05, 9.970899999999991e-05, 0.00010023600000000008, 0.00010001299999999949, 0.00010020900000000041, 9.952799999999803e-05, 0.00010002699999999906, 9.988800000000284e-05, 0.00010024999999999964, 9.995800000000069e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.182" endtime="20201030 10:58:46.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.172" endtime="20201030 10:58:46.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.201" endtime="20201030 10:58:46.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.198" endtime="20201030 10:58:46.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.196" endtime="20201030 10:58:46.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.807" endtime="20201030 10:58:46.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.806" endtime="20201030 10:58:46.227"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.245" endtime="20201030 10:58:46.265"></status>
</kw>
<msg timestamp="20201030 10:58:46.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.242" endtime="20201030 10:58:46.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.267" endtime="20201030 10:58:46.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.269" endtime="20201030 10:58:46.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.237" endtime="20201030 10:58:46.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.232" endtime="20201030 10:58:46.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.278" endtime="20201030 10:58:46.564"></status>
</kw>
<msg timestamp="20201030 10:58:46.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036259361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036360125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.277" endtime="20201030 10:58:46.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036259361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036360125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.568" endtime="20201030 10:58:46.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.577" endtime="20201030 10:58:46.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.274" endtime="20201030 10:58:46.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.272" endtime="20201030 10:58:46.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.583" level="INFO">${RESULT} = [{'diff': 0.00010076400000000318}, {'diff': 0.00010074999999999668}, {'diff': 0.00010115299999999966}, {'diff': 0.000101028000000003}, {'diff': 0.0001009730000000042}, {'diff': 0.00010109700000000138}...</msg>
<status status="PASS" starttime="20201030 10:58:46.580" endtime="20201030 10:58:46.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.587" level="INFO">${ACCURACY} = {'diff': [0.00010076400000000318, 0.00010074999999999668, 0.00010115299999999966, 0.000101028000000003, 0.0001009730000000042, 0.00010109700000000138, 0.00010076399999999625, 0.00010111100000000095, 0...</msg>
<status status="PASS" starttime="20201030 10:58:46.584" endtime="20201030 10:58:46.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.591" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.590" endtime="20201030 10:58:46.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.594" level="INFO">VALUE: [0.00010076400000000318, 0.00010074999999999668, 0.00010115299999999966, 0.000101028000000003, 0.0001009730000000042, 0.00010109700000000138, 0.00010076399999999625, 0.00010111100000000095, 0.00010088899999999984, 0.00010113900000000009, 0.00010117999999999933, 0.00010095799999999822, 0.00010117999999999933, 0.00010092999999999908, 0.0001009860000000043, 0.00010065299999999916, 0.00010108300000000181, 0.00010052799999999557, 0.00010123700000000402, 0.00010075000000000361, 0.00010087500000000027, 0.0001008480000000006, 0.00010102799999999607, 0.00010099999999999693, 0.00010084700000000113, 0.00010069500000000481, 0.00010087500000000027, 0.00010111100000000095, 0.00010088899999999984, 0.0001011939999999989, 0.00010097200000000472, 0.00010117999999999933, 0.00010095799999999822, 0.00010104199999999564, 0.0001006939999999984, 0.00010113900000000009, 0.00010109700000000138, 0.00010070899999999744, 0.00010108400000000128, 0.00010066699999999873, 0.00010090199999999994, 0.00010115299999999966, 0.00010105600000000214, 0.0001011939999999989, 0.00010095799999999822, 0.00010111100000000095, 0.00010112500000000052, 0.00010088899999999984, 0.00010070799999999797, 0.00010126399999999675]</msg>
<status status="PASS" starttime="20201030 10:58:46.592" endtime="20201030 10:58:46.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.588" endtime="20201030 10:58:46.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.599" endtime="20201030 10:58:46.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.597" endtime="20201030 10:58:46.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.596" endtime="20201030 10:58:46.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.229" endtime="20201030 10:58:46.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.228" endtime="20201030 10:58:46.619"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.628" endtime="20201030 10:58:46.650"></status>
</kw>
<msg timestamp="20201030 10:58:46.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.626" endtime="20201030 10:58:46.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.652" endtime="20201030 10:58:46.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.654" endtime="20201030 10:58:46.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.624" endtime="20201030 10:58:46.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.622" endtime="20201030 10:58:46.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.663" endtime="20201030 10:58:46.949"></status>
</kw>
<msg timestamp="20201030 10:58:46.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025076556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025178389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.662" endtime="20201030 10:58:46.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025076556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025178389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.953" endtime="20201030 10:58:46.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.961" endtime="20201030 10:58:46.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.659" endtime="20201030 10:58:46.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.657" endtime="20201030 10:58:46.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.968" level="INFO">${RESULT} = [{'diff': 0.00010183299999999909}, {'diff': 0.00010219499999999937}, {'diff': 0.00010219499999999937}, {'diff': 0.00010193099999999955}, {'diff': 0.00010205599999999967}, {'diff': 0.000102042000000000...</msg>
<status status="PASS" starttime="20201030 10:58:46.965" endtime="20201030 10:58:46.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.972" level="INFO">${ACCURACY} = {'diff': [0.00010183299999999909, 0.00010219499999999937, 0.00010219499999999937, 0.00010193099999999955, 0.00010205599999999967, 0.0001020420000000001, 0.00010219499999999937, 0.00010179199999999985,...</msg>
<status status="PASS" starttime="20201030 10:58:46.969" endtime="20201030 10:58:46.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.976" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.975" endtime="20201030 10:58:46.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.979" level="INFO">VALUE: [0.00010183299999999909, 0.00010219499999999937, 0.00010219499999999937, 0.00010193099999999955, 0.00010205599999999967, 0.0001020420000000001, 0.00010219499999999937, 0.00010179199999999985, 0.00010229100000000088, 0.00010194399999999965, 0.00010204100000000063, 0.00010179199999999985, 0.00010193000000000008, 0.00010181899999999952, 0.00010224999999999818, 0.00010173700000000105, 0.00010195799999999922, 0.00010208300000000281, 0.00010176400000000071, 0.00010220900000000241, 0.00010213900000000109, 0.0001020000000000014, 0.00010172199999999854, 0.00010197199999999879, 0.00010208299999999934, 0.00010177700000000081, 0.00010202699999999759, 0.0001016939999999994, 0.00010202800000000053, 0.00010194399999999965, 0.00010209700000000238, 0.00010202800000000053, 0.00010195799999999922, 0.0001015419999999996, 0.00010219499999999937, 0.00010183399999999856, 0.00010199999999999793, 0.00010219500000000284, 0.00010220900000000241, 0.00010177800000000028, 0.00010216600000000076, 0.000101722000000002, 0.00010190300000000041, 0.00010213899999999762, 0.00010183299999999909, 0.00010195799999999922, 0.00010184699999999866, 0.0001022359999999986, 0.00010209699999999891, 0.0001020420000000001]</msg>
<status status="PASS" starttime="20201030 10:58:46.977" endtime="20201030 10:58:46.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.973" endtime="20201030 10:58:46.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.984" endtime="20201030 10:58:47.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.983" endtime="20201030 10:58:47.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.982" endtime="20201030 10:58:47.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.620" endtime="20201030 10:58:47.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.620" endtime="20201030 10:58:47.005"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.014" endtime="20201030 10:58:47.034"></status>
</kw>
<msg timestamp="20201030 10:58:47.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.013" endtime="20201030 10:58:47.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.036" endtime="20201030 10:58:47.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.038" endtime="20201030 10:58:47.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.010" endtime="20201030 10:58:47.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.008" endtime="20201030 10:58:47.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.048" endtime="20201030 10:58:47.334"></status>
</kw>
<msg timestamp="20201030 10:58:47.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023135819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023238236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.046" endtime="20201030 10:58:47.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023135819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023238236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.338" endtime="20201030 10:58:47.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.346" endtime="20201030 10:58:47.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.043" endtime="20201030 10:58:47.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.041" endtime="20201030 10:58:47.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:47.353" level="INFO">${RESULT} = [{'diff': 0.00010241700000000048}, {'diff': 0.00010284699999999966}, {'diff': 0.00010312499999999905}, {'diff': 0.00010295800000000022}, {'diff': 0.00010290300000000141}, {'diff': 0.000103222000000000...</msg>
<status status="PASS" starttime="20201030 10:58:47.350" endtime="20201030 10:58:47.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:47.358" level="INFO">${ACCURACY} = {'diff': [0.00010241700000000048, 0.00010284699999999966, 0.00010312499999999905, 0.00010295800000000022, 0.00010290300000000141, 0.00010322200000000004, 0.00010311199999999895, 0.00010308300000000034...</msg>
<status status="PASS" starttime="20201030 10:58:47.354" endtime="20201030 10:58:47.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.363" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 10:58:47.362" endtime="20201030 10:58:47.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.365" level="INFO">VALUE: [0.00010241700000000048, 0.00010284699999999966, 0.00010312499999999905, 0.00010295800000000022, 0.00010290300000000141, 0.00010322200000000004, 0.00010311199999999895, 0.00010308300000000034, 0.00010313900000000209, 0.00010297300000000273, 0.00010270799999999997, 0.00010280500000000095, 0.00010279100000000138, 0.00010284699999999966, 0.00010306900000000077, 0.00010275000000000215, 0.00010320800000000047, 0.00010273600000000258, 0.00010293100000000055, 0.00010284699999999966, 0.00010291699999999751, 0.00010276399999999825, 0.00010312499999999905, 0.00010273600000000258, 0.0001028749999999988, 0.00010311099999999948, 0.00010309699999999991, 0.00010311099999999948, 0.00010325000000000265, 0.00010254100000000113, 0.0001027359999999991, 0.00010252799999999757, 0.00010319399999999743, 0.00010329200000000135, 0.00010309699999999991, 0.00010276400000000172, 0.00010272199999999954, 0.00010290299999999794, 0.00010322200000000004, 0.00010284799999999913, 0.0001031810000000008, 0.00010322299999999951, 0.0001032359999999996, 0.00010309699999999991, 0.00010308300000000034, 0.0001030000000000024, 0.00010325000000000265, 0.00010311099999999948, 0.00010270799999999997, 0.00010308300000000034]</msg>
<status status="PASS" starttime="20201030 10:58:47.364" endtime="20201030 10:58:47.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.359" endtime="20201030 10:58:47.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:47.370" endtime="20201030 10:58:47.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.369" endtime="20201030 10:58:47.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.368" endtime="20201030 10:58:47.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.006" endtime="20201030 10:58:47.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.006" endtime="20201030 10:58:47.391"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.400" endtime="20201030 10:58:47.420"></status>
</kw>
<msg timestamp="20201030 10:58:47.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.399" endtime="20201030 10:58:47.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.422" endtime="20201030 10:58:47.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.425" endtime="20201030 10:58:47.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.396" endtime="20201030 10:58:47.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.394" endtime="20201030 10:58:47.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.435" endtime="20201030 10:58:47.721"></status>
</kw>
<msg timestamp="20201030 10:58:47.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022466944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.433" endtime="20201030 10:58:47.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022466944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.725" endtime="20201030 10:58:47.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.734" endtime="20201030 10:58:47.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.430" endtime="20201030 10:58:47.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.429" endtime="20201030 10:58:47.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:47.740" level="INFO">${RESULT} = [{'diff': 0.00010411199999999995}, {'diff': 0.00010380600000000142}, {'diff': 0.00010390199999999947}, {'diff': 0.00010375000000000315}, {'diff': 0.00010394399999999818}, {'diff': 0.000104125000000000...</msg>
<status status="PASS" starttime="20201030 10:58:47.737" endtime="20201030 10:58:47.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:47.745" level="INFO">${ACCURACY} = {'diff': [0.00010411199999999995, 0.00010380600000000142, 0.00010390199999999947, 0.00010375000000000315, 0.00010394399999999818, 0.00010412500000000005, 0.00010422199999999757, 0.00010352799999999857...</msg>
<status status="PASS" starttime="20201030 10:58:47.741" endtime="20201030 10:58:47.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.749" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 10:58:47.748" endtime="20201030 10:58:47.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.752" level="INFO">VALUE: [0.00010411199999999995, 0.00010380600000000142, 0.00010390199999999947, 0.00010375000000000315, 0.00010394399999999818, 0.00010412500000000005, 0.00010422199999999757, 0.00010352799999999857, 0.00010402799999999907, 0.00010420800000000147, 0.00010427799999999932, 0.00010388899999999937, 0.00010422200000000104, 0.00010379199999999839, 0.00010423700000000008, 0.00010373699999999958, 0.00010379199999999839, 0.00010352799999999857, 0.00010386100000000023, 0.00010352700000000256, 0.00010408300000000134, 0.000103513999999999, 0.00010391700000000198, 0.0001040139999999995, 0.00010374999999999968, 0.00010398600000000036, 0.00010352800000000204, 0.00010406999999999778, 0.00010370900000000044, 0.00010372200000000054, 0.00010380600000000142, 0.0001041949999999979, 0.000103513999999999, 0.00010386100000000023, 0.00010417999999999886, 0.00010388900000000284, 0.00010386100000000023, 0.0001039160000000025, 0.00010377799999999882, 0.00010422200000000104, 0.00010399999999999993, 0.0001037360000000001, 0.00010386100000000023, 0.00010412500000000005, 0.00010418099999999833, 0.00010391700000000198, 0.00010413899999999962, 0.00010391700000000198, 0.00010383300000000109, 0.00010409800000000038]</msg>
<status status="PASS" starttime="20201030 10:58:47.750" endtime="20201030 10:58:47.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.745" endtime="20201030 10:58:47.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:47.757" endtime="20201030 10:58:47.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.755" endtime="20201030 10:58:47.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.754" endtime="20201030 10:58:47.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.392" endtime="20201030 10:58:47.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.391" endtime="20201030 10:58:47.778"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.787" endtime="20201030 10:58:47.807"></status>
</kw>
<msg timestamp="20201030 10:58:47.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.785" endtime="20201030 10:58:47.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.808" endtime="20201030 10:58:47.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.811" endtime="20201030 10:58:47.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.782" endtime="20201030 10:58:47.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.780" endtime="20201030 10:58:47.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.820" endtime="20201030 10:58:48.107"></status>
</kw>
<msg timestamp="20201030 10:58:48.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023234417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023338861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.819" endtime="20201030 10:58:48.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023234417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023338861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.111" endtime="20201030 10:58:48.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.120" endtime="20201030 10:58:48.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.816" endtime="20201030 10:58:48.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.814" endtime="20201030 10:58:48.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.127" level="INFO">${RESULT} = [{'diff': 0.00010444399999999868}, {'diff': 0.0001051940000000029}, {'diff': 0.00010512500000000105}, {'diff': 0.0001048750000000008}, {'diff': 0.00010494499999999865}, {'diff': 0.00010516699999999976...</msg>
<status status="PASS" starttime="20201030 10:58:48.123" endtime="20201030 10:58:48.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.131" level="INFO">${ACCURACY} = {'diff': [0.00010444399999999868, 0.0001051940000000029, 0.00010512500000000105, 0.0001048750000000008, 0.00010494499999999865, 0.00010516699999999976, 0.0001052360000000016, 0.00010515300000000019, 0...</msg>
<status status="PASS" starttime="20201030 10:58:48.128" endtime="20201030 10:58:48.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.135" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.134" endtime="20201030 10:58:48.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.138" level="INFO">VALUE: [0.00010444399999999868, 0.0001051940000000029, 0.00010512500000000105, 0.0001048750000000008, 0.00010494499999999865, 0.00010516699999999976, 0.0001052360000000016, 0.00010515300000000019, 0.00010491699999999951, 0.0001052499999999977, 0.00010475000000000068, 0.0001047360000000011, 0.00010513900000000062, 0.00010472199999999807, 0.00010498599999999789, 0.00010505499999999973, 0.00010494499999999865, 0.00010498599999999789, 0.00010448600000000086, 0.00010483400000000156, 0.00010494499999999865, 0.00010527700000000084, 0.00010481999999999853, 0.0001048750000000008, 0.00010488900000000037, 0.00010516600000000029, 0.00010454099999999966, 0.00010486100000000123, 0.00010504199999999964, 0.00010477799999999982, 0.00010476400000000025, 0.0001048750000000008, 0.00010486100000000123, 0.00010509699999999844, 0.00010494500000000212, 0.00010491700000000298, 0.00010479199999999939, 0.00010512500000000105, 0.00010506999999999878, 0.00010512500000000105, 0.00010483400000000156, 0.00010515200000000072, 0.00010481899999999905, 0.00010480499999999948, 0.00010484699999999819, 0.00010476400000000025, 0.00010505499999999973, 0.00010511099999999801, 0.00010472199999999807, 0.0001052360000000016]</msg>
<status status="PASS" starttime="20201030 10:58:48.136" endtime="20201030 10:58:48.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.132" endtime="20201030 10:58:48.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.144" endtime="20201030 10:58:48.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.142" endtime="20201030 10:58:48.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.141" endtime="20201030 10:58:48.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.779" endtime="20201030 10:58:48.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.778" endtime="20201030 10:58:48.165"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.174" endtime="20201030 10:58:48.193"></status>
</kw>
<msg timestamp="20201030 10:58:48.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.172" endtime="20201030 10:58:48.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.195" endtime="20201030 10:58:48.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.197" endtime="20201030 10:58:48.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.169" endtime="20201030 10:58:48.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.167" endtime="20201030 10:58:48.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.207" endtime="20201030 10:58:48.494"></status>
</kw>
<msg timestamp="20201030 10:58:48.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.205" endtime="20201030 10:58:48.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.498" endtime="20201030 10:58:48.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.506" endtime="20201030 10:58:48.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.202" endtime="20201030 10:58:48.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.200" endtime="20201030 10:58:48.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.513" level="INFO">${RESULT} = [{'diff': 0.00010618000000000086}, {'diff': 0.00010613900000000162}, {'diff': 0.00010615300000000119}, {'diff': 0.00010618100000000033}, {'diff': 0.00010611099999999901}, {'diff': 0.000105861000000002...</msg>
<status status="PASS" starttime="20201030 10:58:48.510" endtime="20201030 10:58:48.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.518" level="INFO">${ACCURACY} = {'diff': [0.00010618000000000086, 0.00010613900000000162, 0.00010615300000000119, 0.00010618100000000033, 0.00010611099999999901, 0.00010586100000000223, 0.00010591699999999704, 0.00010622199999999957...</msg>
<status status="PASS" starttime="20201030 10:58:48.514" endtime="20201030 10:58:48.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.523" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.522" endtime="20201030 10:58:48.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.525" level="INFO">VALUE: [0.00010618000000000086, 0.00010613900000000162, 0.00010615300000000119, 0.00010618100000000033, 0.00010611099999999901, 0.00010586100000000223, 0.00010591699999999704, 0.00010622199999999957, 0.00010595899999999922, 0.00010601399999999803, 0.00010623599999999914, 0.00010616600000000129, 0.00010576400000000125, 0.00010622199999999957, 0.00010598600000000236, 0.00010572200000000254, 0.00010576400000000125, 0.00010588900000000137, 0.00010587499999999833, 0.00010580600000000343, 0.00010591700000000051, 0.0001060279999999976, 0.0001060140000000015, 0.00010612499999999858, 0.00010580599999999996, 0.00010604200000000064, 0.00010584799999999867, 0.00010579200000000039, 0.0001057079999999995, 0.00010619400000000043, 0.00010612500000000205, 0.00010598600000000236, 0.00010590300000000094, 0.00010552800000000057, 0.00010613900000000162, 0.00010577800000000082, 0.00010568099999999983, 0.00010609700000000291, 0.00010575000000000168, 0.0001058339999999991, 0.0001060560000000002, 0.0001058889999999979, 0.00010598599999999889, 0.0001062499999999987, 0.00010586099999999876, 0.00010602700000000159, 0.0001057079999999995, 0.00010627800000000132, 0.00010581900000000005, 0.00010580500000000048]</msg>
<status status="PASS" starttime="20201030 10:58:48.524" endtime="20201030 10:58:48.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.519" endtime="20201030 10:58:48.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.530" endtime="20201030 10:58:48.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.529" endtime="20201030 10:58:48.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.528" endtime="20201030 10:58:48.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.166" endtime="20201030 10:58:48.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.165" endtime="20201030 10:58:48.551"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.560" endtime="20201030 10:58:48.580"></status>
</kw>
<msg timestamp="20201030 10:58:48.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.559" endtime="20201030 10:58:48.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.582" endtime="20201030 10:58:48.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.584" endtime="20201030 10:58:48.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.556" endtime="20201030 10:58:48.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.554" endtime="20201030 10:58:48.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.594" endtime="20201030 10:58:48.881"></status>
</kw>
<msg timestamp="20201030 10:58:48.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.592" endtime="20201030 10:58:48.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.885" endtime="20201030 10:58:48.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.893" endtime="20201030 10:58:48.895"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.589" endtime="20201030 10:58:48.895"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.588" endtime="20201030 10:58:48.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.900" level="INFO">${RESULT} = [{'diff': 0.00010687499999999933}, {'diff': 0.00010702700000000259}, {'diff': 0.00010669399999999746}, {'diff': 0.00010695800000000075}, {'diff': 0.00010700000000000293}, {'diff': 0.000107124999999999...</msg>
<status status="PASS" starttime="20201030 10:58:48.897" endtime="20201030 10:58:48.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.904" level="INFO">${ACCURACY} = {'diff': [0.00010687499999999933, 0.00010702700000000259, 0.00010669399999999746, 0.00010695800000000075, 0.00010700000000000293, 0.00010712499999999958, 0.00010723600000000014, 0.00010680600000000096...</msg>
<status status="PASS" starttime="20201030 10:58:48.901" endtime="20201030 10:58:48.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.909" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.907" endtime="20201030 10:58:48.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.911" level="INFO">VALUE: [0.00010687499999999933, 0.00010702700000000259, 0.00010669399999999746, 0.00010695800000000075, 0.00010700000000000293, 0.00010712499999999958, 0.00010723600000000014, 0.00010680600000000096, 0.00010716699999999829, 0.00010687499999999933, 0.00010683299999999715, 0.00010684800000000313, 0.00010701399999999903, 0.00010727700000000284, 0.00010679199999999792, 0.00010709799999999992, 0.0001072499999999997, 0.00010670899999999997, 0.00010698599999999989, 0.00010692999999999814, 0.00010704100000000216, 0.00010688900000000237, 0.00010711100000000001, 0.000107208000000001, 0.00010702800000000207, 0.00010681900000000105, 0.0001067080000000005, 0.0001068750000000028, 0.00010716699999999829, 0.00010677800000000182, 0.00010726399999999928, 0.00010712499999999958, 0.00010704100000000216, 0.00010669400000000093, 0.00010722200000000057, 0.00010702700000000259, 0.00010686099999999976, 0.00010694400000000118, 0.00010699999999999946, 0.0001072499999999997, 0.00010679200000000139, 0.00010690299999999847, 0.00010695800000000075, 0.00010684700000000019, 0.0001067499999999992, 0.00010682000000000053, 0.00010697299999999979, 0.00010711199999999949, 0.00010723600000000014, 0.00010718000000000186]</msg>
<status status="PASS" starttime="20201030 10:58:48.910" endtime="20201030 10:58:48.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.905" endtime="20201030 10:58:48.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.916" endtime="20201030 10:58:48.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.915" endtime="20201030 10:58:48.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.913" endtime="20201030 10:58:48.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.552" endtime="20201030 10:58:48.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.551" endtime="20201030 10:58:48.937"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.946" endtime="20201030 10:58:48.966"></status>
</kw>
<msg timestamp="20201030 10:58:48.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.945" endtime="20201030 10:58:48.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.968" endtime="20201030 10:58:48.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.971" endtime="20201030 10:58:48.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.942" endtime="20201030 10:58:48.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.940" endtime="20201030 10:58:48.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.980" endtime="20201030 10:58:49.266"></status>
</kw>
<msg timestamp="20201030 10:58:49.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023300833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023408597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.978" endtime="20201030 10:58:49.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023300833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023408597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.270" endtime="20201030 10:58:49.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.278" endtime="20201030 10:58:49.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.976" endtime="20201030 10:58:49.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.974" endtime="20201030 10:58:49.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:49.284" level="INFO">${RESULT} = [{'diff': 0.00010776399999999978}, {'diff': 0.0001080829999999984}, {'diff': 0.00010777799999999935}, {'diff': 0.00010806899999999883}, {'diff': 0.00010799999999999699}, {'diff': 0.0001079580000000017...</msg>
<status status="PASS" starttime="20201030 10:58:49.281" endtime="20201030 10:58:49.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:49.288" level="INFO">${ACCURACY} = {'diff': [0.00010776399999999978, 0.0001080829999999984, 0.00010777799999999935, 0.00010806899999999883, 0.00010799999999999699, 0.00010795800000000175, 0.00010790299999999947, 0.00010804200000000264,...</msg>
<status status="PASS" starttime="20201030 10:58:49.285" endtime="20201030 10:58:49.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.292" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 10:58:49.291" endtime="20201030 10:58:49.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.295" level="INFO">VALUE: [0.00010776399999999978, 0.0001080829999999984, 0.00010777799999999935, 0.00010806899999999883, 0.00010799999999999699, 0.00010795800000000175, 0.00010790299999999947, 0.00010804200000000264, 0.00010782000000000153, 0.00010795899999999775, 0.00010768100000000183, 0.00010744499999999768, 0.00010813900000000015, 0.00010815200000000025, 0.00010806899999999883, 0.00010823600000000114, 0.00010806899999999883, 0.00010773599999999717, 0.00010811100000000101, 0.00010783299999999815, 0.00010797199999999785, 0.00010791699999999904, 0.00010818099999999886, 0.0001080279999999996, 0.00010780599999999849, 0.00010808300000000187, 0.00010784700000000119, 0.00010799999999999699, 0.00010773600000000064, 0.000107902, 0.00010809700000000144, 0.0001077219999999976, 0.00010811100000000101, 0.0001080279999999996, 0.00010772200000000107, 0.00010808300000000187, 0.00010809699999999797, 0.00010822300000000104, 0.00010793100000000208, 0.0001078889999999999, 0.00010802800000000307, 0.00010812500000000058, 0.00010823700000000061, 0.00010780500000000248, 0.00010809700000000144, 0.00010787500000000033, 0.00010773600000000064, 0.00010773600000000064, 0.0001080560000000022, 0.00010813900000000015]</msg>
<status status="PASS" starttime="20201030 10:58:49.294" endtime="20201030 10:58:49.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.289" endtime="20201030 10:58:49.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.301" endtime="20201030 10:58:49.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.299" endtime="20201030 10:58:49.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.298" endtime="20201030 10:58:49.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.938" endtime="20201030 10:58:49.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.938" endtime="20201030 10:58:49.321"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.330" endtime="20201030 10:58:49.349"></status>
</kw>
<msg timestamp="20201030 10:58:49.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.328" endtime="20201030 10:58:49.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.351" endtime="20201030 10:58:49.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.353" endtime="20201030 10:58:49.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.326" endtime="20201030 10:58:49.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.324" endtime="20201030 10:58:49.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.362" endtime="20201030 10:58:49.648"></status>
</kw>
<msg timestamp="20201030 10:58:49.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.361" endtime="20201030 10:58:49.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.652" endtime="20201030 10:58:49.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.660" endtime="20201030 10:58:49.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.358" endtime="20201030 10:58:49.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.356" endtime="20201030 10:58:49.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:49.666" level="INFO">${RESULT} = [{'diff': 0.00010937499999999836}, {'diff': 0.00010916700000000029}, {'diff': 0.00010869399999999946}, {'diff': 0.00010918000000000039}, {'diff': 0.0001087219999999986}, {'diff': 0.0001088329999999991...</msg>
<status status="PASS" starttime="20201030 10:58:49.663" endtime="20201030 10:58:49.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:49.671" level="INFO">${ACCURACY} = {'diff': [0.00010937499999999836, 0.00010916700000000029, 0.00010869399999999946, 0.00010918000000000039, 0.0001087219999999986, 0.00010883299999999915, 0.00010916600000000082, 0.00010858399999999838,...</msg>
<status status="PASS" starttime="20201030 10:58:49.667" endtime="20201030 10:58:49.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.676" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 10:58:49.675" endtime="20201030 10:58:49.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.678" level="INFO">VALUE: [0.00010937499999999836, 0.00010916700000000029, 0.00010869399999999946, 0.00010918000000000039, 0.0001087219999999986, 0.00010883299999999915, 0.00010916600000000082, 0.00010858399999999838, 0.0001085280000000001, 0.00010879199999999992, 0.00010909699999999897, 0.00010884800000000167, 0.00010900000000000146, 0.00010919499999999943, 0.00010875000000000121, 0.00010905599999999974, 0.00010881899999999958, 0.00010898700000000136, 0.00010912500000000158, 0.000108902000000001, 0.00010886099999999829, 0.00010906899999999983, 0.00010867999999999989, 0.00010897199999999885, 0.000108902999999997, 0.00010874999999999774, 0.0001085280000000001, 0.00010884699999999872, 0.00010908399999999888, 0.00010879199999999992, 0.00010894499999999918, 0.0001087089999999985, 0.00010899999999999799, 0.00010894499999999918, 0.00010874999999999774, 0.00010909699999999897, 0.00010851400000000053, 0.00010886100000000176, 0.00010879199999999992, 0.00010920799999999953, 0.00010865300000000022, 0.00010916700000000029, 0.00010877800000000035, 0.00010874999999999774, 0.00010913899999999768, 0.00010916700000000029, 0.0001088890000000009, 0.00010912500000000158, 0.00010905599999999974, 0.00010893000000000014]</msg>
<status status="PASS" starttime="20201030 10:58:49.677" endtime="20201030 10:58:49.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.672" endtime="20201030 10:58:49.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.683" endtime="20201030 10:58:49.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.681" endtime="20201030 10:58:49.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.680" endtime="20201030 10:58:49.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.322" endtime="20201030 10:58:49.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.322" endtime="20201030 10:58:49.703"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.712" endtime="20201030 10:58:49.732"></status>
</kw>
<msg timestamp="20201030 10:58:49.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.711" endtime="20201030 10:58:49.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.734" endtime="20201030 10:58:49.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.736" endtime="20201030 10:58:49.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.708" endtime="20201030 10:58:49.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.706" endtime="20201030 10:58:49.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.745" endtime="20201030 10:58:50.053"></status>
</kw>
<msg timestamp="20201030 10:58:50.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.743" endtime="20201030 10:58:50.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.057" endtime="20201030 10:58:50.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.065" endtime="20201030 10:58:50.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.741" endtime="20201030 10:58:50.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.739" endtime="20201030 10:58:50.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.071" level="INFO">${RESULT} = [{'diff': 0.00010975000000000221}, {'diff': 0.00010991600000000157}, {'diff': 0.00010977700000000187}, {'diff': 0.00010975000000000221}, {'diff': 0.00010979099999999797}, {'diff': 0.000110208000000000...</msg>
<status status="PASS" starttime="20201030 10:58:50.068" endtime="20201030 10:58:50.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.076" level="INFO">${ACCURACY} = {'diff': [0.00010975000000000221, 0.00010991600000000157, 0.00010977700000000187, 0.00010975000000000221, 0.00010979099999999797, 0.00011020800000000053, 0.00010981900000000058, 0.00011000000000000246...</msg>
<status status="PASS" starttime="20201030 10:58:50.072" endtime="20201030 10:58:50.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.080" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.079" endtime="20201030 10:58:50.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.082" level="INFO">VALUE: [0.00010975000000000221, 0.00010991600000000157, 0.00010977700000000187, 0.00010975000000000221, 0.00010979099999999797, 0.00011020800000000053, 0.00010981900000000058, 0.00011000000000000246, 0.00010983399999999963, 0.00010986100000000276, 0.00010976399999999831, 0.00010999999999999899, 0.00010975000000000221, 0.00011019499999999696, 0.00011008399999999988, 0.00010977800000000135, 0.00011009699999999997, 0.00010980500000000101, 0.00011019399999999749, 0.00011023599999999967, 0.00011020800000000053, 0.00010973600000000264, 0.00010995800000000028, 0.00010991699999999757, 0.00010981900000000058, 0.00010982000000000006, 0.0001098890000000019, 0.00011022300000000304, 0.00010995899999999975, 0.00011018100000000086, 0.00010972300000000254, 0.00010984699999999972, 0.00010979099999999797, 0.00010997199999999985, 0.00010990300000000147, 0.0001099159999999981, 0.0001100549999999978, 0.00011013899999999868, 0.00010987499999999886, 0.00010997299999999932, 0.00010991699999999757, 0.00011009699999999997, 0.00011015299999999825, 0.00011013799999999921, 0.00010987500000000233, 0.000109902999999998, 0.0001097219999999996, 0.00010963800000000218, 0.0001098890000000019, 0.00011023599999999967]</msg>
<status status="PASS" starttime="20201030 10:58:50.081" endtime="20201030 10:58:50.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.076" endtime="20201030 10:58:50.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.087" endtime="20201030 10:58:50.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.086" endtime="20201030 10:58:50.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.085" endtime="20201030 10:58:50.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.704" endtime="20201030 10:58:50.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.704" endtime="20201030 10:58:50.108"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.117" endtime="20201030 10:58:50.140"></status>
</kw>
<msg timestamp="20201030 10:58:50.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.115" endtime="20201030 10:58:50.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.141" endtime="20201030 10:58:50.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.144" endtime="20201030 10:58:50.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.112" endtime="20201030 10:58:50.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.110" endtime="20201030 10:58:50.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.153" endtime="20201030 10:58:50.438"></status>
</kw>
<msg timestamp="20201030 10:58:50.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024976194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025086569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.151" endtime="20201030 10:58:50.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024976194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025086569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.442" endtime="20201030 10:58:50.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.450" endtime="20201030 10:58:50.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.149" endtime="20201030 10:58:50.452"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.147" endtime="20201030 10:58:50.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.456" level="INFO">${RESULT} = [{'diff': 0.00011037499999999936}, {'diff': 0.0001107769999999994}, {'diff': 0.00011065199999999928}, {'diff': 0.00011091700000000204}, {'diff': 0.00011106899999999836}, {'diff': 0.0001109310000000016...</msg>
<status status="PASS" starttime="20201030 10:58:50.453" endtime="20201030 10:58:50.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.460" level="INFO">${ACCURACY} = {'diff': [0.00011037499999999936, 0.0001107769999999994, 0.00011065199999999928, 0.00011091700000000204, 0.00011106899999999836, 0.00011093100000000161, 0.00011083299999999768, 0.00011129199999999895,...</msg>
<status status="PASS" starttime="20201030 10:58:50.457" endtime="20201030 10:58:50.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.464" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.463" endtime="20201030 10:58:50.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.467" level="INFO">VALUE: [0.00011037499999999936, 0.0001107769999999994, 0.00011065199999999928, 0.00011091700000000204, 0.00011106899999999836, 0.00011093100000000161, 0.00011083299999999768, 0.00011129199999999895, 0.00011105599999999827, 0.00011073600000000017, 0.00011087499999999986, 0.00011129199999999895, 0.0001107090000000005, 0.00011119500000000143, 0.0001107090000000005, 0.00011101300000000008, 0.00011087499999999986, 0.0001107769999999994, 0.00011074999999999974, 0.00011118100000000186, 0.00011077799999999888, 0.00011098600000000042, 0.00011083300000000115, 0.00011126400000000328, 0.00011129099999999947, 0.00011087500000000333, 0.00011086100000000029, 0.0001112220000000011, 0.00011120799999999806, 0.00011123699999999667, 0.00011083300000000115, 0.00011070799999999756, 0.00011070800000000103, 0.00011111100000000054, 0.00011084799999999673, 0.00011081899999999811, 0.00011111100000000054, 0.00011095799999999781, 0.00011083300000000115, 0.00011118099999999839, 0.00011098600000000042, 0.00011125000000000024, 0.00011098600000000042, 0.00011119499999999796, 0.00011088899999999943, 0.00011125000000000024, 0.00011098600000000042, 0.00011076399999999931, 0.00011084700000000072, 0.00011067999999999842]</msg>
<status status="PASS" starttime="20201030 10:58:50.465" endtime="20201030 10:58:50.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.461" endtime="20201030 10:58:50.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.473" endtime="20201030 10:58:50.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.471" endtime="20201030 10:58:50.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.470" endtime="20201030 10:58:50.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.109" endtime="20201030 10:58:50.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.108" endtime="20201030 10:58:50.493"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.502" endtime="20201030 10:58:50.522"></status>
</kw>
<msg timestamp="20201030 10:58:50.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.500" endtime="20201030 10:58:50.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.523" endtime="20201030 10:58:50.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.526" endtime="20201030 10:58:50.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.498" endtime="20201030 10:58:50.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.496" endtime="20201030 10:58:50.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.535" endtime="20201030 10:58:50.821"></status>
</kw>
<msg timestamp="20201030 10:58:50.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.533" endtime="20201030 10:58:50.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.825" endtime="20201030 10:58:50.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.833" endtime="20201030 10:58:50.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.531" endtime="20201030 10:58:50.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.529" endtime="20201030 10:58:50.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.839" level="INFO">${RESULT} = [{'diff': 0.00011226400000000081}, {'diff': 0.00011224999999999777}, {'diff': 0.00011206999999999884}, {'diff': 0.00011186100000000129}, {'diff': 0.00011209800000000145}, {'diff': 0.000112112000000001...</msg>
<status status="PASS" starttime="20201030 10:58:50.836" endtime="20201030 10:58:50.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.844" level="INFO">${ACCURACY} = {'diff': [0.00011226400000000081, 0.00011224999999999777, 0.00011206999999999884, 0.00011186100000000129, 0.00011209800000000145, 0.00011211200000000102, 0.00011213900000000068, 0.00011218099999999939...</msg>
<status status="PASS" starttime="20201030 10:58:50.840" endtime="20201030 10:58:50.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.848" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.847" endtime="20201030 10:58:50.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.851" level="INFO">VALUE: [0.00011226400000000081, 0.00011224999999999777, 0.00011206999999999884, 0.00011186100000000129, 0.00011209800000000145, 0.00011211200000000102, 0.00011213900000000068, 0.00011218099999999939, 0.00011220800000000253, 0.00011217999999999992, 0.00011211099999999807, 0.00011187500000000086, 0.0001119160000000001, 0.00011223600000000167, 0.00011195800000000228, 0.00011197299999999785, 0.00011177799999999988, 0.00011170799999999856, 0.00011186100000000129, 0.00011200000000000099, 0.0001120419999999997, 0.00011173700000000064, 0.00011184699999999825, 0.00011209700000000197, 0.00011173600000000117, 0.00011187500000000086, 0.00011212500000000111, 0.00011217999999999992, 0.00011209700000000197, 0.00011181899999999911, 0.00011202800000000013, 0.0001117359999999977, 0.00011188800000000096, 0.00011173600000000117, 0.00011223600000000167, 0.00011193099999999914, 0.00011194399999999924, 0.00011181900000000258, 0.00011209700000000197, 0.00011184700000000172, 0.00011211099999999807, 0.00011213900000000068, 0.00011201399999999709, 0.00011180500000000301, 0.00011170799999999856, 0.00011195799999999881, 0.00011174999999999727, 0.00011213900000000068, 0.00011152799999999963, 0.0001122359999999982]</msg>
<status status="PASS" starttime="20201030 10:58:50.849" endtime="20201030 10:58:50.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.845" endtime="20201030 10:58:50.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.856" endtime="20201030 10:58:50.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.854" endtime="20201030 10:58:50.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.853" endtime="20201030 10:58:50.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.494" endtime="20201030 10:58:50.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.494" endtime="20201030 10:58:50.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.255" endtime="20201030 10:58:50.877"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:12.184" endtime="20201030 10:58:50.879" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:57:32.317" endtime="20201030 10:58:50.885"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.940" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:58:50.949" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:58:52.120" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:58:50.939" endtime="20201030 10:58:52.122"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.127" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:58:52.124" endtime="20201030 10:58:52.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.938" endtime="20201030 10:58:52.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.133" endtime="20201030 10:58:52.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.130" endtime="20201030 10:58:52.391"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.403" endtime="20201030 10:58:52.420"></status>
</kw>
<msg timestamp="20201030 10:58:52.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.402" endtime="20201030 10:58:52.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.423" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.421" endtime="20201030 10:58:52.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.426" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:52.424" endtime="20201030 10:58:52.426"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:52.399" endtime="20201030 10:58:52.427"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:52.397" endtime="20201030 10:58:52.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.396" endtime="20201030 10:58:52.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:52.432" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:52.431" endtime="20201030 10:58:52.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.429" endtime="20201030 10:58:52.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.395" endtime="20201030 10:58:52.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.394" endtime="20201030 10:58:52.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.433" endtime="20201030 10:58:52.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.393" endtime="20201030 10:58:52.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.436" endtime="20201030 10:58:52.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.392" endtime="20201030 10:58:52.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.936" endtime="20201030 10:58:52.439"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.445" endtime="20201030 10:58:52.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.444" endtime="20201030 10:58:52.465"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.478" endtime="20201030 10:58:52.494"></status>
</kw>
<msg timestamp="20201030 10:58:52.494" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.477" endtime="20201030 10:58:52.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.495" endtime="20201030 10:58:52.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.501" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:52.498" endtime="20201030 10:58:52.501"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:52.474" endtime="20201030 10:58:52.502"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:52.471" endtime="20201030 10:58:52.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.470" endtime="20201030 10:58:52.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:52.506" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:52.506" endtime="20201030 10:58:52.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.503" endtime="20201030 10:58:52.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.469" endtime="20201030 10:58:52.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.469" endtime="20201030 10:58:52.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.508" endtime="20201030 10:58:52.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.467" endtime="20201030 10:58:52.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.466" endtime="20201030 10:58:52.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.442" endtime="20201030 10:58:52.511"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.520" endtime="20201030 10:58:58.642"></status>
</kw>
<msg timestamp="20201030 10:58:58.643" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.518" endtime="20201030 10:58:58.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.648" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.645" endtime="20201030 10:58:58.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.650" endtime="20201030 10:58:58.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.516" endtime="20201030 10:58:58.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.514" endtime="20201030 10:58:58.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:58.660" level="INFO">${RESULT} = {'bg-timer-count': 0, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:58:58.657" endtime="20201030 10:58:58.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.674" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:58:58.672" endtime="20201030 10:58:58.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.678" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:58:58.676" endtime="20201030 10:58:58.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.662" endtime="20201030 10:58:58.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.688" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:58:58.686" endtime="20201030 10:58:58.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.690" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:58:58.689" endtime="20201030 10:58:58.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.681" endtime="20201030 10:58:58.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.695" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:58:58.694" endtime="20201030 10:58:58.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.697" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 10:58:58.696" endtime="20201030 10:58:58.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.691" endtime="20201030 10:58:58.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.704" endtime="20201030 10:58:59.005"></status>
</kw>
<msg timestamp="20201030 10:58:59.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064707569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164729222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:58.702" endtime="20201030 10:58:59.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064707569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164729222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.009" endtime="20201030 10:58:59.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.017" endtime="20201030 10:58:59.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.700" endtime="20201030 10:58:59.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.698" endtime="20201030 10:58:59.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:58:59.024" level="INFO">${FILTERED} = [{'diff': 0.100021653}, {'diff': 0.10000384799999998}, {'diff': 0.10000684799999998}, {'diff': 0.10000674999999998}, {'diff': 0.10000676399999997}, {'diff': 0.10000679199999996}, {'diff': 0.1000068750...</msg>
<status status="PASS" starttime="20201030 10:58:59.021" endtime="20201030 10:58:59.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:59.028" level="INFO">${RESULT} = {'diff': [0.100021653, 0.10000384799999998, 0.10000684799999998, 0.10000674999999998, 0.10000676399999997, 0.10000679199999996, 0.10000687500000005, 0.10000672199999994, 0.10000684800000004, 0.1000066...</msg>
<status status="PASS" starttime="20201030 10:58:59.025" endtime="20201030 10:58:59.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.032" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:58:59.031" endtime="20201030 10:58:59.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.034" level="INFO">VALUE: [0.100021653, 0.10000384799999998, 0.10000684799999998, 0.10000674999999998, 0.10000676399999997, 0.10000679199999996, 0.10000687500000005, 0.10000672199999994, 0.10000684800000004, 0.10000669500000003, 0.10000681999999994, 0.10000669400000017, 0.10000687500000005, 0.10000673599999987, 0.10000681900000008, 0.10000672200000005, 0.10000677699999994, 0.10000680500000003, 0.10000680499999981, 0.10000672199999983, 0.1000068879999998, 0.10000672199999983, 0.10000680600000011, 0.10000672199999983, 0.10000690200000006, 0.1000067360000001, 0.10000681899999986, 0.10000676400000019, 0.10000680500000003, 0.10000676399999975, 0.10000680600000011, 0.10000676300000011, 0.10000680600000011, 0.10000674999999992, 0.10000681899999986, 0.10000675000000037, 0.10000681899999986, 0.10000674999999992, 0.10000683300000013, 0.10000674999999992, 0.10000687500000005, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:58:59.033" endtime="20201030 10:58:59.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.029" endtime="20201030 10:58:59.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.512" endtime="20201030 10:58:59.036"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:52.439" endtime="20201030 10:58:59.039" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:59.047" endtime="20201030 10:58:59.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.046" endtime="20201030 10:58:59.067"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.081" endtime="20201030 10:58:59.097"></status>
</kw>
<msg timestamp="20201030 10:58:59.097" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.079" endtime="20201030 10:58:59.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.100" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.098" endtime="20201030 10:58:59.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.103" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:59.101" endtime="20201030 10:58:59.103"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:59.077" endtime="20201030 10:58:59.103"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:59.074" endtime="20201030 10:58:59.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.072" endtime="20201030 10:58:59.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:59.108" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:59.107" endtime="20201030 10:58:59.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.105" endtime="20201030 10:58:59.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.071" endtime="20201030 10:58:59.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.071" endtime="20201030 10:58:59.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.110" endtime="20201030 10:58:59.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.069" endtime="20201030 10:58:59.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.068" endtime="20201030 10:58:59.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.044" endtime="20201030 10:58:59.112"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.121" endtime="20201030 10:59:05.242"></status>
</kw>
<msg timestamp="20201030 10:59:05.243" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.120" endtime="20201030 10:59:05.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.248" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.245" endtime="20201030 10:59:05.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.251" endtime="20201030 10:59:05.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.117" endtime="20201030 10:59:05.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.115" endtime="20201030 10:59:05.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:05.262" level="INFO">${RESULT} = {'bg-timer-count': 5, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:59:05.258" endtime="20201030 10:59:05.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.270" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:05.268" endtime="20201030 10:59:05.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.275" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:05.273" endtime="20201030 10:59:05.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.264" endtime="20201030 10:59:05.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.286" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:05.282" endtime="20201030 10:59:05.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.291" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:05.289" endtime="20201030 10:59:05.291"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.277" endtime="20201030 10:59:05.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.301" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:05.298" endtime="20201030 10:59:05.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.305" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 10:59:05.303" endtime="20201030 10:59:05.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.294" endtime="20201030 10:59:05.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.320" endtime="20201030 10:59:05.618"></status>
</kw>
<msg timestamp="20201030 10:59:05.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064199278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164248833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.317" endtime="20201030 10:59:05.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064199278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164248833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.622" endtime="20201030 10:59:05.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.630" endtime="20201030 10:59:05.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.311" endtime="20201030 10:59:05.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.308" endtime="20201030 10:59:05.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:05.636" level="INFO">${FILTERED} = [{'diff': 0.10004955500000001}, {'diff': 0.10002037500000002}, {'diff': 0.099962875}, {'diff': 0.100007709}, {'diff': 0.10000587499999997}, {'diff': 0.10000773600000001}, {'diff': 0.10000580599999997}...</msg>
<status status="PASS" starttime="20201030 10:59:05.633" endtime="20201030 10:59:05.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:05.640" level="INFO">${RESULT} = {'diff': [0.10004955500000001, 0.10002037500000002, 0.099962875, 0.100007709, 0.10000587499999997, 0.10000773600000001, 0.10000580599999997, 0.10000773600000001, 0.10000580599999997, 0.100007806000000...</msg>
<status status="PASS" starttime="20201030 10:59:05.637" endtime="20201030 10:59:05.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.645" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:05.644" endtime="20201030 10:59:05.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.647" level="INFO">VALUE: [0.10004955500000001, 0.10002037500000002, 0.099962875, 0.100007709, 0.10000587499999997, 0.10000773600000001, 0.10000580599999997, 0.10000773600000001, 0.10000580599999997, 0.10000780600000014, 0.10000580599999997, 0.10000782000000008, 0.10000580599999997, 0.10000774999999984, 0.1000058060000002, 0.10000773600000001, 0.10000582000000002, 0.10000779199999998, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 0.10000822300000012, 0.10000583400000007, 0.10000772300000005, 0.10000590300000001, 0.10000775000000006, 0.10000579200000015, 0.100007819, 0.10000581900000016, 0.10000773599999979, 0.10000590300000001, 0.10000780499999973, 5.419999995481817e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 10:59:05.646" endtime="20201030 10:59:05.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.641" endtime="20201030 10:59:05.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.113" endtime="20201030 10:59:05.649"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:59.042" endtime="20201030 10:59:05.650" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:05.657" endtime="20201030 10:59:05.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.656" endtime="20201030 10:59:05.677"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.690" endtime="20201030 10:59:05.705"></status>
</kw>
<msg timestamp="20201030 10:59:05.705" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.688" endtime="20201030 10:59:05.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.708" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.706" endtime="20201030 10:59:05.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.711" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:05.709" endtime="20201030 10:59:05.711"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:05.686" endtime="20201030 10:59:05.712"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:05.684" endtime="20201030 10:59:05.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.682" endtime="20201030 10:59:05.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:05.716" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:05.716" endtime="20201030 10:59:05.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.713" endtime="20201030 10:59:05.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.682" endtime="20201030 10:59:05.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.681" endtime="20201030 10:59:05.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.718" endtime="20201030 10:59:05.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.680" endtime="20201030 10:59:05.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.678" endtime="20201030 10:59:05.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.654" endtime="20201030 10:59:05.721"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.731" endtime="20201030 10:59:11.853"></status>
</kw>
<msg timestamp="20201030 10:59:11.854" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.728" endtime="20201030 10:59:11.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.859" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.856" endtime="20201030 10:59:11.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.862" endtime="20201030 10:59:11.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.726" endtime="20201030 10:59:11.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.723" endtime="20201030 10:59:11.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:11.873" level="INFO">${RESULT} = {'bg-timer-count': 10, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:59:11.869" endtime="20201030 10:59:11.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.881" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:11.879" endtime="20201030 10:59:11.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.886" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:11.884" endtime="20201030 10:59:11.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.875" endtime="20201030 10:59:11.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.895" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:11.893" endtime="20201030 10:59:11.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.899" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:11.898" endtime="20201030 10:59:11.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.889" endtime="20201030 10:59:11.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.909" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:11.907" endtime="20201030 10:59:11.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.913" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 10:59:11.911" endtime="20201030 10:59:11.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.902" endtime="20201030 10:59:11.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.929" endtime="20201030 10:59:12.231"></status>
</kw>
<msg timestamp="20201030 10:59:12.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064143792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164216875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.926" endtime="20201030 10:59:12.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064143792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164216875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.235" endtime="20201030 10:59:12.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.243" endtime="20201030 10:59:12.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.920" endtime="20201030 10:59:12.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.917" endtime="20201030 10:59:12.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:12.249" level="INFO">${FILTERED} = [{'diff': 0.10007308300000001}, {'diff': 0.100022361}, {'diff': 0.09993947199999997}, {'diff': 0.10000673700000001}, {'diff': 0.10000679199999996}, {'diff': 0.10000677699999994}, {'diff': 5.4199999999...</msg>
<status status="PASS" starttime="20201030 10:59:12.246" endtime="20201030 10:59:12.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:12.256" level="INFO">${RESULT} = {'diff': [0.10007308300000001, 0.100022361, 0.09993947199999997, 0.10000673700000001, 0.10000679199999996, 0.10000677699999994, 5.419999999922709e-07, 5.410000000205528e-07, 5.419999999922709e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:59:12.250" endtime="20201030 10:59:12.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.261" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:12.260" endtime="20201030 10:59:12.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.263" level="INFO">VALUE: [0.10007308300000001, 0.100022361, 0.09993947199999997, 0.10000673700000001, 0.10000679199999996, 0.10000677699999994, 5.419999999922709e-07, 5.410000000205528e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7200000019564925e-07, 5.419999999922709e-07, 4.7200000041769385e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.410000003536197e-07, 0.10000729199999991, 0.10000675000000037, 0.10000679200000029, 0.1000067360000001, 0.10000690200000051, 0.10000672199999983, 0.10000681899999986]</msg>
<status status="PASS" starttime="20201030 10:59:12.262" endtime="20201030 10:59:12.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.257" endtime="20201030 10:59:12.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.722" endtime="20201030 10:59:12.265"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:05.652" endtime="20201030 10:59:12.267" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:12.276" endtime="20201030 10:59:12.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.275" endtime="20201030 10:59:12.296"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.309" endtime="20201030 10:59:12.325"></status>
</kw>
<msg timestamp="20201030 10:59:12.325" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.308" endtime="20201030 10:59:12.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.328" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.326" endtime="20201030 10:59:12.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.331" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:12.329" endtime="20201030 10:59:12.331"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:12.305" endtime="20201030 10:59:12.332"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:12.303" endtime="20201030 10:59:12.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.301" endtime="20201030 10:59:12.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:12.337" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:12.337" endtime="20201030 10:59:12.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.333" endtime="20201030 10:59:12.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.301" endtime="20201030 10:59:12.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.300" endtime="20201030 10:59:12.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.339" endtime="20201030 10:59:12.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.299" endtime="20201030 10:59:12.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.297" endtime="20201030 10:59:12.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.274" endtime="20201030 10:59:12.342"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.351" endtime="20201030 10:59:18.472"></status>
</kw>
<msg timestamp="20201030 10:59:18.473" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.349" endtime="20201030 10:59:18.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.479" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.476" endtime="20201030 10:59:18.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.481" endtime="20201030 10:59:18.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.347" endtime="20201030 10:59:18.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.345" endtime="20201030 10:59:18.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:18.492" level="INFO">${RESULT} = {'bg-timer-count': 15, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:59:18.488" endtime="20201030 10:59:18.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.500" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:18.498" endtime="20201030 10:59:18.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.505" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:18.503" endtime="20201030 10:59:18.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.494" endtime="20201030 10:59:18.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.514" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:18.512" endtime="20201030 10:59:18.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.518" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:18.517" endtime="20201030 10:59:18.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.507" endtime="20201030 10:59:18.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.527" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:18.526" endtime="20201030 10:59:18.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.529" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 10:59:18.529" endtime="20201030 10:59:18.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.521" endtime="20201030 10:59:18.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.537" endtime="20201030 10:59:18.832"></status>
</kw>
<msg timestamp="20201030 10:59:18.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064508333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164622819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:18.535" endtime="20201030 10:59:18.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064508333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164622819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:18.837" endtime="20201030 10:59:18.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.844" endtime="20201030 10:59:18.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.532" endtime="20201030 10:59:18.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.531" endtime="20201030 10:59:18.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:18.851" level="INFO">${FILTERED} = [{'diff': 0.100114486}, {'diff': 0.10002511100000003}, {'diff': 0.10002773599999998}, {'diff': 0.099875875}, {'diff': 0.10000672199999994}, {'diff': 0.10000677800000002}, {'diff': 0.10000672200000005}...</msg>
<status status="PASS" starttime="20201030 10:59:18.848" endtime="20201030 10:59:18.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:18.855" level="INFO">${RESULT} = {'diff': [0.100114486, 0.10002511100000003, 0.10002773599999998, 0.099875875, 0.10000672199999994, 0.10000677800000002, 0.10000672200000005, 0.100006806, 0.10000672299999991, 0.100006806, 0.1000067780...</msg>
<status status="PASS" starttime="20201030 10:59:18.852" endtime="20201030 10:59:18.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.859" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:18.858" endtime="20201030 10:59:18.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.861" level="INFO">VALUE: [0.100114486, 0.10002511100000003, 0.10002773599999998, 0.099875875, 0.10000672199999994, 0.10000677800000002, 0.10000672200000005, 0.100006806, 0.10000672299999991, 0.100006806, 0.10000677800000002, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 0.1000071939999998, 0.10000690300000059, 0.10000675000000037, 0.10000680500000048, 0.10000688899999943, 4.7199999997360464e-07, 5.420000004363601e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 10:59:18.860" endtime="20201030 10:59:18.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.856" endtime="20201030 10:59:18.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.343" endtime="20201030 10:59:18.863"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:12.271" endtime="20201030 10:59:18.865" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:18.875" endtime="20201030 10:59:18.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.873" endtime="20201030 10:59:18.895"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.910" endtime="20201030 10:59:18.925"></status>
</kw>
<msg timestamp="20201030 10:59:18.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.908" endtime="20201030 10:59:18.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.926" endtime="20201030 10:59:18.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:18.931" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:18.929" endtime="20201030 10:59:18.931"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:18.906" endtime="20201030 10:59:18.932"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:18.902" endtime="20201030 10:59:18.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.901" endtime="20201030 10:59:18.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:18.936" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:18.936" endtime="20201030 10:59:18.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.933" endtime="20201030 10:59:18.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.900" endtime="20201030 10:59:18.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.899" endtime="20201030 10:59:18.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.938" endtime="20201030 10:59:18.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.898" endtime="20201030 10:59:18.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.896" endtime="20201030 10:59:18.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.871" endtime="20201030 10:59:18.941"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:18.950" endtime="20201030 10:59:25.071"></status>
</kw>
<msg timestamp="20201030 10:59:25.072" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:18.948" endtime="20201030 10:59:25.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.078" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.074" endtime="20201030 10:59:25.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.080" endtime="20201030 10:59:25.084"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.946" endtime="20201030 10:59:25.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.943" endtime="20201030 10:59:25.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:25.092" level="INFO">${RESULT} = {'bg-timer-count': 20, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:59:25.088" endtime="20201030 10:59:25.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.101" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:25.099" endtime="20201030 10:59:25.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.106" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:25.103" endtime="20201030 10:59:25.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.094" endtime="20201030 10:59:25.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.116" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:25.113" endtime="20201030 10:59:25.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.120" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:25.118" endtime="20201030 10:59:25.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.109" endtime="20201030 10:59:25.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.129" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:25.127" endtime="20201030 10:59:25.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.134" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 10:59:25.132" endtime="20201030 10:59:25.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.123" endtime="20201030 10:59:25.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.146" endtime="20201030 10:59:25.440"></status>
</kw>
<msg timestamp="20201030 10:59:25.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064837028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165000208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.144" endtime="20201030 10:59:25.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064837028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165000208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.444" endtime="20201030 10:59:25.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.451" endtime="20201030 10:59:25.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.141" endtime="20201030 10:59:25.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.137" endtime="20201030 10:59:25.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:25.458" level="INFO">${FILTERED} = [{'diff': 0.10016318}, {'diff': 0.100027597}, {'diff': 0.10002972199999999}, {'diff': 0.09982526399999997}, {'diff': 0.10000574999999995}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-...</msg>
<status status="PASS" starttime="20201030 10:59:25.455" endtime="20201030 10:59:25.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:25.462" level="INFO">${RESULT} = {'diff': [0.10016318, 0.100027597, 0.10002972199999999, 0.09982526399999997, 0.10000574999999995, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999...</msg>
<status status="PASS" starttime="20201030 10:59:25.459" endtime="20201030 10:59:25.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.466" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:25.465" endtime="20201030 10:59:25.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.468" level="INFO">VALUE: [0.10016318, 0.100027597, 0.10002972199999999, 0.09982526399999997, 0.10000574999999995, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000719500000033, 0.10000691699999997, 0.10000670900000008, 0.10000681999999994, 0.10000679200000029, 0.10000683399999977, 0.10000675000000037, 0.10000680599999967, 0.10000670899999964, 0.10000684800000004, 0.10000677800000002, 5.410000003536197e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.73000000056345e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 10:59:25.467" endtime="20201030 10:59:25.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.463" endtime="20201030 10:59:25.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:18.942" endtime="20201030 10:59:25.470"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:18.869" endtime="20201030 10:59:25.471" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:25.479" endtime="20201030 10:59:25.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.476" endtime="20201030 10:59:25.499"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.511" endtime="20201030 10:59:25.528"></status>
</kw>
<msg timestamp="20201030 10:59:25.528" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.510" endtime="20201030 10:59:25.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.529" endtime="20201030 10:59:25.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.533" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:25.532" endtime="20201030 10:59:25.534"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:25.507" endtime="20201030 10:59:25.534"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:25.505" endtime="20201030 10:59:25.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.504" endtime="20201030 10:59:25.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:25.539" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:25.538" endtime="20201030 10:59:25.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.536" endtime="20201030 10:59:25.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.503" endtime="20201030 10:59:25.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.502" endtime="20201030 10:59:25.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.541" endtime="20201030 10:59:25.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.501" endtime="20201030 10:59:25.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.499" endtime="20201030 10:59:25.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.475" endtime="20201030 10:59:25.544"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.552" endtime="20201030 10:59:31.674"></status>
</kw>
<msg timestamp="20201030 10:59:31.675" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.551" endtime="20201030 10:59:31.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.680" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.677" endtime="20201030 10:59:31.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.682" endtime="20201030 10:59:31.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.548" endtime="20201030 10:59:31.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.546" endtime="20201030 10:59:31.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:31.693" level="INFO">${RESULT} = {'bg-timer-count': 25, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 10:59:31.690" endtime="20201030 10:59:31.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.704" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:31.700" endtime="20201030 10:59:31.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.709" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:31.707" endtime="20201030 10:59:31.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.695" endtime="20201030 10:59:31.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.718" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:31.716" endtime="20201030 10:59:31.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.723" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:31.721" endtime="20201030 10:59:31.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.712" endtime="20201030 10:59:31.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.732" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:31.730" endtime="20201030 10:59:31.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.737" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 10:59:31.735" endtime="20201030 10:59:31.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.726" endtime="20201030 10:59:31.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.752" endtime="20201030 10:59:32.053"></status>
</kw>
<msg timestamp="20201030 10:59:32.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063649, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.16387375, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:59:31.749" endtime="20201030 10:59:32.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063649, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.16387375, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:59:32.057" endtime="20201030 10:59:32.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.065" endtime="20201030 10:59:32.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.743" endtime="20201030 10:59:32.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.740" endtime="20201030 10:59:32.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:32.071" level="INFO">${FILTERED} = [{'diff': 0.10022475000000002}, {'diff': 0.100029375}, {'diff': 0.10003000000000001}, {'diff': 0.09976147200000002}, {'diff': 0.10000770799999997}, {'diff': 0.10000587499999991}, {'diff': 0.1000077219...</msg>
<status status="PASS" starttime="20201030 10:59:32.068" endtime="20201030 10:59:32.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:32.076" level="INFO">${RESULT} = {'diff': [0.10022475000000002, 0.100029375, 0.10003000000000001, 0.09976147200000002, 0.10000770799999997, 0.10000587499999991, 0.10000772199999997, 0.10000579200000004, 0.10000780499999995, 0.1000058...</msg>
<status status="PASS" starttime="20201030 10:59:32.072" endtime="20201030 10:59:32.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.080" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:32.079" endtime="20201030 10:59:32.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.083" level="INFO">VALUE: [0.10022475000000002, 0.100029375, 0.10003000000000001, 0.09976147200000002, 0.10000770799999997, 0.10000587499999991, 0.10000772199999997, 0.10000579200000004, 0.10000780499999995, 0.10000584699999993, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000629100000014, 0.10000773600000024, 0.10000581899999972, 0.10000770800000014, 0.10000587499999991, 0.10000780500000017, 0.10000587499999991, 0.10000780499999973, 0.10000587499999991, 0.10000780500000062, 0.10000587499999991, 0.10000780499999973, 0.1000058880000001, 0.10000773600000024, 0.10000579199999926, 0.10000780500000062, 0.1000058880000001, 0.10000773600000024]</msg>
<status status="PASS" starttime="20201030 10:59:32.081" endtime="20201030 10:59:32.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.077" endtime="20201030 10:59:32.084"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.544" endtime="20201030 10:59:32.084"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:25.473" endtime="20201030 10:59:32.085" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:58:50.895" endtime="20201030 10:59:32.092"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201030 10:56:49.725" endtime="20201030 10:59:32.125"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
