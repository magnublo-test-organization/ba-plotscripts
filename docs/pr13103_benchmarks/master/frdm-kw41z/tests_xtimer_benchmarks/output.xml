<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 10:56:49.061" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:49.617" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:49.626" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:50.706" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:49.616" endtime="20201030 10:56:50.707"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.709" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:50.708" endtime="20201030 10:56:50.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.615" endtime="20201030 10:56:50.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:50.712" endtime="20201030 10:56:50.895"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.711" endtime="20201030 10:56:50.896"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.909" endtime="20201030 10:56:50.930"></status>
</kw>
<msg timestamp="20201030 10:56:50.931" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['sion: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmark...</msg>
<status status="PASS" starttime="20201030 10:56:50.907" endtime="20201030 10:56:50.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.933" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['sion: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmark...</msg>
<status status="PASS" starttime="20201030 10:56:50.932" endtime="20201030 10:56:50.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:50.937" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:50.934" endtime="20201030 10:56:50.937"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:50.905" endtime="20201030 10:56:50.938"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:50.902" endtime="20201030 10:56:50.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.901" endtime="20201030 10:56:50.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:50.942" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:50.941" endtime="20201030 10:56:50.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.939" endtime="20201030 10:56:50.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.900" endtime="20201030 10:56:50.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.900" endtime="20201030 10:56:50.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.945" endtime="20201030 10:56:50.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.898" endtime="20201030 10:56:50.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:50.947" endtime="20201030 10:56:50.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.897" endtime="20201030 10:56:50.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:49.613" endtime="20201030 10:56:50.952"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:50.964" endtime="20201030 10:56:50.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.961" endtime="20201030 10:56:50.987"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.015" endtime="20201030 10:56:51.037"></status>
</kw>
<msg timestamp="20201030 10:56:51.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.012" endtime="20201030 10:56:51.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.044" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.041" endtime="20201030 10:56:51.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.050" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:51.046" endtime="20201030 10:56:51.051"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:51.006" endtime="20201030 10:56:51.052"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:51.001" endtime="20201030 10:56:51.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.997" endtime="20201030 10:56:51.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:51.057" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:51.056" endtime="20201030 10:56:51.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.054" endtime="20201030 10:56:51.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.996" endtime="20201030 10:56:51.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.994" endtime="20201030 10:56:51.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.059" endtime="20201030 10:56:51.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.992" endtime="20201030 10:56:51.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.988" endtime="20201030 10:56:51.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:50.958" endtime="20201030 10:56:51.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.070" endtime="20201030 10:56:51.086"></status>
</kw>
<msg timestamp="20201030 10:56:51.086" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.067" endtime="20201030 10:56:51.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.089" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:51.087" endtime="20201030 10:56:51.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:51.090" endtime="20201030 10:56:51.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.064" endtime="20201030 10:56:51.092"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.062" endtime="20201030 10:56:51.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.097" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 10:56:51.096" endtime="20201030 10:56:51.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.099" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 10:56:51.098" endtime="20201030 10:56:51.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.093" endtime="20201030 10:56:51.099"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:50.953" endtime="20201030 10:56:51.100" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:56:49.169" endtime="20201030 10:56:51.103"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:56:51.157" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:56:51.165" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:56:52.245" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:56:51.155" endtime="20201030 10:56:52.246"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.249" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:56:52.247" endtime="20201030 10:56:52.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.154" endtime="20201030 10:56:52.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:52.252" endtime="20201030 10:56:52.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.250" endtime="20201030 10:56:52.473"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.499" endtime="20201030 10:56:52.528"></status>
</kw>
<msg timestamp="20201030 10:56:52.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD'...</msg>
<status status="PASS" starttime="20201030 10:56:52.495" endtime="20201030 10:56:52.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.535" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD'...</msg>
<status status="PASS" starttime="20201030 10:56:52.532" endtime="20201030 10:56:52.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.541" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:52.537" endtime="20201030 10:56:52.542"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:52.490" endtime="20201030 10:56:52.543"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:52.486" endtime="20201030 10:56:52.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.483" endtime="20201030 10:56:52.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:52.553" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:52.551" endtime="20201030 10:56:52.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.547" endtime="20201030 10:56:52.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.481" endtime="20201030 10:56:52.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.480" endtime="20201030 10:56:52.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.556" endtime="20201030 10:56:52.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.478" endtime="20201030 10:56:52.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.562" endtime="20201030 10:56:52.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.475" endtime="20201030 10:56:52.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:51.152" endtime="20201030 10:56:52.567"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:56:52.576" endtime="20201030 10:56:52.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.574" endtime="20201030 10:56:52.596"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.611" endtime="20201030 10:56:52.633"></status>
</kw>
<msg timestamp="20201030 10:56:52.634" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:52.609" endtime="20201030 10:56:52.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.636" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:52.635" endtime="20201030 10:56:52.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.639" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:56:52.637" endtime="20201030 10:56:52.640"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:52.606" endtime="20201030 10:56:52.640"></status>
</kw>
<status status="FAIL" starttime="20201030 10:56:52.604" endtime="20201030 10:56:52.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.602" endtime="20201030 10:56:52.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:56:52.645" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:56:52.644" endtime="20201030 10:56:52.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.642" endtime="20201030 10:56:52.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.601" endtime="20201030 10:56:52.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.601" endtime="20201030 10:56:52.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.647" endtime="20201030 10:56:52.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.599" endtime="20201030 10:56:52.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.597" endtime="20201030 10:56:52.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.572" endtime="20201030 10:56:52.649"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.658" endtime="20201030 10:56:52.674"></status>
</kw>
<msg timestamp="20201030 10:56:52.674" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:52.657" endtime="20201030 10:56:52.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.677" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:52.675" endtime="20201030 10:56:52.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.678" endtime="20201030 10:56:52.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.654" endtime="20201030 10:56:52.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.652" endtime="20201030 10:56:52.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.687" endtime="20201030 10:56:52.976"></status>
</kw>
<msg timestamp="20201030 10:56:52.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073445875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:52.686" endtime="20201030 10:56:52.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:52.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073445875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:52.980" endtime="20201030 10:56:52.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:52.989" endtime="20201030 10:56:52.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.683" endtime="20201030 10:56:52.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.681" endtime="20201030 10:56:52.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:52.995" level="INFO">${RESULT} = [{'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 10:56:52.992" endtime="20201030 10:56:52.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:53.000" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:56:52.997" endtime="20201030 10:56:53.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.004" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:53.003" endtime="20201030 10:56:53.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.007" level="INFO">VALUE: [4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 10:56:53.005" endtime="20201030 10:56:53.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.001" endtime="20201030 10:56:53.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.651" endtime="20201030 10:56:53.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.650" endtime="20201030 10:56:53.009"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.017" endtime="20201030 10:56:53.030"></status>
</kw>
<msg timestamp="20201030 10:56:53.031" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.015" endtime="20201030 10:56:53.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.032" endtime="20201030 10:56:53.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.034" endtime="20201030 10:56:53.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.013" endtime="20201030 10:56:53.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.011" endtime="20201030 10:56:53.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.043" endtime="20201030 10:56:53.348"></status>
</kw>
<msg timestamp="20201030 10:56:53.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073971833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073972306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:53.042" endtime="20201030 10:56:53.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073971833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073972306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:53.353" endtime="20201030 10:56:53.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.363" endtime="20201030 10:56:53.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.039" endtime="20201030 10:56:53.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.037" endtime="20201030 10:56:53.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:53.370" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 10:56:53.367" endtime="20201030 10:56:53.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:53.376" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:56:53.371" endtime="20201030 10:56:53.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.380" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:53.379" endtime="20201030 10:56:53.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.383" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07]</msg>
<status status="PASS" starttime="20201030 10:56:53.381" endtime="20201030 10:56:53.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.377" endtime="20201030 10:56:53.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.010" endtime="20201030 10:56:53.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.009" endtime="20201030 10:56:53.384"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.392" endtime="20201030 10:56:53.408"></status>
</kw>
<msg timestamp="20201030 10:56:53.409" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.390" endtime="20201030 10:56:53.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.411" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.410" endtime="20201030 10:56:53.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.412" endtime="20201030 10:56:53.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.388" endtime="20201030 10:56:53.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.386" endtime="20201030 10:56:53.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.421" endtime="20201030 10:56:53.720"></status>
</kw>
<msg timestamp="20201030 10:56:53.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.422534764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.422535236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:53.420" endtime="20201030 10:56:53.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.422534764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.422535236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:53.725" endtime="20201030 10:56:53.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.735" endtime="20201030 10:56:53.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.417" endtime="20201030 10:56:53.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.415" endtime="20201030 10:56:53.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:53.742" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000291158e-07},...</msg>
<status status="PASS" starttime="20201030 10:56:53.738" endtime="20201030 10:56:53.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:53.747" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4....</msg>
<status status="PASS" starttime="20201030 10:56:53.743" endtime="20201030 10:56:53.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.751" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:53.750" endtime="20201030 10:56:53.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.754" level="INFO">VALUE: [4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7200000008462695e-07]</msg>
<status status="PASS" starttime="20201030 10:56:53.752" endtime="20201030 10:56:53.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.748" endtime="20201030 10:56:53.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.385" endtime="20201030 10:56:53.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.385" endtime="20201030 10:56:53.755"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.764" endtime="20201030 10:56:53.778"></status>
</kw>
<msg timestamp="20201030 10:56:53.779" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.762" endtime="20201030 10:56:53.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:53.781" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:53.780" endtime="20201030 10:56:53.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.782" endtime="20201030 10:56:53.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.759" endtime="20201030 10:56:53.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.757" endtime="20201030 10:56:53.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:53.791" endtime="20201030 10:56:54.095"></status>
</kw>
<msg timestamp="20201030 10:56:54.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.788419806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.788420278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:53.790" endtime="20201030 10:56:54.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.788419806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.788420278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:54.100" endtime="20201030 10:56:54.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.110" endtime="20201030 10:56:54.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.787" endtime="20201030 10:56:54.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.786" endtime="20201030 10:56:54.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:54.117" level="INFO">${RESULT} = [{'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.7200000008462695e-...</msg>
<status status="PASS" starttime="20201030 10:56:54.113" endtime="20201030 10:56:54.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:54.123" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4...</msg>
<status status="PASS" starttime="20201030 10:56:54.118" endtime="20201030 10:56:54.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.127" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:54.126" endtime="20201030 10:56:54.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.129" level="INFO">VALUE: [4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:54.128" endtime="20201030 10:56:54.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.123" endtime="20201030 10:56:54.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.756" endtime="20201030 10:56:54.131"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:53.756" endtime="20201030 10:56:54.131"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.139" endtime="20201030 10:56:54.156"></status>
</kw>
<msg timestamp="20201030 10:56:54.157" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.137" endtime="20201030 10:56:54.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.158" endtime="20201030 10:56:54.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.160" endtime="20201030 10:56:54.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.135" endtime="20201030 10:56:54.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.133" endtime="20201030 10:56:54.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.169" endtime="20201030 10:56:54.478"></status>
</kw>
<msg timestamp="20201030 10:56:54.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.150232764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.150233236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:54.167" endtime="20201030 10:56:54.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.150232764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.150233236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:54.483" endtime="20201030 10:56:54.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.493" endtime="20201030 10:56:54.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.165" endtime="20201030 10:56:54.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.163" endtime="20201030 10:56:54.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:54.500" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 10:56:54.496" endtime="20201030 10:56:54.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:54.506" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201030 10:56:54.501" endtime="20201030 10:56:54.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.510" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:54.509" endtime="20201030 10:56:54.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.512" level="INFO">VALUE: [4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:54.511" endtime="20201030 10:56:54.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.506" endtime="20201030 10:56:54.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.132" endtime="20201030 10:56:54.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.131" endtime="20201030 10:56:54.514"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.521" endtime="20201030 10:56:54.538"></status>
</kw>
<msg timestamp="20201030 10:56:54.538" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.520" endtime="20201030 10:56:54.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.540" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.539" endtime="20201030 10:56:54.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.542" endtime="20201030 10:56:54.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.517" endtime="20201030 10:56:54.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.516" endtime="20201030 10:56:54.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.550" endtime="20201030 10:56:54.850"></status>
</kw>
<msg timestamp="20201030 10:56:54.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.517050278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.51705075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:54.549" endtime="20201030 10:56:54.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.517050278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.51705075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:56:54.855" endtime="20201030 10:56:54.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.865" endtime="20201030 10:56:54.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.546" endtime="20201030 10:56:54.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.545" endtime="20201030 10:56:54.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:54.873" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999998343004e-07}, {'diff': 4.73000000056345e-07}...</msg>
<status status="PASS" starttime="20201030 10:56:54.869" endtime="20201030 10:56:54.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:54.877" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:56:54.874" endtime="20201030 10:56:54.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.881" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:54.880" endtime="20201030 10:56:54.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.884" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:54.882" endtime="20201030 10:56:54.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.878" endtime="20201030 10:56:54.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.515" endtime="20201030 10:56:54.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.514" endtime="20201030 10:56:54.885"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.894" endtime="20201030 10:56:54.910"></status>
</kw>
<msg timestamp="20201030 10:56:54.910" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.892" endtime="20201030 10:56:54.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:54.913" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:54.911" endtime="20201030 10:56:54.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.914" endtime="20201030 10:56:54.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.889" endtime="20201030 10:56:54.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.887" endtime="20201030 10:56:54.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:54.923" endtime="20201030 10:56:55.227"></status>
</kw>
<msg timestamp="20201030 10:56:55.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.888012806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.888013278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:54.921" endtime="20201030 10:56:55.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.888012806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.888013278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:55.232" endtime="20201030 10:56:55.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.242" endtime="20201030 10:56:55.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.919" endtime="20201030 10:56:55.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.917" endtime="20201030 10:56:55.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:55.249" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-...</msg>
<status status="PASS" starttime="20201030 10:56:55.246" endtime="20201030 10:56:55.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:55.255" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:56:55.250" endtime="20201030 10:56:55.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.259" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:55.258" endtime="20201030 10:56:55.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.261" level="INFO">VALUE: [4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:55.260" endtime="20201030 10:56:55.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.255" endtime="20201030 10:56:55.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.886" endtime="20201030 10:56:55.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:54.886" endtime="20201030 10:56:55.263"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.271" endtime="20201030 10:56:55.286"></status>
</kw>
<msg timestamp="20201030 10:56:55.286" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.269" endtime="20201030 10:56:55.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.287" endtime="20201030 10:56:55.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.290" endtime="20201030 10:56:55.291"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.266" endtime="20201030 10:56:55.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.265" endtime="20201030 10:56:55.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.298" endtime="20201030 10:56:55.608"></status>
</kw>
<msg timestamp="20201030 10:56:55.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.250743639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.250744111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:55.297" endtime="20201030 10:56:55.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.250743639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.250744111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:55.613" endtime="20201030 10:56:55.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.624" endtime="20201030 10:56:55.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.294" endtime="20201030 10:56:55.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.293" endtime="20201030 10:56:55.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:55.630" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201030 10:56:55.627" endtime="20201030 10:56:55.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:55.636" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 10:56:55.631" endtime="20201030 10:56:55.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.641" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:55.639" endtime="20201030 10:56:55.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.643" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:55.642" endtime="20201030 10:56:55.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.637" endtime="20201030 10:56:55.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.264" endtime="20201030 10:56:55.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.263" endtime="20201030 10:56:55.645"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.654" endtime="20201030 10:56:55.668"></status>
</kw>
<msg timestamp="20201030 10:56:55.669" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.652" endtime="20201030 10:56:55.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:55.671" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:55.670" endtime="20201030 10:56:55.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.672" endtime="20201030 10:56:55.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.649" endtime="20201030 10:56:55.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.647" endtime="20201030 10:56:55.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:55.682" endtime="20201030 10:56:55.999"></status>
</kw>
<msg timestamp="20201030 10:56:56.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.616638889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.616639361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:55.681" endtime="20201030 10:56:56.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.616638889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.616639361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:56.004" endtime="20201030 10:56:56.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.026" endtime="20201030 10:56:56.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.677" endtime="20201030 10:56:56.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.675" endtime="20201030 10:56:56.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:56.033" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:56:56.030" endtime="20201030 10:56:56.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:56.038" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201030 10:56:56.034" endtime="20201030 10:56:56.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.042" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:56.041" endtime="20201030 10:56:56.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.044" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:56.043" endtime="20201030 10:56:56.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.039" endtime="20201030 10:56:56.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.646" endtime="20201030 10:56:56.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:55.645" endtime="20201030 10:56:56.047"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.054" endtime="20201030 10:56:56.070"></status>
</kw>
<msg timestamp="20201030 10:56:56.070" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.053" endtime="20201030 10:56:56.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.073" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.071" endtime="20201030 10:56:56.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.074" endtime="20201030 10:56:56.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.050" endtime="20201030 10:56:56.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.049" endtime="20201030 10:56:56.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.083" endtime="20201030 10:56:56.402"></status>
</kw>
<msg timestamp="20201030 10:56:56.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.987592042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.987592514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:56.081" endtime="20201030 10:56:56.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.987592042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.987592514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:56.407" endtime="20201030 10:56:56.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.417" endtime="20201030 10:56:56.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.079" endtime="20201030 10:56:56.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.077" endtime="20201030 10:56:56.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:56.424" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999996122558e-07}, ...</msg>
<status status="PASS" starttime="20201030 10:56:56.421" endtime="20201030 10:56:56.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:56.430" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:56:56.425" endtime="20201030 10:56:56.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.434" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:56.433" endtime="20201030 10:56:56.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.436" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:56.435" endtime="20201030 10:56:56.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.430" endtime="20201030 10:56:56.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.047" endtime="20201030 10:56:56.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.047" endtime="20201030 10:56:56.438"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.446" endtime="20201030 10:56:56.466"></status>
</kw>
<msg timestamp="20201030 10:56:56.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.444" endtime="20201030 10:56:56.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.468" endtime="20201030 10:56:56.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.470" endtime="20201030 10:56:56.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.442" endtime="20201030 10:56:56.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.440" endtime="20201030 10:56:56.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.479" endtime="20201030 10:56:56.789"></status>
</kw>
<msg timestamp="20201030 10:56:56.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.379549, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.379549472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:56:56.478" endtime="20201030 10:56:56.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.379549, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.379549472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:56:56.794" endtime="20201030 10:56:56.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.804" endtime="20201030 10:56:56.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.475" endtime="20201030 10:56:56.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.473" endtime="20201030 10:56:56.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:56.811" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201030 10:56:56.807" endtime="20201030 10:56:56.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:56.816" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 10:56:56.812" endtime="20201030 10:56:56.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.820" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:56.819" endtime="20201030 10:56:56.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.822" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:56.821" endtime="20201030 10:56:56.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.817" endtime="20201030 10:56:56.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.439" endtime="20201030 10:56:56.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.438" endtime="20201030 10:56:56.824"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.833" endtime="20201030 10:56:56.849"></status>
</kw>
<msg timestamp="20201030 10:56:56.850" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.830" endtime="20201030 10:56:56.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:56.852" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:56.851" endtime="20201030 10:56:56.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.853" endtime="20201030 10:56:56.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.827" endtime="20201030 10:56:56.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.826" endtime="20201030 10:56:56.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:56.862" endtime="20201030 10:56:57.177"></status>
</kw>
<msg timestamp="20201030 10:56:57.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.761435181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.761435653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:56.861" endtime="20201030 10:56:57.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.761435181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.761435653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.182" endtime="20201030 10:56:57.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.192" endtime="20201030 10:56:57.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.858" endtime="20201030 10:56:57.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.856" endtime="20201030 10:56:57.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:57.199" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 10:56:57.196" endtime="20201030 10:56:57.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:57.205" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, ...</msg>
<status status="PASS" starttime="20201030 10:56:57.200" endtime="20201030 10:56:57.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.209" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:57.208" endtime="20201030 10:56:57.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.211" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 10:56:57.210" endtime="20201030 10:56:57.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.205" endtime="20201030 10:56:57.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.825" endtime="20201030 10:56:57.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:56.824" endtime="20201030 10:56:57.213"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.220" endtime="20201030 10:56:57.236"></status>
</kw>
<msg timestamp="20201030 10:56:57.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.219" endtime="20201030 10:56:57.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.237" endtime="20201030 10:56:57.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.240" endtime="20201030 10:56:57.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.216" endtime="20201030 10:56:57.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.215" endtime="20201030 10:56:57.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.249" endtime="20201030 10:56:57.559"></status>
</kw>
<msg timestamp="20201030 10:56:57.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.138333861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.138334333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.247" endtime="20201030 10:56:57.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.138333861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.138334333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.565" endtime="20201030 10:56:57.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.574" endtime="20201030 10:56:57.576"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.245" endtime="20201030 10:56:57.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.243" endtime="20201030 10:56:57.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:57.581" level="INFO">${RESULT} = [{'diff': 4.7200000086178306e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:56:57.578" endtime="20201030 10:56:57.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:57.587" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201030 10:56:57.583" endtime="20201030 10:56:57.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.592" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:57.590" endtime="20201030 10:56:57.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.594" level="INFO">VALUE: [4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:57.593" endtime="20201030 10:56:57.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.588" endtime="20201030 10:56:57.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.214" endtime="20201030 10:56:57.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.213" endtime="20201030 10:56:57.596"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.604" endtime="20201030 10:56:57.617"></status>
</kw>
<msg timestamp="20201030 10:56:57.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.602" endtime="20201030 10:56:57.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.620" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.619" endtime="20201030 10:56:57.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.621" endtime="20201030 10:56:57.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.599" endtime="20201030 10:56:57.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.598" endtime="20201030 10:56:57.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.630" endtime="20201030 10:56:57.948"></status>
</kw>
<msg timestamp="20201030 10:56:57.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.514323931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.514324403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.629" endtime="20201030 10:56:57.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.514323931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.514324403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:57.953" endtime="20201030 10:56:57.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.963" endtime="20201030 10:56:57.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.626" endtime="20201030 10:56:57.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.624" endtime="20201030 10:56:57.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:57.970" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:56:57.966" endtime="20201030 10:56:57.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:57.974" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 10:56:57.971" endtime="20201030 10:56:57.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.979" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:57.978" endtime="20201030 10:56:57.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:57.981" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:57.980" endtime="20201030 10:56:57.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.975" endtime="20201030 10:56:57.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.596" endtime="20201030 10:56:57.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.596" endtime="20201030 10:56:57.983"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:57.993" endtime="20201030 10:56:58.009"></status>
</kw>
<msg timestamp="20201030 10:56:58.009" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:57.991" endtime="20201030 10:56:58.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.012" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.010" endtime="20201030 10:56:58.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.013" endtime="20201030 10:56:58.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.986" endtime="20201030 10:56:58.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.985" endtime="20201030 10:56:58.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.022" endtime="20201030 10:56:58.339"></status>
</kw>
<msg timestamp="20201030 10:56:58.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.886150389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.886150861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.020" endtime="20201030 10:56:58.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.886150389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.886150861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.344" endtime="20201030 10:56:58.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.354" endtime="20201030 10:56:58.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.018" endtime="20201030 10:56:58.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.016" endtime="20201030 10:56:58.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:58.361" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 10:56:58.357" endtime="20201030 10:56:58.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:58.366" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:56:58.362" endtime="20201030 10:56:58.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.370" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:58.369" endtime="20201030 10:56:58.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.373" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:58.372" endtime="20201030 10:56:58.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.367" endtime="20201030 10:56:58.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.983" endtime="20201030 10:56:58.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:57.983" endtime="20201030 10:56:58.375"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.382" endtime="20201030 10:56:58.398"></status>
</kw>
<msg timestamp="20201030 10:56:58.399" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.381" endtime="20201030 10:56:58.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.401" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.400" endtime="20201030 10:56:58.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.402" endtime="20201030 10:56:58.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.378" endtime="20201030 10:56:58.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.376" endtime="20201030 10:56:58.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.412" endtime="20201030 10:56:58.723"></status>
</kw>
<msg timestamp="20201030 10:56:58.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.268026444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.268026917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.410" endtime="20201030 10:56:58.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.268026444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.268026917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.728" endtime="20201030 10:56:58.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.737" endtime="20201030 10:56:58.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.407" endtime="20201030 10:56:58.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.405" endtime="20201030 10:56:58.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:58.744" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201030 10:56:58.741" endtime="20201030 10:56:58.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:58.750" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73...</msg>
<status status="PASS" starttime="20201030 10:56:58.745" endtime="20201030 10:56:58.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.754" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:58.753" endtime="20201030 10:56:58.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.757" level="INFO">VALUE: [4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:58.755" endtime="20201030 10:56:58.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.751" endtime="20201030 10:56:58.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.375" endtime="20201030 10:56:58.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.375" endtime="20201030 10:56:58.758"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.766" endtime="20201030 10:56:58.783"></status>
</kw>
<msg timestamp="20201030 10:56:58.783" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.765" endtime="20201030 10:56:58.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:58.786" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:58.784" endtime="20201030 10:56:58.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.787" endtime="20201030 10:56:58.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.762" endtime="20201030 10:56:58.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.760" endtime="20201030 10:56:58.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:58.796" endtime="20201030 10:56:59.117"></status>
</kw>
<msg timestamp="20201030 10:56:59.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.645867472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.645867944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:58.795" endtime="20201030 10:56:59.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.645867472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.645867944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.122" endtime="20201030 10:56:59.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.132" endtime="20201030 10:56:59.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.792" endtime="20201030 10:56:59.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.790" endtime="20201030 10:56:59.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:59.138" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:56:59.135" endtime="20201030 10:56:59.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:59.143" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 10:56:59.139" endtime="20201030 10:56:59.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.147" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:59.146" endtime="20201030 10:56:59.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.150" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:59.148" endtime="20201030 10:56:59.150"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.144" endtime="20201030 10:56:59.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.759" endtime="20201030 10:56:59.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:58.759" endtime="20201030 10:56:59.151"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.160" endtime="20201030 10:56:59.174"></status>
</kw>
<msg timestamp="20201030 10:56:59.175" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.158" endtime="20201030 10:56:59.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.177" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.176" endtime="20201030 10:56:59.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.178" endtime="20201030 10:56:59.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.155" endtime="20201030 10:56:59.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.153" endtime="20201030 10:56:59.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.188" endtime="20201030 10:56:59.506"></status>
</kw>
<msg timestamp="20201030 10:56:59.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.021813681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.021814153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.186" endtime="20201030 10:56:59.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.021813681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.021814153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.511" endtime="20201030 10:56:59.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.521" endtime="20201030 10:56:59.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.184" endtime="20201030 10:56:59.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.182" endtime="20201030 10:56:59.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:59.528" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201030 10:56:59.524" endtime="20201030 10:56:59.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:59.533" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 10:56:59.529" endtime="20201030 10:56:59.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.537" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:59.536" endtime="20201030 10:56:59.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.540" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:59.538" endtime="20201030 10:56:59.540"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.534" endtime="20201030 10:56:59.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.152" endtime="20201030 10:56:59.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.152" endtime="20201030 10:56:59.541"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.549" endtime="20201030 10:56:59.567"></status>
</kw>
<msg timestamp="20201030 10:56:59.568" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.548" endtime="20201030 10:56:59.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.570" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.569" endtime="20201030 10:56:59.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.571" endtime="20201030 10:56:59.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.545" endtime="20201030 10:56:59.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.543" endtime="20201030 10:56:59.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.580" endtime="20201030 10:56:59.892"></status>
</kw>
<msg timestamp="20201030 10:56:59.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.403703222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.403703694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.579" endtime="20201030 10:56:59.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.403703222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.403703694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.897" endtime="20201030 10:56:59.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.907" endtime="20201030 10:56:59.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.576" endtime="20201030 10:56:59.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.575" endtime="20201030 10:56:59.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:56:59.914" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 10:56:59.911" endtime="20201030 10:56:59.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:56:59.920" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, ...</msg>
<status status="PASS" starttime="20201030 10:56:59.915" endtime="20201030 10:56:59.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.924" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:56:59.923" endtime="20201030 10:56:59.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.926" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:56:59.925" endtime="20201030 10:56:59.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.921" endtime="20201030 10:56:59.927"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.542" endtime="20201030 10:56:59.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.542" endtime="20201030 10:56:59.928"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.936" endtime="20201030 10:56:59.955"></status>
</kw>
<msg timestamp="20201030 10:56:59.955" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.934" endtime="20201030 10:56:59.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:56:59.958" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:56:59.956" endtime="20201030 10:56:59.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.959" endtime="20201030 10:56:59.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.932" endtime="20201030 10:56:59.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.930" endtime="20201030 10:56:59.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:56:59.969" endtime="20201030 10:57:00.286"></status>
</kw>
<msg timestamp="20201030 10:57:00.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.786536972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.786537444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:56:59.967" endtime="20201030 10:57:00.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.786536972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.786537444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.291" endtime="20201030 10:57:00.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.301" endtime="20201030 10:57:00.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.964" endtime="20201030 10:57:00.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.962" endtime="20201030 10:57:00.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.308" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 10:57:00.304" endtime="20201030 10:57:00.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:00.312" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 10:57:00.309" endtime="20201030 10:57:00.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.317" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:00.315" endtime="20201030 10:57:00.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.319" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 10:57:00.318" endtime="20201030 10:57:00.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.313" endtime="20201030 10:57:00.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.929" endtime="20201030 10:57:00.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:59.928" endtime="20201030 10:57:00.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:56:52.650" endtime="20201030 10:57:00.321"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:56:52.568" endtime="20201030 10:57:00.322" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:00.330" endtime="20201030 10:57:00.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.328" endtime="20201030 10:57:00.350"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.364" endtime="20201030 10:57:00.385"></status>
</kw>
<msg timestamp="20201030 10:57:00.386" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.363" endtime="20201030 10:57:00.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.388" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.387" endtime="20201030 10:57:00.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.391" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:00.389" endtime="20201030 10:57:00.391"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:00.360" endtime="20201030 10:57:00.392"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:00.358" endtime="20201030 10:57:00.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.356" endtime="20201030 10:57:00.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:00.397" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:00.396" endtime="20201030 10:57:00.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.394" endtime="20201030 10:57:00.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.355" endtime="20201030 10:57:00.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.354" endtime="20201030 10:57:00.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.398" endtime="20201030 10:57:00.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.353" endtime="20201030 10:57:00.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.351" endtime="20201030 10:57:00.401"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.327" endtime="20201030 10:57:00.401"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.410" endtime="20201030 10:57:00.426"></status>
</kw>
<msg timestamp="20201030 10:57:00.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.408" endtime="20201030 10:57:00.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.429" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.427" endtime="20201030 10:57:00.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.430" endtime="20201030 10:57:00.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.406" endtime="20201030 10:57:00.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.404" endtime="20201030 10:57:00.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.439" endtime="20201030 10:57:00.722"></status>
</kw>
<msg timestamp="20201030 10:57:00.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071823083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0718275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:00.437" endtime="20201030 10:57:00.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071823083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0718275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:00.726" endtime="20201030 10:57:00.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.735" endtime="20201030 10:57:00.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.435" endtime="20201030 10:57:00.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.433" endtime="20201030 10:57:00.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:00.742" level="INFO">${RESULT} = [{'diff': 4.4170000000065546e-06}, {'diff': 4.429999999999712e-06}, {'diff': 4.459000000012203e-06}, {'diff': 4.429999999999712e-06}, {'diff': 4.34800000000124e-06}, {'diff': 4.389000000007415e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:00.739" endtime="20201030 10:57:00.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:00.746" level="INFO">${OVERHEAD} = {'diff': [4.4170000000065546e-06, 4.429999999999712e-06, 4.459000000012203e-06, 4.429999999999712e-06, 4.34800000000124e-06, 4.389000000007415e-06, 4.416999999992677e-06, 4.416000000007081e-06, 4.4030...</msg>
<status status="PASS" starttime="20201030 10:57:00.743" endtime="20201030 10:57:00.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.750" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:00.749" endtime="20201030 10:57:00.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.752" level="INFO">VALUE: [4.4170000000065546e-06, 4.429999999999712e-06, 4.459000000012203e-06, 4.429999999999712e-06, 4.34800000000124e-06, 4.389000000007415e-06, 4.416999999992677e-06, 4.416000000007081e-06, 4.403000000000046e-06, 4.430999999999186e-06, 4.444000000006221e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.444999999991817e-06, 4.431000000013063e-06, 4.429999999999712e-06, 4.388999999993537e-06, 4.402000000000572e-06, 4.415999999993203e-06, 4.444000000006221e-06, 4.388999999993537e-06, 4.415999999993203e-06, 4.403000000000046e-06, 4.443999999992343e-06, 4.403000000000046e-06, 4.4170000000065546e-06, 4.375000000000906e-06, 4.429999999999712e-06, 4.402000000000572e-06, 4.403000000000046e-06, 4.389000000007415e-06, 4.416999999992677e-06, 4.403000000000046e-06, 4.388999999993537e-06, 4.402000000000572e-06, 4.443999999992343e-06, 4.430999999999186e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.443999999992343e-06, 4.388999999993537e-06, 4.512999999997658e-06, 4.347000000001766e-06, 4.444000000006221e-06, 4.389000000007415e-06, 4.415999999993203e-06, 4.387999999994063e-06, 4.415999999993203e-06, 4.403000000000046e-06]</msg>
<status status="PASS" starttime="20201030 10:57:00.751" endtime="20201030 10:57:00.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.747" endtime="20201030 10:57:00.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.403" endtime="20201030 10:57:00.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.402" endtime="20201030 10:57:00.755"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.763" endtime="20201030 10:57:00.778"></status>
</kw>
<msg timestamp="20201030 10:57:00.779" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.761" endtime="20201030 10:57:00.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:00.781" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:00.780" endtime="20201030 10:57:00.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.782" endtime="20201030 10:57:00.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.758" endtime="20201030 10:57:00.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.757" endtime="20201030 10:57:00.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:00.791" endtime="20201030 10:57:01.099"></status>
</kw>
<msg timestamp="20201030 10:57:01.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072237625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072242056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:00.790" endtime="20201030 10:57:01.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072237625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072242056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.104" endtime="20201030 10:57:01.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.114" endtime="20201030 10:57:01.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.787" endtime="20201030 10:57:01.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.785" endtime="20201030 10:57:01.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:01.127" level="INFO">${RESULT} = [{'diff': 4.430999999999186e-06}, {'diff': 4.430999999999186e-06}, {'diff': 4.403000000000046e-06}, {'diff': 4.429999999999712e-06}, {'diff': 4.443999999992343e-06}, {'diff': 4.388999999993537e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:01.124" endtime="20201030 10:57:01.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:01.133" level="INFO">${OVERHEAD} = {'diff': [4.430999999999186e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.443999999992343e-06, 4.388999999993537e-06, 4.512999999997658e-06, 4.347000000001766e-06, 4.4440...</msg>
<status status="PASS" starttime="20201030 10:57:01.128" endtime="20201030 10:57:01.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.137" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:01.136" endtime="20201030 10:57:01.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.139" level="INFO">VALUE: [4.430999999999186e-06, 4.430999999999186e-06, 4.403000000000046e-06, 4.429999999999712e-06, 4.443999999992343e-06, 4.388999999993537e-06, 4.512999999997658e-06, 4.347000000001766e-06, 4.444000000006221e-06, 4.389000000007415e-06, 4.415999999993203e-06, 4.387999999994063e-06, 4.415999999993203e-06, 4.403000000000046e-06, 4.41700000003431e-06, 4.444999999964061e-06, 4.41700000003431e-06, 4.429999999999712e-06, 4.445000000019572e-06, 4.443999999992343e-06, 4.443999999992343e-06, 4.375000000000906e-06, 4.41599999995157e-06, 4.403000000041679e-06, 4.388999999993537e-06, 4.402999999986168e-06, 4.361000000008275e-06, 4.43099999997143e-06, 4.457999999984974e-06, 4.416999999978799e-06, 4.429999999999712e-06, 4.416000000007081e-06, 4.40200000001445e-06, 4.43099999997143e-06, 4.388999999993537e-06, 4.40200000001445e-06, 4.375000000000906e-06, 4.41700000003431e-06, 4.402999999986168e-06, 4.416999999978799e-06, 4.375000000000906e-06, 4.41700000003431e-06, 4.403000000041679e-06, 4.486000000025747e-06, 4.444999999964061e-06, 4.416999999978799e-06, 4.388999999993537e-06, 4.388999999993537e-06, 4.388999999993537e-06, 4.347000000015644e-06, 4.416999999978799e-06, 4.431000000026941e-06, 4.416000000007081e-06, 4.41700000003431e-06, 4.402999999986168e-06, 4.443999999992343e-06, 4.445000000019572e-06, 4.403000000041679e-06, 4.375000000000906e-06, 4.402999999986168e-06, 4.402999999986168e-06, 4.431000000026941e-06, 4.429999999999712e-06, 4.387999999966308e-06]</msg>
<status status="PASS" starttime="20201030 10:57:01.138" endtime="20201030 10:57:01.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.134" endtime="20201030 10:57:01.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.755" endtime="20201030 10:57:01.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.755" endtime="20201030 10:57:01.141"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.149" endtime="20201030 10:57:01.165"></status>
</kw>
<msg timestamp="20201030 10:57:01.166" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.147" endtime="20201030 10:57:01.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.168" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.167" endtime="20201030 10:57:01.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.169" endtime="20201030 10:57:01.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.144" endtime="20201030 10:57:01.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.143" endtime="20201030 10:57:01.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.178" endtime="20201030 10:57:01.492"></status>
</kw>
<msg timestamp="20201030 10:57:01.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.41304875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.413053167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:01.177" endtime="20201030 10:57:01.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.41304875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.413053167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:01.497" endtime="20201030 10:57:01.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.508" endtime="20201030 10:57:01.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.174" endtime="20201030 10:57:01.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.172" endtime="20201030 10:57:01.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:01.515" level="INFO">${RESULT} = [{'diff': 4.416999999978799e-06}, {'diff': 4.431000000026941e-06}, {'diff': 4.416000000007081e-06}, {'diff': 4.41700000003431e-06}, {'diff': 4.402999999986168e-06}, {'diff': 4.443999999992343e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:01.511" endtime="20201030 10:57:01.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:01.519" level="INFO">${OVERHEAD} = {'diff': [4.416999999978799e-06, 4.431000000026941e-06, 4.416000000007081e-06, 4.41700000003431e-06, 4.402999999986168e-06, 4.443999999992343e-06, 4.445000000019572e-06, 4.403000000041679e-06, 4.37500...</msg>
<status status="PASS" starttime="20201030 10:57:01.516" endtime="20201030 10:57:01.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.523" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:01.522" endtime="20201030 10:57:01.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.526" level="INFO">VALUE: [4.416999999978799e-06, 4.431000000026941e-06, 4.416000000007081e-06, 4.41700000003431e-06, 4.402999999986168e-06, 4.443999999992343e-06, 4.445000000019572e-06, 4.403000000041679e-06, 4.375000000000906e-06, 4.402999999986168e-06, 4.402999999986168e-06, 4.431000000026941e-06, 4.429999999999712e-06, 4.387999999966308e-06, 4.403000000041679e-06, 4.401999999958939e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.416000000007081e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.388999999993537e-06, 4.346999999960133e-06, 4.445000000075083e-06, 4.430000000055223e-06, 4.403000000041679e-06, 4.431000000026941e-06, 4.416999999978799e-06, 4.431000000026941e-06, 4.431000000026941e-06, 4.416999999978799e-06, 4.458000000040485e-06, 4.429999999944201e-06, 4.403000000041679e-06, 4.416999999978799e-06, 4.374999999945395e-06, 4.457999999929463e-06, 4.430000000055223e-06, 4.444999999964061e-06, 4.431000000026941e-06, 4.458000000040485e-06, 4.459000000012203e-06, 4.388999999993537e-06, 4.375000000056417e-06, 4.416999999978799e-06, 4.416000000007081e-06, 4.403000000041679e-06, 4.361000000008275e-06, 4.402999999930657e-06, 4.430000000055223e-06, 4.403000000041679e-06, 4.347000000071155e-06, 4.444999999964061e-06, 4.513999999899987e-06, 4.403000000041679e-06, 4.443999999992343e-06, 4.416999999978799e-06, 4.402999999930657e-06, 4.416999999978799e-06, 4.457999999929463e-06, 4.472999999949323e-06, 4.403000000041679e-06, 4.401999999958939e-06, 4.403000000041679e-06]</msg>
<status status="PASS" starttime="20201030 10:57:01.524" endtime="20201030 10:57:01.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.520" endtime="20201030 10:57:01.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.142" endtime="20201030 10:57:01.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.141" endtime="20201030 10:57:01.527"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.536" endtime="20201030 10:57:01.552"></status>
</kw>
<msg timestamp="20201030 10:57:01.552" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.534" endtime="20201030 10:57:01.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.555" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.553" endtime="20201030 10:57:01.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.556" endtime="20201030 10:57:01.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.531" endtime="20201030 10:57:01.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.529" endtime="20201030 10:57:01.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.565" endtime="20201030 10:57:01.858"></status>
</kw>
<msg timestamp="20201030 10:57:01.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.790799764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.790804167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.563" endtime="20201030 10:57:01.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.790799764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.790804167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.865" endtime="20201030 10:57:01.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.878" endtime="20201030 10:57:01.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.561" endtime="20201030 10:57:01.881"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.559" endtime="20201030 10:57:01.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:01.886" level="INFO">${RESULT} = [{'diff': 4.403000000041679e-06}, {'diff': 4.347000000071155e-06}, {'diff': 4.444999999964061e-06}, {'diff': 4.513999999899987e-06}, {'diff': 4.403000000041679e-06}, {'diff': 4.443999999992343e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:01.882" endtime="20201030 10:57:01.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:01.893" level="INFO">${OVERHEAD} = {'diff': [4.403000000041679e-06, 4.347000000071155e-06, 4.444999999964061e-06, 4.513999999899987e-06, 4.403000000041679e-06, 4.443999999992343e-06, 4.416999999978799e-06, 4.402999999930657e-06, 4.4169...</msg>
<status status="PASS" starttime="20201030 10:57:01.888" endtime="20201030 10:57:01.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.899" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:01.897" endtime="20201030 10:57:01.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.902" level="INFO">VALUE: [4.403000000041679e-06, 4.347000000071155e-06, 4.444999999964061e-06, 4.513999999899987e-06, 4.403000000041679e-06, 4.443999999992343e-06, 4.416999999978799e-06, 4.402999999930657e-06, 4.416999999978799e-06, 4.457999999929463e-06, 4.472999999949323e-06, 4.403000000041679e-06, 4.401999999958939e-06, 4.403000000041679e-06, 4.388999999882515e-06, 4.431000000026941e-06, 4.443999999992343e-06, 4.431000000026941e-06, 4.415999999896059e-06, 4.375000000056417e-06, 4.402000000069961e-06, 4.431000000026941e-06, 4.443999999992343e-06, 4.416999999978799e-06, 4.402999999930657e-06, 4.471999999866583e-06, 4.443999999992343e-06, 4.416000000118103e-06, 4.416000000118103e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.415999999896059e-06, 4.388999999882515e-06, 4.389000000104559e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.499999999962867e-06, 4.485999999914725e-06, 4.431000000026941e-06, 4.402999999930657e-06, 4.3749999998343725e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.416999999978799e-06, 4.431000000026941e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.443999999992343e-06, 4.429999999944201e-06, 4.3749999998343725e-06, 4.375000000056417e-06, 4.431000000026941e-06, 4.472999999949323e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.473000000171368e-06, 4.402999999930657e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.429999999944201e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.431000000026941e-06, 4.402000000069961e-06]</msg>
<status status="PASS" starttime="20201030 10:57:01.900" endtime="20201030 10:57:01.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.895" endtime="20201030 10:57:01.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.528" endtime="20201030 10:57:01.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.528" endtime="20201030 10:57:01.904"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.912" endtime="20201030 10:57:01.928"></status>
</kw>
<msg timestamp="20201030 10:57:01.929" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.910" endtime="20201030 10:57:01.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:01.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:01.930" endtime="20201030 10:57:01.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.932" endtime="20201030 10:57:01.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.907" endtime="20201030 10:57:01.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.906" endtime="20201030 10:57:01.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:01.941" endtime="20201030 10:57:02.245"></status>
</kw>
<msg timestamp="20201030 10:57:02.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.168626653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.168631028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:01.940" endtime="20201030 10:57:02.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.168626653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.168631028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.251" endtime="20201030 10:57:02.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.261" endtime="20201030 10:57:02.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.937" endtime="20201030 10:57:02.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.935" endtime="20201030 10:57:02.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.268" level="INFO">${RESULT} = [{'diff': 4.375000000056417e-06}, {'diff': 4.431000000026941e-06}, {'diff': 4.472999999949323e-06}, {'diff': 4.429999999944201e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.473000000171368e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:02.264" endtime="20201030 10:57:02.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:02.273" level="INFO">${OVERHEAD} = {'diff': [4.375000000056417e-06, 4.431000000026941e-06, 4.472999999949323e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.473000000171368e-06, 4.402999999930657e-06, 4.388999999882515e-06, 4.4169...</msg>
<status status="PASS" starttime="20201030 10:57:02.269" endtime="20201030 10:57:02.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.277" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:02.276" endtime="20201030 10:57:02.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.280" level="INFO">VALUE: [4.375000000056417e-06, 4.431000000026941e-06, 4.472999999949323e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.473000000171368e-06, 4.402999999930657e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.429999999944201e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.431000000026941e-06, 4.402000000069961e-06, 4.402999999930657e-06, 4.431000000026941e-06, 4.429999999944201e-06, 4.443999999992343e-06, 4.4030000001527014e-06, 4.402999999930657e-06, 4.4030000001527014e-06, 4.431000000026941e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.4590000001232255e-06, 4.416999999978799e-06, 4.389000000104559e-06, 4.346999999960133e-06, 4.402999999930657e-06, 4.402999999930657e-06, 4.417000000200844e-06, 4.4030000001527014e-06, 4.499999999962867e-06, 4.389000000104559e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.402999999930657e-06, 4.430000000166245e-06, 4.444999999853039e-06, 4.415999999896059e-06, 4.375000000056417e-06, 4.443999999992343e-06, 4.416999999978799e-06, 4.458999999901181e-06, 4.416999999978799e-06, 4.431000000026941e-06, 4.443999999992343e-06, 4.389000000104559e-06, 4.402999999930657e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.430000000166245e-06, 4.388999999882515e-06, 4.4590000001232255e-06, 4.402999999930657e-06, 4.415999999896059e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.429999999944201e-06]</msg>
<status status="PASS" starttime="20201030 10:57:02.278" endtime="20201030 10:57:02.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.274" endtime="20201030 10:57:02.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.905" endtime="20201030 10:57:02.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:01.904" endtime="20201030 10:57:02.282"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.289" endtime="20201030 10:57:02.306"></status>
</kw>
<msg timestamp="20201030 10:57:02.307" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.288" endtime="20201030 10:57:02.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.309" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.308" endtime="20201030 10:57:02.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.310" endtime="20201030 10:57:02.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.285" endtime="20201030 10:57:02.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.283" endtime="20201030 10:57:02.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.319" endtime="20201030 10:57:02.621"></status>
</kw>
<msg timestamp="20201030 10:57:02.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.534543528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.534547931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.318" endtime="20201030 10:57:02.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.534543528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.534547931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.627" endtime="20201030 10:57:02.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.637" endtime="20201030 10:57:02.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.315" endtime="20201030 10:57:02.639"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.314" endtime="20201030 10:57:02.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:02.643" level="INFO">${RESULT} = [{'diff': 4.4030000001527014e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.430000000166245e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:02.640" endtime="20201030 10:57:02.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:02.648" level="INFO">${OVERHEAD} = {'diff': [4.4030000001527014e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.430000000166245e-06, 4.388999999882515e-06, 4.4590000001232255e-06, 4.4...</msg>
<status status="PASS" starttime="20201030 10:57:02.644" endtime="20201030 10:57:02.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.652" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:02.651" endtime="20201030 10:57:02.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.655" level="INFO">VALUE: [4.4030000001527014e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.430000000166245e-06, 4.388999999882515e-06, 4.4590000001232255e-06, 4.402999999930657e-06, 4.415999999896059e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.429999999944201e-06, 4.362000000091015e-06, 4.443999999992343e-06, 4.402999999930657e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.402999999930657e-06, 4.415999999896059e-06, 4.402999999930657e-06, 4.431000000026941e-06, 4.416000000118103e-06, 4.402999999930657e-06, 4.388999999882515e-06, 4.402999999930657e-06, 4.4030000001527014e-06, 4.375000000056417e-06, 4.445000000075083e-06, 4.361000000008275e-06, 4.402999999930657e-06, 4.4309999998048966e-06, 4.443999999992343e-06, 4.416000000118103e-06, 4.4030000001527014e-06, 4.319999999946589e-06, 4.402999999930657e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.4860000001367695e-06, 4.361000000008275e-06, 4.431000000026941e-06, 4.402999999930657e-06, 4.415999999896059e-06, 4.431000000026941e-06, 4.431000000026941e-06, 4.429999999944201e-06, 4.415999999896059e-06, 4.402999999930657e-06, 4.416000000118103e-06, 4.443999999992343e-06, 4.431000000026941e-06, 4.431000000026941e-06, 4.417000000200844e-06, 4.4030000001527014e-06, 4.402999999930657e-06, 4.417000000200844e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.3479999998208285e-06, 4.402999999930657e-06, 4.4030000001527014e-06, 4.402000000069961e-06]</msg>
<status status="PASS" starttime="20201030 10:57:02.654" endtime="20201030 10:57:02.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.649" endtime="20201030 10:57:02.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.282" endtime="20201030 10:57:02.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.282" endtime="20201030 10:57:02.657"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.665" endtime="20201030 10:57:02.682"></status>
</kw>
<msg timestamp="20201030 10:57:02.683" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.664" endtime="20201030 10:57:02.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:02.685" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:02.684" endtime="20201030 10:57:02.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.686" endtime="20201030 10:57:02.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.660" endtime="20201030 10:57:02.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.659" endtime="20201030 10:57:02.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:02.696" endtime="20201030 10:57:03.002"></status>
</kw>
<msg timestamp="20201030 10:57:03.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.900457042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.900461458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:02.694" endtime="20201030 10:57:03.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.900457042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.900461458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.007" endtime="20201030 10:57:03.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.017" endtime="20201030 10:57:03.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.692" endtime="20201030 10:57:03.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.690" endtime="20201030 10:57:03.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.024" level="INFO">${RESULT} = [{'diff': 4.416000000118103e-06}, {'diff': 4.443999999992343e-06}, {'diff': 4.431000000026941e-06}, {'diff': 4.431000000026941e-06}, {'diff': 4.417000000200844e-06}, {'diff': 4.4030000001527014e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:03.020" endtime="20201030 10:57:03.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:03.029" level="INFO">${OVERHEAD} = {'diff': [4.416000000118103e-06, 4.443999999992343e-06, 4.431000000026941e-06, 4.431000000026941e-06, 4.417000000200844e-06, 4.4030000001527014e-06, 4.402999999930657e-06, 4.417000000200844e-06, 4.429...</msg>
<status status="PASS" starttime="20201030 10:57:03.025" endtime="20201030 10:57:03.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.033" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:03.032" endtime="20201030 10:57:03.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.036" level="INFO">VALUE: [4.416000000118103e-06, 4.443999999992343e-06, 4.431000000026941e-06, 4.431000000026941e-06, 4.417000000200844e-06, 4.4030000001527014e-06, 4.402999999930657e-06, 4.417000000200844e-06, 4.429999999944201e-06, 4.416999999978799e-06, 4.3479999998208285e-06, 4.402999999930657e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.36099999978623e-06, 4.4309999998048966e-06, 4.402999999708612e-06, 4.375000000056417e-06, 4.415999999896059e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.415999999896059e-06, 4.348000000042873e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.485999999914725e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.3880000002438635e-06, 4.416999999978799e-06, 4.416000000340148e-06, 4.401999999625872e-06, 4.402999999708612e-06, 4.402999999708612e-06, 4.401999999625872e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.415999999896059e-06, 4.429999999722156e-06, 4.401999999625872e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.500000000184912e-06, 4.415999999896059e-06, 4.416999999978799e-06, 4.401999999625872e-06, 4.45900000034527e-06, 4.3610000002303195e-06, 4.3610000002303195e-06]</msg>
<status status="PASS" starttime="20201030 10:57:03.034" endtime="20201030 10:57:03.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.030" endtime="20201030 10:57:03.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.657" endtime="20201030 10:57:03.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:02.657" endtime="20201030 10:57:03.037"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.045" endtime="20201030 10:57:03.059"></status>
</kw>
<msg timestamp="20201030 10:57:03.059" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.044" endtime="20201030 10:57:03.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.062" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.061" endtime="20201030 10:57:03.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.063" endtime="20201030 10:57:03.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.041" endtime="20201030 10:57:03.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.039" endtime="20201030 10:57:03.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.072" endtime="20201030 10:57:03.381"></status>
</kw>
<msg timestamp="20201030 10:57:03.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.266368153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.266372569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.070" endtime="20201030 10:57:03.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.266368153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.266372569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.386" endtime="20201030 10:57:03.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.396" endtime="20201030 10:57:03.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.068" endtime="20201030 10:57:03.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.066" endtime="20201030 10:57:03.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.402" level="INFO">${RESULT} = [{'diff': 4.415999999896059e-06}, {'diff': 4.429999999722156e-06}, {'diff': 4.401999999625872e-06}, {'diff': 4.4309999998048966e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.416999999978799e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:03.399" endtime="20201030 10:57:03.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:03.408" level="INFO">${OVERHEAD} = {'diff': [4.415999999896059e-06, 4.429999999722156e-06, 4.401999999625872e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.500000000184912e-06, 4.415...</msg>
<status status="PASS" starttime="20201030 10:57:03.403" endtime="20201030 10:57:03.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.412" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:03.411" endtime="20201030 10:57:03.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.415" level="INFO">VALUE: [4.415999999896059e-06, 4.429999999722156e-06, 4.401999999625872e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.500000000184912e-06, 4.415999999896059e-06, 4.416999999978799e-06, 4.401999999625872e-06, 4.45900000034527e-06, 4.3610000002303195e-06, 4.3610000002303195e-06, 4.4030000001527014e-06, 4.431000000248986e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.389000000326604e-06, 4.416999999978799e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.430000000166245e-06, 4.36200000031306e-06, 4.431000000248986e-06, 4.431000000248986e-06, 4.416999999978799e-06, 4.431000000248986e-06, 4.416000000340148e-06, 4.416999999978799e-06, 4.416000000340148e-06, 4.348000000042873e-06, 4.4309999998048966e-06, 4.445000000075083e-06, 4.500000000184912e-06, 4.388999999882515e-06, 4.431000000248986e-06, 4.416999999978799e-06, 4.485999999914725e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.402000000069961e-06, 4.306000000120491e-06, 4.445000000075083e-06, 4.429999999722156e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.431000000248986e-06, 4.430000000166245e-06, 4.485999999914725e-06, 4.4309999998048966e-06, 4.429999999722156e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.346999999960133e-06]</msg>
<status status="PASS" starttime="20201030 10:57:03.413" endtime="20201030 10:57:03.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.409" endtime="20201030 10:57:03.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.038" endtime="20201030 10:57:03.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.038" endtime="20201030 10:57:03.416"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.424" endtime="20201030 10:57:03.445"></status>
</kw>
<msg timestamp="20201030 10:57:03.446" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.422" endtime="20201030 10:57:03.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.448" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.447" endtime="20201030 10:57:03.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.449" endtime="20201030 10:57:03.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.420" endtime="20201030 10:57:03.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.418" endtime="20201030 10:57:03.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.459" endtime="20201030 10:57:03.772"></status>
</kw>
<msg timestamp="20201030 10:57:03.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.635027431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.635031833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.457" endtime="20201030 10:57:03.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.635027431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.635031833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.777" endtime="20201030 10:57:03.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.787" endtime="20201030 10:57:03.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.454" endtime="20201030 10:57:03.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.452" endtime="20201030 10:57:03.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:03.794" level="INFO">${RESULT} = [{'diff': 4.402000000069961e-06}, {'diff': 4.306000000120491e-06}, {'diff': 4.445000000075083e-06}, {'diff': 4.429999999722156e-06}, {'diff': 4.415999999896059e-06}, {'diff': 4.4030000001527014e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:03.790" endtime="20201030 10:57:03.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:03.799" level="INFO">${OVERHEAD} = {'diff': [4.402000000069961e-06, 4.306000000120491e-06, 4.445000000075083e-06, 4.429999999722156e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.431000000248986e-06, 4.430000000166245e-06, 4.485...</msg>
<status status="PASS" starttime="20201030 10:57:03.795" endtime="20201030 10:57:03.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.803" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:03.802" endtime="20201030 10:57:03.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.805" level="INFO">VALUE: [4.402000000069961e-06, 4.306000000120491e-06, 4.445000000075083e-06, 4.429999999722156e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.431000000248986e-06, 4.430000000166245e-06, 4.485999999914725e-06, 4.4309999998048966e-06, 4.429999999722156e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.346999999960133e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.4729999997272785e-06, 4.4030000001527014e-06, 4.3880000002438635e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.415999999896059e-06, 4.402000000069961e-06, 4.375000000056417e-06, 4.4030000001527014e-06, 4.4579999998184405e-06, 4.402999999708612e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.36099999978623e-06, 4.402999999708612e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.472000000088627e-06, 4.4309999998048966e-06, 4.415999999896059e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.415999999896059e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.485999999914725e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.3610000002303195e-06, 4.402999999708612e-06, 4.430000000166245e-06, 4.431000000248986e-06, 4.402999999708612e-06, 4.36200000031306e-06, 4.387999999799774e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.431000000248986e-06, 4.431000000248986e-06, 4.3880000002438635e-06, 4.402999999708612e-06]</msg>
<status status="PASS" starttime="20201030 10:57:03.804" endtime="20201030 10:57:03.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.799" endtime="20201030 10:57:03.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.417" endtime="20201030 10:57:03.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.417" endtime="20201030 10:57:03.807"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.816" endtime="20201030 10:57:03.832"></status>
</kw>
<msg timestamp="20201030 10:57:03.833" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.814" endtime="20201030 10:57:03.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:03.835" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:03.834" endtime="20201030 10:57:03.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.836" endtime="20201030 10:57:03.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.811" endtime="20201030 10:57:03.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.809" endtime="20201030 10:57:03.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:03.846" endtime="20201030 10:57:04.165"></status>
</kw>
<msg timestamp="20201030 10:57:04.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.005968014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.005972458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:03.844" endtime="20201030 10:57:04.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.005968014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.005972458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.170" endtime="20201030 10:57:04.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.180" endtime="20201030 10:57:04.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.841" endtime="20201030 10:57:04.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.839" endtime="20201030 10:57:04.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:04.187" level="INFO">${RESULT} = [{'diff': 4.443999999992343e-06}, {'diff': 4.3610000002303195e-06}, {'diff': 4.402999999708612e-06}, {'diff': 4.430000000166245e-06}, {'diff': 4.431000000248986e-06}, {'diff': 4.402999999708612e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:04.183" endtime="20201030 10:57:04.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:04.192" level="INFO">${OVERHEAD} = {'diff': [4.443999999992343e-06, 4.3610000002303195e-06, 4.402999999708612e-06, 4.430000000166245e-06, 4.431000000248986e-06, 4.402999999708612e-06, 4.36200000031306e-06, 4.387999999799774e-06, 4.4160...</msg>
<status status="PASS" starttime="20201030 10:57:04.188" endtime="20201030 10:57:04.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.196" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:04.195" endtime="20201030 10:57:04.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.199" level="INFO">VALUE: [4.443999999992343e-06, 4.3610000002303195e-06, 4.402999999708612e-06, 4.430000000166245e-06, 4.431000000248986e-06, 4.402999999708612e-06, 4.36200000031306e-06, 4.387999999799774e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.431000000248986e-06, 4.431000000248986e-06, 4.3880000002438635e-06, 4.402999999708612e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.402999999708612e-06, 4.429999999722156e-06, 4.402999999708612e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.389000000326604e-06, 4.445000000075083e-06, 4.429999999722156e-06, 4.402999999708612e-06, 4.431000000248986e-06, 4.4309999998048966e-06, 4.415999999896059e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.45800000026253e-06, 4.431000000248986e-06, 4.347000000404222e-06, 4.416999999978799e-06, 4.431000000248986e-06, 4.374999999612328e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.402999999708612e-06, 4.443999999992343e-06, 4.36099999978623e-06, 4.415999999896059e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.401999999625872e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.429999999722156e-06, 4.443999999992343e-06, 4.443999999992343e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.415999999896059e-06, 4.4309999998048966e-06, 4.416999999978799e-06]</msg>
<status status="PASS" starttime="20201030 10:57:04.197" endtime="20201030 10:57:04.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.193" endtime="20201030 10:57:04.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.808" endtime="20201030 10:57:04.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:03.807" endtime="20201030 10:57:04.200"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.208" endtime="20201030 10:57:04.225"></status>
</kw>
<msg timestamp="20201030 10:57:04.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.207" endtime="20201030 10:57:04.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.228" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.226" endtime="20201030 10:57:04.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.229" endtime="20201030 10:57:04.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.204" endtime="20201030 10:57:04.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.202" endtime="20201030 10:57:04.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.238" endtime="20201030 10:57:04.548"></status>
</kw>
<msg timestamp="20201030 10:57:04.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.386967014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.386971444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.237" endtime="20201030 10:57:04.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.386967014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.386971444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.553" endtime="20201030 10:57:04.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.563" endtime="20201030 10:57:04.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.234" endtime="20201030 10:57:04.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.232" endtime="20201030 10:57:04.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:04.571" level="INFO">${RESULT} = [{'diff': 4.429999999722156e-06}, {'diff': 4.443999999992343e-06}, {'diff': 4.443999999992343e-06}, {'diff': 4.415999999896059e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.4309999998048966e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:04.566" endtime="20201030 10:57:04.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:04.576" level="INFO">${OVERHEAD} = {'diff': [4.429999999722156e-06, 4.443999999992343e-06, 4.443999999992343e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.41...</msg>
<status status="PASS" starttime="20201030 10:57:04.572" endtime="20201030 10:57:04.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.580" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:04.579" endtime="20201030 10:57:04.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.582" level="INFO">VALUE: [4.429999999722156e-06, 4.443999999992343e-06, 4.443999999992343e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.415999999896059e-06, 4.4309999998048966e-06, 4.416999999978799e-06, 4.333000000134035e-06, 4.3610000002303195e-06, 4.401999999625872e-06, 4.402999999708612e-06, 4.416999999978799e-06, 4.415999999896059e-06, 4.429999999722156e-06, 4.415999999896059e-06, 4.388999999882515e-06, 4.389000000326604e-06, 4.431000000248986e-06, 4.443999999992343e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.431000000248986e-06, 4.402999999708612e-06, 4.45800000026253e-06, 4.332999999689946e-06, 4.415999999896059e-06, 4.416000000340148e-06, 4.388999999882515e-06, 4.346999999960133e-06, 4.429999999722156e-06, 4.473000000171368e-06, 4.4030000001527014e-06, 4.402999999708612e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.389000000326604e-06, 4.346999999960133e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.402999999708612e-06, 4.388999999882515e-06, 4.402999999708612e-06, 4.4030000001527014e-06, 4.36099999978623e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.430000000166245e-06, 4.416999999978799e-06]</msg>
<status status="PASS" starttime="20201030 10:57:04.581" endtime="20201030 10:57:04.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.576" endtime="20201030 10:57:04.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.201" endtime="20201030 10:57:04.584"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.201" endtime="20201030 10:57:04.584"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.592" endtime="20201030 10:57:04.606"></status>
</kw>
<msg timestamp="20201030 10:57:04.607" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.590" endtime="20201030 10:57:04.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.609" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.608" endtime="20201030 10:57:04.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.610" endtime="20201030 10:57:04.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.588" endtime="20201030 10:57:04.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.586" endtime="20201030 10:57:04.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.622" endtime="20201030 10:57:04.938"></status>
</kw>
<msg timestamp="20201030 10:57:04.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.767959444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.767963861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.621" endtime="20201030 10:57:04.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.767959444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.767963861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:04.943" endtime="20201030 10:57:04.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.953" endtime="20201030 10:57:04.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.616" endtime="20201030 10:57:04.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.614" endtime="20201030 10:57:04.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:04.960" level="INFO">${RESULT} = [{'diff': 4.416999999978799e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.402999999708612e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.402999999708612e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:04.956" endtime="20201030 10:57:04.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:04.964" level="INFO">${OVERHEAD} = {'diff': [4.416999999978799e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.402999999708612e-06, 4.388999999882515e-06, 4.402999999708612e-06, 4.4030000001527014e-06, 4.36099999978623e-06, 4.403...</msg>
<status status="PASS" starttime="20201030 10:57:04.961" endtime="20201030 10:57:04.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.969" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:04.967" endtime="20201030 10:57:04.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:04.972" level="INFO">VALUE: [4.416999999978799e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.402999999708612e-06, 4.388999999882515e-06, 4.402999999708612e-06, 4.4030000001527014e-06, 4.36099999978623e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.443999999992343e-06, 4.430000000166245e-06, 4.416999999978799e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.417000000422888e-06, 4.374999999612328e-06, 4.3610000002303195e-06, 4.416000000340148e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.445000000075083e-06, 4.402000000069961e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.415999999451969e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.417000000422888e-06, 4.45800000026253e-06, 4.417000000422888e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.402000000069961e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.360999999342141e-06, 4.402000000069961e-06, 4.430000000610335e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.445000000075083e-06, 4.443999999992343e-06, 4.4309999998048966e-06, 4.402000000069961e-06, 4.416000000340148e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.444999999186905e-06, 4.374999999612328e-06, 4.4309999998048966e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.431000000693075e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.443999999992343e-06]</msg>
<status status="PASS" starttime="20201030 10:57:04.970" endtime="20201030 10:57:04.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.965" endtime="20201030 10:57:04.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.585" endtime="20201030 10:57:04.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.584" endtime="20201030 10:57:04.973"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:04.981" endtime="20201030 10:57:04.998"></status>
</kw>
<msg timestamp="20201030 10:57:04.999" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:04.979" endtime="20201030 10:57:04.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.001" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.000" endtime="20201030 10:57:05.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.003" endtime="20201030 10:57:05.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.977" endtime="20201030 10:57:05.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.975" endtime="20201030 10:57:05.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.012" endtime="20201030 10:57:05.330"></status>
</kw>
<msg timestamp="20201030 10:57:05.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.140736958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.140741375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.010" endtime="20201030 10:57:05.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.140736958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.140741375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.335" endtime="20201030 10:57:05.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.345" endtime="20201030 10:57:05.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.008" endtime="20201030 10:57:05.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.006" endtime="20201030 10:57:05.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.352" level="INFO">${RESULT} = [{'diff': 4.417000000422888e-06}, {'diff': 4.4309999998048966e-06}, {'diff': 4.416000000340148e-06}, {'diff': 4.4309999998048966e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.444999999186905e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:05.348" endtime="20201030 10:57:05.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:05.357" level="INFO">${OVERHEAD} = {'diff': [4.417000000422888e-06, 4.4309999998048966e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.444999999186905e-06, 4.374999999612328e-06, 4.4309999998048966e-06, 4....</msg>
<status status="PASS" starttime="20201030 10:57:05.353" endtime="20201030 10:57:05.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.361" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:05.360" endtime="20201030 10:57:05.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.364" level="INFO">VALUE: [4.417000000422888e-06, 4.4309999998048966e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.444999999186905e-06, 4.374999999612328e-06, 4.4309999998048966e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.431000000693075e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.443999999992343e-06, 4.3610000002303195e-06, 4.443999999992343e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.401999999181783e-06, 4.416000000340148e-06, 4.417000000422888e-06, 4.388999999882515e-06, 4.4309999998048966e-06, 4.388999999882515e-06, 4.389000000770693e-06, 4.388999999882515e-06, 4.45800000026253e-06, 4.443999999992343e-06, 4.4030000001527014e-06, 4.445000000075083e-06, 4.445000000075083e-06, 4.402999999264523e-06, 4.3610000002303195e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.429999999722156e-06, 4.389000000770693e-06, 4.445000000075083e-06, 4.443999999992343e-06, 4.375000000500506e-06, 4.445000000075083e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.402000000069961e-06, 4.402000000069961e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.41699999953471e-06, 4.41699999953471e-06, 4.4309999998048966e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.45800000026253e-06, 4.417000000422888e-06, 4.430000000610335e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.45800000026253e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.4030000001527014e-06, 4.416000000340148e-06]</msg>
<status status="PASS" starttime="20201030 10:57:05.362" endtime="20201030 10:57:05.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.358" endtime="20201030 10:57:05.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.974" endtime="20201030 10:57:05.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:04.974" endtime="20201030 10:57:05.365"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.373" endtime="20201030 10:57:05.389"></status>
</kw>
<msg timestamp="20201030 10:57:05.390" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.371" endtime="20201030 10:57:05.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.392" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.391" endtime="20201030 10:57:05.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.394" endtime="20201030 10:57:05.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.369" endtime="20201030 10:57:05.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.367" endtime="20201030 10:57:05.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.403" endtime="20201030 10:57:05.713"></status>
</kw>
<msg timestamp="20201030 10:57:05.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.52260625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.522610681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:05.401" endtime="20201030 10:57:05.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.52260625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.522610681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:05.718" endtime="20201030 10:57:05.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.728" endtime="20201030 10:57:05.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.399" endtime="20201030 10:57:05.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.397" endtime="20201030 10:57:05.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:05.735" level="INFO">${RESULT} = [{'diff': 4.4309999998048966e-06}, {'diff': 4.417000000422888e-06}, {'diff': 4.4309999998048966e-06}, {'diff': 4.45800000026253e-06}, {'diff': 4.417000000422888e-06}, {'diff': 4.430000000610335e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:05.732" endtime="20201030 10:57:05.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:05.740" level="INFO">${OVERHEAD} = {'diff': [4.4309999998048966e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.45800000026253e-06, 4.417000000422888e-06, 4.430000000610335e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.4...</msg>
<status status="PASS" starttime="20201030 10:57:05.736" endtime="20201030 10:57:05.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.744" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:05.743" endtime="20201030 10:57:05.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.746" level="INFO">VALUE: [4.4309999998048966e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.45800000026253e-06, 4.417000000422888e-06, 4.430000000610335e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.45800000026253e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.388999999882515e-06, 4.457999999374351e-06, 4.429999999722156e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.402999999264523e-06, 4.416000000340148e-06, 4.416000000340148e-06, 4.388999999882515e-06, 4.429999999722156e-06, 4.429999999722156e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.41699999953471e-06, 4.445000000075083e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.431000000693075e-06, 4.416000000340148e-06, 4.375000000500506e-06, 4.431000000693075e-06, 4.417000000422888e-06, 4.431000000693075e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.429999999722156e-06, 4.3610000002303195e-06, 4.41699999953471e-06, 4.417000000422888e-06, 4.374999999612328e-06, 4.41699999953471e-06, 4.3610000002303195e-06, 4.443999999992343e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.360999999342141e-06, 4.416000000340148e-06, 4.388999999882515e-06, 4.402999999264523e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.402999999264523e-06, 4.387999999799774e-06, 4.4309999998048966e-06, 4.388999999882515e-06, 4.445000000075083e-06, 4.415999999451969e-06]</msg>
<status status="PASS" starttime="20201030 10:57:05.745" endtime="20201030 10:57:05.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.740" endtime="20201030 10:57:05.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.366" endtime="20201030 10:57:05.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.366" endtime="20201030 10:57:05.748"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.756" endtime="20201030 10:57:05.772"></status>
</kw>
<msg timestamp="20201030 10:57:05.773" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.754" endtime="20201030 10:57:05.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:05.775" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:05.774" endtime="20201030 10:57:05.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.777" endtime="20201030 10:57:05.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.751" endtime="20201030 10:57:05.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.750" endtime="20201030 10:57:05.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:05.785" endtime="20201030 10:57:06.105"></status>
</kw>
<msg timestamp="20201030 10:57:06.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.903622833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.903627222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:05.784" endtime="20201030 10:57:06.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.903622833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.903627222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.110" endtime="20201030 10:57:06.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.120" endtime="20201030 10:57:06.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.781" endtime="20201030 10:57:06.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.780" endtime="20201030 10:57:06.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:06.127" level="INFO">${RESULT} = [{'diff': 4.388999999882515e-06}, {'diff': 4.360999999342141e-06}, {'diff': 4.416000000340148e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.402999999264523e-06}, {'diff': 4.4309999998048966e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:06.123" endtime="20201030 10:57:06.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:06.132" level="INFO">${OVERHEAD} = {'diff': [4.388999999882515e-06, 4.360999999342141e-06, 4.416000000340148e-06, 4.388999999882515e-06, 4.402999999264523e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.402...</msg>
<status status="PASS" starttime="20201030 10:57:06.128" endtime="20201030 10:57:06.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.136" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:06.135" endtime="20201030 10:57:06.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.139" level="INFO">VALUE: [4.388999999882515e-06, 4.360999999342141e-06, 4.416000000340148e-06, 4.388999999882515e-06, 4.402999999264523e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.402999999264523e-06, 4.387999999799774e-06, 4.4309999998048966e-06, 4.388999999882515e-06, 4.445000000075083e-06, 4.415999999451969e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.445000000075083e-06, 4.430000000610335e-06, 4.431000000693075e-06, 4.388999999882515e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.389000000770693e-06, 4.471999999644538e-06, 4.387999999799774e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.388999999882515e-06, 4.4720000005327165e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.4309999998048966e-06, 4.417000000422888e-06, 4.416000000340148e-06, 4.417000000422888e-06, 4.388999999882515e-06, 4.445000000075083e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.45800000026253e-06, 4.417000000422888e-06, 4.444999999186905e-06, 4.4030000001527014e-06, 4.3610000002303195e-06, 4.417000000422888e-06, 4.417000000422888e-06, 4.445000000075083e-06, 4.360999999342141e-06, 4.416000000340148e-06, 4.3610000002303195e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.388999999882515e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.41699999953471e-06]</msg>
<status status="PASS" starttime="20201030 10:57:06.137" endtime="20201030 10:57:06.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.133" endtime="20201030 10:57:06.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.749" endtime="20201030 10:57:06.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:05.748" endtime="20201030 10:57:06.140"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.148" endtime="20201030 10:57:06.164"></status>
</kw>
<msg timestamp="20201030 10:57:06.164" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.146" endtime="20201030 10:57:06.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.174" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.172" endtime="20201030 10:57:06.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.175" endtime="20201030 10:57:06.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.144" endtime="20201030 10:57:06.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.142" endtime="20201030 10:57:06.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.184" endtime="20201030 10:57:06.493"></status>
</kw>
<msg timestamp="20201030 10:57:06.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.274548319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.274552736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.183" endtime="20201030 10:57:06.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.274548319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.274552736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.498" endtime="20201030 10:57:06.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.508" endtime="20201030 10:57:06.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.180" endtime="20201030 10:57:06.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.178" endtime="20201030 10:57:06.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:06.515" level="INFO">${RESULT} = [{'diff': 4.417000000422888e-06}, {'diff': 4.445000000075083e-06}, {'diff': 4.360999999342141e-06}, {'diff': 4.416000000340148e-06}, {'diff': 4.3610000002303195e-06}, {'diff': 4.417000000422888e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:06.511" endtime="20201030 10:57:06.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:06.520" level="INFO">${OVERHEAD} = {'diff': [4.417000000422888e-06, 4.445000000075083e-06, 4.360999999342141e-06, 4.416000000340148e-06, 4.3610000002303195e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.417000000422888e-06, 4.43...</msg>
<status status="PASS" starttime="20201030 10:57:06.516" endtime="20201030 10:57:06.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.525" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:06.524" endtime="20201030 10:57:06.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.527" level="INFO">VALUE: [4.417000000422888e-06, 4.445000000075083e-06, 4.360999999342141e-06, 4.416000000340148e-06, 4.3610000002303195e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.417000000422888e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.388999999882515e-06, 4.416000000340148e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.416000000340148e-06, 4.389000000770693e-06, 4.402000000069961e-06, 4.473000000615457e-06, 4.41699999953471e-06, 4.417000000422888e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.431000000693075e-06, 4.4030000001527014e-06, 4.402999999264523e-06, 4.401999999181783e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.360999999342141e-06, 4.417000000422888e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.443999999992343e-06, 4.4030000001527014e-06, 4.4309999998048966e-06, 4.375000000500506e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.471999999644538e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.471999999644538e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.389000000770693e-06, 4.374999999612328e-06, 4.4030000001527014e-06, 4.374999999612328e-06, 4.417000000422888e-06, 4.374999999612328e-06, 4.4030000001527014e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.374999999612328e-06, 4.430000000610335e-06]</msg>
<status status="PASS" starttime="20201030 10:57:06.526" endtime="20201030 10:57:06.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.521" endtime="20201030 10:57:06.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.141" endtime="20201030 10:57:06.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.140" endtime="20201030 10:57:06.529"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.536" endtime="20201030 10:57:06.552"></status>
</kw>
<msg timestamp="20201030 10:57:06.552" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.535" endtime="20201030 10:57:06.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.555" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.553" endtime="20201030 10:57:06.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.556" endtime="20201030 10:57:06.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.532" endtime="20201030 10:57:06.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.531" endtime="20201030 10:57:06.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.565" endtime="20201030 10:57:06.881"></status>
</kw>
<msg timestamp="20201030 10:57:06.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.656472444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.656476819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.563" endtime="20201030 10:57:06.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.656472444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.656476819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.886" endtime="20201030 10:57:06.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.896" endtime="20201030 10:57:06.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.561" endtime="20201030 10:57:06.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.559" endtime="20201030 10:57:06.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:06.903" level="INFO">${RESULT} = [{'diff': 4.374999999612328e-06}, {'diff': 4.417000000422888e-06}, {'diff': 4.374999999612328e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.445000000075083e-06}, {'diff': 4.4030000001527014e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:06.899" endtime="20201030 10:57:06.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:06.907" level="INFO">${OVERHEAD} = {'diff': [4.374999999612328e-06, 4.417000000422888e-06, 4.374999999612328e-06, 4.4030000001527014e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.40...</msg>
<status status="PASS" starttime="20201030 10:57:06.904" endtime="20201030 10:57:06.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.912" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:06.911" endtime="20201030 10:57:06.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.914" level="INFO">VALUE: [4.374999999612328e-06, 4.417000000422888e-06, 4.374999999612328e-06, 4.4030000001527014e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.374999999612328e-06, 4.430000000610335e-06, 4.388999999882515e-06, 4.458999999457092e-06, 4.41699999953471e-06, 4.374999999612328e-06, 4.417000000422888e-06, 4.429999999722156e-06, 4.41699999953471e-06, 4.41699999953471e-06, 4.401999999181783e-06, 4.41699999953471e-06, 4.402000000069961e-06, 4.4309999998048966e-06, 4.374999999612328e-06, 4.416000000340148e-06, 4.402999999264523e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.429999999722156e-06, 4.415999999451969e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.443999999992343e-06, 4.443999999992343e-06, 4.417000000422888e-06, 4.375000000500506e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.445000000075083e-06, 4.41699999953471e-06, 4.431000000693075e-06, 4.402000000069961e-06, 4.388999999882515e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.41699999953471e-06, 4.429999999722156e-06, 4.41699999953471e-06, 4.417000000422888e-06, 4.45900000034527e-06, 4.388999999882515e-06, 4.374999999612328e-06, 4.430000000610335e-06]</msg>
<status status="PASS" starttime="20201030 10:57:06.913" endtime="20201030 10:57:06.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.908" endtime="20201030 10:57:06.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.529" endtime="20201030 10:57:06.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.529" endtime="20201030 10:57:06.916"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.925" endtime="20201030 10:57:06.943"></status>
</kw>
<msg timestamp="20201030 10:57:06.943" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.923" endtime="20201030 10:57:06.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:06.946" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:06.944" endtime="20201030 10:57:06.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.947" endtime="20201030 10:57:06.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.919" endtime="20201030 10:57:06.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.918" endtime="20201030 10:57:06.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:06.956" endtime="20201030 10:57:07.276"></status>
</kw>
<msg timestamp="20201030 10:57:07.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.033357792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.033362194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:06.954" endtime="20201030 10:57:07.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.033357792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.033362194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.281" endtime="20201030 10:57:07.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.291" endtime="20201030 10:57:07.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.952" endtime="20201030 10:57:07.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.950" endtime="20201030 10:57:07.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:07.298" level="INFO">${RESULT} = [{'diff': 4.402000000069961e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.445000000075083e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.417000000422888e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:07.294" endtime="20201030 10:57:07.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:07.303" level="INFO">${OVERHEAD} = {'diff': [4.402000000069961e-06, 4.388999999882515e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.41699999953471e-06, 4.429999999722156e-06, 4.416...</msg>
<status status="PASS" starttime="20201030 10:57:07.299" endtime="20201030 10:57:07.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.307" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:07.306" endtime="20201030 10:57:07.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.310" level="INFO">VALUE: [4.402000000069961e-06, 4.388999999882515e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.41699999953471e-06, 4.429999999722156e-06, 4.41699999953471e-06, 4.417000000422888e-06, 4.45900000034527e-06, 4.388999999882515e-06, 4.374999999612328e-06, 4.430000000610335e-06, 4.45900000034527e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.445000000075083e-06, 4.415999999451969e-06, 4.402999999264523e-06, 4.429999999722156e-06, 4.388999999882515e-06, 4.415999999451969e-06, 4.417000000422888e-06, 4.402999999264523e-06, 4.375000000500506e-06, 4.4309999998048966e-06, 4.388999999882515e-06, 4.443999999992343e-06, 4.415999999451969e-06, 4.430000000610335e-06, 4.374999999612328e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.41699999953471e-06, 4.443999999992343e-06, 4.415999999451969e-06, 4.431000000693075e-06, 4.4309999998048966e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.430000000610335e-06, 4.443999999992343e-06, 4.431000000693075e-06, 4.3610000002303195e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.45800000026253e-06, 4.417000000422888e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.443999999992343e-06, 4.402000000069961e-06, 4.485999999914725e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.374999999612328e-06, 4.4309999998048966e-06]</msg>
<status status="PASS" starttime="20201030 10:57:07.308" endtime="20201030 10:57:07.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.304" endtime="20201030 10:57:07.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.916" endtime="20201030 10:57:07.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:06.916" endtime="20201030 10:57:07.311"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.320" endtime="20201030 10:57:07.334"></status>
</kw>
<msg timestamp="20201030 10:57:07.335" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.318" endtime="20201030 10:57:07.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.337" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.336" endtime="20201030 10:57:07.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.338" endtime="20201030 10:57:07.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.315" endtime="20201030 10:57:07.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.313" endtime="20201030 10:57:07.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.347" endtime="20201030 10:57:07.654"></status>
</kw>
<msg timestamp="20201030 10:57:07.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.414329597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.414333986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.346" endtime="20201030 10:57:07.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.414329597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.414333986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.659" endtime="20201030 10:57:07.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.669" endtime="20201030 10:57:07.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.343" endtime="20201030 10:57:07.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.341" endtime="20201030 10:57:07.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:07.676" level="INFO">${RESULT} = [{'diff': 4.388999999882515e-06}, {'diff': 4.374999999612328e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.45800000026253e-06}, {'diff': 4.417000000422888e-06}, {'diff': 4.445000000075083e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:07.673" endtime="20201030 10:57:07.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:07.682" level="INFO">${OVERHEAD} = {'diff': [4.388999999882515e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.45800000026253e-06, 4.417000000422888e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.443999999992343e-06, 4.4020...</msg>
<status status="PASS" starttime="20201030 10:57:07.677" endtime="20201030 10:57:07.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:07.685" endtime="20201030 10:57:07.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.689" level="INFO">VALUE: [4.388999999882515e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.45800000026253e-06, 4.417000000422888e-06, 4.445000000075083e-06, 4.4030000001527014e-06, 4.443999999992343e-06, 4.402000000069961e-06, 4.485999999914725e-06, 4.4030000001527014e-06, 4.415999999451969e-06, 4.374999999612328e-06, 4.4309999998048966e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.457999999374351e-06, 4.402999999264523e-06, 4.4309999998048966e-06, 4.4309999998048966e-06, 4.402999999264523e-06, 4.457999999374351e-06, 4.416000000340148e-06, 4.431000000693075e-06, 4.444999999186905e-06, 4.41699999953471e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.429999999722156e-06, 4.374999999612328e-06, 4.402000000069961e-06, 4.3610000002303195e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.388999999882515e-06, 4.429999999722156e-06, 4.485999999914725e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.430000000610335e-06, 4.4309999998048966e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.445000000075083e-06, 4.387999999799774e-06, 4.402000000069961e-06, 4.429999999722156e-06, 4.4030000001527014e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.443999999992343e-06, 4.4030000001527014e-06, 4.346999999960133e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.3610000002303195e-06, 4.388999999882515e-06, 4.429999999722156e-06, 4.388999999882515e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.375000000500506e-06, 4.388999999882515e-06]</msg>
<status status="PASS" starttime="20201030 10:57:07.687" endtime="20201030 10:57:07.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.683" endtime="20201030 10:57:07.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.312" endtime="20201030 10:57:07.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.312" endtime="20201030 10:57:07.690"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.699" endtime="20201030 10:57:07.721"></status>
</kw>
<msg timestamp="20201030 10:57:07.721" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.697" endtime="20201030 10:57:07.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:07.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:07.722" endtime="20201030 10:57:07.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.725" endtime="20201030 10:57:07.726"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.694" endtime="20201030 10:57:07.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.692" endtime="20201030 10:57:07.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:07.734" endtime="20201030 10:57:08.051"></status>
</kw>
<msg timestamp="20201030 10:57:08.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.797146403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.797150847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:07.733" endtime="20201030 10:57:08.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.797146403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.797150847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.056" endtime="20201030 10:57:08.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.066" endtime="20201030 10:57:08.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.729" endtime="20201030 10:57:08.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.728" endtime="20201030 10:57:08.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:08.073" level="INFO">${RESULT} = [{'diff': 4.443999999992343e-06}, {'diff': 4.4030000001527014e-06}, {'diff': 4.346999999960133e-06}, {'diff': 4.374999999612328e-06}, {'diff': 4.388999999882515e-06}, {'diff': 4.3610000002303195e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:08.070" endtime="20201030 10:57:08.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:08.078" level="INFO">${OVERHEAD} = {'diff': [4.443999999992343e-06, 4.4030000001527014e-06, 4.346999999960133e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.3610000002303195e-06, 4.388999999882515e-06, 4.429999999722156e-06, 4.38...</msg>
<status status="PASS" starttime="20201030 10:57:08.074" endtime="20201030 10:57:08.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.082" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:08.081" endtime="20201030 10:57:08.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.087" level="INFO">VALUE: [4.443999999992343e-06, 4.4030000001527014e-06, 4.346999999960133e-06, 4.374999999612328e-06, 4.388999999882515e-06, 4.3610000002303195e-06, 4.388999999882515e-06, 4.429999999722156e-06, 4.388999999882515e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.4030000001527014e-06, 4.375000000500506e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.471999999644538e-06, 4.402999999264523e-06, 4.431000000693075e-06, 4.402999999264523e-06, 4.416000000340148e-06, 4.416000000340148e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.41699999953471e-06, 4.4030000001527014e-06, 4.332999999689946e-06, 4.389000000770693e-06, 4.4309999998048966e-06, 4.429999999722156e-06, 4.346999999960133e-06, 4.4309999998048966e-06, 4.417000000422888e-06, 4.402000000069961e-06, 4.443999999992343e-06, 4.45800000026253e-06, 4.332999999689946e-06, 4.443999999992343e-06, 4.41699999953471e-06, 4.430000000610335e-06, 4.416000000340148e-06, 4.41699999953471e-06, 4.41699999953471e-06, 4.416000000340148e-06, 4.417000000422888e-06, 4.430000000610335e-06, 4.3610000002303195e-06, 4.402000000069961e-06, 4.417000000422888e-06, 4.402000000069961e-06, 4.402000000069961e-06, 4.429999999722156e-06, 4.429999999722156e-06, 4.417000000422888e-06, 4.445000000075083e-06, 4.4309999998048966e-06, 4.415999999451969e-06, 4.430000000610335e-06, 4.388999999882515e-06, 4.375000000500506e-06, 4.375000000500506e-06, 4.374999999612328e-06]</msg>
<status status="PASS" starttime="20201030 10:57:08.083" endtime="20201030 10:57:08.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.079" endtime="20201030 10:57:08.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.691" endtime="20201030 10:57:08.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:07.691" endtime="20201030 10:57:08.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:00.402" endtime="20201030 10:57:08.089"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:00.324" endtime="20201030 10:57:08.090" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:08.097" endtime="20201030 10:57:08.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.096" endtime="20201030 10:57:08.118"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.130" endtime="20201030 10:57:08.152"></status>
</kw>
<msg timestamp="20201030 10:57:08.152" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.129" endtime="20201030 10:57:08.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.155" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.153" endtime="20201030 10:57:08.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.158" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:08.156" endtime="20201030 10:57:08.158"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:08.126" endtime="20201030 10:57:08.159"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:08.124" endtime="20201030 10:57:08.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.123" endtime="20201030 10:57:08.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:08.163" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:08.163" endtime="20201030 10:57:08.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.160" endtime="20201030 10:57:08.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.122" endtime="20201030 10:57:08.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.121" endtime="20201030 10:57:08.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.165" endtime="20201030 10:57:08.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.120" endtime="20201030 10:57:08.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.118" endtime="20201030 10:57:08.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.094" endtime="20201030 10:57:08.168"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.178" endtime="20201030 10:57:08.203"></status>
</kw>
<msg timestamp="20201030 10:57:08.203" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.176" endtime="20201030 10:57:08.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.206" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.204" endtime="20201030 10:57:08.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.207" endtime="20201030 10:57:08.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.173" endtime="20201030 10:57:08.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.171" endtime="20201030 10:57:08.209"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.212" endtime="20201030 10:57:08.214"></status>
</kw>
<msg timestamp="20201030 10:57:08.214" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:08.210" endtime="20201030 10:57:08.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.218" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:08.217" endtime="20201030 10:57:08.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.220" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:08.219" endtime="20201030 10:57:08.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.215" endtime="20201030 10:57:08.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.225" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:08.224" endtime="20201030 10:57:08.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.227" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:08.226" endtime="20201030 10:57:08.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.222" endtime="20201030 10:57:08.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.234" endtime="20201030 10:57:08.519"></status>
</kw>
<msg timestamp="20201030 10:57:08.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072758903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072767681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.233" endtime="20201030 10:57:08.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072758903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072767681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.524" endtime="20201030 10:57:08.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.532" endtime="20201030 10:57:08.534"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.230" endtime="20201030 10:57:08.534"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.228" endtime="20201030 10:57:08.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:08.538" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 8.888999999998037e-06}, {'diff': 8.903000000004546e-06}, {'diff': 8.903000000004546e-06}, {'diff': 8.958000000003352e-06}, {'diff': 8.944999999996317e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:08.535" endtime="20201030 10:57:08.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:08.543" level="INFO">${OVERHEAD} = {'diff': [8.778000000000952e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.903000000004546e-06, 8.958000000003352e-06, 8.944999999996317e-06, 8.916999999997177e-06, 8.901999999991195e-06, 8.9029...</msg>
<status status="PASS" starttime="20201030 10:57:08.539" endtime="20201030 10:57:08.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.548" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 10:57:08.547" endtime="20201030 10:57:08.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.550" level="INFO">VALUE: [8.778000000000952e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.903000000004546e-06, 8.958000000003352e-06, 8.944999999996317e-06, 8.916999999997177e-06, 8.901999999991195e-06, 8.902999999990668e-06, 8.972999999995457e-06, 8.944999999996317e-06, 8.888999999998037e-06, 8.901999999991195e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.902999999990668e-06, 8.944999999996317e-06, 9.000000000009e-06, 8.999999999995123e-06, 8.986000000002492e-06, 8.916999999997177e-06, 8.903000000004546e-06, 8.931000000003686e-06, 8.874999999991529e-06, 8.943999999996843e-06, 8.957999999989474e-06, 8.945000000010195e-06, 8.930999999989808e-06, 8.930000000004212e-06, 8.917000000011055e-06, 8.916999999997177e-06, 8.930000000004212e-06, 8.931000000003686e-06, 8.916999999997177e-06, 8.931000000003686e-06, 8.929999999990335e-06, 8.916999999997177e-06, 8.931000000003686e-06, 8.874999999991529e-06, 8.930000000004212e-06, 8.945000000010195e-06, 8.944000000010721e-06, 8.875000000005406e-06, 8.944999999996317e-06, 8.916999999997177e-06, 8.902999999990668e-06, 8.902999999990668e-06, 8.916999999997177e-06, 8.902999999990668e-06]</msg>
<status status="PASS" starttime="20201030 10:57:08.549" endtime="20201030 10:57:08.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.544" endtime="20201030 10:57:08.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.169" endtime="20201030 10:57:08.552"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:08.091" endtime="20201030 10:57:08.553" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:08.561" endtime="20201030 10:57:08.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.559" endtime="20201030 10:57:08.581"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.594" endtime="20201030 10:57:08.614"></status>
</kw>
<msg timestamp="20201030 10:57:08.615" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.592" endtime="20201030 10:57:08.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.617" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.616" endtime="20201030 10:57:08.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.620" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:08.618" endtime="20201030 10:57:08.620"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:08.589" endtime="20201030 10:57:08.621"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:08.587" endtime="20201030 10:57:08.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.586" endtime="20201030 10:57:08.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:08.627" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:08.626" endtime="20201030 10:57:08.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.623" endtime="20201030 10:57:08.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.585" endtime="20201030 10:57:08.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.585" endtime="20201030 10:57:08.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.628" endtime="20201030 10:57:08.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.583" endtime="20201030 10:57:08.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.581" endtime="20201030 10:57:08.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.558" endtime="20201030 10:57:08.631"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.640" endtime="20201030 10:57:08.740"></status>
</kw>
<msg timestamp="20201030 10:57:08.741" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.638" endtime="20201030 10:57:08.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.743" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:08.742" endtime="20201030 10:57:08.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.744" endtime="20201030 10:57:08.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.636" endtime="20201030 10:57:08.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.634" endtime="20201030 10:57:08.747"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.749" endtime="20201030 10:57:08.751"></status>
</kw>
<msg timestamp="20201030 10:57:08.752" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:08.748" endtime="20201030 10:57:08.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.756" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:08.755" endtime="20201030 10:57:08.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.758" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:08.757" endtime="20201030 10:57:08.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.752" endtime="20201030 10:57:08.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.762" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:08.761" endtime="20201030 10:57:08.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.764" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:08.763" endtime="20201030 10:57:08.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.759" endtime="20201030 10:57:08.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:08.772" endtime="20201030 10:57:09.064"></status>
</kw>
<msg timestamp="20201030 10:57:09.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073220778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073270319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:08.770" endtime="20201030 10:57:09.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073220778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073270319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.068" endtime="20201030 10:57:09.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.076" endtime="20201030 10:57:09.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.767" endtime="20201030 10:57:09.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.766" endtime="20201030 10:57:09.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:09.083" level="INFO">${RESULT} = [{'diff': 4.954100000000017e-05}, {'diff': 4.938899999999691e-05}, {'diff': 4.9417000000009925e-05}, {'diff': 4.948600000000136e-05}, {'diff': 4.9431000000002556e-05}, {'diff': 4.9471999999994853e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:09.079" endtime="20201030 10:57:09.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:09.087" level="INFO">${OVERHEAD} = {'diff': [4.954100000000017e-05, 4.938899999999691e-05, 4.9417000000009925e-05, 4.948600000000136e-05, 4.9431000000002556e-05, 4.9471999999994853e-05, 4.938899999999691e-05, 4.9445000000009065e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:57:09.084" endtime="20201030 10:57:09.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.092" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 10:57:09.091" endtime="20201030 10:57:09.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.094" level="INFO">VALUE: [4.954100000000017e-05, 4.938899999999691e-05, 4.9417000000009925e-05, 4.948600000000136e-05, 4.9431000000002556e-05, 4.9471999999994853e-05, 4.938899999999691e-05, 4.9445000000009065e-05, 4.947200000000873e-05, 4.945800000000222e-05, 4.9403000000003416e-05, 4.9375000000004277e-05, 4.9431000000002556e-05, 4.943000000000308e-05, 4.940299999998954e-05, 4.9487000000000836e-05, 4.938899999999691e-05, 4.9403000000003416e-05, 4.950000000000787e-05, 4.9487000000000836e-05, 4.9417000000009925e-05, 4.9403000000003416e-05, 4.948600000000136e-05, 4.9431000000002556e-05, 4.9375000000004277e-05, 4.945800000000222e-05, 4.945800000000222e-05, 4.950000000000787e-05, 4.940299999998954e-05, 4.9417000000009925e-05, 4.948600000000136e-05, 4.945800000000222e-05, 4.9375000000004277e-05, 4.9389000000010785e-05, 4.940299999998954e-05, 4.934700000000514e-05, 4.943000000001696e-05, 4.9403000000003416e-05, 4.9471999999994853e-05, 4.943099999998868e-05, 4.936099999999777e-05, 4.9485999999987484e-05, 4.9375000000018154e-05, 4.9389000000010785e-05, 4.9403000000003416e-05, 4.9389000000010785e-05, 4.95140000000005e-05, 4.9445000000009065e-05, 4.9471999999994853e-05, 4.938899999998303e-05]</msg>
<status status="PASS" starttime="20201030 10:57:09.093" endtime="20201030 10:57:09.095"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.088" endtime="20201030 10:57:09.095"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.632" endtime="20201030 10:57:09.096"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:08.555" endtime="20201030 10:57:09.096" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:09.105" endtime="20201030 10:57:09.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.103" endtime="20201030 10:57:09.125"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.138" endtime="20201030 10:57:09.158"></status>
</kw>
<msg timestamp="20201030 10:57:09.158" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.137" endtime="20201030 10:57:09.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.161" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.159" endtime="20201030 10:57:09.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.164" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:09.162" endtime="20201030 10:57:09.164"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:09.133" endtime="20201030 10:57:09.165"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:09.131" endtime="20201030 10:57:09.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.130" endtime="20201030 10:57:09.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:09.169" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:09.168" endtime="20201030 10:57:09.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.166" endtime="20201030 10:57:09.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.129" endtime="20201030 10:57:09.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.128" endtime="20201030 10:57:09.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.171" endtime="20201030 10:57:09.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.127" endtime="20201030 10:57:09.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.125" endtime="20201030 10:57:09.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.102" endtime="20201030 10:57:09.174"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.183" endtime="20201030 10:57:09.469"></status>
</kw>
<msg timestamp="20201030 10:57:09.469" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.181" endtime="20201030 10:57:09.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.472" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.470" endtime="20201030 10:57:09.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.473" endtime="20201030 10:57:09.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.178" endtime="20201030 10:57:09.475"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.176" endtime="20201030 10:57:09.475"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.478" endtime="20201030 10:57:09.479"></status>
</kw>
<msg timestamp="20201030 10:57:09.480" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:09.476" endtime="20201030 10:57:09.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.484" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:09.483" endtime="20201030 10:57:09.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.486" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:09.485" endtime="20201030 10:57:09.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.481" endtime="20201030 10:57:09.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.491" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:09.490" endtime="20201030 10:57:09.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.493" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:09.492" endtime="20201030 10:57:09.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.487" endtime="20201030 10:57:09.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.501" endtime="20201030 10:57:09.804"></status>
</kw>
<msg timestamp="20201030 10:57:09.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075303194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075395306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.500" endtime="20201030 10:57:09.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075303194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075395306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.809" endtime="20201030 10:57:09.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.817" endtime="20201030 10:57:09.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.496" endtime="20201030 10:57:09.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.494" endtime="20201030 10:57:09.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:09.824" level="INFO">${RESULT} = [{'diff': 9.211199999999142e-05}, {'diff': 9.140300000000379e-05}, {'diff': 9.143099999998905e-05}, {'diff': 9.1332999999999e-05}, {'diff': 9.141699999999642e-05}, {'diff': 9.140199999999044e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:09.820" endtime="20201030 10:57:09.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:09.828" level="INFO">${OVERHEAD} = {'diff': [9.211199999999142e-05, 9.140300000000379e-05, 9.143099999998905e-05, 9.1332999999999e-05, 9.141699999999642e-05, 9.140199999999044e-05, 9.145800000000259e-05, 9.134800000000498e-05, 9.130599...</msg>
<status status="PASS" starttime="20201030 10:57:09.825" endtime="20201030 10:57:09.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.833" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 10:57:09.832" endtime="20201030 10:57:09.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.835" level="INFO">VALUE: [9.211199999999142e-05, 9.140300000000379e-05, 9.143099999998905e-05, 9.1332999999999e-05, 9.141699999999642e-05, 9.140199999999044e-05, 9.145800000000259e-05, 9.134800000000498e-05, 9.130599999999933e-05, 9.141599999999694e-05, 9.140299999998991e-05, 9.140299999998991e-05, 9.132000000000584e-05, 9.143099999997517e-05, 9.143100000000293e-05, 9.143100000000293e-05, 9.140299999998991e-05, 9.132000000000584e-05, 9.130499999998598e-05, 9.130599999998545e-05, 9.134700000001938e-05, 9.133399999999847e-05, 9.137499999997689e-05, 9.143000000000345e-05, 9.137500000000465e-05, 9.134699999999163e-05, 9.134700000001938e-05, 9.132000000000584e-05, 9.1332999999999e-05, 9.143000000000345e-05, 9.144499999999556e-05, 9.137500000000465e-05, 9.137499999997689e-05, 9.1332999999999e-05, 9.151400000001475e-05, 9.143099999997517e-05, 9.133299999997124e-05, 9.133299999997124e-05, 9.132000000000584e-05, 9.141699999998254e-05, 9.129200000002058e-05, 9.137500000000465e-05, 9.132000000000584e-05, 9.134700000001938e-05, 9.137500000000465e-05, 9.141699999998254e-05, 9.136100000001202e-05, 9.133299999997124e-05, 9.150000000002212e-05, 9.143100000003068e-05]</msg>
<status status="PASS" starttime="20201030 10:57:09.834" endtime="20201030 10:57:09.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.829" endtime="20201030 10:57:09.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.174" endtime="20201030 10:57:09.837"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:09.099" endtime="20201030 10:57:09.838" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:09.849" endtime="20201030 10:57:09.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.847" endtime="20201030 10:57:09.869"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.884" endtime="20201030 10:57:09.906"></status>
</kw>
<msg timestamp="20201030 10:57:09.907" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.882" endtime="20201030 10:57:09.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.909" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.908" endtime="20201030 10:57:09.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.913" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:09.910" endtime="20201030 10:57:09.913"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:09.879" endtime="20201030 10:57:09.914"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:09.877" endtime="20201030 10:57:09.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.876" endtime="20201030 10:57:09.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:09.918" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:09.918" endtime="20201030 10:57:09.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.916" endtime="20201030 10:57:09.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.875" endtime="20201030 10:57:09.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.874" endtime="20201030 10:57:09.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.920" endtime="20201030 10:57:09.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.873" endtime="20201030 10:57:09.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.870" endtime="20201030 10:57:09.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.846" endtime="20201030 10:57:09.923"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.933" endtime="20201030 10:57:09.963"></status>
</kw>
<msg timestamp="20201030 10:57:09.963" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.932" endtime="20201030 10:57:09.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.966" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:09.964" endtime="20201030 10:57:09.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.967" endtime="20201030 10:57:09.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.929" endtime="20201030 10:57:09.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.927" endtime="20201030 10:57:09.970"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.972" endtime="20201030 10:57:09.975"></status>
</kw>
<msg timestamp="20201030 10:57:09.975" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:09.971" endtime="20201030 10:57:09.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.980" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:09.979" endtime="20201030 10:57:09.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.982" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:09.981" endtime="20201030 10:57:09.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.976" endtime="20201030 10:57:09.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.987" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:09.986" endtime="20201030 10:57:09.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:09.989" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:09.988" endtime="20201030 10:57:09.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.984" endtime="20201030 10:57:09.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:09.997" endtime="20201030 10:57:10.284"></status>
</kw>
<msg timestamp="20201030 10:57:10.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079942528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079944528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:09.996" endtime="20201030 10:57:10.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079942528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079944528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.288" endtime="20201030 10:57:10.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.297" endtime="20201030 10:57:10.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.993" endtime="20201030 10:57:10.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.991" endtime="20201030 10:57:10.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:10.304" level="INFO">${RESULT} = [{'diff': 2.000000000002e-06}, {'diff': 1.9579999999963515e-06}, {'diff': 1.9859999999954914e-06}, {'diff': 1.9720000000028604e-06}, {'diff': 1.9720000000028604e-06}, {'diff': 2.055000000000806e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:10.300" endtime="20201030 10:57:10.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:10.309" level="INFO">${OVERHEAD} = {'diff': [2.000000000002e-06, 1.9579999999963515e-06, 1.9859999999954914e-06, 1.9720000000028604e-06, 1.9720000000028604e-06, 2.055000000000806e-06, 1.972999999988456e-06, 2.02800000000114e-06, 1.9719...</msg>
<status status="PASS" starttime="20201030 10:57:10.305" endtime="20201030 10:57:10.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.314" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 10:57:10.313" endtime="20201030 10:57:10.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.316" level="INFO">VALUE: [2.000000000002e-06, 1.9579999999963515e-06, 1.9859999999954914e-06, 1.9720000000028604e-06, 1.9720000000028604e-06, 2.055000000000806e-06, 1.972999999988456e-06, 2.02800000000114e-06, 1.9719999999889826e-06, 1.9299999999972117e-06, 2.02800000000114e-06, 1.972999999988456e-06, 1.9720000000028604e-06, 2.02800000000114e-06, 1.986000000009369e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.9579999999963515e-06, 1.973000000002334e-06, 1.931000000010563e-06, 1.973000000002334e-06, 1.9720000000028604e-06, 1.9859999999954914e-06, 1.972999999988456e-06, 1.9720000000028604e-06, 1.9439999999898427e-06, 1.9720000000028604e-06, 1.9440000000037205e-06, 2.000000000002e-06, 2.014000000008509e-06, 1.972999999988456e-06, 1.9719999999889826e-06, 1.9720000000028604e-06, 1.9859999999954914e-06, 1.9720000000028604e-06, 1.9999999999881224e-06, 1.915999999990703e-06, 2.000000000002e-06, 1.973000000002334e-06, 1.9720000000028604e-06, 2.000000000002e-06, 1.9720000000028604e-06, 1.9720000000028604e-06, 1.9720000000028604e-06, 1.9169999999901766e-06, 2.000000000002e-06, 1.973000000002334e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 1.9999999999881224e-06]</msg>
<status status="PASS" starttime="20201030 10:57:10.315" endtime="20201030 10:57:10.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.310" endtime="20201030 10:57:10.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:09.924" endtime="20201030 10:57:10.318"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:09.842" endtime="20201030 10:57:10.319" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:10.328" endtime="20201030 10:57:10.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.326" endtime="20201030 10:57:10.348"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.362" endtime="20201030 10:57:10.383"></status>
</kw>
<msg timestamp="20201030 10:57:10.384" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.360" endtime="20201030 10:57:10.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.386" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.385" endtime="20201030 10:57:10.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.389" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:10.388" endtime="20201030 10:57:10.390"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:10.357" endtime="20201030 10:57:10.390"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:10.355" endtime="20201030 10:57:10.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.353" endtime="20201030 10:57:10.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:10.395" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:10.395" endtime="20201030 10:57:10.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.392" endtime="20201030 10:57:10.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.352" endtime="20201030 10:57:10.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.352" endtime="20201030 10:57:10.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.397" endtime="20201030 10:57:10.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.350" endtime="20201030 10:57:10.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.348" endtime="20201030 10:57:10.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.324" endtime="20201030 10:57:10.400"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.411" endtime="20201030 10:57:10.510"></status>
</kw>
<msg timestamp="20201030 10:57:10.511" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.409" endtime="20201030 10:57:10.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.514" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.512" endtime="20201030 10:57:10.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.515" endtime="20201030 10:57:10.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.406" endtime="20201030 10:57:10.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.403" endtime="20201030 10:57:10.517"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.520" endtime="20201030 10:57:10.521"></status>
</kw>
<msg timestamp="20201030 10:57:10.522" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:10.518" endtime="20201030 10:57:10.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.527" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:10.526" endtime="20201030 10:57:10.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.529" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:10.528" endtime="20201030 10:57:10.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.523" endtime="20201030 10:57:10.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.534" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:10.533" endtime="20201030 10:57:10.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.536" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:10.535" endtime="20201030 10:57:10.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.530" endtime="20201030 10:57:10.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.543" endtime="20201030 10:57:10.837"></status>
</kw>
<msg timestamp="20201030 10:57:10.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080160528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080172708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.542" endtime="20201030 10:57:10.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080160528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080172708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:10.841" endtime="20201030 10:57:10.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.849" endtime="20201030 10:57:10.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.539" endtime="20201030 10:57:10.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.537" endtime="20201030 10:57:10.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:10.856" level="INFO">${RESULT} = [{'diff': 1.2180000000000524e-05}, {'diff': 1.2222000000006172e-05}, {'diff': 1.2194999999992628e-05}, {'diff': 1.2180000000000524e-05}, {'diff': 1.2208999999999137e-05}, {'diff': 1.2180999999999997e-...</msg>
<status status="PASS" starttime="20201030 10:57:10.853" endtime="20201030 10:57:10.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:10.861" level="INFO">${OVERHEAD} = {'diff': [1.2180000000000524e-05, 1.2222000000006172e-05, 1.2194999999992628e-05, 1.2180000000000524e-05, 1.2208999999999137e-05, 1.2180999999999997e-05, 1.2166999999993489e-05, 1.2194999999992628e-05...</msg>
<status status="PASS" starttime="20201030 10:57:10.857" endtime="20201030 10:57:10.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.866" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 10:57:10.865" endtime="20201030 10:57:10.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.869" level="INFO">VALUE: [1.2180000000000524e-05, 1.2222000000006172e-05, 1.2194999999992628e-05, 1.2180000000000524e-05, 1.2208999999999137e-05, 1.2180999999999997e-05, 1.2166999999993489e-05, 1.2194999999992628e-05, 1.2222999999991768e-05, 1.2180999999999997e-05, 1.2208999999999137e-05, 1.2166999999993489e-05, 1.2207999999999664e-05, 1.2180000000000524e-05, 1.2249999999991434e-05, 1.2194999999992628e-05, 1.2180999999999997e-05, 1.2263999999997943e-05, 1.2194999999992628e-05, 1.2194999999992628e-05, 1.2165999999994015e-05, 1.2180999999999997e-05, 1.2195000000006506e-05, 1.2180000000000524e-05, 1.2237000000012155e-05, 1.2165999999994015e-05, 1.2193999999993155e-05, 1.2193999999993155e-05, 1.2180999999999997e-05, 1.2180000000000524e-05, 1.2263999999997943e-05, 1.2249999999991434e-05, 1.2264000000011821e-05, 1.2221999999978417e-05, 1.220899999998526e-05, 1.2194999999992628e-05, 1.220899999998526e-05, 1.2167000000007366e-05, 1.2137999999994875e-05, 1.2180000000000524e-05, 1.2167000000007366e-05, 1.2208000000013541e-05, 1.225000000001919e-05, 1.2277000000004978e-05, 1.2180999999999997e-05, 1.2180000000000524e-05, 1.2222000000006172e-05, 1.2264000000011821e-05, 1.2264000000011821e-05, 1.2193999999993155e-05]</msg>
<status status="PASS" starttime="20201030 10:57:10.867" endtime="20201030 10:57:10.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.862" endtime="20201030 10:57:10.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.401" endtime="20201030 10:57:10.871"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:10.321" endtime="20201030 10:57:10.872" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:10.882" endtime="20201030 10:57:10.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.880" endtime="20201030 10:57:10.902"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.916" endtime="20201030 10:57:10.935"></status>
</kw>
<msg timestamp="20201030 10:57:10.936" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.914" endtime="20201030 10:57:10.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.938" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.937" endtime="20201030 10:57:10.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.945" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:10.940" endtime="20201030 10:57:10.945"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:10.912" endtime="20201030 10:57:10.946"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:10.909" endtime="20201030 10:57:10.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.908" endtime="20201030 10:57:10.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:10.951" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:10.950" endtime="20201030 10:57:10.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.948" endtime="20201030 10:57:10.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.907" endtime="20201030 10:57:10.951"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.906" endtime="20201030 10:57:10.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.952" endtime="20201030 10:57:10.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.905" endtime="20201030 10:57:10.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.903" endtime="20201030 10:57:10.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.878" endtime="20201030 10:57:10.955"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.965" endtime="20201030 10:57:11.258"></status>
</kw>
<msg timestamp="20201030 10:57:11.259" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.963" endtime="20201030 10:57:11.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.264" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.261" endtime="20201030 10:57:11.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.267" endtime="20201030 10:57:11.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.961" endtime="20201030 10:57:11.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.958" endtime="20201030 10:57:11.273"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.278" endtime="20201030 10:57:11.281"></status>
</kw>
<msg timestamp="20201030 10:57:11.282" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:11.275" endtime="20201030 10:57:11.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.299" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:11.297" endtime="20201030 10:57:11.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.303" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:11.301" endtime="20201030 10:57:11.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.284" endtime="20201030 10:57:11.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.314" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:11.312" endtime="20201030 10:57:11.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.319" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:11.316" endtime="20201030 10:57:11.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.307" endtime="20201030 10:57:11.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.335" endtime="20201030 10:57:11.634"></status>
</kw>
<msg timestamp="20201030 10:57:11.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081406806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081429417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.332" endtime="20201030 10:57:11.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081406806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081429417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:11.638" endtime="20201030 10:57:11.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.647" endtime="20201030 10:57:11.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.326" endtime="20201030 10:57:11.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.322" endtime="20201030 10:57:11.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:11.655" level="INFO">${RESULT} = [{'diff': 2.261100000000571e-05}, {'diff': 2.25969999999992e-05}, {'diff': 2.261100000000571e-05}, {'diff': 2.261100000000571e-05}, {'diff': 2.2597999999998675e-05}, {'diff': 2.2569999999999535e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:11.651" endtime="20201030 10:57:11.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:11.659" level="INFO">${OVERHEAD} = {'diff': [2.261100000000571e-05, 2.25969999999992e-05, 2.261100000000571e-05, 2.261100000000571e-05, 2.2597999999998675e-05, 2.2569999999999535e-05, 2.2556000000006904e-05, 2.2542000000000395e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 10:57:11.656" endtime="20201030 10:57:11.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.664" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 10:57:11.662" endtime="20201030 10:57:11.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.666" level="INFO">VALUE: [2.261100000000571e-05, 2.25969999999992e-05, 2.261100000000571e-05, 2.261100000000571e-05, 2.2597999999998675e-05, 2.2569999999999535e-05, 2.2556000000006904e-05, 2.2542000000000395e-05, 2.25969999999992e-05, 2.2554999999979675e-05, 2.262499999999834e-05, 2.2542000000014273e-05, 2.25410000000148e-05, 2.266700000000399e-05, 2.2541999999986517e-05, 2.2555999999979148e-05, 2.261100000000571e-05, 2.255500000000743e-05, 2.259700000001308e-05, 2.2582999999992692e-05, 2.265300000001136e-05, 2.259700000001308e-05, 2.2569999999999535e-05, 2.258400000001992e-05, 2.2569999999999535e-05, 2.259700000001308e-05, 2.255500000000743e-05, 2.249999999998087e-05, 2.2556000000006904e-05, 2.2583000000020448e-05, 2.2569999999999535e-05, 2.255500000000743e-05, 2.2582999999992692e-05, 2.261100000000571e-05, 2.2542000000014273e-05, 2.259700000001308e-05, 2.2582999999964937e-05, 2.2583000000020448e-05, 2.251300000000178e-05, 2.2582999999964937e-05, 2.2596999999957568e-05, 2.2582999999964937e-05, 2.259700000001308e-05, 2.251300000000178e-05, 2.2542000000014273e-05, 2.2526999999994413e-05, 2.259700000001308e-05, 2.2554999999979675e-05, 2.2569999999999535e-05, 2.2556000000006904e-05]</msg>
<status status="PASS" starttime="20201030 10:57:11.665" endtime="20201030 10:57:11.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.660" endtime="20201030 10:57:11.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.956" endtime="20201030 10:57:11.668"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:10.875" endtime="20201030 10:57:11.669" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:11.678" endtime="20201030 10:57:11.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.676" endtime="20201030 10:57:11.699"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.714" endtime="20201030 10:57:11.735"></status>
</kw>
<msg timestamp="20201030 10:57:11.736" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.712" endtime="20201030 10:57:11.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.738" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:11.737" endtime="20201030 10:57:11.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.741" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:11.739" endtime="20201030 10:57:11.742"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:11.709" endtime="20201030 10:57:11.742"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:11.706" endtime="20201030 10:57:11.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.705" endtime="20201030 10:57:11.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:11.747" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:11.746" endtime="20201030 10:57:11.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.744" endtime="20201030 10:57:11.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.704" endtime="20201030 10:57:11.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.703" endtime="20201030 10:57:11.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:11.749" endtime="20201030 10:57:11.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.702" endtime="20201030 10:57:11.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.700" endtime="20201030 10:57:11.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.674" endtime="20201030 10:57:11.752"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:11.756" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:11.765" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:12.915" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:11.755" endtime="20201030 10:57:12.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:12.923" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:12.919" endtime="20201030 10:57:12.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:11.753" endtime="20201030 10:57:12.925"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:12.934" endtime="20201030 10:57:12.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.930" endtime="20201030 10:57:12.959"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:12.978" endtime="20201030 10:57:12.998"></status>
</kw>
<msg timestamp="20201030 10:57:12.998" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:12.974" endtime="20201030 10:57:12.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.001" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.000" endtime="20201030 10:57:13.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.002" endtime="20201030 10:57:13.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.968" endtime="20201030 10:57:13.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.963" endtime="20201030 10:57:13.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.014" endtime="20201030 10:57:13.302"></status>
</kw>
<msg timestamp="20201030 10:57:13.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035899792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035908847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.012" endtime="20201030 10:57:13.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035899792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035908847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.307" endtime="20201030 10:57:13.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.315" endtime="20201030 10:57:13.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.008" endtime="20201030 10:57:13.318"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.006" endtime="20201030 10:57:13.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:13.322" level="INFO">${PHILIP_RES} = [{'diff': 9.055000000000868e-06}, {'diff': 8.973000000002396e-06}, {'diff': 9.069999999999911e-06}, {'diff': 9.069000000000438e-06}, {'diff': 9.069000000000438e-06}, {'diff': 9.069999999999911e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:13.319" endtime="20201030 10:57:13.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:13.327" level="INFO">${RESULT} = {'diff': [9.055000000000868e-06, 8.973000000002396e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.056000000000342e-06, 8.9860...</msg>
<status status="PASS" starttime="20201030 10:57:13.323" endtime="20201030 10:57:13.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.332" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:13.330" endtime="20201030 10:57:13.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.334" level="INFO">VALUE: [9.055000000000868e-06, 8.973000000002396e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.056000000000342e-06, 8.986000000002492e-06, 9.069000000000438e-06, 9.040999999994359e-06, 9.069999999999911e-06, 9.055000000000868e-06, 9.055000000000868e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.027000000001728e-06, 9.056000000000342e-06, 9.000000000002062e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.013999999994693e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.083000000000008e-06, 8.999999999995123e-06, 9.028000000001202e-06, 9.054999999993929e-06, 9.056000000000342e-06, 9.055000000000868e-06, 9.055000000000868e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.027999999994263e-06, 9.056000000000342e-06, 9.042000000000772e-06, 9.069000000000438e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.054999999993929e-06, 9.056000000000342e-06]</msg>
<status status="PASS" starttime="20201030 10:57:13.333" endtime="20201030 10:57:13.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.328" endtime="20201030 10:57:13.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.960" endtime="20201030 10:57:13.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.929" endtime="20201030 10:57:13.336"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.338" endtime="20201030 10:57:13.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.337" endtime="20201030 10:57:13.358"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.368" endtime="20201030 10:57:13.378"></status>
</kw>
<msg timestamp="20201030 10:57:13.379" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.366" endtime="20201030 10:57:13.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.382" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.380" endtime="20201030 10:57:13.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.383" endtime="20201030 10:57:13.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.363" endtime="20201030 10:57:13.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.360" endtime="20201030 10:57:13.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.393" endtime="20201030 10:57:13.682"></status>
</kw>
<msg timestamp="20201030 10:57:13.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020213389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.391" endtime="20201030 10:57:13.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020213389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.686" endtime="20201030 10:57:13.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.695" endtime="20201030 10:57:13.696"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.388" endtime="20201030 10:57:13.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.387" endtime="20201030 10:57:13.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:13.701" level="INFO">${PHILIP_RES} = [{'diff': 1.7430000000002305e-05}, {'diff': 1.740299999999917e-05}, {'diff': 1.7527999999999294e-05}, {'diff': 1.7459000000000918e-05}, {'diff': 1.7500000000000154e-05}, {'diff': 1.7472000000001014e-0...</msg>
<status status="PASS" starttime="20201030 10:57:13.698" endtime="20201030 10:57:13.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:13.712" level="INFO">${RESULT} = {'diff': [1.7430000000002305e-05, 1.740299999999917e-05, 1.7527999999999294e-05, 1.7459000000000918e-05, 1.7500000000000154e-05, 1.7472000000001014e-05, 1.7471999999997545e-05, 1.7473000000000488e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:13.703" endtime="20201030 10:57:13.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.720" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:13.718" endtime="20201030 10:57:13.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.727" level="INFO">VALUE: [1.7430000000002305e-05, 1.740299999999917e-05, 1.7527999999999294e-05, 1.7459000000000918e-05, 1.7500000000000154e-05, 1.7472000000001014e-05, 1.7471999999997545e-05, 1.7473000000000488e-05, 1.7486000000000584e-05, 1.7430000000002305e-05, 1.7500000000000154e-05, 1.7458000000001445e-05, 1.7473000000000488e-05, 1.7458000000001445e-05, 1.7487000000000058e-05, 1.7485999999997115e-05, 1.7527999999999294e-05, 1.7459000000000918e-05, 1.7443999999998405e-05, 1.7429999999998835e-05, 1.7541999999998864e-05, 1.7444000000001875e-05, 1.745899999999745e-05, 1.7458000000001445e-05, 1.7499999999996685e-05, 1.744500000000135e-05, 1.7458000000001445e-05, 1.7457999999997975e-05, 1.7500000000000154e-05, 1.7485999999997115e-05, 1.7500000000000154e-05, 1.7513999999999724e-05, 1.7486000000000584e-05, 1.744500000000135e-05, 1.7513999999999724e-05, 1.7415999999999265e-05, 1.754099999999939e-05, 1.7458000000001445e-05, 1.7472000000001014e-05, 1.744499999999788e-05, 1.7457999999997975e-05, 1.743100000000178e-05, 1.7472000000001014e-05, 1.7457999999997975e-05, 1.7471999999997545e-05, 1.7444000000001875e-05, 1.744500000000135e-05, 1.7472000000001014e-05, 1.744500000000135e-05, 1.7556000000001903e-05]</msg>
<status status="PASS" starttime="20201030 10:57:13.723" endtime="20201030 10:57:13.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.713" endtime="20201030 10:57:13.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.359" endtime="20201030 10:57:13.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.336" endtime="20201030 10:57:13.731"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.736" endtime="20201030 10:57:13.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.733" endtime="20201030 10:57:13.760"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.776" endtime="20201030 10:57:13.793"></status>
</kw>
<msg timestamp="20201030 10:57:13.794" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.773" endtime="20201030 10:57:13.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.800" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.797" endtime="20201030 10:57:13.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.803" endtime="20201030 10:57:13.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.768" endtime="20201030 10:57:13.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.764" endtime="20201030 10:57:13.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.812" endtime="20201030 10:57:14.099"></status>
</kw>
<msg timestamp="20201030 10:57:14.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032918681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032945403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:13.810" endtime="20201030 10:57:14.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032918681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032945403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.104" endtime="20201030 10:57:14.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.112" endtime="20201030 10:57:14.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.808" endtime="20201030 10:57:14.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.806" endtime="20201030 10:57:14.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:14.118" level="INFO">${PHILIP_RES} = [{'diff': 2.6721999999999857e-05}, {'diff': 2.6735999999999427e-05}, {'diff': 2.6749999999998997e-05}, {'diff': 2.683300000000388e-05}, {'diff': 2.6735999999999427e-05}, {'diff': 2.670899999999976e-05...</msg>
<status status="PASS" starttime="20201030 10:57:14.115" endtime="20201030 10:57:14.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.124" level="INFO">${RESULT} = {'diff': [2.6721999999999857e-05, 2.6735999999999427e-05, 2.6749999999998997e-05, 2.683300000000388e-05, 2.6735999999999427e-05, 2.670899999999976e-05, 2.6791999999997707e-05, 2.6790999999998233e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:14.119" endtime="20201030 10:57:14.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.128" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:14.127" endtime="20201030 10:57:14.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.130" level="INFO">VALUE: [2.6721999999999857e-05, 2.6735999999999427e-05, 2.6749999999998997e-05, 2.683300000000388e-05, 2.6735999999999427e-05, 2.670899999999976e-05, 2.6791999999997707e-05, 2.6790999999998233e-05, 2.6735999999999427e-05, 2.6763999999998567e-05, 2.6805999999997276e-05, 2.6776999999998663e-05, 2.6749999999998997e-05, 2.6763999999998567e-05, 2.6790999999998233e-05, 2.6749999999998997e-05, 2.6721999999999857e-05, 2.6763999999998567e-05, 2.6777000000005602e-05, 2.6736000000006366e-05, 2.6735999999999427e-05, 2.6806000000004215e-05, 2.6778000000005076e-05, 2.6708000000000287e-05, 2.6735999999999427e-05, 2.6792000000004645e-05, 2.6764000000005506e-05, 2.6735999999999427e-05, 2.6749999999998997e-05, 2.6792000000004645e-05, 2.6806000000004215e-05, 2.6791999999997707e-05, 2.6749999999998997e-05, 2.672299999999933e-05, 2.6776999999998663e-05, 2.6805999999997276e-05, 2.67369999999989e-05, 2.6735999999999427e-05, 2.6749999999998997e-05, 2.6721999999999857e-05, 2.6791999999997707e-05, 2.6818999999997373e-05, 2.6735999999999427e-05, 2.6749999999998997e-05, 2.6791999999997707e-05, 2.6763999999998567e-05, 2.6749999999998997e-05, 2.6749999999998997e-05, 2.6777999999998137e-05, 2.6791999999997707e-05]</msg>
<status status="PASS" starttime="20201030 10:57:14.129" endtime="20201030 10:57:14.131"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.125" endtime="20201030 10:57:14.131"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.761" endtime="20201030 10:57:14.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.731" endtime="20201030 10:57:14.132"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.134" endtime="20201030 10:57:14.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.133" endtime="20201030 10:57:14.154"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.162" endtime="20201030 10:57:14.176"></status>
</kw>
<msg timestamp="20201030 10:57:14.177" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.161" endtime="20201030 10:57:14.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.179" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.178" endtime="20201030 10:57:14.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.180" endtime="20201030 10:57:14.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.158" endtime="20201030 10:57:14.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.156" endtime="20201030 10:57:14.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.190" endtime="20201030 10:57:14.476"></status>
</kw>
<msg timestamp="20201030 10:57:14.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017833806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017870736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.188" endtime="20201030 10:57:14.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017833806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017870736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.480" endtime="20201030 10:57:14.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.489" endtime="20201030 10:57:14.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.185" endtime="20201030 10:57:14.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.184" endtime="20201030 10:57:14.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:14.495" level="INFO">${PHILIP_RES} = [{'diff': 3.693000000000099e-05}, {'diff': 3.684800000000252e-05}, {'diff': 3.6874999999998714e-05}, {'diff': 3.6903000000001324e-05}, {'diff': 3.683400000000295e-05}, {'diff': 3.6846999999999575e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:14.492" endtime="20201030 10:57:14.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.500" level="INFO">${RESULT} = {'diff': [3.693000000000099e-05, 3.684800000000252e-05, 3.6874999999998714e-05, 3.6903000000001324e-05, 3.683400000000295e-05, 3.6846999999999575e-05, 3.6888999999998284e-05, 3.6916999999997424e-05, 3...</msg>
<status status="PASS" starttime="20201030 10:57:14.496" endtime="20201030 10:57:14.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.504" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:14.503" endtime="20201030 10:57:14.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.506" level="INFO">VALUE: [3.693000000000099e-05, 3.684800000000252e-05, 3.6874999999998714e-05, 3.6903000000001324e-05, 3.683400000000295e-05, 3.6846999999999575e-05, 3.6888999999998284e-05, 3.6916999999997424e-05, 3.6846999999999575e-05, 3.6833000000000005e-05, 3.6902999999997854e-05, 3.683399999999948e-05, 3.6888999999998284e-05, 3.6875000000002184e-05, 3.6903000000001324e-05, 3.6833000000000005e-05, 3.6875000000002184e-05, 3.697200000000317e-05, 3.683399999999948e-05, 3.6889000000001754e-05, 3.6916999999997424e-05, 3.6889000000001754e-05, 3.6819000000000435e-05, 3.6874999999998714e-05, 3.6875000000002184e-05, 3.6860999999999144e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.690199999999838e-05, 3.6833000000000005e-05, 3.6888999999998284e-05, 3.690199999999838e-05, 3.6846999999999575e-05, 3.6902999999997854e-05, 3.6833000000000005e-05, 3.6833000000000005e-05, 3.683399999999948e-05, 3.6902999999997854e-05, 3.6903000000001324e-05, 3.684799999999905e-05, 3.6846999999999575e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, 3.6833000000000005e-05, 3.691599999999795e-05, 3.6889000000001754e-05, 3.6846999999999575e-05, 3.6917000000000894e-05, 3.6861000000002614e-05, 3.6846999999999575e-05]</msg>
<status status="PASS" starttime="20201030 10:57:14.505" endtime="20201030 10:57:14.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.500" endtime="20201030 10:57:14.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.155" endtime="20201030 10:57:14.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.132" endtime="20201030 10:57:14.508"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.510" endtime="20201030 10:57:14.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.509" endtime="20201030 10:57:14.530"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.538" endtime="20201030 10:57:14.553"></status>
</kw>
<msg timestamp="20201030 10:57:14.553" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.537" endtime="20201030 10:57:14.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.556" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.554" endtime="20201030 10:57:14.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.557" endtime="20201030 10:57:14.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.534" endtime="20201030 10:57:14.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.532" endtime="20201030 10:57:14.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.566" endtime="20201030 10:57:14.852"></status>
</kw>
<msg timestamp="20201030 10:57:14.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018602639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018650569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.564" endtime="20201030 10:57:14.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018602639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018650569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.856" endtime="20201030 10:57:14.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.864" endtime="20201030 10:57:14.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.562" endtime="20201030 10:57:14.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.560" endtime="20201030 10:57:14.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:14.871" level="INFO">${PHILIP_RES} = [{'diff': 4.792999999999811e-05}, {'diff': 4.786099999999974e-05}, {'diff': 4.787499999999931e-05}, {'diff': 4.787499999999931e-05}, {'diff': 4.784700000000017e-05}, {'diff': 4.791699999999802e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:14.868" endtime="20201030 10:57:14.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:14.875" level="INFO">${RESULT} = {'diff': [4.792999999999811e-05, 4.786099999999974e-05, 4.787499999999931e-05, 4.787499999999931e-05, 4.784700000000017e-05, 4.791699999999802e-05, 4.790299999999845e-05, 4.7875000000002776e-05, 4.777...</msg>
<status status="PASS" starttime="20201030 10:57:14.872" endtime="20201030 10:57:14.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.880" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:14.878" endtime="20201030 10:57:14.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.882" level="INFO">VALUE: [4.792999999999811e-05, 4.786099999999974e-05, 4.787499999999931e-05, 4.787499999999931e-05, 4.784700000000017e-05, 4.791699999999802e-05, 4.790299999999845e-05, 4.7875000000002776e-05, 4.777800000000179e-05, 4.791599999999854e-05, 4.7931000000001056e-05, 4.784700000000017e-05, 4.791599999999854e-05, 4.790299999999845e-05, 4.78330000000006e-05, 4.784700000000017e-05, 4.786099999999974e-05, 4.786099999999974e-05, 4.790199999999897e-05, 4.787499999999931e-05, 4.779200000000136e-05, 4.7917000000001486e-05, 4.791699999999802e-05, 4.78330000000006e-05, 4.7945000000000626e-05, 4.786099999999974e-05, 4.790200000000244e-05, 4.784700000000017e-05, 4.78879999999994e-05, 4.786099999999974e-05, 4.783400000000007e-05, 4.784799999999964e-05, 4.7959000000000196e-05, 4.7903000000001916e-05, 4.78339999999966e-05, 4.791600000000201e-05, 4.7917000000001486e-05, 4.781999999999703e-05, 4.791600000000201e-05, 4.78200000000005e-05, 4.790199999999897e-05, 4.788899999999888e-05, 4.7889000000002346e-05, 4.792999999999811e-05, 4.784799999999964e-05, 4.784799999999964e-05, 4.7875000000002776e-05, 4.786099999999974e-05, 4.7917000000001486e-05, 4.7903000000001916e-05]</msg>
<status status="PASS" starttime="20201030 10:57:14.881" endtime="20201030 10:57:14.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.876" endtime="20201030 10:57:14.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.531" endtime="20201030 10:57:14.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.508" endtime="20201030 10:57:14.884"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:14.887" endtime="20201030 10:57:14.906"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.885" endtime="20201030 10:57:14.907"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.915" endtime="20201030 10:57:14.931"></status>
</kw>
<msg timestamp="20201030 10:57:14.931" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.913" endtime="20201030 10:57:14.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:14.934" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:14.932" endtime="20201030 10:57:14.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.935" endtime="20201030 10:57:14.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.911" endtime="20201030 10:57:14.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.909" endtime="20201030 10:57:14.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:14.944" endtime="20201030 10:57:15.229"></status>
</kw>
<msg timestamp="20201030 10:57:15.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019057306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019116958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:14.942" endtime="20201030 10:57:15.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019057306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019116958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.233" endtime="20201030 10:57:15.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.242" endtime="20201030 10:57:15.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.940" endtime="20201030 10:57:15.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.938" endtime="20201030 10:57:15.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:15.248" level="INFO">${PHILIP_RES} = [{'diff': 5.9652000000000316e-05}, {'diff': 5.979100000000001e-05}, {'diff': 5.963900000000022e-05}, {'diff': 5.968099999999893e-05}, {'diff': 5.979100000000001e-05}, {'diff': 5.958300000000194e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:15.245" endtime="20201030 10:57:15.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:15.253" level="INFO">${RESULT} = {'diff': [5.9652000000000316e-05, 5.979100000000001e-05, 5.963900000000022e-05, 5.968099999999893e-05, 5.979100000000001e-05, 5.958300000000194e-05, 5.963900000000022e-05, 5.9750000000000775e-05, 5.95...</msg>
<status status="PASS" starttime="20201030 10:57:15.249" endtime="20201030 10:57:15.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.258" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:15.257" endtime="20201030 10:57:15.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.260" level="INFO">VALUE: [5.9652000000000316e-05, 5.979100000000001e-05, 5.963900000000022e-05, 5.968099999999893e-05, 5.979100000000001e-05, 5.958300000000194e-05, 5.963900000000022e-05, 5.9750000000000775e-05, 5.959699999999804e-05, 5.965299999999979e-05, 5.9721999999998165e-05, 5.9638000000000746e-05, 5.9722000000001635e-05, 5.965299999999979e-05, 5.963899999999675e-05, 5.9764000000000345e-05, 5.968099999999893e-05, 5.9736000000001205e-05, 5.9693999999999026e-05, 5.9679999999999456e-05, 5.963900000000022e-05, 5.9721999999998165e-05, 5.965299999999979e-05, 5.970899999999807e-05, 5.966699999999936e-05, 5.9708000000002065e-05, 5.966699999999936e-05, 5.962499999999718e-05, 5.980499999999958e-05, 5.965299999999979e-05, 5.9721999999998165e-05, 5.9638000000000746e-05, 5.9708000000002065e-05, 5.965299999999979e-05, 5.9638000000000746e-05, 5.963900000000022e-05, 5.9750000000000775e-05, 5.9679999999999456e-05, 5.973700000000068e-05, 5.958299999999847e-05, 5.9735999999997735e-05, 5.966699999999936e-05, 5.963900000000022e-05, 5.9735999999997735e-05, 5.963900000000022e-05, 5.9707999999998596e-05, 5.9693999999999026e-05, 5.963900000000022e-05, 5.9764000000000345e-05, 5.963900000000022e-05]</msg>
<status status="PASS" starttime="20201030 10:57:15.259" endtime="20201030 10:57:15.260"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.254" endtime="20201030 10:57:15.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.907" endtime="20201030 10:57:15.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:14.885" endtime="20201030 10:57:15.262"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:15.264" endtime="20201030 10:57:15.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.262" endtime="20201030 10:57:15.284"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.292" endtime="20201030 10:57:15.308"></status>
</kw>
<msg timestamp="20201030 10:57:15.308" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.291" endtime="20201030 10:57:15.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.310" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.309" endtime="20201030 10:57:15.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.312" endtime="20201030 10:57:15.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.288" endtime="20201030 10:57:15.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.286" endtime="20201030 10:57:15.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.321" endtime="20201030 10:57:15.606"></status>
</kw>
<msg timestamp="20201030 10:57:15.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018670417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018742833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.319" endtime="20201030 10:57:15.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018670417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018742833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.610" endtime="20201030 10:57:15.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.618" endtime="20201030 10:57:15.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.316" endtime="20201030 10:57:15.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.315" endtime="20201030 10:57:15.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:15.626" level="INFO">${PHILIP_RES} = [{'diff': 7.241599999999876e-05}, {'diff': 7.230600000000115e-05}, {'diff': 7.237499999999952e-05}, {'diff': 7.234700000000038e-05}, {'diff': 7.243100000000127e-05}, {'diff': 7.237499999999952e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:15.622" endtime="20201030 10:57:15.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:15.630" level="INFO">${RESULT} = {'diff': [7.241599999999876e-05, 7.230600000000115e-05, 7.237499999999952e-05, 7.234700000000038e-05, 7.243100000000127e-05, 7.237499999999952e-05, 7.238899999999909e-05, 7.241599999999876e-05, 7.2374...</msg>
<status status="PASS" starttime="20201030 10:57:15.627" endtime="20201030 10:57:15.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.634" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:15.633" endtime="20201030 10:57:15.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.636" level="INFO">VALUE: [7.241599999999876e-05, 7.230600000000115e-05, 7.237499999999952e-05, 7.234700000000038e-05, 7.243100000000127e-05, 7.237499999999952e-05, 7.238899999999909e-05, 7.241599999999876e-05, 7.237499999999952e-05, 7.234699999999691e-05, 7.238900000000256e-05, 7.229200000000158e-05, 7.234700000000038e-05, 7.237500000000299e-05, 7.233300000000081e-05, 7.241699999999823e-05, 7.23049999999982e-05, 7.243100000000127e-05, 7.233300000000081e-05, 7.24439999999979e-05, 7.230599999999768e-05, 7.244400000000137e-05, 7.232000000000072e-05, 7.238899999999909e-05, 7.245900000000041e-05, 7.238900000000256e-05, 7.236199999999943e-05, 7.24439999999979e-05, 7.237499999999952e-05, 7.237499999999952e-05, 7.245900000000041e-05, 7.240299999999866e-05, 7.231899999999777e-05, 7.237499999999952e-05, 7.236099999999995e-05, 7.245900000000041e-05, 7.232000000000072e-05, 7.234700000000038e-05, 7.231900000000124e-05, 7.232000000000072e-05, 7.231900000000124e-05, 7.233299999999734e-05, 7.234700000000038e-05, 7.244499999999737e-05, 7.234700000000038e-05, 7.243100000000127e-05, 7.231899999999777e-05, 7.245900000000041e-05, 7.234700000000038e-05, 7.236099999999995e-05]</msg>
<status status="PASS" starttime="20201030 10:57:15.635" endtime="20201030 10:57:15.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.631" endtime="20201030 10:57:15.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.284" endtime="20201030 10:57:15.638"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.262" endtime="20201030 10:57:15.638"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:15.640" endtime="20201030 10:57:15.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.639" endtime="20201030 10:57:15.660"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.669" endtime="20201030 10:57:15.689"></status>
</kw>
<msg timestamp="20201030 10:57:15.689" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.667" endtime="20201030 10:57:15.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:15.692" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:15.690" endtime="20201030 10:57:15.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.693" endtime="20201030 10:57:15.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.665" endtime="20201030 10:57:15.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.662" endtime="20201030 10:57:15.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:15.705" endtime="20201030 10:57:15.990"></status>
</kw>
<msg timestamp="20201030 10:57:15.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019025306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019111194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.704" endtime="20201030 10:57:15.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019025306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019111194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:15.995" endtime="20201030 10:57:16.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.003" endtime="20201030 10:57:16.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.701" endtime="20201030 10:57:16.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.699" endtime="20201030 10:57:16.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:16.010" level="INFO">${PHILIP_RES} = [{'diff': 8.588800000000271e-05}, {'diff': 8.594500000000047e-05}, {'diff': 8.581900000000087e-05}, {'diff': 8.594400000000099e-05}, {'diff': 8.594400000000099e-05}, {'diff': 8.583300000000044e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:16.006" endtime="20201030 10:57:16.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.014" level="INFO">${RESULT} = {'diff': [8.588800000000271e-05, 8.594500000000047e-05, 8.581900000000087e-05, 8.594400000000099e-05, 8.594400000000099e-05, 8.583300000000044e-05, 8.591700000000133e-05, 8.575000000000249e-05, 8.5959...</msg>
<status status="PASS" starttime="20201030 10:57:16.011" endtime="20201030 10:57:16.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.018" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:16.017" endtime="20201030 10:57:16.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.020" level="INFO">VALUE: [8.588800000000271e-05, 8.594500000000047e-05, 8.581900000000087e-05, 8.594400000000099e-05, 8.594400000000099e-05, 8.583300000000044e-05, 8.591700000000133e-05, 8.575000000000249e-05, 8.595900000000004e-05, 8.579100000000173e-05, 8.592999999999795e-05, 8.5847e-05, 8.595799999999709e-05, 8.591700000000133e-05, 8.587500000000262e-05, 8.59310000000009e-05, 8.588899999999872e-05, 8.588899999999872e-05, 8.593000000000142e-05, 8.587500000000262e-05, 8.594500000000047e-05, 8.5944999999997e-05, 8.595900000000004e-05, 8.591699999999786e-05, 8.587499999999915e-05, 8.601399999999884e-05, 8.590299999999829e-05, 8.588900000000219e-05, 8.581900000000087e-05, 8.590300000000176e-05, 8.594400000000099e-05, 8.592999999999795e-05, 8.583300000000044e-05, 8.59729999999996e-05, 8.583399999999991e-05, 8.595800000000056e-05, 8.5847e-05, 8.59310000000009e-05, 8.594500000000047e-05, 8.584800000000295e-05, 8.588899999999872e-05, 8.594400000000099e-05, 8.580499999999783e-05, 8.599999999999927e-05, 8.602700000000241e-05, 8.587499999999915e-05, 8.586200000000252e-05, 8.591700000000133e-05, 8.592999999999795e-05, 8.58059999999973e-05]</msg>
<status status="PASS" starttime="20201030 10:57:16.019" endtime="20201030 10:57:16.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.015" endtime="20201030 10:57:16.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.661" endtime="20201030 10:57:16.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:15.638" endtime="20201030 10:57:16.023"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.025" endtime="20201030 10:57:16.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.024" endtime="20201030 10:57:16.045"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.054" endtime="20201030 10:57:16.071"></status>
</kw>
<msg timestamp="20201030 10:57:16.071" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.052" endtime="20201030 10:57:16.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.074" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.072" endtime="20201030 10:57:16.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.075" endtime="20201030 10:57:16.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.049" endtime="20201030 10:57:16.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.048" endtime="20201030 10:57:16.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.084" endtime="20201030 10:57:16.368"></status>
</kw>
<msg timestamp="20201030 10:57:16.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021151139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021251403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.082" endtime="20201030 10:57:16.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021151139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021251403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.373" endtime="20201030 10:57:16.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.381" endtime="20201030 10:57:16.382"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.080" endtime="20201030 10:57:16.383"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.078" endtime="20201030 10:57:16.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:16.387" level="INFO">${PHILIP_RES} = [{'diff': 0.00010026399999999921}, {'diff': 0.00010024999999999964}, {'diff': 0.00010037499999999977}, {'diff': 0.00010024999999999964}, {'diff': 0.00010031899999999802}, {'diff': 0.000100374999999999...</msg>
<status status="PASS" starttime="20201030 10:57:16.384" endtime="20201030 10:57:16.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.392" level="INFO">${RESULT} = {'diff': [0.00010026399999999921, 0.00010024999999999964, 0.00010037499999999977, 0.00010024999999999964, 0.00010031899999999802, 0.00010037499999999977, 0.00010029199999999835, 0.0001003480000000001,...</msg>
<status status="PASS" starttime="20201030 10:57:16.388" endtime="20201030 10:57:16.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.396" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:16.395" endtime="20201030 10:57:16.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.399" level="INFO">VALUE: [0.00010026399999999921, 0.00010024999999999964, 0.00010037499999999977, 0.00010024999999999964, 0.00010031899999999802, 0.00010037499999999977, 0.00010029199999999835, 0.0001003480000000001, 0.00010024999999999964, 0.00010037499999999977, 0.00010029199999999835, 0.00010029199999999835, 0.00010027799999999878, 0.00010030500000000192, 0.00010038899999999934, 0.00010023699999999955, 0.00010037499999999977, 0.00010033299999999759, 0.00010024999999999964, 0.00010025000000000311, 0.00010029199999999835, 0.00010026399999999921, 0.00010029199999999835, 0.00010037499999999977, 0.00010023600000000008, 0.00010033400000000053, 0.00010031900000000149, 0.00010023600000000008, 0.00010029200000000182, 0.00010033400000000053, 0.00010033300000000106, 0.00010026400000000268, 0.00010033400000000053, 0.00010033400000000053, 0.0001002220000000005, 0.00010032000000000096, 0.00010016600000000223, 0.00010036200000000314, 0.00010026299999999974, 0.00010040300000000238, 0.00010027800000000225, 0.00010030500000000192, 0.00010033300000000106, 0.00010023600000000008, 0.0001003480000000001, 0.00010037499999999977, 0.00010024999999999964, 0.00010037500000000324, 0.00010038899999999934, 0.00010026399999999921]</msg>
<status status="PASS" starttime="20201030 10:57:16.398" endtime="20201030 10:57:16.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.393" endtime="20201030 10:57:16.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.046" endtime="20201030 10:57:16.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.023" endtime="20201030 10:57:16.400"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.411" endtime="20201030 10:57:16.431"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.401" endtime="20201030 10:57:16.431"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.439" endtime="20201030 10:57:16.452"></status>
</kw>
<msg timestamp="20201030 10:57:16.453" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.438" endtime="20201030 10:57:16.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.455" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.454" endtime="20201030 10:57:16.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.456" endtime="20201030 10:57:16.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.435" endtime="20201030 10:57:16.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.433" endtime="20201030 10:57:16.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.465" endtime="20201030 10:57:16.750"></status>
</kw>
<msg timestamp="20201030 10:57:16.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017055417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017171028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.464" endtime="20201030 10:57:16.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017055417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017171028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:16.755" endtime="20201030 10:57:16.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.763" endtime="20201030 10:57:16.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.461" endtime="20201030 10:57:16.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.459" endtime="20201030 10:57:16.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:16.770" level="INFO">${PHILIP_RES} = [{'diff': 0.00011561100000000157}, {'diff': 0.00011547300000000135}, {'diff': 0.00011545799999999884}, {'diff': 0.00011558299999999896}, {'diff': 0.00011548599999999798}, {'diff': 0.000115500000000001...</msg>
<status status="PASS" starttime="20201030 10:57:16.767" endtime="20201030 10:57:16.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:16.774" level="INFO">${RESULT} = {'diff': [0.00011561100000000157, 0.00011547300000000135, 0.00011545799999999884, 0.00011558299999999896, 0.00011548599999999798, 0.00011550000000000102, 0.00011551400000000059, 0.000115597000000002, ...</msg>
<status status="PASS" starttime="20201030 10:57:16.771" endtime="20201030 10:57:16.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.778" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:16.777" endtime="20201030 10:57:16.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.781" level="INFO">VALUE: [0.00011561100000000157, 0.00011547300000000135, 0.00011545799999999884, 0.00011558299999999896, 0.00011548599999999798, 0.00011550000000000102, 0.00011551400000000059, 0.000115597000000002, 0.00011554199999999973, 0.00011559699999999853, 0.00011545799999999884, 0.00011559699999999853, 0.00011551400000000059, 0.00011549999999999755, 0.00011558299999999896, 0.00011540300000000003, 0.00011545799999999884, 0.00011548599999999798, 0.00011561100000000157, 0.00011552700000000068, 0.00011555499999999982, 0.00011545900000000178, 0.00011557000000000234, 0.00011552700000000068, 0.00011551400000000059, 0.00011554199999999973, 0.00011549999999999755, 0.00011551400000000059, 0.00011558300000000243, 0.00011551400000000059, 0.00011561100000000157, 0.00011552800000000016, 0.00011547200000000188, 0.00011547199999999841, 0.00011554100000000025, 0.0001155689999999994, 0.00011550000000000102, 0.00011550000000000102, 0.00011555499999999982, 0.00011548600000000145, 0.00011568099999999942, 0.00011551400000000059, 0.00011547200000000188, 0.00011557000000000234, 0.000115597000000002, 0.00011545800000000231, 0.00011549999999999755, 0.0001155689999999994, 0.00011551400000000059, 0.00011548600000000145]</msg>
<status status="PASS" starttime="20201030 10:57:16.780" endtime="20201030 10:57:16.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.775" endtime="20201030 10:57:16.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.432" endtime="20201030 10:57:16.783"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.401" endtime="20201030 10:57:16.783"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:16.785" endtime="20201030 10:57:16.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.784" endtime="20201030 10:57:16.805"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.813" endtime="20201030 10:57:16.834"></status>
</kw>
<msg timestamp="20201030 10:57:16.835" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.812" endtime="20201030 10:57:16.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.837" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.836" endtime="20201030 10:57:16.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.838" endtime="20201030 10:57:16.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.809" endtime="20201030 10:57:16.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.807" endtime="20201030 10:57:16.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.848" endtime="20201030 10:57:17.135"></status>
</kw>
<msg timestamp="20201030 10:57:17.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:16.847" endtime="20201030 10:57:17.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:17.139" endtime="20201030 10:57:17.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.147" endtime="20201030 10:57:17.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.844" endtime="20201030 10:57:17.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.843" endtime="20201030 10:57:17.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:17.153" level="INFO">${PHILIP_RES} = [{'diff': 0.00013161100000000023}, {'diff': 0.00013158400000000056}, {'diff': 0.00013165299999999894}, {'diff': 0.0001315409999999989}, {'diff': 0.0001316249999999998}, {'diff': 0.00013162500000000327...</msg>
<status status="PASS" starttime="20201030 10:57:17.150" endtime="20201030 10:57:17.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:17.158" level="INFO">${RESULT} = {'diff': [0.00013161100000000023, 0.00013158400000000056, 0.00013165299999999894, 0.0001315409999999989, 0.0001316249999999998, 0.00013162500000000327, 0.00013148700000000305, 0.00013163899999999937, ...</msg>
<status status="PASS" starttime="20201030 10:57:17.154" endtime="20201030 10:57:17.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.162" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:17.161" endtime="20201030 10:57:17.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.164" level="INFO">VALUE: [0.00013161100000000023, 0.00013158400000000056, 0.00013165299999999894, 0.0001315409999999989, 0.0001316249999999998, 0.00013162500000000327, 0.00013148700000000305, 0.00013163899999999937, 0.00013162500000000327, 0.0001316530000000024, 0.00013152699999999934, 0.00013166700000000198, 0.00013156899999999805, 0.00013163899999999937, 0.00013163900000000284, 0.0001316530000000024, 0.0001316379999999999, 0.0001316249999999998, 0.00013161100000000023, 0.00013165299999999894, 0.00013155600000000142, 0.0001316249999999998, 0.00013161100000000023, 0.00013163899999999937, 0.00013163899999999937, 0.00013159700000000066, 0.00013150000000000314, 0.00013163899999999937, 0.0001316249999999998, 0.0001315279999999988, 0.0001316249999999998, 0.0001316249999999998, 0.00013161100000000023, 0.0001315969999999972, 0.00013154200000000185, 0.0001316249999999998, 0.00013168100000000155, 0.0001315830000000011, 0.0001315830000000011, 0.00013163899999999937, 0.00013154199999999838, 0.00013165299999999894, 0.00013154199999999838, 0.00013165299999999894, 0.0001316249999999998, 0.00013161100000000023, 0.00013165299999999894, 0.0001316249999999998, 0.000131570000000001, 0.00013154200000000185]</msg>
<status status="PASS" starttime="20201030 10:57:17.163" endtime="20201030 10:57:17.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.158" endtime="20201030 10:57:17.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.806" endtime="20201030 10:57:17.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.783" endtime="20201030 10:57:17.167"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:17.169" endtime="20201030 10:57:17.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.168" endtime="20201030 10:57:17.189"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.197" endtime="20201030 10:57:17.217"></status>
</kw>
<msg timestamp="20201030 10:57:17.217" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.196" endtime="20201030 10:57:17.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.219" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.218" endtime="20201030 10:57:17.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.220" endtime="20201030 10:57:17.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.193" endtime="20201030 10:57:17.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.191" endtime="20201030 10:57:17.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.230" endtime="20201030 10:57:17.515"></status>
</kw>
<msg timestamp="20201030 10:57:17.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017618708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017767264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.228" endtime="20201030 10:57:17.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017618708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017767264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.519" endtime="20201030 10:57:17.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.527" endtime="20201030 10:57:17.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.225" endtime="20201030 10:57:17.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.224" endtime="20201030 10:57:17.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:17.534" level="INFO">${PHILIP_RES} = [{'diff': 0.00014855600000000108}, {'diff': 0.00014861099999999988}, {'diff': 0.00014855600000000108}, {'diff': 0.0001486529999999986}, {'diff': 0.00014855499999999813}, {'diff': 0.0001485560000000010...</msg>
<status status="PASS" starttime="20201030 10:57:17.531" endtime="20201030 10:57:17.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:17.539" level="INFO">${RESULT} = {'diff': [0.00014855600000000108, 0.00014861099999999988, 0.00014855600000000108, 0.0001486529999999986, 0.00014855499999999813, 0.00014855600000000108, 0.00014861099999999988, 0.00014847199999999672,...</msg>
<status status="PASS" starttime="20201030 10:57:17.535" endtime="20201030 10:57:17.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.543" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:17.542" endtime="20201030 10:57:17.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.545" level="INFO">VALUE: [0.00014855600000000108, 0.00014861099999999988, 0.00014855600000000108, 0.0001486529999999986, 0.00014855499999999813, 0.00014855600000000108, 0.00014861099999999988, 0.00014847199999999672, 0.00014858399999999675, 0.00014854099999999856, 0.00014851400000000237, 0.00014858400000000022, 0.00014858299999999727, 0.0001485559999999976, 0.00014863899999999902, 0.00014845800000000062, 0.0001484590000000001, 0.0001485970000000003, 0.0001485139999999989, 0.00014854199999999804, 0.00014861099999999988, 0.00014849999999999933, 0.0001485970000000003, 0.000148526999999999, 0.00014856900000000117, 0.00014855600000000108, 0.00014855499999999813, 0.00014854100000000203, 0.00014855600000000108, 0.0001485550000000016, 0.00014861099999999988, 0.0001484720000000002, 0.00014855600000000108, 0.00014854099999999856, 0.0001484160000000019, 0.0001485139999999989, 0.00014857000000000065, 0.00014857000000000065, 0.0001485689999999977, 0.00014854100000000203, 0.00014861100000000335, 0.00014848599999999976, 0.00014858299999999727, 0.0001484030000000018, 0.00014852799999999847, 0.00014845800000000062, 0.0001485139999999989, 0.000148526999999999, 0.00014855499999999813, 0.00014848599999999976]</msg>
<status status="PASS" starttime="20201030 10:57:17.544" endtime="20201030 10:57:17.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.539" endtime="20201030 10:57:17.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.190" endtime="20201030 10:57:17.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.167" endtime="20201030 10:57:17.547"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:17.550" endtime="20201030 10:57:17.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.548" endtime="20201030 10:57:17.570"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.578" endtime="20201030 10:57:17.598"></status>
</kw>
<msg timestamp="20201030 10:57:17.599" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.576" endtime="20201030 10:57:17.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.601" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.600" endtime="20201030 10:57:17.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.602" endtime="20201030 10:57:17.604"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.574" endtime="20201030 10:57:17.604"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.572" endtime="20201030 10:57:17.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.611" endtime="20201030 10:57:17.898"></status>
</kw>
<msg timestamp="20201030 10:57:17.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01908, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019246333, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:57:17.610" endtime="20201030 10:57:17.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01908, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019246333, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:57:17.902" endtime="20201030 10:57:17.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.910" endtime="20201030 10:57:17.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.607" endtime="20201030 10:57:17.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.605" endtime="20201030 10:57:17.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:17.917" level="INFO">${PHILIP_RES} = [{'diff': 0.00016633300000000115}, {'diff': 0.00016631999999999758}, {'diff': 0.00016634700000000072}, {'diff': 0.00016633300000000115}, {'diff': 0.00016637499999999986}, {'diff': 0.000166361000000000...</msg>
<status status="PASS" starttime="20201030 10:57:17.914" endtime="20201030 10:57:17.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:17.921" level="INFO">${RESULT} = {'diff': [0.00016633300000000115, 0.00016631999999999758, 0.00016634700000000072, 0.00016633300000000115, 0.00016637499999999986, 0.00016636100000000029, 0.00016633300000000115, 0.00016622199999999712...</msg>
<status status="PASS" starttime="20201030 10:57:17.918" endtime="20201030 10:57:17.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.926" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:17.925" endtime="20201030 10:57:17.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.928" level="INFO">VALUE: [0.00016633300000000115, 0.00016631999999999758, 0.00016634700000000072, 0.00016633300000000115, 0.00016637499999999986, 0.00016636100000000029, 0.00016633300000000115, 0.00016622199999999712, 0.0001664440000000017, 0.00016633299999999768, 0.00016633300000000115, 0.00016636100000000029, 0.0001662639999999993, 0.00016633300000000115, 0.00016633400000000062, 0.00016627799999999887, 0.00016640199999999952, 0.0001663890000000029, 0.00016638899999999943, 0.00016636100000000029, 0.0001663480000000002, 0.00016636100000000029, 0.00016645900000000075, 0.00016633300000000115, 0.00016638899999999943, 0.00016633399999999715, 0.00016631900000000158, 0.0001664440000000017, 0.00016636100000000029, 0.00016634700000000072, 0.00016634699999999725, 0.00016637499999999986, 0.00016637499999999986, 0.00016637499999999986, 0.00016647200000000084, 0.00016637499999999986, 0.0001662500000000032, 0.00016633299999999768, 0.00016641600000000256, 0.00016633299999999768, 0.00016631900000000158, 0.00016624999999999973, 0.0001663890000000029, 0.000166305999999998, 0.00016632000000000105, 0.00016620799999999755, 0.000166402999999999, 0.0001662920000000019, 0.00016637499999999986, 0.00016631900000000158]</msg>
<status status="PASS" starttime="20201030 10:57:17.927" endtime="20201030 10:57:17.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.922" endtime="20201030 10:57:17.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.570" endtime="20201030 10:57:17.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.548" endtime="20201030 10:57:17.930"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:17.932" endtime="20201030 10:57:17.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.931" endtime="20201030 10:57:17.952"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.961" endtime="20201030 10:57:17.980"></status>
</kw>
<msg timestamp="20201030 10:57:17.980" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.959" endtime="20201030 10:57:17.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:17.983" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:17.981" endtime="20201030 10:57:17.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.984" endtime="20201030 10:57:17.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.957" endtime="20201030 10:57:17.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.954" endtime="20201030 10:57:17.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:17.994" endtime="20201030 10:57:18.280"></status>
</kw>
<msg timestamp="20201030 10:57:18.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018059347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018244306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:17.992" endtime="20201030 10:57:18.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018059347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018244306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.284" endtime="20201030 10:57:18.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.292" endtime="20201030 10:57:18.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.990" endtime="20201030 10:57:18.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.988" endtime="20201030 10:57:18.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:18.299" level="INFO">${PHILIP_RES} = [{'diff': 0.00018495899999999843}, {'diff': 0.00018513900000000083}, {'diff': 0.0001850140000000007}, {'diff': 0.00018513900000000083}, {'diff': 0.0001850270000000008}, {'diff': 0.00018499999999999767...</msg>
<status status="PASS" starttime="20201030 10:57:18.296" endtime="20201030 10:57:18.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:18.303" level="INFO">${RESULT} = {'diff': [0.00018495899999999843, 0.00018513900000000083, 0.0001850140000000007, 0.00018513900000000083, 0.0001850270000000008, 0.00018499999999999767, 0.00018513900000000083, 0.00018499999999999767, ...</msg>
<status status="PASS" starttime="20201030 10:57:18.300" endtime="20201030 10:57:18.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.307" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:18.306" endtime="20201030 10:57:18.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.309" level="INFO">VALUE: [0.00018495899999999843, 0.00018513900000000083, 0.0001850140000000007, 0.00018513900000000083, 0.0001850270000000008, 0.00018499999999999767, 0.00018513900000000083, 0.00018499999999999767, 0.00018491699999999972, 0.00018506999999999899, 0.00018500000000000114, 0.00018505599999999942, 0.0001850270000000008, 0.0001849439999999994, 0.0001851110000000017, 0.00018501399999999724, 0.00018508300000000255, 0.0001850140000000007, 0.00018502699999999733, 0.00018508299999999908, 0.00018491600000000025, 0.0001850689999999995, 0.00018505599999999942, 0.00018497199999999853, 0.00018518000000000007, 0.00018508300000000255, 0.00018513899999999736, 0.0001850689999999995, 0.00018509699999999865, 0.00018502800000000028, 0.00018501399999999724, 0.00018518099999999954, 0.00018497300000000147, 0.00018508300000000255, 0.00018504199999999985, 0.00018509799999999813, 0.00018502800000000028, 0.0001851119999999977, 0.000184972000000002, 0.00018504100000000037, 0.0001851249999999978, 0.0001850689999999995, 0.00018505499999999994, 0.00018508299999999908, 0.00018498600000000157, 0.00018511099999999822, 0.00018495799999999896, 0.00018507000000000245, 0.00018500000000000114, 0.0001850689999999995]</msg>
<status status="PASS" starttime="20201030 10:57:18.308" endtime="20201030 10:57:18.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.304" endtime="20201030 10:57:18.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.953" endtime="20201030 10:57:18.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:17.930" endtime="20201030 10:57:18.312"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.314" endtime="20201030 10:57:18.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.313" endtime="20201030 10:57:18.334"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.343" endtime="20201030 10:57:18.366"></status>
</kw>
<msg timestamp="20201030 10:57:18.366" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.341" endtime="20201030 10:57:18.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.369" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.367" endtime="20201030 10:57:18.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.370" endtime="20201030 10:57:18.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.338" endtime="20201030 10:57:18.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.336" endtime="20201030 10:57:18.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.379" endtime="20201030 10:57:18.664"></status>
</kw>
<msg timestamp="20201030 10:57:18.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017842417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018047, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:18.377" endtime="20201030 10:57:18.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017842417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018047, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:18.668" endtime="20201030 10:57:18.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.676" endtime="20201030 10:57:18.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.375" endtime="20201030 10:57:18.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.373" endtime="20201030 10:57:18.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:18.683" level="INFO">${PHILIP_RES} = [{'diff': 0.00020458300000000124}, {'diff': 0.00020454199999999853}, {'diff': 0.00020454199999999853}, {'diff': 0.00020449999999999982}, {'diff': 0.0002045269999999995}, {'diff': 0.0002045139999999994...</msg>
<status status="PASS" starttime="20201030 10:57:18.679" endtime="20201030 10:57:18.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:18.687" level="INFO">${RESULT} = {'diff': [0.00020458300000000124, 0.00020454199999999853, 0.00020454199999999853, 0.00020449999999999982, 0.0002045269999999995, 0.0002045139999999994, 0.0002043469999999971, 0.00020444500000000101, 0...</msg>
<status status="PASS" starttime="20201030 10:57:18.684" endtime="20201030 10:57:18.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.692" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:18.691" endtime="20201030 10:57:18.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.694" level="INFO">VALUE: [0.00020458300000000124, 0.00020454199999999853, 0.00020454199999999853, 0.00020449999999999982, 0.0002045269999999995, 0.0002045139999999994, 0.0002043469999999971, 0.00020444500000000101, 0.00020441700000000187, 0.00020448600000000025, 0.00020444399999999807, 0.00020448600000000025, 0.0002044169999999984, 0.0002045139999999994, 0.00020444399999999807, 0.000204542000000002, 0.00020452800000000243, 0.00020436100000000013, 0.00020448600000000025, 0.00020436100000000013, 0.00020449999999999982, 0.00020440299999999884, 0.0002044160000000024, 0.00020444500000000101, 0.0002044580000000011, 0.00020438899999999927, 0.00020448600000000025, 0.00020449999999999982, 0.00020443100000000144, 0.00020448600000000025, 0.00020452799999999896, 0.0002045139999999994, 0.00020452799999999896, 0.00020441599999999893, 0.00020440199999999936, 0.00020451299999999992, 0.00020454199999999853, 0.00020452799999999896, 0.00020449999999999982, 0.000204542000000002, 0.0002045139999999994, 0.00020448600000000025, 0.00020452800000000243, 0.00020441700000000187, 0.0002045689999999982, 0.000204542000000002, 0.0002044169999999984, 0.00020452799999999896, 0.00020438899999999927, 0.00020454199999999853]</msg>
<status status="PASS" starttime="20201030 10:57:18.693" endtime="20201030 10:57:18.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.688" endtime="20201030 10:57:18.696"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.335" endtime="20201030 10:57:18.696"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.312" endtime="20201030 10:57:18.696"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.698" endtime="20201030 10:57:18.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.697" endtime="20201030 10:57:18.718"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.727" endtime="20201030 10:57:18.754"></status>
</kw>
<msg timestamp="20201030 10:57:18.754" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.725" endtime="20201030 10:57:18.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.756" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.755" endtime="20201030 10:57:18.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.758" endtime="20201030 10:57:18.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.723" endtime="20201030 10:57:18.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.720" endtime="20201030 10:57:18.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.766" endtime="20201030 10:57:19.053"></status>
</kw>
<msg timestamp="20201030 10:57:19.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020624306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020849069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:18.765" endtime="20201030 10:57:19.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020624306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020849069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.057" endtime="20201030 10:57:19.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.066" endtime="20201030 10:57:19.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.762" endtime="20201030 10:57:19.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.761" endtime="20201030 10:57:19.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:19.072" level="INFO">${PHILIP_RES} = [{'diff': 0.00022476300000000282}, {'diff': 0.000224806000000001}, {'diff': 0.0002248609999999998}, {'diff': 0.00022472200000000012}, {'diff': 0.0002249169999999981}, {'diff': 0.0002248190000000011}, ...</msg>
<status status="PASS" starttime="20201030 10:57:19.069" endtime="20201030 10:57:19.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.076" level="INFO">${RESULT} = {'diff': [0.00022476300000000282, 0.000224806000000001, 0.0002248609999999998, 0.00022472200000000012, 0.0002249169999999981, 0.0002248190000000011, 0.00022472200000000012, 0.00022469500000000045, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:19.073" endtime="20201030 10:57:19.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.080" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:19.079" endtime="20201030 10:57:19.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.083" level="INFO">VALUE: [0.00022476300000000282, 0.000224806000000001, 0.0002248609999999998, 0.00022472200000000012, 0.0002249169999999981, 0.0002248190000000011, 0.00022472200000000012, 0.00022469500000000045, 0.00022482000000000057, 0.00022482000000000057, 0.0002248190000000011, 0.00022484700000000024, 0.00022487500000000285, 0.00022473599999999969, 0.00022487500000000285, 0.00022479199999999797, 0.00022483300000000067, 0.00022482000000000057, 0.00022494399999999776, 0.00022484700000000024, 0.00022484700000000024, 0.00022479199999999797, 0.00022487499999999938, 0.00022490299999999852, 0.00022474999999999926, 0.0002248609999999998, 0.00022493100000000113, 0.0002247229999999996, 0.00022484799999999971, 0.0002247229999999996, 0.00022490299999999852, 0.00022474999999999926, 0.000224806000000001, 0.00022487499999999938, 0.00022474999999999926, 0.00022484700000000024, 0.00022483400000000014, 0.00022474999999999926, 0.00022487499999999938, 0.0002248609999999998, 0.00022488899999999895, 0.00022484700000000024, 0.00022487500000000285, 0.00022475000000000273, 0.00022490299999999852, 0.00022487499999999938, 0.00022483300000000067, 0.00022470799999999708, 0.00022480500000000153, 0.00022475000000000273]</msg>
<status status="PASS" starttime="20201030 10:57:19.081" endtime="20201030 10:57:19.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.077" endtime="20201030 10:57:19.084"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.719" endtime="20201030 10:57:19.084"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.696" endtime="20201030 10:57:19.085"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:19.087" endtime="20201030 10:57:19.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.086" endtime="20201030 10:57:19.107"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.115" endtime="20201030 10:57:19.141"></status>
</kw>
<msg timestamp="20201030 10:57:19.141" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.113" endtime="20201030 10:57:19.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.144" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.142" endtime="20201030 10:57:19.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.145" endtime="20201030 10:57:19.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.111" endtime="20201030 10:57:19.150"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.109" endtime="20201030 10:57:19.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.157" endtime="20201030 10:57:19.442"></status>
</kw>
<msg timestamp="20201030 10:57:19.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018984208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019230264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.155" endtime="20201030 10:57:19.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018984208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019230264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.446" endtime="20201030 10:57:19.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.458" endtime="20201030 10:57:19.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.153" endtime="20201030 10:57:19.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.151" endtime="20201030 10:57:19.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:19.471" level="INFO">${PHILIP_RES} = [{'diff': 0.00024605600000000144}, {'diff': 0.00024605599999999797}, {'diff': 0.00024605599999999797}, {'diff': 0.00024602799999999883}, {'diff': 0.00024602799999999883}, {'diff': 0.000246055999999997...</msg>
<status status="PASS" starttime="20201030 10:57:19.465" endtime="20201030 10:57:19.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.480" level="INFO">${RESULT} = {'diff': [0.00024605600000000144, 0.00024605599999999797, 0.00024605599999999797, 0.00024602799999999883, 0.00024602799999999883, 0.00024605599999999797, 0.0002461389999999994, 0.00024602799999999883,...</msg>
<status status="PASS" starttime="20201030 10:57:19.473" endtime="20201030 10:57:19.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.489" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:19.487" endtime="20201030 10:57:19.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.494" level="INFO">VALUE: [0.00024605600000000144, 0.00024605599999999797, 0.00024605599999999797, 0.00024602799999999883, 0.00024602799999999883, 0.00024605599999999797, 0.0002461389999999994, 0.00024602799999999883, 0.0002461379999999999, 0.00024602799999999883, 0.0002460419999999984, 0.0002460280000000023, 0.00024605600000000144, 0.00024608299999999764, 0.000245973, 0.00024611100000000025, 0.0002459440000000014, 0.0002459860000000001, 0.0002459869999999996, 0.0002459719999999971, 0.0002461249999999998, 0.0002460970000000007, 0.00024602799999999883, 0.00024611100000000025, 0.00024604099999999893, 0.00024602699999999936, 0.00024601399999999926, 0.0002460830000000011, 0.0002461249999999998, 0.00024604099999999893, 0.0002460549999999985, 0.0002461389999999994, 0.00024601399999999926, 0.0002460840000000006, 0.00024611100000000025, 0.00024601400000000273, 0.0002461249999999998, 0.00024597200000000055, 0.0002461249999999998, 0.00024604200000000187, 0.0002460970000000007, 0.000245973, 0.0002458890000000026, 0.00024606999999999754, 0.00024606899999999807, 0.00024600000000000316, 0.0002460970000000007, 0.00024604200000000187, 0.00024605500000000197, 0.0002459449999999974]</msg>
<status status="PASS" starttime="20201030 10:57:19.491" endtime="20201030 10:57:19.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.482" endtime="20201030 10:57:19.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.108" endtime="20201030 10:57:19.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.085" endtime="20201030 10:57:19.499"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:19.504" endtime="20201030 10:57:19.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.501" endtime="20201030 10:57:19.527"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.545" endtime="20201030 10:57:19.572"></status>
</kw>
<msg timestamp="20201030 10:57:19.573" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.540" endtime="20201030 10:57:19.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.575" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.574" endtime="20201030 10:57:19.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.576" endtime="20201030 10:57:19.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.535" endtime="20201030 10:57:19.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.531" endtime="20201030 10:57:19.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.585" endtime="20201030 10:57:19.870"></status>
</kw>
<msg timestamp="20201030 10:57:19.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033175514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033443653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.584" endtime="20201030 10:57:19.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033175514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033443653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.875" endtime="20201030 10:57:19.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.883" endtime="20201030 10:57:19.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.581" endtime="20201030 10:57:19.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.579" endtime="20201030 10:57:19.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:19.889" level="INFO">${PHILIP_RES} = [{'diff': 0.00026813899999999363}, {'diff': 0.0002681940000000063}, {'diff': 0.00026815200000000067}, {'diff': 0.00026815300000000014}, {'diff': 0.0002681809999999993}, {'diff': 0.0002681950000000058}...</msg>
<status status="PASS" starttime="20201030 10:57:19.886" endtime="20201030 10:57:19.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:19.894" level="INFO">${RESULT} = {'diff': [0.00026813899999999363, 0.0002681940000000063, 0.00026815200000000067, 0.00026815300000000014, 0.0002681809999999993, 0.0002681950000000058, 0.00026826400000000417, 0.0002680830000000023, 0....</msg>
<status status="PASS" starttime="20201030 10:57:19.890" endtime="20201030 10:57:19.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.898" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:19.897" endtime="20201030 10:57:19.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.901" level="INFO">VALUE: [0.00026813899999999363, 0.0002681940000000063, 0.00026815200000000067, 0.00026815300000000014, 0.0002681809999999993, 0.0002681950000000058, 0.00026826400000000417, 0.0002680830000000023, 0.00026811100000000143, 0.000268125000000001, 0.00026816600000000024, 0.0002681669999999997, 0.00026820799999999895, 0.00026804200000000306, 0.0002681809999999993, 0.00026813900000000057, 0.000268125000000001, 0.0002680830000000023, 0.0002680269999999971, 0.00026804200000000306, 0.00026813900000000057, 0.0002679999999999974, 0.0002679999999999974, 0.0002680830000000023, 0.0002680690000000027, 0.00026813900000000057, 0.0002680689999999958, 0.00026801300000000444, 0.0002680419999999961, 0.00026798599999999784, 0.0002681799999999998, 0.0002680280000000035, 0.0002681109999999945, 0.00026811100000000143, 0.00026808400000000177, 0.00026815199999999373, 0.000268125000000001, 0.0002679999999999974, 0.0002680280000000035, 0.0002680140000000039, 0.000268013999999997, 0.00026813900000000057, 0.0002680419999999961, 0.0002681799999999998, 0.000268125000000001, 0.00026804099999999664, 0.00026819499999999885, 0.0002680560000000026, 0.00026815300000000014, 0.00026812499999999406]</msg>
<status status="PASS" starttime="20201030 10:57:19.899" endtime="20201030 10:57:19.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.895" endtime="20201030 10:57:19.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.528" endtime="20201030 10:57:19.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.500" endtime="20201030 10:57:19.903"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:19.905" endtime="20201030 10:57:19.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.904" endtime="20201030 10:57:19.925"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.933" endtime="20201030 10:57:19.960"></status>
</kw>
<msg timestamp="20201030 10:57:19.961" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.932" endtime="20201030 10:57:19.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:19.963" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:19.962" endtime="20201030 10:57:19.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.964" endtime="20201030 10:57:19.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.929" endtime="20201030 10:57:19.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.927" endtime="20201030 10:57:19.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:19.973" endtime="20201030 10:57:20.259"></status>
</kw>
<msg timestamp="20201030 10:57:20.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020055694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:19.972" endtime="20201030 10:57:20.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020055694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.263" endtime="20201030 10:57:20.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.271" endtime="20201030 10:57:20.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.969" endtime="20201030 10:57:20.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.967" endtime="20201030 10:57:20.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:20.285" level="INFO">${PHILIP_RES} = [{'diff': 0.0002909999999999996}, {'diff': 0.00029102799999999873}, {'diff': 0.0002909029999999986}, {'diff': 0.0002910410000000023}, {'diff': 0.00029101400000000263}, {'diff': 0.0002910280000000022},...</msg>
<status status="PASS" starttime="20201030 10:57:20.278" endtime="20201030 10:57:20.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:20.293" level="INFO">${RESULT} = {'diff': [0.0002909999999999996, 0.00029102799999999873, 0.0002909029999999986, 0.0002910410000000023, 0.00029101400000000263, 0.0002910280000000022, 0.0002909440000000013, 0.0002909579999999974, 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:20.287" endtime="20201030 10:57:20.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.302" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:20.300" endtime="20201030 10:57:20.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.307" level="INFO">VALUE: [0.0002909999999999996, 0.00029102799999999873, 0.0002909029999999986, 0.0002910410000000023, 0.00029101400000000263, 0.0002910280000000022, 0.0002909440000000013, 0.0002909579999999974, 0.00029102700000000273, 0.0002909159999999987, 0.000290986, 0.0002909030000000021, 0.0002909299999999983, 0.00029097200000000045, 0.00029091600000000217, 0.00029105599999999787, 0.000290971999999997, 0.0002909729999999999, 0.000290986, 0.0002908609999999999, 0.00029090199999999913, 0.0002907920000000015, 0.00029090199999999913, 0.00029087499999999947, 0.000291083000000001, 0.00029088899999999904, 0.00029101399999999916, 0.0002909169999999982, 0.0002909169999999982, 0.00029084700000000033, 0.00029101399999999916, 0.0002909030000000021, 0.00029088899999999904, 0.000290986, 0.00029091600000000217, 0.00029112499999999625, 0.00029101399999999916, 0.0002909030000000021, 0.0002910270000000062, 0.000290986, 0.0002909169999999947, 0.00029091700000000165, 0.00029091700000000165, 0.00029098700000000643, 0.00029091599999999523, 0.0002909020000000026, 0.0002909580000000009, 0.00029106899999999797, 0.0002909440000000013, 0.0002909439999999944]</msg>
<status status="PASS" starttime="20201030 10:57:20.304" endtime="20201030 10:57:20.309"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.295" endtime="20201030 10:57:20.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.926" endtime="20201030 10:57:20.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:19.903" endtime="20201030 10:57:20.311"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:20.316" endtime="20201030 10:57:20.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.313" endtime="20201030 10:57:20.339"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.356" endtime="20201030 10:57:20.386"></status>
</kw>
<msg timestamp="20201030 10:57:20.387" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.352" endtime="20201030 10:57:20.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.389" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.388" endtime="20201030 10:57:20.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.390" endtime="20201030 10:57:20.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.347" endtime="20201030 10:57:20.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.343" endtime="20201030 10:57:20.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.400" endtime="20201030 10:57:20.686"></status>
</kw>
<msg timestamp="20201030 10:57:20.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030280861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030595653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.398" endtime="20201030 10:57:20.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030280861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030595653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.690" endtime="20201030 10:57:20.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.698" endtime="20201030 10:57:20.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.396" endtime="20201030 10:57:20.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.394" endtime="20201030 10:57:20.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:20.704" level="INFO">${PHILIP_RES} = [{'diff': 0.00031479200000000124}, {'diff': 0.0003146389999999985}, {'diff': 0.0003148479999999995}, {'diff': 0.00031466599999999817}, {'diff': 0.00031475000000000253}, {'diff': 0.00031484700000000004...</msg>
<status status="PASS" starttime="20201030 10:57:20.701" endtime="20201030 10:57:20.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:20.708" level="INFO">${RESULT} = {'diff': [0.00031479200000000124, 0.0003146389999999985, 0.0003148479999999995, 0.00031466599999999817, 0.00031475000000000253, 0.00031484700000000004, 0.00031470899999999635, 0.00031473600000000296, ...</msg>
<status status="PASS" starttime="20201030 10:57:20.705" endtime="20201030 10:57:20.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.713" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:20.712" endtime="20201030 10:57:20.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.715" level="INFO">VALUE: [0.00031479200000000124, 0.0003146389999999985, 0.0003148479999999995, 0.00031466599999999817, 0.00031475000000000253, 0.00031484700000000004, 0.00031470899999999635, 0.00031473600000000296, 0.0003147079999999969, 0.00031470899999999635, 0.0003146800000000047, 0.0003147499999999956, 0.0003146389999999985, 0.000314653000000005, 0.00031470899999999635, 0.0003145839999999997, 0.0003146950000000037, 0.00031466599999999817, 0.00031462499999999893, 0.00031472199999999645, 0.0003148200000000004, 0.00031475000000000253, 0.0003147220000000034, 0.00031472199999999645, 0.0003147090000000033, 0.000314735999999996, 0.00031466699999999764, 0.0003145969999999998, 0.0003147080000000038, 0.00031466699999999764, 0.0003147640000000021, 0.00031466699999999764, 0.0003147080000000038, 0.000314735999999996, 0.00031479200000000124, 0.0003146670000000046, 0.00031477699999999526, 0.0003146950000000037, 0.00031477699999999526, 0.0003147640000000021, 0.0003147629999999957, 0.0003147630000000026, 0.00031479200000000124, 0.00031462500000000587, 0.00031484800000000646, 0.0003146670000000046, 0.0003147499999999956, 0.00031479200000000124, 0.00031477800000000167, 0.00031466599999999817]</msg>
<status status="PASS" starttime="20201030 10:57:20.714" endtime="20201030 10:57:20.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.709" endtime="20201030 10:57:20.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.340" endtime="20201030 10:57:20.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.312" endtime="20201030 10:57:20.718"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:20.720" endtime="20201030 10:57:20.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.719" endtime="20201030 10:57:20.740"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.748" endtime="20201030 10:57:20.778"></status>
</kw>
<msg timestamp="20201030 10:57:20.779" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.747" endtime="20201030 10:57:20.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:20.781" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:20.780" endtime="20201030 10:57:20.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.782" endtime="20201030 10:57:20.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.744" endtime="20201030 10:57:20.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.742" endtime="20201030 10:57:20.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:20.791" endtime="20201030 10:57:21.077"></status>
</kw>
<msg timestamp="20201030 10:57:21.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018498764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018838361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:20.790" endtime="20201030 10:57:21.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018498764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018838361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.081" endtime="20201030 10:57:21.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.099" endtime="20201030 10:57:21.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.787" endtime="20201030 10:57:21.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.786" endtime="20201030 10:57:21.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:21.112" level="INFO">${PHILIP_RES} = [{'diff': 0.0003395970000000005}, {'diff': 0.00033954199999999823}, {'diff': 0.00033951400000000256}, {'diff': 0.000339500000000003}, {'diff': 0.0003396390000000027}, {'diff': 0.00033952700000000266},...</msg>
<status status="PASS" starttime="20201030 10:57:21.106" endtime="20201030 10:57:21.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:21.123" level="INFO">${RESULT} = {'diff': [0.0003395970000000005, 0.00033954199999999823, 0.00033951400000000256, 0.000339500000000003, 0.0003396390000000027, 0.00033952700000000266, 0.0003395129999999996, 0.00033936099999999983, 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:21.114" endtime="20201030 10:57:21.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.131" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:21.129" endtime="20201030 10:57:21.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.136" level="INFO">VALUE: [0.0003395970000000005, 0.00033954199999999823, 0.00033951400000000256, 0.000339500000000003, 0.0003396390000000027, 0.00033952700000000266, 0.0003395129999999996, 0.00033936099999999983, 0.00033943100000000115, 0.0003395420000000017, 0.000339598, 0.0003394580000000008, 0.000339403000000002, 0.0003393749999999994, 0.00033954099999999876, 0.0003394169999999981, 0.00033948599999999995, 0.00033958299999999747, 0.0003394720000000004, 0.000339500000000003, 0.00033948599999999995, 0.00033952700000000266, 0.00033941599999999864, 0.00033947299999999986, 0.00033951400000000256, 0.0003394999999999995, 0.0003393879999999995, 0.00033948599999999995, 0.00033948599999999995, 0.000339500000000003, 0.00033948599999999995, 0.0003394720000000004, 0.0003394720000000004, 0.0003394580000000008, 0.0003395269999999992, 0.00033948599999999995, 0.00033937500000000287, 0.0003393889999999955, 0.0003395139999999991, 0.00033943100000000115, 0.00033940200000000253, 0.0003394720000000004, 0.0003394580000000008, 0.0003394580000000008, 0.00033948599999999995, 0.0003394450000000007, 0.0003395269999999992, 0.0003394300000000017, 0.00033948599999999995, 0.0003393889999999955]</msg>
<status status="PASS" starttime="20201030 10:57:21.134" endtime="20201030 10:57:21.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.124" endtime="20201030 10:57:21.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.741" endtime="20201030 10:57:21.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:20.718" endtime="20201030 10:57:21.140"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:21.145" endtime="20201030 10:57:21.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.142" endtime="20201030 10:57:21.168"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.184" endtime="20201030 10:57:21.219"></status>
</kw>
<msg timestamp="20201030 10:57:21.220" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.182" endtime="20201030 10:57:21.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.222" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.221" endtime="20201030 10:57:21.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.223" endtime="20201030 10:57:21.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.176" endtime="20201030 10:57:21.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.172" endtime="20201030 10:57:21.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.232" endtime="20201030 10:57:21.519"></status>
</kw>
<msg timestamp="20201030 10:57:21.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029643792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030008806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.231" endtime="20201030 10:57:21.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029643792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030008806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:21.523" endtime="20201030 10:57:21.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.531" endtime="20201030 10:57:21.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.228" endtime="20201030 10:57:21.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.226" endtime="20201030 10:57:21.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:21.537" level="INFO">${PHILIP_RES} = [{'diff': 0.0003650140000000003}, {'diff': 0.0003648200000000018}, {'diff': 0.0003649169999999993}, {'diff': 0.0003649299999999994}, {'diff': 0.00036481900000000234}, {'diff': 0.0003649309999999989}, ...</msg>
<status status="PASS" starttime="20201030 10:57:21.534" endtime="20201030 10:57:21.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:21.541" level="INFO">${RESULT} = {'diff': [0.0003650140000000003, 0.0003648200000000018, 0.0003649169999999993, 0.0003649299999999994, 0.00036481900000000234, 0.0003649309999999989, 0.00036497199999999813, 0.0003650130000000043, 0.00...</msg>
<status status="PASS" starttime="20201030 10:57:21.538" endtime="20201030 10:57:21.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.546" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:21.545" endtime="20201030 10:57:21.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.548" level="INFO">VALUE: [0.0003650140000000003, 0.0003648200000000018, 0.0003649169999999993, 0.0003649299999999994, 0.00036481900000000234, 0.0003649309999999989, 0.00036497199999999813, 0.0003650130000000043, 0.000364943999999999, 0.00036490299999999976, 0.00036501399999999684, 0.0003648890000000002, 0.00036491599999999985, 0.00036476400000000353, 0.00036491700000000626, 0.00036490299999999976, 0.0003649169999999993, 0.0003648750000000006, 0.0003649309999999989, 0.0003647910000000032, 0.00036479099999999626, 0.0003648609999999941, 0.00036490299999999976, 0.0003647639999999966, 0.00036501399999999684, 0.00036493100000000583, 0.00036491599999999985, 0.0003650409999999965, 0.0003649859999999977, 0.00036491599999999985, 0.0003648890000000002, 0.00036491599999999985, 0.00036497200000000507, 0.00036499999999999727, 0.0003649859999999977, 0.000365055000000003, 0.00036494499999999847, 0.0003649169999999993, 0.00036494499999999847, 0.00036491599999999985, 0.0003648750000000006, 0.0003649020000000003, 0.00036484800000000095, 0.00036473599999999745, 0.0003650000000000042, 0.0003648049999999958, 0.0003648890000000002, 0.0003648890000000002, 0.0003648890000000002, 0.000364943999999999]</msg>
<status status="PASS" starttime="20201030 10:57:21.547" endtime="20201030 10:57:21.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.542" endtime="20201030 10:57:21.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.169" endtime="20201030 10:57:21.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.141" endtime="20201030 10:57:21.555"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:21.558" endtime="20201030 10:57:21.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.556" endtime="20201030 10:57:21.578"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.586" endtime="20201030 10:57:21.618"></status>
</kw>
<msg timestamp="20201030 10:57:21.618" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.584" endtime="20201030 10:57:21.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.621" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.619" endtime="20201030 10:57:21.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.622" endtime="20201030 10:57:21.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.582" endtime="20201030 10:57:21.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.580" endtime="20201030 10:57:21.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.632" endtime="20201030 10:57:21.924"></status>
</kw>
<msg timestamp="20201030 10:57:21.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020558, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:21.630" endtime="20201030 10:57:21.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020166583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020558, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:21.934" endtime="20201030 10:57:21.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.952" endtime="20201030 10:57:21.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.628" endtime="20201030 10:57:21.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.626" endtime="20201030 10:57:21.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:21.965" level="INFO">${PHILIP_RES} = [{'diff': 0.00039141700000000154}, {'diff': 0.00039130499999999804}, {'diff': 0.00039129100000000194}, {'diff': 0.00039127800000000185}, {'diff': 0.00039124999999999924}, {'diff': 0.000391222000000000...</msg>
<status status="PASS" starttime="20201030 10:57:21.959" endtime="20201030 10:57:21.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:21.974" level="INFO">${RESULT} = {'diff': [0.00039141700000000154, 0.00039130499999999804, 0.00039129100000000194, 0.00039127800000000185, 0.00039124999999999924, 0.0003912220000000001, 0.000391209, 0.0003913470000000002, 0.000391195...</msg>
<status status="PASS" starttime="20201030 10:57:21.967" endtime="20201030 10:57:21.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.983" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:21.980" endtime="20201030 10:57:21.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.988" level="INFO">VALUE: [0.00039141700000000154, 0.00039130499999999804, 0.00039129100000000194, 0.00039127800000000185, 0.00039124999999999924, 0.0003912220000000001, 0.000391209, 0.0003913470000000002, 0.00039119500000000043, 0.00039120800000000053, 0.00039133300000000065, 0.00039120800000000053, 0.00039127800000000185, 0.00039123599999999967, 0.0003912500000000027, 0.00039133300000000065, 0.00039136199999999927, 0.0003913609999999998, 0.0003912639999999988, 0.00039127800000000185, 0.0003912769999999989, 0.00039137500000000283, 0.00039123599999999967, 0.0003912639999999988, 0.00039129100000000194, 0.0003912500000000027, 0.0003913609999999998, 0.0003913049999999946, 0.0003913190000000011, 0.0003913609999999998, 0.0003911939999999975, 0.0003912640000000023, 0.00039127800000000185, 0.0003913340000000001, 0.00039127800000000185, 0.0003913329999999937, 0.00039137499999999936, 0.00039138899999999893, 0.0003913340000000001, 0.0003913479999999997, 0.0003914590000000037, 0.0003912359999999962, 0.00039122199999999663, 0.00039137499999999936, 0.0003912370000000026, 0.00039122199999999663, 0.0003912500000000027, 0.0003912500000000027, 0.0003912359999999962, 0.00039112500000000605]</msg>
<status status="PASS" starttime="20201030 10:57:21.985" endtime="20201030 10:57:21.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.975" endtime="20201030 10:57:21.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.578" endtime="20201030 10:57:21.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.555" endtime="20201030 10:57:21.991"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:21.993" endtime="20201030 10:57:22.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.992" endtime="20201030 10:57:22.014"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.022" endtime="20201030 10:57:22.059"></status>
</kw>
<msg timestamp="20201030 10:57:22.059" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.020" endtime="20201030 10:57:22.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.062" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.060" endtime="20201030 10:57:22.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.063" endtime="20201030 10:57:22.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.017" endtime="20201030 10:57:22.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.016" endtime="20201030 10:57:22.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.073" endtime="20201030 10:57:22.360"></status>
</kw>
<msg timestamp="20201030 10:57:22.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021377694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.072" endtime="20201030 10:57:22.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021377694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.364" endtime="20201030 10:57:22.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.372" endtime="20201030 10:57:22.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.069" endtime="20201030 10:57:22.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.067" endtime="20201030 10:57:22.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:22.379" level="INFO">${PHILIP_RES} = [{'diff': 0.00041823700000000186}, {'diff': 0.00041813899999999793}, {'diff': 0.0004182910000000012}, {'diff': 0.00041831900000000033}, {'diff': 0.0004182359999999989}, {'diff': 0.00041816699999999707...</msg>
<status status="PASS" starttime="20201030 10:57:22.376" endtime="20201030 10:57:22.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:22.384" level="INFO">${RESULT} = {'diff': [0.00041823700000000186, 0.00041813899999999793, 0.0004182910000000012, 0.00041831900000000033, 0.0004182359999999989, 0.00041816699999999707, 0.0004183199999999998, 0.00041830500000000076, 0...</msg>
<status status="PASS" starttime="20201030 10:57:22.380" endtime="20201030 10:57:22.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.389" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:22.387" endtime="20201030 10:57:22.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.391" level="INFO">VALUE: [0.00041823700000000186, 0.00041813899999999793, 0.0004182910000000012, 0.00041831900000000033, 0.0004182359999999989, 0.00041816699999999707, 0.0004183199999999998, 0.00041830500000000076, 0.00041830600000000023, 0.00041843100000000036, 0.00041831900000000033, 0.00041822199999999934, 0.00041834699999999947, 0.0004182919999999972, 0.00041830500000000076, 0.0004182640000000015, 0.0004181810000000001, 0.00041825000000000195, 0.0004183339999999994, 0.0004182079999999998, 0.0004182499999999985, 0.0004183329999999999, 0.00041830600000000023, 0.0004182770000000016, 0.0004182220000000028, 0.00041834699999999947, 0.0004182780000000011, 0.00041818099999999664, 0.00041830500000000076, 0.0004182360000000024, 0.00041813899999999793, 0.0004182640000000015, 0.00041831900000000033, 0.0004182360000000024, 0.0004184169999999973, 0.0004182780000000011, 0.0004182770000000016, 0.0004182780000000011, 0.00041813899999999793, 0.00041820800000000324, 0.00041823599999999544, 0.00041806999999999955, 0.00041820800000000324, 0.00041829200000000066, 0.0004182919999999937, 0.00041825000000000195, 0.0004183749999999986, 0.0004182360000000024, 0.0004182640000000015, 0.0004182780000000011]</msg>
<status status="PASS" starttime="20201030 10:57:22.390" endtime="20201030 10:57:22.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.385" endtime="20201030 10:57:22.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.014" endtime="20201030 10:57:22.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.991" endtime="20201030 10:57:22.393"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:22.396" endtime="20201030 10:57:22.415"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.394" endtime="20201030 10:57:22.416"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.424" endtime="20201030 10:57:22.462"></status>
</kw>
<msg timestamp="20201030 10:57:22.463" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.423" endtime="20201030 10:57:22.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.465" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.464" endtime="20201030 10:57:22.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.466" endtime="20201030 10:57:22.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.420" endtime="20201030 10:57:22.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.418" endtime="20201030 10:57:22.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.476" endtime="20201030 10:57:22.788"></status>
</kw>
<msg timestamp="20201030 10:57:22.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021076542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021522944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.474" endtime="20201030 10:57:22.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021076542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021522944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.797" endtime="20201030 10:57:22.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.806" endtime="20201030 10:57:22.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.471" endtime="20201030 10:57:22.808"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.470" endtime="20201030 10:57:22.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:22.812" level="INFO">${PHILIP_RES} = [{'diff': 0.0004464019999999985}, {'diff': 0.00044627800000000134}, {'diff': 0.000446402999999998}, {'diff': 0.00044627800000000134}, {'diff': 0.0004462639999999983}, {'diff': 0.000446305999999997}, {...</msg>
<status status="PASS" starttime="20201030 10:57:22.809" endtime="20201030 10:57:22.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:22.817" level="INFO">${RESULT} = {'diff': [0.0004464019999999985, 0.00044627800000000134, 0.000446402999999998, 0.00044627800000000134, 0.0004462639999999983, 0.000446305999999997, 0.0004464440000000007, 0.0004464450000000002, 0.0004...</msg>
<status status="PASS" starttime="20201030 10:57:22.814" endtime="20201030 10:57:22.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.821" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:22.820" endtime="20201030 10:57:22.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.824" level="INFO">VALUE: [0.0004464019999999985, 0.00044627800000000134, 0.000446402999999998, 0.00044627800000000134, 0.0004462639999999983, 0.000446305999999997, 0.0004464440000000007, 0.0004464450000000002, 0.000446305000000001, 0.00044632000000000005, 0.00044629100000000144, 0.0004463609999999993, 0.0004463889999999984, 0.0004461949999999999, 0.0004462639999999983, 0.0004462920000000009, 0.00044633300000000015, 0.00044619400000000045, 0.0004462639999999983, 0.00044627800000000134, 0.00044626400000000177, 0.00044626400000000177, 0.0004462779999999944, 0.0004462920000000009, 0.00044627800000000134, 0.00044638900000000536, 0.00044626399999999483, 0.00044626400000000177, 0.0004463889999999984, 0.00044627800000000134, 0.0004463060000000005, 0.0004463469999999997, 0.000446193999999997, 0.0004462920000000009, 0.0004462779999999944, 0.0004463609999999993, 0.0004463060000000005, 0.0004463060000000005, 0.0004461799999999974, 0.00044626400000000177, 0.00044632000000000005, 0.0004462359999999957, 0.0004462359999999957, 0.00044622200000000306, 0.0004463609999999993, 0.000446305000000001, 0.00044629100000000144, 0.0004462779999999944, 0.00044641600000000503, 0.000446193999999997]</msg>
<status status="PASS" starttime="20201030 10:57:22.822" endtime="20201030 10:57:22.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.817" endtime="20201030 10:57:22.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.416" endtime="20201030 10:57:22.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.394" endtime="20201030 10:57:22.826"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:22.828" endtime="20201030 10:57:22.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.827" endtime="20201030 10:57:22.848"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.857" endtime="20201030 10:57:22.894"></status>
</kw>
<msg timestamp="20201030 10:57:22.894" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.855" endtime="20201030 10:57:22.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:22.897" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:22.895" endtime="20201030 10:57:22.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.898" endtime="20201030 10:57:22.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.853" endtime="20201030 10:57:22.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.850" endtime="20201030 10:57:22.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:22.910" endtime="20201030 10:57:23.197"></status>
</kw>
<msg timestamp="20201030 10:57:23.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020652236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:22.909" endtime="20201030 10:57:23.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020652236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.202" endtime="20201030 10:57:23.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.210" endtime="20201030 10:57:23.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.906" endtime="20201030 10:57:23.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.904" endtime="20201030 10:57:23.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:23.217" level="INFO">${PHILIP_RES} = [{'diff': 0.0004753329999999979}, {'diff': 0.00047526399999999955}, {'diff': 0.00047520900000000074}, {'diff': 0.00047520800000000127}, {'diff': 0.00047509699999999724}, {'diff': 0.0004752090000000007...</msg>
<status status="PASS" starttime="20201030 10:57:23.213" endtime="20201030 10:57:23.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:23.221" level="INFO">${RESULT} = {'diff': [0.0004753329999999979, 0.00047526399999999955, 0.00047520900000000074, 0.00047520800000000127, 0.00047509699999999724, 0.00047520900000000074, 0.0004751390000000029, 0.00047507000000000105, ...</msg>
<status status="PASS" starttime="20201030 10:57:23.218" endtime="20201030 10:57:23.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.225" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:23.224" endtime="20201030 10:57:23.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.228" level="INFO">VALUE: [0.0004753329999999979, 0.00047526399999999955, 0.00047520900000000074, 0.00047520800000000127, 0.00047509699999999724, 0.00047520900000000074, 0.0004751390000000029, 0.00047507000000000105, 0.000475152999999999, 0.00047530600000000173, 0.00047526399999999955, 0.00047512499999999985, 0.00047508300000000114, 0.0004751110000000003, 0.0004752369999999999, 0.00047516699999999856, 0.00047515300000000246, 0.000475152999999999, 0.0004752360000000004, 0.00047522200000000084, 0.0004751940000000017, 0.0004751389999999994, 0.0004753330000000014, 0.0004752639999999961, 0.00047516699999999856, 0.00047534700000000096, 0.0004751949999999977, 0.0004752220000000043, 0.0004751389999999994, 0.00047523599999999694, 0.0004752090000000042, 0.0004752230000000038, 0.0004750980000000002, 0.0004751389999999994, 0.000475264000000003, 0.00047512499999999985, 0.00047525000000000345, 0.0004752499999999965, 0.00047517999999999866, 0.0004753190000000018, 0.0004752360000000039, 0.0004752360000000039, 0.0004751389999999994, 0.00047517999999999866, 0.0004751389999999994, 0.00047518100000000507, 0.00047519500000000464, 0.00047523599999999694, 0.0004752220000000043, 0.0004751949999999977]</msg>
<status status="PASS" starttime="20201030 10:57:23.226" endtime="20201030 10:57:23.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.222" endtime="20201030 10:57:23.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.849" endtime="20201030 10:57:23.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:22.826" endtime="20201030 10:57:23.231"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:23.233" endtime="20201030 10:57:23.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.232" endtime="20201030 10:57:23.253"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.262" endtime="20201030 10:57:23.299"></status>
</kw>
<msg timestamp="20201030 10:57:23.300" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.260" endtime="20201030 10:57:23.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.303" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.301" endtime="20201030 10:57:23.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.304" endtime="20201030 10:57:23.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.257" endtime="20201030 10:57:23.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.255" endtime="20201030 10:57:23.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.313" endtime="20201030 10:57:23.598"></status>
</kw>
<msg timestamp="20201030 10:57:23.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017629431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018134264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.312" endtime="20201030 10:57:23.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017629431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018134264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.602" endtime="20201030 10:57:23.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.610" endtime="20201030 10:57:23.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.309" endtime="20201030 10:57:23.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.307" endtime="20201030 10:57:23.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:23.617" level="INFO">${PHILIP_RES} = [{'diff': 0.0005048329999999997}, {'diff': 0.0005048330000000031}, {'diff': 0.0005047639999999978}, {'diff': 0.0005047360000000022}, {'diff': 0.0005048609999999988}, {'diff': 0.0005047499999999983}, {...</msg>
<status status="PASS" starttime="20201030 10:57:23.614" endtime="20201030 10:57:23.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:23.622" level="INFO">${RESULT} = {'diff': [0.0005048329999999997, 0.0005048330000000031, 0.0005047639999999978, 0.0005047360000000022, 0.0005048609999999988, 0.0005047499999999983, 0.0005048190000000001, 0.0005047629999999984, 0.0005...</msg>
<status status="PASS" starttime="20201030 10:57:23.618" endtime="20201030 10:57:23.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.627" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:23.626" endtime="20201030 10:57:23.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.629" level="INFO">VALUE: [0.0005048329999999997, 0.0005048330000000031, 0.0005047639999999978, 0.0005047360000000022, 0.0005048609999999988, 0.0005047499999999983, 0.0005048190000000001, 0.0005047629999999984, 0.0005048619999999983, 0.0005048750000000019, 0.0005048329999999997, 0.0005048609999999988, 0.0005050140000000015, 0.0005048750000000019, 0.0005047639999999978, 0.0005048749999999984, 0.0005049859999999989, 0.0005048340000000026, 0.0005047500000000017, 0.0005047780000000009, 0.000504694, 0.000504708999999999, 0.0005047639999999978, 0.0005048750000000019, 0.0005049719999999994, 0.000504805000000004, 0.0005048479999999952, 0.0005048750000000019, 0.0005048610000000023, 0.000504902999999994, 0.0005049440000000002, 0.0005049999999999985, 0.000504820000000003, 0.000504903000000001, 0.0005049859999999989, 0.0005046670000000003, 0.0005048610000000023, 0.0005048330000000031, 0.0005047079999999995, 0.0005048890000000014, 0.0005048890000000014, 0.000504791999999997, 0.0005047780000000043, 0.000504805000000004, 0.0005048890000000014, 0.0005049170000000006, 0.0005047779999999974, 0.0005048190000000036, 0.0005049859999999989, 0.000504820000000003]</msg>
<status status="PASS" starttime="20201030 10:57:23.628" endtime="20201030 10:57:23.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.623" endtime="20201030 10:57:23.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.254" endtime="20201030 10:57:23.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.231" endtime="20201030 10:57:23.631"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:23.634" endtime="20201030 10:57:23.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.632" endtime="20201030 10:57:23.654"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.662" endtime="20201030 10:57:23.703"></status>
</kw>
<msg timestamp="20201030 10:57:23.704" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.661" endtime="20201030 10:57:23.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:23.706" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:23.705" endtime="20201030 10:57:23.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.707" endtime="20201030 10:57:23.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.658" endtime="20201030 10:57:23.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.656" endtime="20201030 10:57:23.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:23.717" endtime="20201030 10:57:24.004"></status>
</kw>
<msg timestamp="20201030 10:57:24.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018979778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019515569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:23.715" endtime="20201030 10:57:24.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018979778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019515569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.008" endtime="20201030 10:57:24.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.017" endtime="20201030 10:57:24.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.712" endtime="20201030 10:57:24.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.711" endtime="20201030 10:57:24.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:24.024" level="INFO">${PHILIP_RES} = [{'diff': 0.0005357910000000007}, {'diff': 0.000535846999999999}, {'diff': 0.0005357079999999993}, {'diff': 0.0005356800000000002}, {'diff': 0.0005356519999999976}, {'diff': 0.0005356530000000005}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:24.020" endtime="20201030 10:57:24.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:24.028" level="INFO">${RESULT} = {'diff': [0.0005357910000000007, 0.000535846999999999, 0.0005357079999999993, 0.0005356800000000002, 0.0005356519999999976, 0.0005356530000000005, 0.0005357780000000006, 0.0005355559999999995, 0.00053...</msg>
<status status="PASS" starttime="20201030 10:57:24.025" endtime="20201030 10:57:24.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.032" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:24.031" endtime="20201030 10:57:24.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.035" level="INFO">VALUE: [0.0005357910000000007, 0.000535846999999999, 0.0005357079999999993, 0.0005356800000000002, 0.0005356519999999976, 0.0005356530000000005, 0.0005357780000000006, 0.0005355559999999995, 0.0005357500000000015, 0.0005357359999999985, 0.0005357640000000011, 0.0005358059999999998, 0.0005356810000000031, 0.0005358050000000003, 0.000535639000000001, 0.0005356249999999979, 0.0005357230000000018, 0.0005355969999999988, 0.0005357229999999984, 0.0005357780000000006, 0.0005357500000000015, 0.0005356939999999963, 0.0005357770000000012, 0.0005356250000000048, 0.0005356109999999983, 0.0005357079999999959, 0.0005357640000000011, 0.0005357360000000019, 0.0005356809999999962, 0.000535652999999997, 0.0005356660000000041, 0.0005357640000000011, 0.0005357640000000011, 0.0005357220000000024, 0.0005356670000000036, 0.0005356249999999979, 0.0005356670000000036, 0.0005356109999999983, 0.0005356799999999967, 0.0005356390000000044, 0.0005356669999999966, 0.0005358059999999998, 0.0005356249999999979, 0.0005356389999999975, 0.0005356809999999962, 0.000535653000000004, 0.0005355559999999995, 0.0005356800000000037, 0.0005356389999999975, 0.0005355829999999992]</msg>
<status status="PASS" starttime="20201030 10:57:24.033" endtime="20201030 10:57:24.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.029" endtime="20201030 10:57:24.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.654" endtime="20201030 10:57:24.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:23.632" endtime="20201030 10:57:24.037"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:24.039" endtime="20201030 10:57:24.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.038" endtime="20201030 10:57:24.059"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.068" endtime="20201030 10:57:24.110"></status>
</kw>
<msg timestamp="20201030 10:57:24.110" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.066" endtime="20201030 10:57:24.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.113" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.111" endtime="20201030 10:57:24.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.114" endtime="20201030 10:57:24.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.064" endtime="20201030 10:57:24.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.062" endtime="20201030 10:57:24.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.125" endtime="20201030 10:57:24.411"></status>
</kw>
<msg timestamp="20201030 10:57:24.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020900292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.123" endtime="20201030 10:57:24.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020900292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.415" endtime="20201030 10:57:24.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.424" endtime="20201030 10:57:24.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.120" endtime="20201030 10:57:24.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.118" endtime="20201030 10:57:24.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:24.430" level="INFO">${PHILIP_RES} = [{'diff': 0.0005670280000000007}, {'diff': 0.0005671809999999999}, {'diff': 0.0005672640000000014}, {'diff': 0.0005672770000000014}, {'diff': 0.0005671249999999982}, {'diff': 0.0005672639999999979}, {...</msg>
<status status="PASS" starttime="20201030 10:57:24.427" endtime="20201030 10:57:24.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:24.435" level="INFO">${RESULT} = {'diff': [0.0005670280000000007, 0.0005671809999999999, 0.0005672640000000014, 0.0005672770000000014, 0.0005671249999999982, 0.0005672639999999979, 0.0005670420000000002, 0.0005671809999999999, 0.0005...</msg>
<status status="PASS" starttime="20201030 10:57:24.432" endtime="20201030 10:57:24.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.439" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:24.438" endtime="20201030 10:57:24.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.442" level="INFO">VALUE: [0.0005670280000000007, 0.0005671809999999999, 0.0005672640000000014, 0.0005672770000000014, 0.0005671249999999982, 0.0005672639999999979, 0.0005670420000000002, 0.0005671809999999999, 0.0005672780000000009, 0.0005670000000000015, 0.0005670699999999994, 0.0005670829999999995, 0.000567194, 0.0005671389999999978, 0.0005672079999999996, 0.0005671670000000004, 0.000567096999999999, 0.0005671810000000034, 0.0005671250000000017, 0.0005671660000000009, 0.0005670139999999976, 0.0005671389999999943, 0.0005671949999999995, 0.0005671949999999995, 0.0005672079999999996, 0.0005669999999999981, 0.000567165999999994, 0.0005671389999999943, 0.0005671670000000004, 0.0005671809999999999, 0.0005670689999999964, 0.0005670690000000034, 0.0005670139999999976, 0.0005671389999999943, 0.0005671110000000021, 0.0005671660000000009, 0.0005671670000000004, 0.0005670690000000034, 0.000567291999999997, 0.0005671390000000012, 0.0005670839999999955, 0.0005671389999999943, 0.0005671660000000009, 0.0005672360000000057, 0.0005672499999999983, 0.0005671809999999999, 0.0005670840000000024, 0.0005671390000000012, 0.0005672089999999991, 0.0005670139999999976]</msg>
<status status="PASS" starttime="20201030 10:57:24.440" endtime="20201030 10:57:24.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.436" endtime="20201030 10:57:24.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.060" endtime="20201030 10:57:24.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.037" endtime="20201030 10:57:24.445"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:24.447" endtime="20201030 10:57:24.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.446" endtime="20201030 10:57:24.467"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.476" endtime="20201030 10:57:24.520"></status>
</kw>
<msg timestamp="20201030 10:57:24.521" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.474" endtime="20201030 10:57:24.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.523" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.522" endtime="20201030 10:57:24.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.525" endtime="20201030 10:57:24.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.472" endtime="20201030 10:57:24.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.469" endtime="20201030 10:57:24.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.534" endtime="20201030 10:57:24.820"></status>
</kw>
<msg timestamp="20201030 10:57:24.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019303597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:24.532" endtime="20201030 10:57:24.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019303597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:24.825" endtime="20201030 10:57:24.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.833" endtime="20201030 10:57:24.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.530" endtime="20201030 10:57:24.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.528" endtime="20201030 10:57:24.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:24.840" level="INFO">${PHILIP_RES} = [{'diff': 0.0005994030000000018}, {'diff': 0.0005993890000000023}, {'diff': 0.0005994309999999975}, {'diff': 0.0005993609999999996}, {'diff': 0.0005992909999999983}, {'diff': 0.0005993330000000005}, {...</msg>
<status status="PASS" starttime="20201030 10:57:24.836" endtime="20201030 10:57:24.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:24.845" level="INFO">${RESULT} = {'diff': [0.0005994030000000018, 0.0005993890000000023, 0.0005994309999999975, 0.0005993609999999996, 0.0005992909999999983, 0.0005993330000000005, 0.0005992080000000004, 0.0005995560000000011, 0.0005...</msg>
<status status="PASS" starttime="20201030 10:57:24.841" endtime="20201030 10:57:24.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.849" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:24.848" endtime="20201030 10:57:24.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.852" level="INFO">VALUE: [0.0005994030000000018, 0.0005993890000000023, 0.0005994309999999975, 0.0005993609999999996, 0.0005992909999999983, 0.0005993330000000005, 0.0005992080000000004, 0.0005995560000000011, 0.0005993479999999995, 0.0005993049999999979, 0.0005994020000000023, 0.0005994450000000005, 0.000599429999999998, 0.0005994859999999998, 0.0005996109999999999, 0.0005994030000000018, 0.0005993470000000001, 0.0005993749999999992, 0.0005995140000000024, 0.0005993889999999988, 0.0005994159999999985, 0.0005995420000000015, 0.000599429999999998, 0.0005994019999999989, 0.0005994029999999984, 0.0005993470000000001, 0.0005993060000000008, 0.0005993050000000014, 0.0005993889999999988, 0.0005994719999999967, 0.0005993050000000014, 0.0005993060000000008, 0.0005996109999999999, 0.0005994169999999979, 0.0005994309999999975, 0.0005995000000000028, 0.0005994169999999979, 0.0005993470000000001, 0.0005994579999999972, 0.0005993059999999939, 0.0005994719999999967, 0.0005993889999999988, 0.0005994019999999989, 0.0005992779999999948, 0.0005992769999999953, 0.0005994310000000044, 0.0005994439999999976, 0.0005994580000000041, 0.0005991940000000043, 0.0005992780000000017]</msg>
<status status="PASS" starttime="20201030 10:57:24.851" endtime="20201030 10:57:24.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.846" endtime="20201030 10:57:24.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.468" endtime="20201030 10:57:24.854"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.445" endtime="20201030 10:57:24.854"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:24.856" endtime="20201030 10:57:24.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.855" endtime="20201030 10:57:24.877"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.885" endtime="20201030 10:57:24.934"></status>
</kw>
<msg timestamp="20201030 10:57:24.934" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.883" endtime="20201030 10:57:24.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.937" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.935" endtime="20201030 10:57:24.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.938" endtime="20201030 10:57:24.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.881" endtime="20201030 10:57:24.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.879" endtime="20201030 10:57:24.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.948" endtime="20201030 10:57:25.236"></status>
</kw>
<msg timestamp="20201030 10:57:25.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.946" endtime="20201030 10:57:25.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.240" endtime="20201030 10:57:25.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.248" endtime="20201030 10:57:25.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.943" endtime="20201030 10:57:25.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.941" endtime="20201030 10:57:25.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:25.255" level="INFO">${PHILIP_RES} = [{'diff': 0.0006323060000000026}, {'diff': 0.0006323200000000022}, {'diff': 0.0006323049999999997}, {'diff': 0.0006322499999999974}, {'diff': 0.0006323329999999988}, {'diff': 0.0006323880000000011}, {...</msg>
<status status="PASS" starttime="20201030 10:57:25.252" endtime="20201030 10:57:25.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.259" level="INFO">${RESULT} = {'diff': [0.0006323060000000026, 0.0006323200000000022, 0.0006323049999999997, 0.0006322499999999974, 0.0006323329999999988, 0.0006323880000000011, 0.0006324020000000007, 0.000632375000000001, 0.00063...</msg>
<status status="PASS" starttime="20201030 10:57:25.256" endtime="20201030 10:57:25.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.264" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:25.263" endtime="20201030 10:57:25.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.266" level="INFO">VALUE: [0.0006323060000000026, 0.0006323200000000022, 0.0006323049999999997, 0.0006322499999999974, 0.0006323329999999988, 0.0006323880000000011, 0.0006324020000000007, 0.000632375000000001, 0.0006322640000000004, 0.0006323049999999997, 0.0006322919999999996, 0.0006322640000000004, 0.0006322919999999996, 0.0006323190000000027, 0.0006324450000000023, 0.0006322910000000001, 0.0006323749999999975, 0.0006323049999999997, 0.0006324309999999958, 0.0006323620000000044, 0.0006324859999999946, 0.0006323879999999976, 0.0006322640000000004, 0.0006323189999999992, 0.0006322359999999944, 0.0006322080000000022, 0.0006322919999999996, 0.0006322089999999947, 0.0006322359999999944, 0.0006323750000000045, 0.0006324029999999967, 0.0006322910000000001, 0.0006323470000000053, 0.000632278, 0.0006322910000000001, 0.0006323199999999987, 0.0006323329999999988, 0.0006323329999999988, 0.0006323060000000061, 0.0006322359999999944, 0.0006322919999999996, 0.000632278, 0.0006322919999999996, 0.0006323059999999991, 0.0006324170000000032, 0.0006322500000000009, 0.0006320829999999986, 0.000632180000000003, 0.0006321799999999961, 0.0006323189999999992]</msg>
<status status="PASS" starttime="20201030 10:57:25.265" endtime="20201030 10:57:25.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.260" endtime="20201030 10:57:25.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.877" endtime="20201030 10:57:25.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.854" endtime="20201030 10:57:25.268"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.271" endtime="20201030 10:57:25.290"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.269" endtime="20201030 10:57:25.291"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.300" endtime="20201030 10:57:25.345"></status>
</kw>
<msg timestamp="20201030 10:57:25.346" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.298" endtime="20201030 10:57:25.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.348" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.347" endtime="20201030 10:57:25.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.349" endtime="20201030 10:57:25.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.295" endtime="20201030 10:57:25.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.293" endtime="20201030 10:57:25.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.360" endtime="20201030 10:57:25.646"></status>
</kw>
<msg timestamp="20201030 10:57:25.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019636653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020303, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:25.358" endtime="20201030 10:57:25.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019636653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020303, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:25.650" endtime="20201030 10:57:25.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.659" endtime="20201030 10:57:25.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.356" endtime="20201030 10:57:25.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.354" endtime="20201030 10:57:25.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:25.665" level="INFO">${PHILIP_RES} = [{'diff': 0.0006663470000000012}, {'diff': 0.000666416999999999}, {'diff': 0.0006663750000000003}, {'diff': 0.0006662640000000032}, {'diff': 0.0006664720000000013}, {'diff': 0.0006663620000000002}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:25.662" endtime="20201030 10:57:25.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.669" level="INFO">${RESULT} = {'diff': [0.0006663470000000012, 0.000666416999999999, 0.0006663750000000003, 0.0006662640000000032, 0.0006664720000000013, 0.0006663620000000002, 0.0006664030000000029, 0.0006665409999999997, 0.00066...</msg>
<status status="PASS" starttime="20201030 10:57:25.666" endtime="20201030 10:57:25.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.674" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:25.673" endtime="20201030 10:57:25.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.677" level="INFO">VALUE: [0.0006663470000000012, 0.000666416999999999, 0.0006663750000000003, 0.0006662640000000032, 0.0006664720000000013, 0.0006663620000000002, 0.0006664030000000029, 0.0006665409999999997, 0.000666416999999999, 0.0006661950000000014, 0.0006664029999999994, 0.0006664029999999994, 0.000666431000000002, 0.0006663750000000003, 0.0006663750000000003, 0.000666222000000001, 0.0006665970000000014, 0.000666402999999996, 0.0006663750000000038, 0.000666514, 0.0006663329999999981, 0.0006664580000000017, 0.000666431000000002, 0.000666514, 0.000666514, 0.0006666800000000028, 0.0006664720000000013, 0.0006664159999999961, 0.0006663059999999985, 0.0006665829999999984, 0.0006664450000000016, 0.0006665130000000005, 0.0006666249999999971, 0.0006663189999999986, 0.0006663749999999968, 0.0006665419999999991, 0.0006661670000000022, 0.000666222000000001, 0.0006659860000000004, 0.0006662919999999989, 0.0006662500000000002, 0.0006662769999999998, 0.0006661249999999966, 0.0006662500000000002, 0.0006661249999999966, 0.0006661530000000027, 0.0006661389999999962, 0.000666111000000004, 0.0006659999999999999, 0.000666110999999997]</msg>
<status status="PASS" starttime="20201030 10:57:25.675" endtime="20201030 10:57:25.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.670" endtime="20201030 10:57:25.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.292" endtime="20201030 10:57:25.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.269" endtime="20201030 10:57:25.679"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:25.682" endtime="20201030 10:57:25.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.680" endtime="20201030 10:57:25.702"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.710" endtime="20201030 10:57:25.761"></status>
</kw>
<msg timestamp="20201030 10:57:25.762" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.709" endtime="20201030 10:57:25.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.764" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.763" endtime="20201030 10:57:25.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.766" endtime="20201030 10:57:25.767"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.706" endtime="20201030 10:57:25.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.704" endtime="20201030 10:57:25.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.775" endtime="20201030 10:57:26.061"></status>
</kw>
<msg timestamp="20201030 10:57:26.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021233889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.773" endtime="20201030 10:57:26.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021233889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.065" endtime="20201030 10:57:26.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.074" endtime="20201030 10:57:26.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.771" endtime="20201030 10:57:26.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.769" endtime="20201030 10:57:26.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:26.080" level="INFO">${PHILIP_RES} = [{'diff': 0.000701346999999998}, {'diff': 0.0007014449999999985}, {'diff': 0.0007012779999999996}, {'diff': 0.0007012630000000006}, {'diff': 0.0007013189999999989}, {'diff': 0.000701361000000001}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:26.077" endtime="20201030 10:57:26.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.085" level="INFO">${RESULT} = {'diff': [0.000701346999999998, 0.0007014449999999985, 0.0007012779999999996, 0.0007012630000000006, 0.0007013189999999989, 0.000701361000000001, 0.0007013470000000015, 0.0007013339999999979, 0.000701...</msg>
<status status="PASS" starttime="20201030 10:57:26.081" endtime="20201030 10:57:26.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.090" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:26.089" endtime="20201030 10:57:26.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.092" level="INFO">VALUE: [0.000701346999999998, 0.0007014449999999985, 0.0007012779999999996, 0.0007012630000000006, 0.0007013189999999989, 0.000701361000000001, 0.0007013470000000015, 0.0007013339999999979, 0.0007013480000000009, 0.0007012779999999996, 0.0007010139999999998, 0.0007010550000000025, 0.0007010000000000002, 0.0007011800000000026, 0.0007010559999999985, 0.0007008750000000036, 0.0007010969999999977, 0.0007010139999999998, 0.0007010829999999982, 0.0007011389999999965, 0.0007008470000000044, 0.0007010140000000067, 0.0007010420000000059, 0.0007009860000000007, 0.0007009860000000007, 0.0007010139999999998, 0.0007010829999999982, 0.0007013199999999983, 0.0007012779999999996, 0.0007014029999999963, 0.0007013880000000042, 0.000701444999999995, 0.0007012220000000013, 0.0007011949999999947, 0.0007012779999999996, 0.0007013199999999983, 0.0007011670000000025, 0.0007011810000000021, 0.0007013889999999967, 0.0007013470000000049, 0.0007010829999999982, 0.0007010969999999977, 0.0007013610000000045, 0.0007011810000000021, 0.0007013049999999993, 0.0007012770000000002, 0.0007011109999999973, 0.0007010689999999986, 0.0007009580000000015, 0.0007009720000000011]</msg>
<status status="PASS" starttime="20201030 10:57:26.091" endtime="20201030 10:57:26.093"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.086" endtime="20201030 10:57:26.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.703" endtime="20201030 10:57:26.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.680" endtime="20201030 10:57:26.094"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:26.097" endtime="20201030 10:57:26.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.096" endtime="20201030 10:57:26.117"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.126" endtime="20201030 10:57:26.180"></status>
</kw>
<msg timestamp="20201030 10:57:26.180" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.125" endtime="20201030 10:57:26.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.183" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.181" endtime="20201030 10:57:26.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.184" endtime="20201030 10:57:26.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.122" endtime="20201030 10:57:26.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.119" endtime="20201030 10:57:26.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.194" endtime="20201030 10:57:26.480"></status>
</kw>
<msg timestamp="20201030 10:57:26.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023095375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.192" endtime="20201030 10:57:26.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023095375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.484" endtime="20201030 10:57:26.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.493" endtime="20201030 10:57:26.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.189" endtime="20201030 10:57:26.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.187" endtime="20201030 10:57:26.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:26.500" level="INFO">${PHILIP_RES} = [{'diff': 0.000736806000000003}, {'diff': 0.0007368479999999983}, {'diff': 0.0007368189999999997}, {'diff': 0.0007367219999999987}, {'diff': 0.0007367230000000016}, {'diff': 0.0007367780000000004}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:26.497" endtime="20201030 10:57:26.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.504" level="INFO">${RESULT} = {'diff': [0.000736806000000003, 0.0007368479999999983, 0.0007368189999999997, 0.0007367219999999987, 0.0007367230000000016, 0.0007367780000000004, 0.0007367500000000013, 0.0007365969999999986, 0.00073...</msg>
<status status="PASS" starttime="20201030 10:57:26.501" endtime="20201030 10:57:26.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.508" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:26.507" endtime="20201030 10:57:26.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.511" level="INFO">VALUE: [0.000736806000000003, 0.0007368479999999983, 0.0007368189999999997, 0.0007367219999999987, 0.0007367230000000016, 0.0007367780000000004, 0.0007367500000000013, 0.0007365969999999986, 0.0007367640000000009, 0.0007367229999999982, 0.0007366109999999981, 0.000736887999999998, 0.0007369300000000037, 0.0007367910000000005, 0.0007368189999999997, 0.0007368050000000001, 0.000736694000000003, 0.0007367780000000004, 0.0007367220000000022, 0.0007366810000000029, 0.0007368339999999987, 0.0007367630000000014, 0.0007366529999999968, 0.0007368750000000049, 0.0007368469999999988, 0.0007367220000000022, 0.0007367499999999944, 0.0007369299999999968, 0.0007367080000000026, 0.0007366379999999978, 0.0007366389999999973, 0.0007367640000000009, 0.0007367910000000005, 0.0007367360000000017, 0.0007366810000000029, 0.0007366109999999981, 0.0007367640000000009, 0.0007367230000000016, 0.0007367500000000013, 0.0007368189999999997, 0.0007367780000000004, 0.0007368890000000045, 0.0007368199999999991, 0.0007370420000000003, 0.0007370829999999995, 0.0007370699999999994, 0.0007370689999999999, 0.000736985999999995, 0.0007371109999999986, 0.0007371379999999983]</msg>
<status status="PASS" starttime="20201030 10:57:26.510" endtime="20201030 10:57:26.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.505" endtime="20201030 10:57:26.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.118" endtime="20201030 10:57:26.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.095" endtime="20201030 10:57:26.513"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:26.516" endtime="20201030 10:57:26.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.514" endtime="20201030 10:57:26.536"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.544" endtime="20201030 10:57:26.596"></status>
</kw>
<msg timestamp="20201030 10:57:26.597" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.543" endtime="20201030 10:57:26.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.599" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.598" endtime="20201030 10:57:26.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.600" endtime="20201030 10:57:26.605"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.540" endtime="20201030 10:57:26.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.538" endtime="20201030 10:57:26.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.613" endtime="20201030 10:57:26.900"></status>
</kw>
<msg timestamp="20201030 10:57:26.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020874472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.612" endtime="20201030 10:57:26.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020874472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.904" endtime="20201030 10:57:26.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.912" endtime="20201030 10:57:26.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.609" endtime="20201030 10:57:26.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.607" endtime="20201030 10:57:26.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:26.919" level="INFO">${PHILIP_RES} = [{'diff': 0.0007734029999999989}, {'diff': 0.0007732919999999983}, {'diff': 0.0007732360000000001}, {'diff': 0.000773320000000001}, {'diff': 0.0007732779999999988}, {'diff': 0.0007734590000000006}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:26.916" endtime="20201030 10:57:26.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.923" level="INFO">${RESULT} = {'diff': [0.0007734029999999989, 0.0007732919999999983, 0.0007732360000000001, 0.000773320000000001, 0.0007732779999999988, 0.0007734590000000006, 0.0007732779999999988, 0.0007733610000000002, 0.00077...</msg>
<status status="PASS" starttime="20201030 10:57:26.920" endtime="20201030 10:57:26.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.928" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:26.927" endtime="20201030 10:57:26.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.930" level="INFO">VALUE: [0.0007734029999999989, 0.0007732919999999983, 0.0007732360000000001, 0.000773320000000001, 0.0007732779999999988, 0.0007734590000000006, 0.0007732779999999988, 0.0007733610000000002, 0.0007733610000000002, 0.0007732369999999995, 0.0007733340000000005, 0.0007732369999999995, 0.0007733889999999993, 0.0007733060000000014, 0.0007733480000000001, 0.0007733060000000014, 0.0007732499999999962, 0.000773320000000001, 0.0007733610000000002, 0.0007733050000000019, 0.000773333000000001, 0.0007733190000000015, 0.0007734299999999986, 0.0007735560000000016, 0.0007732919999999949, 0.0007733340000000005, 0.0007734449999999976, 0.0007734859999999968, 0.0007733470000000006, 0.0007733610000000002, 0.0007732499999999962, 0.0007732769999999958, 0.0007731389999999991, 0.0007734170000000054, 0.0007732779999999953, 0.0007733470000000006, 0.0007733610000000002, 0.000773222000000004, 0.0007731529999999986, 0.000773304999999995, 0.0007731249999999995, 0.0007733190000000015, 0.000773333000000001, 0.0007733620000000066, 0.0007733889999999993, 0.0007729719999999968, 0.0007732369999999961, 0.0007735000000000034, 0.0007733060000000014, 0.0007732079999999975]</msg>
<status status="PASS" starttime="20201030 10:57:26.929" endtime="20201030 10:57:26.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.924" endtime="20201030 10:57:26.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.536" endtime="20201030 10:57:26.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.513" endtime="20201030 10:57:26.939"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:26.941" endtime="20201030 10:57:26.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.940" endtime="20201030 10:57:26.962"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.970" endtime="20201030 10:57:27.028"></status>
</kw>
<msg timestamp="20201030 10:57:27.028" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.968" endtime="20201030 10:57:27.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.031" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.029" endtime="20201030 10:57:27.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.032" endtime="20201030 10:57:27.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.966" endtime="20201030 10:57:27.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.964" endtime="20201030 10:57:27.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.053" endtime="20201030 10:57:27.348"></status>
</kw>
<msg timestamp="20201030 10:57:27.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022911264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.049" endtime="20201030 10:57:27.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022911264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.352" endtime="20201030 10:57:27.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.360" endtime="20201030 10:57:27.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.043" endtime="20201030 10:57:27.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.040" endtime="20201030 10:57:27.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:27.367" level="INFO">${PHILIP_RES} = [{'diff': 0.0008109450000000004}, {'diff': 0.0008109720000000001}, {'diff': 0.0008109720000000001}, {'diff': 0.0008111810000000011}, {'diff': 0.0008111389999999989}, {'diff': 0.0008109440000000009}, {...</msg>
<status status="PASS" starttime="20201030 10:57:27.364" endtime="20201030 10:57:27.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.372" level="INFO">${RESULT} = {'diff': [0.0008109450000000004, 0.0008109720000000001, 0.0008109720000000001, 0.0008111810000000011, 0.0008111389999999989, 0.0008109440000000009, 0.0008110280000000018, 0.0008112359999999999, 0.0008...</msg>
<status status="PASS" starttime="20201030 10:57:27.368" endtime="20201030 10:57:27.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.377" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:27.376" endtime="20201030 10:57:27.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.379" level="INFO">VALUE: [0.0008109450000000004, 0.0008109720000000001, 0.0008109720000000001, 0.0008111810000000011, 0.0008111389999999989, 0.0008109440000000009, 0.0008110280000000018, 0.0008112359999999999, 0.0008111110000000032, 0.0008111120000000027, 0.0008110840000000001, 0.0008111810000000011, 0.0008112220000000003, 0.0008111120000000027, 0.0008109859999999997, 0.0008110970000000037, 0.0008111110000000032, 0.0008109720000000001, 0.0008109720000000001, 0.0008111390000000024, 0.0008111940000000012, 0.0008109859999999997, 0.0008110690000000045, 0.0008109859999999997, 0.0008109859999999997, 0.0008110420000000049, 0.0008109170000000013, 0.0008109999999999992, 0.0008109170000000013, 0.0008110269999999989, 0.0008109440000000009, 0.0008110140000000057, 0.0008110279999999984, 0.0008109440000000009, 0.0008111119999999958, 0.0008109999999999992, 0.0008109720000000001, 0.0008109159999999949, 0.0008111939999999943, 0.0008111109999999963, 0.0008110829999999972, 0.000811055000000005, 0.0008110559999999975, 0.0008110139999999988, 0.0008109030000000017, 0.0008108329999999969, 0.0008110690000000045, 0.0008110699999999971, 0.0008110139999999988, 0.0008111670000000015]</msg>
<status status="PASS" starttime="20201030 10:57:27.378" endtime="20201030 10:57:27.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.373" endtime="20201030 10:57:27.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.962" endtime="20201030 10:57:27.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.939" endtime="20201030 10:57:27.381"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:27.384" endtime="20201030 10:57:27.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.382" endtime="20201030 10:57:27.404"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.412" endtime="20201030 10:57:27.471"></status>
</kw>
<msg timestamp="20201030 10:57:27.471" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.411" endtime="20201030 10:57:27.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.474" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.472" endtime="20201030 10:57:27.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.475" endtime="20201030 10:57:27.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.408" endtime="20201030 10:57:27.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.406" endtime="20201030 10:57:27.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.484" endtime="20201030 10:57:27.771"></status>
</kw>
<msg timestamp="20201030 10:57:27.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:27.483" endtime="20201030 10:57:27.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:27.775" endtime="20201030 10:57:27.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.784" endtime="20201030 10:57:27.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.480" endtime="20201030 10:57:27.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.478" endtime="20201030 10:57:27.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:27.790" level="INFO">${PHILIP_RES} = [{'diff': 0.0008488190000000007}, {'diff': 0.0008488060000000006}, {'diff': 0.000848777999999998}, {'diff': 0.0008488889999999985}, {'diff': 0.0008490560000000008}, {'diff': 0.0008490550000000013}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:27.787" endtime="20201030 10:57:27.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.795" level="INFO">${RESULT} = {'diff': [0.0008488190000000007, 0.0008488060000000006, 0.000848777999999998, 0.0008488889999999985, 0.0008490560000000008, 0.0008490550000000013, 0.0008490139999999986, 0.0008489440000000008, 0.00084...</msg>
<status status="PASS" starttime="20201030 10:57:27.792" endtime="20201030 10:57:27.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.799" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:27.798" endtime="20201030 10:57:27.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.802" level="INFO">VALUE: [0.0008488190000000007, 0.0008488060000000006, 0.000848777999999998, 0.0008488889999999985, 0.0008490560000000008, 0.0008490550000000013, 0.0008490139999999986, 0.0008489440000000008, 0.0008488469999999998, 0.0008488749999999989, 0.0008489309999999972, 0.0008488469999999998, 0.0008490280000000017, 0.0008490140000000021, 0.0008489719999999965, 0.0008488889999999985, 0.0008489029999999981, 0.0008488609999999994, 0.0008488330000000002, 0.0008488200000000001, 0.0008485560000000003, 0.0008489029999999981, 0.0008489029999999981, 0.0008488609999999994, 0.0008487359999999958, 0.000848986000000003, 0.000848903000000005, 0.0008488330000000002, 0.0008488749999999989, 0.0008489440000000043, 0.0008489019999999986, 0.0008489169999999976, 0.000848791999999994, 0.000848791999999994, 0.0008489440000000043, 0.0008488190000000007, 0.0008488190000000007, 0.0008488050000000011, 0.0008489580000000038, 0.0008488330000000002, 0.0008488330000000002, 0.0008489999999999956, 0.0008491249999999992, 0.000848985999999996, 0.0008489720000000034, 0.0008490560000000008, 0.0008490280000000017, 0.0008488339999999928, 0.0008488469999999998, 0.0008488749999999989]</msg>
<status status="PASS" starttime="20201030 10:57:27.800" endtime="20201030 10:57:27.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.796" endtime="20201030 10:57:27.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.404" endtime="20201030 10:57:27.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.382" endtime="20201030 10:57:27.804"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:27.806" endtime="20201030 10:57:27.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.805" endtime="20201030 10:57:27.827"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.835" endtime="20201030 10:57:27.897"></status>
</kw>
<msg timestamp="20201030 10:57:27.897" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.833" endtime="20201030 10:57:27.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.900" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.898" endtime="20201030 10:57:27.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.901" endtime="20201030 10:57:27.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.831" endtime="20201030 10:57:27.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.829" endtime="20201030 10:57:27.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.911" endtime="20201030 10:57:28.198"></status>
</kw>
<msg timestamp="20201030 10:57:28.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021238986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.910" endtime="20201030 10:57:28.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021238986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.203" endtime="20201030 10:57:28.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.211" endtime="20201030 10:57:28.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.907" endtime="20201030 10:57:28.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.905" endtime="20201030 10:57:28.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:28.218" level="INFO">${PHILIP_RES} = [{'diff': 0.0008883329999999981}, {'diff': 0.0008881110000000005}, {'diff': 0.0008881389999999996}, {'diff': 0.0008880560000000016}, {'diff': 0.0008879579999999977}, {'diff': 0.0008881939999999984}, {...</msg>
<status status="PASS" starttime="20201030 10:57:28.214" endtime="20201030 10:57:28.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:28.222" level="INFO">${RESULT} = {'diff': [0.0008883329999999981, 0.0008881110000000005, 0.0008881389999999996, 0.0008880560000000016, 0.0008879579999999977, 0.0008881939999999984, 0.0008880839999999973, 0.0008881800000000023, 0.0008...</msg>
<status status="PASS" starttime="20201030 10:57:28.219" endtime="20201030 10:57:28.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.226" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:28.225" endtime="20201030 10:57:28.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.229" level="INFO">VALUE: [0.0008883329999999981, 0.0008881110000000005, 0.0008881389999999996, 0.0008880560000000016, 0.0008879579999999977, 0.0008881939999999984, 0.0008880839999999973, 0.0008881800000000023, 0.0008880970000000009, 0.0008879719999999973, 0.0008882230000000005, 0.0008881809999999948, 0.0008880830000000048, 0.0008880699999999978, 0.0008881389999999961, 0.0009064579999999989, 0.0008881249999999966, 0.0008881520000000032, 0.0008881949999999944, 0.000888028000000006, 0.0008881249999999966, 0.0008881670000000022, 0.0008879720000000008, 0.0008881670000000022, 0.0008880699999999978, 0.0008879999999999999, 0.0008880560000000051, 0.0008881809999999948, 0.000888304999999999, 0.0008879860000000003, 0.0008880549999999987, 0.000888027999999999, 0.0008880139999999995, 0.0008880699999999978, 0.0008879999999999999, 0.0008880409999999991, 0.0008880559999999982, 0.0008881389999999961, 0.0008879720000000008, 0.0008880139999999995, 0.000888028000000006, 0.0008880969999999974, 0.0008881390000000031, 0.0008880549999999987, 0.0008881810000000018, 0.0008880139999999925, 0.0008882919999999989, 0.0008881520000000032, 0.0008880419999999917, 0.0008881669999999953]</msg>
<status status="PASS" starttime="20201030 10:57:28.227" endtime="20201030 10:57:28.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.223" endtime="20201030 10:57:28.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.827" endtime="20201030 10:57:28.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.804" endtime="20201030 10:57:28.232"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:28.234" endtime="20201030 10:57:28.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.233" endtime="20201030 10:57:28.254"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.263" endtime="20201030 10:57:28.325"></status>
</kw>
<msg timestamp="20201030 10:57:28.326" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.261" endtime="20201030 10:57:28.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.328" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.327" endtime="20201030 10:57:28.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.329" endtime="20201030 10:57:28.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.258" endtime="20201030 10:57:28.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.256" endtime="20201030 10:57:28.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.339" endtime="20201030 10:57:28.648"></status>
</kw>
<msg timestamp="20201030 10:57:28.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020467889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021396097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.337" endtime="20201030 10:57:28.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020467889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021396097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.652" endtime="20201030 10:57:28.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.661" endtime="20201030 10:57:28.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.335" endtime="20201030 10:57:28.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.333" endtime="20201030 10:57:28.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:28.667" level="INFO">${PHILIP_RES} = [{'diff': 0.0009282079999999998}, {'diff': 0.0009282640000000016}, {'diff': 0.000928347000000003}, {'diff': 0.0009281249999999984}, {'diff': 0.0009282090000000028}, {'diff': 0.0009282219999999994}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:28.664" endtime="20201030 10:57:28.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:28.672" level="INFO">${RESULT} = {'diff': [0.0009282079999999998, 0.0009282640000000016, 0.000928347000000003, 0.0009281249999999984, 0.0009282090000000028, 0.0009282219999999994, 0.000928235999999999, 0.0009280690000000001, 0.000927...</msg>
<status status="PASS" starttime="20201030 10:57:28.668" endtime="20201030 10:57:28.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.677" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:28.676" endtime="20201030 10:57:28.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.679" level="INFO">VALUE: [0.0009282079999999998, 0.0009282640000000016, 0.000928347000000003, 0.0009281249999999984, 0.0009282090000000028, 0.0009282219999999994, 0.000928235999999999, 0.0009280690000000001, 0.0009279579999999996, 0.0009282360000000024, 0.0009281940000000002, 0.0009281390000000014, 0.0009280970000000027, 0.0009282499999999985, 0.0009281250000000019, 0.0009281949999999997, 0.0009282499999999985, 0.0009283610000000025, 0.0009282089999999993, 0.0009283890000000017, 0.0009282499999999985, 0.0009280420000000039, 0.0009282919999999972, 0.0009282500000000055, 0.0009281940000000002, 0.0009281110000000023, 0.0009281810000000001, 0.0009282919999999972, 0.0009282499999999985, 0.0009281810000000001, 0.0009282499999999985, 0.0009281109999999954, 0.0009280559999999966, 0.0009281800000000007, 0.000928041999999997, 0.0009281810000000001, 0.0009282499999999985, 0.0009279999999999983, 0.000928362000000002, 0.0009282779999999977, 0.0009282360000000059, 0.0009284719999999996, 0.0009283060000000037, 0.0009282079999999998, 0.000928235999999999, 0.0009283479999999955, 0.0009282639999999981, 0.0009281939999999933, 0.000928153000000001, 0.0009282500000000055]</msg>
<status status="PASS" starttime="20201030 10:57:28.678" endtime="20201030 10:57:28.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.673" endtime="20201030 10:57:28.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.255" endtime="20201030 10:57:28.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.232" endtime="20201030 10:57:28.682"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:28.684" endtime="20201030 10:57:28.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.682" endtime="20201030 10:57:28.704"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.713" endtime="20201030 10:57:28.772"></status>
</kw>
<msg timestamp="20201030 10:57:28.772" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.711" endtime="20201030 10:57:28.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.775" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.773" endtime="20201030 10:57:28.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.776" endtime="20201030 10:57:28.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.708" endtime="20201030 10:57:28.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.706" endtime="20201030 10:57:28.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.785" endtime="20201030 10:57:29.073"></status>
</kw>
<msg timestamp="20201030 10:57:29.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017823375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018792194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.784" endtime="20201030 10:57:29.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017823375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018792194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.077" endtime="20201030 10:57:29.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.085" endtime="20201030 10:57:29.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.781" endtime="20201030 10:57:29.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.779" endtime="20201030 10:57:29.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:29.092" level="INFO">${PHILIP_RES} = [{'diff': 0.0009688190000000027}, {'diff': 0.0009686390000000003}, {'diff': 0.0009686949999999986}, {'diff': 0.0009686529999999999}, {'diff': 0.0009687360000000013}, {'diff': 0.0009687500000000009}, {...</msg>
<status status="PASS" starttime="20201030 10:57:29.089" endtime="20201030 10:57:29.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.096" level="INFO">${RESULT} = {'diff': [0.0009688190000000027, 0.0009686390000000003, 0.0009686949999999986, 0.0009686529999999999, 0.0009687360000000013, 0.0009687500000000009, 0.0009688059999999991, 0.0009686939999999991, 0.0009...</msg>
<status status="PASS" starttime="20201030 10:57:29.093" endtime="20201030 10:57:29.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.101" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:29.099" endtime="20201030 10:57:29.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.103" level="INFO">VALUE: [0.0009688190000000027, 0.0009686390000000003, 0.0009686949999999986, 0.0009686529999999999, 0.0009687360000000013, 0.0009687500000000009, 0.0009688059999999991, 0.0009686939999999991, 0.0009687910000000001, 0.0009687500000000009, 0.0009686939999999991, 0.0009688049999999997, 0.0009686940000000026, 0.000968471999999998, 0.0009686389999999934, 0.0009687219999999983, 0.0009685270000000037, 0.0009687079999999987, 0.0009685279999999963, 0.0009684859999999976, 0.0009685139999999967, 0.0009684999999999971, 0.0009687080000000056, 0.0009687079999999987, 0.0009686380000000008, 0.0009685829999999951, 0.0009684579999999984, 0.0009687220000000052, 0.0009686390000000003, 0.0009684999999999971, 0.0009687229999999977, 0.0009686529999999999, 0.0009687500000000043, 0.0009688059999999957, 0.0009687080000000056, 0.0009685829999999951, 0.0009685829999999951, 0.0009684729999999975, 0.0009687359999999978, 0.0009688049999999962, 0.0009685280000000032, 0.000968680999999999, 0.000968680999999999, 0.0009684860000000045, 0.000968471999999998, 0.0009686110000000081, 0.0009686390000000072, 0.0009687220000000052, 0.0009687909999999966, 0.0009686110000000081]</msg>
<status status="PASS" starttime="20201030 10:57:29.102" endtime="20201030 10:57:29.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.097" endtime="20201030 10:57:29.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.705" endtime="20201030 10:57:29.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.682" endtime="20201030 10:57:29.105"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.108" endtime="20201030 10:57:29.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.106" endtime="20201030 10:57:29.128"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.136" endtime="20201030 10:57:29.203"></status>
</kw>
<msg timestamp="20201030 10:57:29.204" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.135" endtime="20201030 10:57:29.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.206" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.205" endtime="20201030 10:57:29.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.207" endtime="20201030 10:57:29.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.132" endtime="20201030 10:57:29.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.130" endtime="20201030 10:57:29.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.218" endtime="20201030 10:57:29.523"></status>
</kw>
<msg timestamp="20201030 10:57:29.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021046361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.216" endtime="20201030 10:57:29.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021046361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.528" endtime="20201030 10:57:29.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.536" endtime="20201030 10:57:29.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.214" endtime="20201030 10:57:29.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.212" endtime="20201030 10:57:29.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:29.543" level="INFO">${PHILIP_RES} = [{'diff': 0.0010106669999999998}, {'diff': 0.0010105280000000001}, {'diff': 0.0010103750000000009}, {'diff': 0.0010103329999999987}, {'diff': 0.0010105689999999994}, {'diff': 0.0010108480000000017}, {...</msg>
<status status="PASS" starttime="20201030 10:57:29.539" endtime="20201030 10:57:29.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.547" level="INFO">${RESULT} = {'diff': [0.0010106669999999998, 0.0010105280000000001, 0.0010103750000000009, 0.0010103329999999987, 0.0010105689999999994, 0.0010108480000000017, 0.0010108059999999995, 0.0010108750000000014, 0.0010...</msg>
<status status="PASS" starttime="20201030 10:57:29.544" endtime="20201030 10:57:29.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.552" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:29.551" endtime="20201030 10:57:29.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.554" level="INFO">VALUE: [0.0010106669999999998, 0.0010105280000000001, 0.0010103750000000009, 0.0010103329999999987, 0.0010105689999999994, 0.0010108480000000017, 0.0010108059999999995, 0.0010108750000000014, 0.0010108200000000025, 0.001010917, 0.0010108610000000018, 0.0010109030000000005, 0.0010107920000000034, 0.0010107359999999982, 0.0010107639999999973, 0.001010777999999997, 0.0010107780000000038, 0.0010109030000000005, 0.001010625000000001, 0.0010106390000000007, 0.0010107769999999974, 0.001010806000000003, 0.0010108470000000022, 0.0010107499999999978, 0.0010106669999999998, 0.001010790999999997, 0.0010108050000000035, 0.0010108330000000026, 0.0010107780000000038, 0.0010108050000000035, 0.0010107639999999973, 0.0010107919999999965, 0.0010106529999999933, 0.0010106110000000015, 0.001010694999999999, 0.0010105550000000033, 0.0010105420000000032, 0.0010107499999999978, 0.0010108189999999961, 0.0010106939999999925, 0.0010107920000000103, 0.001010707999999999, 0.0010106530000000002, 0.001010707999999999, 0.0010106669999999929, 0.001010707999999999, 0.001010707999999999, 0.0010106660000000073, 0.0010105409999999898, 0.0010109309999999927]</msg>
<status status="PASS" starttime="20201030 10:57:29.553" endtime="20201030 10:57:29.556"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.548" endtime="20201030 10:57:29.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.128" endtime="20201030 10:57:29.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.106" endtime="20201030 10:57:29.557"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.560" endtime="20201030 10:57:29.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.558" endtime="20201030 10:57:29.580"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.588" endtime="20201030 10:57:29.656"></status>
</kw>
<msg timestamp="20201030 10:57:29.656" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.587" endtime="20201030 10:57:29.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.659" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.658" endtime="20201030 10:57:29.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.660" endtime="20201030 10:57:29.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.584" endtime="20201030 10:57:29.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.582" endtime="20201030 10:57:29.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.670" endtime="20201030 10:57:29.956"></status>
</kw>
<msg timestamp="20201030 10:57:29.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021365236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.668" endtime="20201030 10:57:29.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021365236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.960" endtime="20201030 10:57:29.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.968" endtime="20201030 10:57:29.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.665" endtime="20201030 10:57:29.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.664" endtime="20201030 10:57:29.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:29.975" level="INFO">${PHILIP_RES} = [{'diff': 0.0010527920000000003}, {'diff': 0.0010528609999999987}, {'diff': 0.0010528609999999987}, {'diff': 0.0010526949999999993}, {'diff': 0.0010530000000000019}, {'diff': 0.0010530699999999997}, {...</msg>
<status status="PASS" starttime="20201030 10:57:29.972" endtime="20201030 10:57:29.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.980" level="INFO">${RESULT} = {'diff': [0.0010527920000000003, 0.0010528609999999987, 0.0010528609999999987, 0.0010526949999999993, 0.0010530000000000019, 0.0010530699999999997, 0.0010531249999999985, 0.0010533609999999992, 0.0010...</msg>
<status status="PASS" starttime="20201030 10:57:29.976" endtime="20201030 10:57:29.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.985" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:29.984" endtime="20201030 10:57:29.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.987" level="INFO">VALUE: [0.0010527920000000003, 0.0010528609999999987, 0.0010528609999999987, 0.0010526949999999993, 0.0010530000000000019, 0.0010530699999999997, 0.0010531249999999985, 0.0010533609999999992, 0.001053318999999997, 0.0010533750000000022, 0.0010532500000000056, 0.0010533329999999966, 0.001053235999999999, 0.0010532640000000051, 0.0010531670000000007, 0.001053208, 0.0010531940000000004, 0.0010532779999999978, 0.0010531940000000004, 0.0010534859999999993, 0.0010533329999999966, 0.0010532089999999994, 0.0010531530000000011, 0.0010531670000000007, 0.0010532919999999973, 0.0010530409999999976, 0.001053235999999999, 0.0010530550000000041, 0.0010532499999999986, 0.0010531669999999937, 0.001053417000000001, 0.0010532219999999995, 0.001053347000000003, 0.0010533050000000044, 0.0010531530000000011, 0.001053041999999997, 0.001053125000000009, 0.0010532220000000064, 0.0010534020000000088, 0.0010530830000000102, 0.0010533890000000018, 0.0010533610000000027, 0.0010530980000000023, 0.00105334700000001, 0.0010533200000000104, 0.0010531389999999946, 0.0010532909999999979, 0.0010534029999999944, 0.0010532639999999982, 0.0010534440000000006]</msg>
<status status="PASS" starttime="20201030 10:57:29.986" endtime="20201030 10:57:29.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.981" endtime="20201030 10:57:29.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.580" endtime="20201030 10:57:29.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.558" endtime="20201030 10:57:29.989"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:29.992" endtime="20201030 10:57:30.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.990" endtime="20201030 10:57:30.012"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.020" endtime="20201030 10:57:30.092"></status>
</kw>
<msg timestamp="20201030 10:57:30.093" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.019" endtime="20201030 10:57:30.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.095" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.094" endtime="20201030 10:57:30.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.096" endtime="20201030 10:57:30.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.016" endtime="20201030 10:57:30.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.014" endtime="20201030 10:57:30.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.106" endtime="20201030 10:57:30.418"></status>
</kw>
<msg timestamp="20201030 10:57:30.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021328153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:30.105" endtime="20201030 10:57:30.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021328153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:30.422" endtime="20201030 10:57:30.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.431" endtime="20201030 10:57:30.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.102" endtime="20201030 10:57:30.433"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.100" endtime="20201030 10:57:30.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:30.437" level="INFO">${PHILIP_RES} = [{'diff': 0.001096347000000001}, {'diff': 0.0010961119999999998}, {'diff': 0.0010963190000000018}, {'diff': 0.001096070000000001}, {'diff': 0.001096235999999997}, {'diff': 0.0010963049999999988}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:30.434" endtime="20201030 10:57:30.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.442" level="INFO">${RESULT} = {'diff': [0.001096347000000001, 0.0010961119999999998, 0.0010963190000000018, 0.001096070000000001, 0.001096235999999997, 0.0010963049999999988, 0.001096444000000002, 0.0010962779999999991, 0.00109636...</msg>
<status status="PASS" starttime="20201030 10:57:30.438" endtime="20201030 10:57:30.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.446" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:30.445" endtime="20201030 10:57:30.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.448" level="INFO">VALUE: [0.001096347000000001, 0.0010961119999999998, 0.0010963190000000018, 0.001096070000000001, 0.001096235999999997, 0.0010963049999999988, 0.001096444000000002, 0.0010962779999999991, 0.0010963610000000006, 0.0010961660000000026, 0.0010962639999999996, 0.00109625, 0.0010960829999999977, 0.001095930000000002, 0.0010963049999999988, 0.0010960970000000042, 0.001096138999999996, 0.0010960139999999993, 0.001096332999999998, 0.001096139000000003, 0.0010964029999999958, 0.0010962090000000008, 0.0010964310000000019, 0.0010964860000000007, 0.0010962639999999996, 0.0010962079999999944, 0.0010963749999999967, 0.0010963750000000036, 0.0010963749999999967, 0.0010963880000000037, 0.0010962779999999991, 0.0010962360000000004, 0.001096332999999998, 0.0010964019999999963, 0.001096735999999994, 0.0010965689999999986, 0.0010966669999999956, 0.0010970140000000073, 0.0010967220000000083, 0.0010968749999999972, 0.0010967780000000066, 0.001096847000000012, 0.0010965140000000068, 0.0010965689999999917, 0.001096458999999994, 0.00109662499999999, 0.0010966669999999956, 0.0010967779999999927, 0.0010965279999999994, 0.0010965139999999929]</msg>
<status status="PASS" starttime="20201030 10:57:30.447" endtime="20201030 10:57:30.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.442" endtime="20201030 10:57:30.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.013" endtime="20201030 10:57:30.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.989" endtime="20201030 10:57:30.450"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:30.453" endtime="20201030 10:57:30.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.452" endtime="20201030 10:57:30.473"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.482" endtime="20201030 10:57:30.556"></status>
</kw>
<msg timestamp="20201030 10:57:30.556" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.480" endtime="20201030 10:57:30.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.559" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.557" endtime="20201030 10:57:30.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.560" endtime="20201030 10:57:30.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.477" endtime="20201030 10:57:30.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.475" endtime="20201030 10:57:30.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.572" endtime="20201030 10:57:30.858"></status>
</kw>
<msg timestamp="20201030 10:57:30.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022269194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.571" endtime="20201030 10:57:30.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022269194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.862" endtime="20201030 10:57:30.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.871" endtime="20201030 10:57:30.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.568" endtime="20201030 10:57:30.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.566" endtime="20201030 10:57:30.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:30.877" level="INFO">${PHILIP_RES} = [{'diff': 0.0011405000000000026}, {'diff': 0.0011405559999999974}, {'diff': 0.001140556000000001}, {'diff': 0.001140679999999998}, {'diff': 0.0011406659999999985}, {'diff': 0.0011408050000000017}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:30.874" endtime="20201030 10:57:30.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.882" level="INFO">${RESULT} = {'diff': [0.0011405000000000026, 0.0011405559999999974, 0.001140556000000001, 0.001140679999999998, 0.0011406659999999985, 0.0011408050000000017, 0.0011406530000000019, 0.0011407779999999985, 0.001140...</msg>
<status status="PASS" starttime="20201030 10:57:30.878" endtime="20201030 10:57:30.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.886" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:30.885" endtime="20201030 10:57:30.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.889" level="INFO">VALUE: [0.0011405000000000026, 0.0011405559999999974, 0.001140556000000001, 0.001140679999999998, 0.0011406659999999985, 0.0011408050000000017, 0.0011406530000000019, 0.0011407779999999985, 0.0011407640000000024, 0.0011406939999999977, 0.0011407640000000024, 0.0011408050000000017, 0.0011407220000000037, 0.001140679999999998, 0.0011407920000000016, 0.0011407500000000029, 0.0011407920000000016, 0.0011407359999999964, 0.0011406809999999976, 0.0011408470000000004, 0.0011407910000000021, 0.001140861, 0.0011408050000000017, 0.0011411949999999976, 0.0011407639999999955, 0.001140889000000006, 0.0011408059999999942, 0.0011405830000000006, 0.0011404439999999974, 0.0011407359999999964, 0.0011406809999999976, 0.0011408340000000003, 0.0011405979999999996, 0.0011406809999999976, 0.0011408749999999995, 0.001140749999999996, 0.0011408889999999922, 0.0011406810000000045, 0.0011408050000000086, 0.0011408330000000078, 0.0011408620000000064, 0.0011407229999999963, 0.0011410840000000005, 0.0011407360000000033, 0.001140584, 0.0011405419999999944, 0.0011405969999999932, 0.0011408329999999939, 0.0011407230000000101, 0.0011407089999999898]</msg>
<status status="PASS" starttime="20201030 10:57:30.887" endtime="20201030 10:57:30.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.882" endtime="20201030 10:57:30.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.474" endtime="20201030 10:57:30.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.451" endtime="20201030 10:57:30.891"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:30.894" endtime="20201030 10:57:30.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.892" endtime="20201030 10:57:30.914"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.923" endtime="20201030 10:57:30.997"></status>
</kw>
<msg timestamp="20201030 10:57:30.998" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.921" endtime="20201030 10:57:30.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.004" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.001" endtime="20201030 10:57:31.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.007" endtime="20201030 10:57:31.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.918" endtime="20201030 10:57:31.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.916" endtime="20201030 10:57:31.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.027" endtime="20201030 10:57:31.322"></status>
</kw>
<msg timestamp="20201030 10:57:31.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01846225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196475, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:31.024" endtime="20201030 10:57:31.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01846225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196475, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:31.326" endtime="20201030 10:57:31.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.335" endtime="20201030 10:57:31.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.018" endtime="20201030 10:57:31.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.014" endtime="20201030 10:57:31.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:31.342" level="INFO">${PHILIP_RES} = [{'diff': 0.0011852499999999988}, {'diff': 0.001185277999999998}, {'diff': 0.0011853609999999994}, {'diff': 0.0011853480000000027}, {'diff': 0.0011854160000000016}, {'diff': 0.0011850699999999999}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:31.339" endtime="20201030 10:57:31.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.347" level="INFO">${RESULT} = {'diff': [0.0011852499999999988, 0.001185277999999998, 0.0011853609999999994, 0.0011853480000000027, 0.0011854160000000016, 0.0011850699999999999, 0.0011852359999999992, 0.0011853889999999985, 0.00118...</msg>
<status status="PASS" starttime="20201030 10:57:31.343" endtime="20201030 10:57:31.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.352" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:31.351" endtime="20201030 10:57:31.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.354" level="INFO">VALUE: [0.0011852499999999988, 0.001185277999999998, 0.0011853609999999994, 0.0011853480000000027, 0.0011854160000000016, 0.0011850699999999999, 0.0011852359999999992, 0.0011853889999999985, 0.0011852360000000027, 0.001185597, 0.0011856530000000018, 0.001185499999999999, 0.001185792000000005, 0.001185791999999998, 0.0011857359999999997, 0.0011857779999999984, 0.0011857080000000006, 0.0011858469999999968, 0.0011859720000000004, 0.001185986, 0.0011858469999999968, 0.001185903000000002, 0.0011860419999999983, 0.0011860139999999991, 0.001185820000000004, 0.0011861110000000036, 0.001185903000000002, 0.0011859720000000004, 0.0011859170000000016, 0.0011857359999999997, 0.0011861389999999958, 0.0011859159999999952, 0.0011860550000000053, 0.0011860419999999983, 0.0011859999999999996, 0.001186096999999997, 0.00118608399999999, 0.0011859310000000012, 0.0011860279999999918, 0.0011861660000000024, 0.0011861520000000098, 0.0011862640000000063, 0.001186277999999999, 0.0011859719999999935, 0.001185986, 0.001185986, 0.0011861390000000027, 0.0011860000000000065, 0.0011859720000000074, 0.0011858890000000094]</msg>
<status status="PASS" starttime="20201030 10:57:31.353" endtime="20201030 10:57:31.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.348" endtime="20201030 10:57:31.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.915" endtime="20201030 10:57:31.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.892" endtime="20201030 10:57:31.357"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:31.359" endtime="20201030 10:57:31.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.357" endtime="20201030 10:57:31.379"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.388" endtime="20201030 10:57:31.465"></status>
</kw>
<msg timestamp="20201030 10:57:31.465" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.386" endtime="20201030 10:57:31.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.468" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.466" endtime="20201030 10:57:31.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.469" endtime="20201030 10:57:31.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.383" endtime="20201030 10:57:31.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.381" endtime="20201030 10:57:31.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.479" endtime="20201030 10:57:31.766"></status>
</kw>
<msg timestamp="20201030 10:57:31.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020617431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:31.477" endtime="20201030 10:57:31.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020617431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:57:31.770" endtime="20201030 10:57:31.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.778" endtime="20201030 10:57:31.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.474" endtime="20201030 10:57:31.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.473" endtime="20201030 10:57:31.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:31.785" level="INFO">${PHILIP_RES} = [{'diff': 0.0012310690000000013}, {'diff': 0.001231013999999999}, {'diff': 0.0012309720000000003}, {'diff': 0.0012309729999999998}, {'diff': 0.0012312079999999975}, {'diff': 0.0012311390000000026}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:31.782" endtime="20201030 10:57:31.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.789" level="INFO">${RESULT} = {'diff': [0.0012310690000000013, 0.001231013999999999, 0.0012309720000000003, 0.0012309729999999998, 0.0012312079999999975, 0.0012311390000000026, 0.001231111, 0.0012309029999999985, 0.001230929999999...</msg>
<status status="PASS" starttime="20201030 10:57:31.786" endtime="20201030 10:57:31.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.794" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:31.793" endtime="20201030 10:57:31.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.796" level="INFO">VALUE: [0.0012310690000000013, 0.001231013999999999, 0.0012309720000000003, 0.0012309729999999998, 0.0012312079999999975, 0.0012311390000000026, 0.001231111, 0.0012309029999999985, 0.0012309299999999981, 0.0012309720000000038, 0.0012308749999999993, 0.001230819000000001, 0.0012309719999999968, 0.0012308609999999998, 0.0012310410000000022, 0.001231028000000002, 0.0012310970000000004, 0.001231028000000002, 0.001231000000000003, 0.0012309720000000038, 0.0012309029999999985, 0.0012310410000000022, 0.0012309159999999986, 0.0012308609999999998, 0.0012312779999999954, 0.0012313889999999994, 0.0012313190000000016, 0.0012316389999999997, 0.0012315269999999962, 0.0012315689999999949, 0.0012315560000000017, 0.001231694999999998, 0.001231542000000009, 0.0012316529999999992, 0.0012315690000000018, 0.0012315690000000018, 0.0012317500000000037, 0.0012316389999999927, 0.0012315000000000104, 0.0012314300000000056, 0.0012316109999999936, 0.0012316529999999992, 0.0012316660000000063, 0.00123148599999999, 0.001231597000000001, 0.0012314870000000033, 0.0012315560000000086, 0.0012317780000000028, 0.0012318479999999937, 0.0012315559999999948]</msg>
<status status="PASS" starttime="20201030 10:57:31.795" endtime="20201030 10:57:31.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.790" endtime="20201030 10:57:31.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.380" endtime="20201030 10:57:31.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.357" endtime="20201030 10:57:31.798"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:31.801" endtime="20201030 10:57:31.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.799" endtime="20201030 10:57:31.821"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.830" endtime="20201030 10:57:31.911"></status>
</kw>
<msg timestamp="20201030 10:57:31.911" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.828" endtime="20201030 10:57:31.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.914" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.912" endtime="20201030 10:57:31.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.915" endtime="20201030 10:57:31.918"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.825" endtime="20201030 10:57:31.918"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.823" endtime="20201030 10:57:31.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.925" endtime="20201030 10:57:32.211"></status>
</kw>
<msg timestamp="20201030 10:57:32.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020710375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.924" endtime="20201030 10:57:32.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020710375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.215" endtime="20201030 10:57:32.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.224" endtime="20201030 10:57:32.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.921" endtime="20201030 10:57:32.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.919" endtime="20201030 10:57:32.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:32.231" level="INFO">${PHILIP_RES} = [{'diff': 0.0012783609999999987}, {'diff': 0.0012783749999999983}, {'diff': 0.001278042}, {'diff': 0.001278221999999999}, {'diff': 0.0012781530000000006}, {'diff': 0.0012781949999999993}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 10:57:32.227" endtime="20201030 10:57:32.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.235" level="INFO">${RESULT} = {'diff': [0.0012783609999999987, 0.0012783749999999983, 0.001278042, 0.001278221999999999, 0.0012781530000000006, 0.0012781949999999993, 0.0012780969999999989, 0.0012782780000000042, 0.001278415999999...</msg>
<status status="PASS" starttime="20201030 10:57:32.232" endtime="20201030 10:57:32.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.240" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:32.239" endtime="20201030 10:57:32.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.243" level="INFO">VALUE: [0.0012783609999999987, 0.0012783749999999983, 0.001278042, 0.001278221999999999, 0.0012781530000000006, 0.0012781949999999993, 0.0012780969999999989, 0.0012782780000000042, 0.0012784159999999975, 0.0012783059999999999, 0.0012781390000000045, 0.0012783059999999999, 0.0012781389999999976, 0.0012781109999999984, 0.0013094300000000003, 0.001278153000000004, 0.0012783050000000004, 0.0012781810000000032, 0.0012779720000000022, 0.0012782640000000012, 0.0012782640000000012, 0.0012782920000000003, 0.0012783889999999978, 0.001278124999999998, 0.0012783469999999991, 0.0012782499999999947, 0.0012780839999999988, 0.0012783609999999987, 0.0012781520000000046, 0.0012783889999999978, 0.0012781939999999964, 0.0012782640000000012, 0.0012782499999999947, 0.0012784160000000044, 0.0012780829999999993, 0.0012785000000000019, 0.0012783060000000068, 0.0012783050000000074, 0.0012781939999999964, 0.00127845800000001, 0.0012782220000000094, 0.0012784860000000092, 0.0012782640000000012, 0.0012780829999999993, 0.001278236000000002, 0.001278236000000002, 0.0012782779999999938, 0.0012784159999999906, 0.0012781669999999967, 0.0012783199999999995]</msg>
<status status="PASS" starttime="20201030 10:57:32.241" endtime="20201030 10:57:32.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.236" endtime="20201030 10:57:32.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.822" endtime="20201030 10:57:32.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.799" endtime="20201030 10:57:32.253"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:32.255" endtime="20201030 10:57:32.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.254" endtime="20201030 10:57:32.275"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.284" endtime="20201030 10:57:32.364"></status>
</kw>
<msg timestamp="20201030 10:57:32.365" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.282" endtime="20201030 10:57:32.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.367" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.366" endtime="20201030 10:57:32.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.368" endtime="20201030 10:57:32.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.279" endtime="20201030 10:57:32.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.277" endtime="20201030 10:57:32.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.378" endtime="20201030 10:57:32.686"></status>
</kw>
<msg timestamp="20201030 10:57:32.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018619792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.376" endtime="20201030 10:57:32.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018619792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.690" endtime="20201030 10:57:32.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.698" endtime="20201030 10:57:32.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.374" endtime="20201030 10:57:32.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.372" endtime="20201030 10:57:32.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:32.705" level="INFO">${PHILIP_RES} = [{'diff': 0.0013261799999999997}, {'diff': 0.001325818999999999}, {'diff': 0.0013259860000000012}, {'diff': 0.001326125000000001}, {'diff': 0.0013259579999999986}, {'diff': 0.001326042000000003}, {'di...</msg>
<status status="PASS" starttime="20201030 10:57:32.702" endtime="20201030 10:57:32.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.710" level="INFO">${RESULT} = {'diff': [0.0013261799999999997, 0.001325818999999999, 0.0013259860000000012, 0.001326125000000001, 0.0013259579999999986, 0.001326042000000003, 0.0013256529999999996, 0.0013257500000000005, 0.0013254...</msg>
<status status="PASS" starttime="20201030 10:57:32.706" endtime="20201030 10:57:32.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.715" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:32.714" endtime="20201030 10:57:32.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.717" level="INFO">VALUE: [0.0013261799999999997, 0.001325818999999999, 0.0013259860000000012, 0.001326125000000001, 0.0013259579999999986, 0.001326042000000003, 0.0013256529999999996, 0.0013257500000000005, 0.0013254450000000015, 0.001325459000000001, 0.0013254169999999954, 0.0013253889999999963, 0.0013254020000000033, 0.0013255000000000003, 0.0013251810000000017, 0.0013253469999999976, 0.0013253469999999976, 0.0013252080000000013, 0.001325431000000002, 0.0013252360000000005, 0.0013252769999999997, 0.0013254030000000028, 0.001325332999999998, 0.0013251530000000025, 0.0013254300000000024, 0.0013253890000000032, 0.0013251529999999956, 0.0013252780000000061, 0.0013252919999999987, 0.0013253889999999963, 0.0013253749999999967, 0.0013252359999999935, 0.0013251799999999953, 0.0013254870000000002, 0.0013256110000000043, 0.001325652999999996, 0.0013254730000000076, 0.0013255000000000072, 0.0013250840000000041, 0.0013252360000000074, 0.0013252779999999992, 0.0013253470000000045, 0.0013252079999999944, 0.0013253190000000054, 0.001325167000000002, 0.0013253749999999898, 0.001325361000000011, 0.0013254020000000033, 0.001325443999999995, 0.0013252629999999932]</msg>
<status status="PASS" starttime="20201030 10:57:32.716" endtime="20201030 10:57:32.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.711" endtime="20201030 10:57:32.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.276" endtime="20201030 10:57:32.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.253" endtime="20201030 10:57:32.720"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:32.722" endtime="20201030 10:57:32.742"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.720" endtime="20201030 10:57:32.742"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.751" endtime="20201030 10:57:32.835"></status>
</kw>
<msg timestamp="20201030 10:57:32.836" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.749" endtime="20201030 10:57:32.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.838" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.837" endtime="20201030 10:57:32.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.839" endtime="20201030 10:57:32.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.746" endtime="20201030 10:57:32.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.744" endtime="20201030 10:57:32.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.849" endtime="20201030 10:57:33.137"></status>
</kw>
<msg timestamp="20201030 10:57:33.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019054458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.847" endtime="20201030 10:57:33.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019054458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.142" endtime="20201030 10:57:33.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.150" endtime="20201030 10:57:33.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.844" endtime="20201030 10:57:33.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.843" endtime="20201030 10:57:33.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:33.157" level="INFO">${PHILIP_RES} = [{'diff': 0.0013740279999999994}, {'diff': 0.0013738200000000013}, {'diff': 0.0013737360000000004}, {'diff': 0.0013735549999999985}, {'diff': 0.001373570000000001}, {'diff': 0.001373832999999998}, {'d...</msg>
<status status="PASS" starttime="20201030 10:57:33.154" endtime="20201030 10:57:33.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:33.161" level="INFO">${RESULT} = {'diff': [0.0013740279999999994, 0.0013738200000000013, 0.0013737360000000004, 0.0013735549999999985, 0.001373570000000001, 0.001373832999999998, 0.0013737639999999995, 0.00137375, 0.00137363900000000...</msg>
<status status="PASS" starttime="20201030 10:57:33.158" endtime="20201030 10:57:33.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.166" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:33.165" endtime="20201030 10:57:33.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.168" level="INFO">VALUE: [0.0013740279999999994, 0.0013738200000000013, 0.0013737360000000004, 0.0013735549999999985, 0.001373570000000001, 0.001373832999999998, 0.0013737639999999995, 0.00137375, 0.0013736390000000029, 0.001373555999999998, 0.0013736249999999964, 0.0013735969999999972, 0.0013737080000000013, 0.001373778000000006, 0.0013737220000000008, 0.0013737639999999995, 0.0013734870000000066, 0.0013738330000000049, 0.0013738049999999988, 0.0013737080000000013, 0.0013737639999999995, 0.0013735830000000046, 0.001373540999999999, 0.0013734170000000018, 0.001373166000000002, 0.0013734170000000018, 0.0013733749999999961, 0.0013733889999999957, 0.0013735970000000042, 0.0013743049999999993, 0.001374346999999998, 0.0013741800000000026, 0.0013744019999999968, 0.0013742919999999992, 0.0013744589999999945, 0.001374236000000001, 0.0013742780000000065, 0.0013741250000000038, 0.0013743189999999988, 0.0013742079999999879, 0.001374346999999998, 0.0013741250000000038, 0.0013742919999999992, 0.0013744309999999954, 0.0013740139999999929, 0.0013742080000000018, 0.0013741949999999947, 0.0013742919999999992, 0.001374346999999998, 0.0013743749999999971]</msg>
<status status="PASS" starttime="20201030 10:57:33.167" endtime="20201030 10:57:33.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.162" endtime="20201030 10:57:33.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.743" endtime="20201030 10:57:33.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.720" endtime="20201030 10:57:33.170"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:33.173" endtime="20201030 10:57:33.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.171" endtime="20201030 10:57:33.193"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.202" endtime="20201030 10:57:33.289"></status>
</kw>
<msg timestamp="20201030 10:57:33.289" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.200" endtime="20201030 10:57:33.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.292" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:33.290" endtime="20201030 10:57:33.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.293" endtime="20201030 10:57:33.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.197" endtime="20201030 10:57:33.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.195" endtime="20201030 10:57:33.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.306" endtime="20201030 10:57:33.615"></status>
</kw>
<msg timestamp="20201030 10:57:33.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020312722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.303" endtime="20201030 10:57:33.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020312722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:33.619" endtime="20201030 10:57:33.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:33.627" endtime="20201030 10:57:33.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.299" endtime="20201030 10:57:33.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.297" endtime="20201030 10:57:33.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:57:33.634" level="INFO">${PHILIP_RES} = [{'diff': 0.0014235140000000007}, {'diff': 0.0014232079999999987}, {'diff': 0.0014232089999999982}, {'diff': 0.0014232079999999987}, {'diff': 0.0014236530000000004}, {'diff': 0.0014233890000000006}, {...</msg>
<status status="PASS" starttime="20201030 10:57:33.631" endtime="20201030 10:57:33.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:33.638" level="INFO">${RESULT} = {'diff': [0.0014235140000000007, 0.0014232079999999987, 0.0014232089999999982, 0.0014232079999999987, 0.0014236530000000004, 0.0014233890000000006, 0.001423846999999999, 0.0014239870000000016, 0.00142...</msg>
<status status="PASS" starttime="20201030 10:57:33.635" endtime="20201030 10:57:33.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.643" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 10:57:33.642" endtime="20201030 10:57:33.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.645" level="INFO">VALUE: [0.0014235140000000007, 0.0014232079999999987, 0.0014232089999999982, 0.0014232079999999987, 0.0014236530000000004, 0.0014233890000000006, 0.001423846999999999, 0.0014239870000000016, 0.0014235969999999987, 0.001423471999999995, 0.001423068999999999, 0.0014228339999999978, 0.0014229310000000023, 0.0014230000000000007, 0.0014230699999999985, 0.0014230699999999985, 0.0014230419999999994, 0.001423083999999998, 0.0014230829999999986, 0.0014229310000000023, 0.0014229720000000015, 0.001422846999999998, 0.0014231249999999973, 0.001422957999999995, 0.0014229310000000023, 0.0014232360000000013, 0.001422846999999998, 0.0014228059999999987, 0.0014227220000000013, 0.0014227919999999922, 0.001422986000000001, 0.001423068999999999, 0.0014229999999999937, 0.0014231390000000038, 0.0014230830000000055, 0.0014230140000000002, 0.0014229450000000088, 0.0014230549999999925, 0.001422944999999995, 0.0014228189999999918, 0.0014228890000000105, 0.0014228470000000049, 0.001422875000000004, 0.0014229029999999893, 0.0014228609999999975, 0.001423055999999992, 0.0014230270000000073, 0.0014229999999999937, 0.0014230140000000002, 0.0014232090000000086]</msg>
<status status="PASS" starttime="20201030 10:57:33.644" endtime="20201030 10:57:33.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.639" endtime="20201030 10:57:33.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.194" endtime="20201030 10:57:33.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.171" endtime="20201030 10:57:33.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:12.927" endtime="20201030 10:57:33.648"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:11.671" endtime="20201030 10:57:33.653" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:56:51.110" endtime="20201030 10:57:33.664"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:33.737" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:33.745" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:34.887" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:33.735" endtime="20201030 10:57:34.888"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:34.890" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:34.889" endtime="20201030 10:57:34.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.734" endtime="20201030 10:57:34.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:34.894" endtime="20201030 10:57:35.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:34.892" endtime="20201030 10:57:35.127"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.140" endtime="20201030 10:57:35.162"></status>
</kw>
<msg timestamp="20201030 10:57:35.162" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtime...</msg>
<status status="PASS" starttime="20201030 10:57:35.138" endtime="20201030 10:57:35.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.165" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' RIOT! (Version: 2020.10-devel-1583-gbfb8f-HEAD)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtime...</msg>
<status status="PASS" starttime="20201030 10:57:35.163" endtime="20201030 10:57:35.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.168" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:35.166" endtime="20201030 10:57:35.169"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:35.136" endtime="20201030 10:57:35.169"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:35.134" endtime="20201030 10:57:35.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.132" endtime="20201030 10:57:35.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:35.175" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:35.175" endtime="20201030 10:57:35.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.171" endtime="20201030 10:57:35.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.131" endtime="20201030 10:57:35.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.131" endtime="20201030 10:57:35.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.177" endtime="20201030 10:57:35.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.129" endtime="20201030 10:57:35.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.180" endtime="20201030 10:57:35.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.128" endtime="20201030 10:57:35.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:33.733" endtime="20201030 10:57:35.183"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:35.189" endtime="20201030 10:57:35.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.187" endtime="20201030 10:57:35.209"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.223" endtime="20201030 10:57:35.249"></status>
</kw>
<msg timestamp="20201030 10:57:35.249" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.222" endtime="20201030 10:57:35.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.252" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.250" endtime="20201030 10:57:35.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.255" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:35.253" endtime="20201030 10:57:35.255"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:35.219" endtime="20201030 10:57:35.256"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:35.216" endtime="20201030 10:57:35.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.215" endtime="20201030 10:57:35.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:35.261" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:35.260" endtime="20201030 10:57:35.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.258" endtime="20201030 10:57:35.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.214" endtime="20201030 10:57:35.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.214" endtime="20201030 10:57:35.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.263" endtime="20201030 10:57:35.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.212" endtime="20201030 10:57:35.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.210" endtime="20201030 10:57:35.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.186" endtime="20201030 10:57:35.265"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.278" endtime="20201030 10:57:35.294"></status>
</kw>
<msg timestamp="20201030 10:57:35.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.276" endtime="20201030 10:57:35.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.296" endtime="20201030 10:57:35.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.298" endtime="20201030 10:57:35.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.272" endtime="20201030 10:57:35.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.270" endtime="20201030 10:57:35.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.308" endtime="20201030 10:57:35.598"></status>
</kw>
<msg timestamp="20201030 10:57:35.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080947403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080953583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.306" endtime="20201030 10:57:35.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080947403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080953583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.602" endtime="20201030 10:57:35.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.611" endtime="20201030 10:57:35.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.303" endtime="20201030 10:57:35.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.301" endtime="20201030 10:57:35.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.618" level="INFO">${RESULT} = [{'diff': 6.179999999994523e-06}, {'diff': 6.153000000008735e-06}, {'diff': 6.179999999994523e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.166000000001892e-06}, {'diff': 6.235999999992803e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:35.615" endtime="20201030 10:57:35.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:35.623" level="INFO">${ACCURACY} = {'diff': [6.179999999994523e-06, 6.153000000008735e-06, 6.179999999994523e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.235999999992803e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.1529...</msg>
<status status="PASS" starttime="20201030 10:57:35.619" endtime="20201030 10:57:35.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.628" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 10:57:35.627" endtime="20201030 10:57:35.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.631" level="INFO">VALUE: [6.179999999994523e-06, 6.153000000008735e-06, 6.179999999994523e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.235999999992803e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.152999999994857e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.179999999994523e-06, 6.167000000001366e-06, 6.152999999994857e-06, 6.235999999992803e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.179999999994523e-06, 6.165999999988014e-06, 6.167000000001366e-06, 6.151999999995383e-06, 6.181000000007875e-06, 6.180000000008401e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.181000000007875e-06, 6.195000000000506e-06, 6.152999999994857e-06, 6.180999999993997e-06, 6.180999999993997e-06, 6.152999999994857e-06, 6.179999999994523e-06, 6.236000000006681e-06, 6.166000000001892e-06, 6.194000000001032e-06, 6.152000000009261e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.181000000007875e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.207999999993663e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201030 10:57:35.629" endtime="20201030 10:57:35.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.623" endtime="20201030 10:57:35.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:35.635" endtime="20201030 10:57:35.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.634" endtime="20201030 10:57:35.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.633" endtime="20201030 10:57:35.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.268" endtime="20201030 10:57:35.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.267" endtime="20201030 10:57:35.656"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.665" endtime="20201030 10:57:35.680"></status>
</kw>
<msg timestamp="20201030 10:57:35.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.664" endtime="20201030 10:57:35.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.682" endtime="20201030 10:57:35.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.685" endtime="20201030 10:57:35.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.661" endtime="20201030 10:57:35.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.659" endtime="20201030 10:57:35.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.694" endtime="20201030 10:57:35.981"></status>
</kw>
<msg timestamp="20201030 10:57:35.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021320417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.692" endtime="20201030 10:57:35.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021320417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.986" endtime="20201030 10:57:35.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.994" endtime="20201030 10:57:35.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.690" endtime="20201030 10:57:35.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.688" endtime="20201030 10:57:35.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.001" level="INFO">${RESULT} = [{'diff': 6.181000000000936e-06}, {'diff': 6.208000000000602e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.180999999997466e-06}, {'diff': 6.181000000000936e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:35.998" endtime="20201030 10:57:36.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.006" level="INFO">${ACCURACY} = {'diff': [6.181000000000936e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.1530...</msg>
<status status="PASS" starttime="20201030 10:57:36.002" endtime="20201030 10:57:36.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.011" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.010" endtime="20201030 10:57:36.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.014" level="INFO">VALUE: [6.181000000000936e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.194999999997036e-06, 6.235999999999742e-06, 6.165999999998423e-06, 6.181000000000936e-06, 6.194999999997036e-06, 6.153000000001796e-06, 6.180999999997466e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.194999999997036e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.194000000001032e-06, 6.165999999998423e-06, 6.179999999997993e-06, 6.166000000001892e-06, 6.180999999997466e-06, 6.208000000000602e-06, 6.166999999997896e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.2079999999971325e-06]</msg>
<status status="PASS" starttime="20201030 10:57:36.012" endtime="20201030 10:57:36.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.007" endtime="20201030 10:57:36.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.018" endtime="20201030 10:57:36.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.017" endtime="20201030 10:57:36.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.016" endtime="20201030 10:57:36.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.657" endtime="20201030 10:57:36.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.656" endtime="20201030 10:57:36.039"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.048" endtime="20201030 10:57:36.069"></status>
</kw>
<msg timestamp="20201030 10:57:36.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.047" endtime="20201030 10:57:36.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.070" endtime="20201030 10:57:36.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.073" endtime="20201030 10:57:36.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.044" endtime="20201030 10:57:36.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.042" endtime="20201030 10:57:36.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.083" endtime="20201030 10:57:36.370"></status>
</kw>
<msg timestamp="20201030 10:57:36.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024957958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024964153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.081" endtime="20201030 10:57:36.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024957958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024964153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.375" endtime="20201030 10:57:36.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.383" endtime="20201030 10:57:36.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.079" endtime="20201030 10:57:36.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.077" endtime="20201030 10:57:36.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.390" level="INFO">${RESULT} = [{'diff': 6.195000000000506e-06}, {'diff': 6.110999999999617e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.153000000001796e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.195000000000506e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:36.387" endtime="20201030 10:57:36.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.394" level="INFO">${ACCURACY} = {'diff': [6.195000000000506e-06, 6.110999999999617e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.236999999999215e-06, 6.180000000001462e-06, 6.1529...</msg>
<status status="PASS" starttime="20201030 10:57:36.391" endtime="20201030 10:57:36.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.399" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.398" endtime="20201030 10:57:36.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.402" level="INFO">VALUE: [6.195000000000506e-06, 6.110999999999617e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.236999999999215e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.194000000001032e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.151999999998853e-06, 6.181000000000936e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.180999999997466e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.166000000001892e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.180999999997466e-06, 6.166000000001892e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.139000000002226e-06, 6.165999999998423e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.166999999997896e-06, 6.165999999998423e-06, 6.165999999998423e-06, 6.181000000000936e-06, 6.165999999998423e-06, 6.1529999999983265e-06, 6.195000000000506e-06, 6.139000000002226e-06, 6.194000000001032e-06, 6.166999999997896e-06]</msg>
<status status="PASS" starttime="20201030 10:57:36.400" endtime="20201030 10:57:36.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.395" endtime="20201030 10:57:36.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.406" endtime="20201030 10:57:36.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.405" endtime="20201030 10:57:36.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.404" endtime="20201030 10:57:36.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.040" endtime="20201030 10:57:36.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.040" endtime="20201030 10:57:36.427"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.437" endtime="20201030 10:57:36.455"></status>
</kw>
<msg timestamp="20201030 10:57:36.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.435" endtime="20201030 10:57:36.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.456" endtime="20201030 10:57:36.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.459" endtime="20201030 10:57:36.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.432" endtime="20201030 10:57:36.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.430" endtime="20201030 10:57:36.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.469" endtime="20201030 10:57:36.757"></status>
</kw>
<msg timestamp="20201030 10:57:36.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024013069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024019236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.467" endtime="20201030 10:57:36.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024013069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024019236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.761" endtime="20201030 10:57:36.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.770" endtime="20201030 10:57:36.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.464" endtime="20201030 10:57:36.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.463" endtime="20201030 10:57:36.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.777" level="INFO">${RESULT} = [{'diff': 6.166999999997896e-06}, {'diff': 6.166000000001892e-06}, {'diff': 6.195000000000506e-06}, {'diff': 6.165999999998423e-06}, {'diff': 6.235999999999742e-06}, {'diff': 6.195000000000506e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:36.773" endtime="20201030 10:57:36.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:36.781" level="INFO">${ACCURACY} = {'diff': [6.166999999997896e-06, 6.166000000001892e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.2220...</msg>
<status status="PASS" starttime="20201030 10:57:36.778" endtime="20201030 10:57:36.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.786" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 10:57:36.785" endtime="20201030 10:57:36.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.788" level="INFO">VALUE: [6.166999999997896e-06, 6.166000000001892e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.166999999997896e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.1939999999975626e-06, 6.180000000001462e-06, 6.194999999997036e-06, 6.166999999997896e-06, 6.1389999999987566e-06, 6.153000000001796e-06, 6.179999999997993e-06, 6.166000000001892e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.153000000001796e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.195000000000506e-06]</msg>
<status status="PASS" starttime="20201030 10:57:36.787" endtime="20201030 10:57:36.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.782" endtime="20201030 10:57:36.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:36.794" endtime="20201030 10:57:36.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.792" endtime="20201030 10:57:36.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.791" endtime="20201030 10:57:36.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.428" endtime="20201030 10:57:36.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.428" endtime="20201030 10:57:36.815"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.825" endtime="20201030 10:57:36.841"></status>
</kw>
<msg timestamp="20201030 10:57:36.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.823" endtime="20201030 10:57:36.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.843" endtime="20201030 10:57:36.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.845" endtime="20201030 10:57:36.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.820" endtime="20201030 10:57:36.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.818" endtime="20201030 10:57:36.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.855" endtime="20201030 10:57:37.141"></status>
</kw>
<msg timestamp="20201030 10:57:37.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023151528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.853" endtime="20201030 10:57:37.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023151528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.146" endtime="20201030 10:57:37.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.154" endtime="20201030 10:57:37.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.850" endtime="20201030 10:57:37.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.849" endtime="20201030 10:57:37.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.161" level="INFO">${RESULT} = [{'diff': 6.208000000000602e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.139000000002226e-06}, {'diff': 6.195000000000506e-06}, {'diff': 6.166000000001892e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:37.158" endtime="20201030 10:57:37.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.166" level="INFO">${ACCURACY} = {'diff': [6.208000000000602e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.166000000001892e-06, 6.208000000000602e-06, 6.166999999997896e-06, 6.1109...</msg>
<status status="PASS" starttime="20201030 10:57:37.162" endtime="20201030 10:57:37.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.171" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.170" endtime="20201030 10:57:37.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.174" level="INFO">VALUE: [6.208000000000602e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.166000000001892e-06, 6.208000000000602e-06, 6.166999999997896e-06, 6.110999999999617e-06, 6.167000000001366e-06, 6.180999999997466e-06, 6.1529999999983265e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.1939999999975626e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.166999999997896e-06, 6.151999999998853e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.2639999999988816e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.179999999997993e-06, 6.124999999999187e-06, 6.139000000002226e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.180999999997466e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.167000000001366e-06]</msg>
<status status="PASS" starttime="20201030 10:57:37.172" endtime="20201030 10:57:37.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.167" endtime="20201030 10:57:37.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.179" endtime="20201030 10:57:37.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.177" endtime="20201030 10:57:37.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.176" endtime="20201030 10:57:37.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.816" endtime="20201030 10:57:37.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.815" endtime="20201030 10:57:37.199"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.209" endtime="20201030 10:57:37.229"></status>
</kw>
<msg timestamp="20201030 10:57:37.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.207" endtime="20201030 10:57:37.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.231" endtime="20201030 10:57:37.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.233" endtime="20201030 10:57:37.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.205" endtime="20201030 10:57:37.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.202" endtime="20201030 10:57:37.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.243" endtime="20201030 10:57:37.529"></status>
</kw>
<msg timestamp="20201030 10:57:37.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025408208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025414389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.241" endtime="20201030 10:57:37.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025408208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025414389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.533" endtime="20201030 10:57:37.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.542" endtime="20201030 10:57:37.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.238" endtime="20201030 10:57:37.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.237" endtime="20201030 10:57:37.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.548" level="INFO">${RESULT} = [{'diff': 6.180999999997466e-06}, {'diff': 6.2639999999988816e-06}, {'diff': 6.208000000000602e-06}, {'diff': 6.2079999999971325e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.166000000001892e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:37.545" endtime="20201030 10:57:37.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.553" level="INFO">${ACCURACY} = {'diff': [6.180999999997466e-06, 6.2639999999988816e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.1...</msg>
<status status="PASS" starttime="20201030 10:57:37.549" endtime="20201030 10:57:37.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.557" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.556" endtime="20201030 10:57:37.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.560" level="INFO">VALUE: [6.180999999997466e-06, 6.2639999999988816e-06, 6.208000000000602e-06, 6.2079999999971325e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.179999999997993e-06, 6.137999999999283e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.124999999999187e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.1939999999975626e-06, 6.195000000000506e-06, 6.1529999999983265e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.222000000000172e-06, 6.221999999996702e-06, 6.181000000000936e-06, 6.179999999997993e-06, 6.167000000001366e-06, 6.1939999999975626e-06, 6.1529999999983265e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.167000000001366e-06]</msg>
<status status="PASS" starttime="20201030 10:57:37.558" endtime="20201030 10:57:37.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.554" endtime="20201030 10:57:37.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.565" endtime="20201030 10:57:37.584"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.563" endtime="20201030 10:57:37.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.562" endtime="20201030 10:57:37.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.200" endtime="20201030 10:57:37.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.200" endtime="20201030 10:57:37.594"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.603" endtime="20201030 10:57:37.621"></status>
</kw>
<msg timestamp="20201030 10:57:37.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.601" endtime="20201030 10:57:37.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.622" endtime="20201030 10:57:37.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.625" endtime="20201030 10:57:37.626"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.598" endtime="20201030 10:57:37.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.596" endtime="20201030 10:57:37.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.634" endtime="20201030 10:57:37.922"></status>
</kw>
<msg timestamp="20201030 10:57:37.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031212972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031219208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.633" endtime="20201030 10:57:37.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031212972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031219208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.926" endtime="20201030 10:57:37.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.935" endtime="20201030 10:57:37.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.630" endtime="20201030 10:57:37.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.628" endtime="20201030 10:57:37.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.944" level="INFO">${RESULT} = [{'diff': 6.235999999999742e-06}, {'diff': 6.1529999999983265e-06}, {'diff': 6.125000000002656e-06}, {'diff': 6.152999999994857e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.181000000000936e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:37.940" endtime="20201030 10:57:37.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:37.949" level="INFO">${ACCURACY} = {'diff': [6.235999999999742e-06, 6.1529999999983265e-06, 6.125000000002656e-06, 6.152999999994857e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.180...</msg>
<status status="PASS" starttime="20201030 10:57:37.945" endtime="20201030 10:57:37.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.954" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 10:57:37.953" endtime="20201030 10:57:37.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.956" level="INFO">VALUE: [6.235999999999742e-06, 6.1529999999983265e-06, 6.125000000002656e-06, 6.152999999994857e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.110999999996147e-06, 6.208000000000602e-06, 6.166999999994427e-06, 6.194000000001032e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.151999999995383e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.152999999994857e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.139000000002226e-06, 6.181000000000936e-06, 6.139000000002226e-06, 6.096999999996577e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.152000000002322e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.179999999994523e-06, 6.180999999993997e-06, 6.208000000000602e-06, 6.166000000001892e-06]</msg>
<status status="PASS" starttime="20201030 10:57:37.955" endtime="20201030 10:57:37.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.950" endtime="20201030 10:57:37.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:37.962" endtime="20201030 10:57:37.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.961" endtime="20201030 10:57:37.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.959" endtime="20201030 10:57:37.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.595" endtime="20201030 10:57:37.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.594" endtime="20201030 10:57:37.983"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.992" endtime="20201030 10:57:38.012"></status>
</kw>
<msg timestamp="20201030 10:57:38.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.991" endtime="20201030 10:57:38.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.014" endtime="20201030 10:57:38.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.016" endtime="20201030 10:57:38.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.988" endtime="20201030 10:57:38.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.986" endtime="20201030 10:57:38.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.026" endtime="20201030 10:57:38.310"></status>
</kw>
<msg timestamp="20201030 10:57:38.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025456486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025462667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.024" endtime="20201030 10:57:38.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025456486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025462667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.314" endtime="20201030 10:57:38.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.323" endtime="20201030 10:57:38.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.022" endtime="20201030 10:57:38.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.019" endtime="20201030 10:57:38.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.331" level="INFO">${RESULT} = [{'diff': 6.181000000000936e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.153000000001796e-06}, {'diff': 6.181000000000936e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:38.327" endtime="20201030 10:57:38.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:38.336" level="INFO">${ACCURACY} = {'diff': [6.181000000000936e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.124999999999187e-06, 6.180999999997466e-06, 6.2500...</msg>
<status status="PASS" starttime="20201030 10:57:38.332" endtime="20201030 10:57:38.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.341" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 10:57:38.340" endtime="20201030 10:57:38.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.344" level="INFO">VALUE: [6.181000000000936e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.124999999999187e-06, 6.180999999997466e-06, 6.250000000002781e-06, 6.1939999999975626e-06, 6.165999999998423e-06, 6.1389999999987566e-06, 6.2079999999971325e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.151999999998853e-06, 6.2639999999988816e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.1939999999975626e-06, 6.235999999999742e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.179999999997993e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.1529999999983265e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.2090000000000756e-06, 6.194999999997036e-06, 6.180999999997466e-06, 6.2090000000000756e-06, 6.110999999999617e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.208000000000602e-06, 6.1939999999975626e-06]</msg>
<status status="PASS" starttime="20201030 10:57:38.342" endtime="20201030 10:57:38.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.337" endtime="20201030 10:57:38.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:38.349" endtime="20201030 10:57:38.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.347" endtime="20201030 10:57:38.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.346" endtime="20201030 10:57:38.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.984" endtime="20201030 10:57:38.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.983" endtime="20201030 10:57:38.370"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.379" endtime="20201030 10:57:38.396"></status>
</kw>
<msg timestamp="20201030 10:57:38.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.378" endtime="20201030 10:57:38.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.397" endtime="20201030 10:57:38.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.400" endtime="20201030 10:57:38.401"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.375" endtime="20201030 10:57:38.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.373" endtime="20201030 10:57:38.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.409" endtime="20201030 10:57:38.698"></status>
</kw>
<msg timestamp="20201030 10:57:38.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020506958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020513139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.408" endtime="20201030 10:57:38.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020506958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020513139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.703" endtime="20201030 10:57:38.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.712" endtime="20201030 10:57:38.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.405" endtime="20201030 10:57:38.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.403" endtime="20201030 10:57:38.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.719" level="INFO">${RESULT} = [{'diff': 6.181000000000936e-06}, {'diff': 6.195000000000506e-06}, {'diff': 6.179999999997993e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.166999999997896e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:38.716" endtime="20201030 10:57:38.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:38.724" level="INFO">${ACCURACY} = {'diff': [6.181000000000936e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.125000000002656e-06, 6.194000000001032e-06, 6.1660...</msg>
<status status="PASS" starttime="20201030 10:57:38.720" endtime="20201030 10:57:38.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.728" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 10:57:38.727" endtime="20201030 10:57:38.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.731" level="INFO">VALUE: [6.181000000000936e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.125000000002656e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.2779999999984515e-06, 6.166000000001892e-06, 6.166999999997896e-06, 6.165999999998423e-06, 6.194000000001032e-06, 6.249999999999312e-06, 6.180000000001462e-06, 6.110999999999617e-06, 6.195000000000506e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.110999999999617e-06, 6.181000000000936e-06, 6.236999999999215e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.153000000001796e-06, 6.179999999997993e-06, 6.222000000000172e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.1939999999975626e-06, 6.166999999997896e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.1389999999987566e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.1529999999983265e-06, 6.179999999997993e-06]</msg>
<status status="PASS" starttime="20201030 10:57:38.729" endtime="20201030 10:57:38.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.724" endtime="20201030 10:57:38.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:38.736" endtime="20201030 10:57:38.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.734" endtime="20201030 10:57:38.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.733" endtime="20201030 10:57:38.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.371" endtime="20201030 10:57:38.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.370" endtime="20201030 10:57:38.757"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.766" endtime="20201030 10:57:38.785"></status>
</kw>
<msg timestamp="20201030 10:57:38.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.764" endtime="20201030 10:57:38.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.787" endtime="20201030 10:57:38.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.789" endtime="20201030 10:57:38.791"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.762" endtime="20201030 10:57:38.792"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.759" endtime="20201030 10:57:38.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.799" endtime="20201030 10:57:39.085"></status>
</kw>
<msg timestamp="20201030 10:57:39.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025549083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02555525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:38.797" endtime="20201030 10:57:39.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025549083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02555525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:39.089" endtime="20201030 10:57:39.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.098" endtime="20201030 10:57:39.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.795" endtime="20201030 10:57:39.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.793" endtime="20201030 10:57:39.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.105" level="INFO">${RESULT} = [{'diff': 6.167000000001366e-06}, {'diff': 6.153000000001796e-06}, {'diff': 6.235999999999742e-06}, {'diff': 6.195000000000506e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.194000000001032e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:39.101" endtime="20201030 10:57:39.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.109" level="INFO">${ACCURACY} = {'diff': [6.167000000001366e-06, 6.153000000001796e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.167000000001366e-06, 6.193...</msg>
<status status="PASS" starttime="20201030 10:57:39.106" endtime="20201030 10:57:39.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.114" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.113" endtime="20201030 10:57:39.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.116" level="INFO">VALUE: [6.167000000001366e-06, 6.153000000001796e-06, 6.235999999999742e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.167000000001366e-06, 6.1939999999975626e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.125000000002656e-06, 6.235999999999742e-06, 6.181000000000936e-06, 6.179999999997993e-06, 6.1939999999975626e-06, 6.165999999998423e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.2779999999984515e-06, 6.153000000001796e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.110999999999617e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.194999999997036e-06, 6.166999999997896e-06, 6.166000000001892e-06, 6.179999999997993e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.179999999997993e-06, 6.166999999997896e-06, 6.167000000001366e-06]</msg>
<status status="PASS" starttime="20201030 10:57:39.115" endtime="20201030 10:57:39.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.110" endtime="20201030 10:57:39.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.122" endtime="20201030 10:57:39.142"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.121" endtime="20201030 10:57:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.119" endtime="20201030 10:57:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.758" endtime="20201030 10:57:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.757" endtime="20201030 10:57:39.143"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.152" endtime="20201030 10:57:39.171"></status>
</kw>
<msg timestamp="20201030 10:57:39.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.151" endtime="20201030 10:57:39.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.173" endtime="20201030 10:57:39.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.176" endtime="20201030 10:57:39.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.148" endtime="20201030 10:57:39.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.146" endtime="20201030 10:57:39.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.185" endtime="20201030 10:57:39.470"></status>
</kw>
<msg timestamp="20201030 10:57:39.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020900389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020906569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.184" endtime="20201030 10:57:39.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020900389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020906569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.475" endtime="20201030 10:57:39.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.483" endtime="20201030 10:57:39.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.181" endtime="20201030 10:57:39.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.179" endtime="20201030 10:57:39.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.490" level="INFO">${RESULT} = [{'diff': 6.180000000001462e-06}, {'diff': 6.180999999997466e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.181000000000936e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:39.487" endtime="20201030 10:57:39.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.495" level="INFO">${ACCURACY} = {'diff': [6.180000000001462e-06, 6.180999999997466e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.1109...</msg>
<status status="PASS" starttime="20201030 10:57:39.491" endtime="20201030 10:57:39.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.500" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.499" endtime="20201030 10:57:39.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.502" level="INFO">VALUE: [6.180000000001462e-06, 6.180999999997466e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.110999999999617e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.125000000002656e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.152000000002322e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.165999999998423e-06, 6.166999999997896e-06, 6.165999999998423e-06, 6.1939999999975626e-06, 6.1389999999987566e-06, 6.1529999999983265e-06, 6.2229999999996455e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.1939999999975626e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.1939999999975626e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.2090000000000756e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201030 10:57:39.501" endtime="20201030 10:57:39.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.496" endtime="20201030 10:57:39.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.508" endtime="20201030 10:57:39.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.506" endtime="20201030 10:57:39.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.505" endtime="20201030 10:57:39.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.144" endtime="20201030 10:57:39.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.144" endtime="20201030 10:57:39.528"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.537" endtime="20201030 10:57:39.555"></status>
</kw>
<msg timestamp="20201030 10:57:39.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.536" endtime="20201030 10:57:39.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.556" endtime="20201030 10:57:39.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.559" endtime="20201030 10:57:39.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.533" endtime="20201030 10:57:39.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.531" endtime="20201030 10:57:39.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.568" endtime="20201030 10:57:39.854"></status>
</kw>
<msg timestamp="20201030 10:57:39.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.567" endtime="20201030 10:57:39.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.859" endtime="20201030 10:57:39.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.867" endtime="20201030 10:57:39.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.564" endtime="20201030 10:57:39.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.562" endtime="20201030 10:57:39.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:39.874" level="INFO">${RESULT} = [{'diff': 6.208000000000602e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.235999999999742e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.165999999998423e-06}, {'diff': 6.166999999997896e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:39.871" endtime="20201030 10:57:39.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:39.879" level="INFO">${ACCURACY} = {'diff': [6.208000000000602e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.180000000001462e-06, 6.165999999998423e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.2090...</msg>
<status status="PASS" starttime="20201030 10:57:39.875" endtime="20201030 10:57:39.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.883" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 10:57:39.882" endtime="20201030 10:57:39.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.886" level="INFO">VALUE: [6.208000000000602e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.180000000001462e-06, 6.165999999998423e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 6.1529999999983265e-06, 6.165999999998423e-06, 6.165999999998423e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.195000000000506e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.165999999998423e-06, 6.165999999998423e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.2229999999996455e-06, 6.208000000000602e-06, 6.180999999997466e-06, 6.167000000001366e-06, 6.151999999998853e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.153000000001796e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.1939999999975626e-06, 6.1529999999983265e-06]</msg>
<status status="PASS" starttime="20201030 10:57:39.884" endtime="20201030 10:57:39.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.880" endtime="20201030 10:57:39.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:39.891" endtime="20201030 10:57:39.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.890" endtime="20201030 10:57:39.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.888" endtime="20201030 10:57:39.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.529" endtime="20201030 10:57:39.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.529" endtime="20201030 10:57:39.912"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.921" endtime="20201030 10:57:39.941"></status>
</kw>
<msg timestamp="20201030 10:57:39.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.919" endtime="20201030 10:57:39.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:39.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:39.943" endtime="20201030 10:57:39.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.945" endtime="20201030 10:57:39.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.917" endtime="20201030 10:57:39.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.915" endtime="20201030 10:57:39.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:39.955" endtime="20201030 10:57:40.242"></status>
</kw>
<msg timestamp="20201030 10:57:40.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025893014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025899181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:39.953" endtime="20201030 10:57:40.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025893014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025899181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.246" endtime="20201030 10:57:40.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.255" endtime="20201030 10:57:40.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.950" endtime="20201030 10:57:40.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.948" endtime="20201030 10:57:40.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:40.262" level="INFO">${RESULT} = [{'diff': 6.167000000001366e-06}, {'diff': 6.236000000003211e-06}, {'diff': 6.1529999999983265e-06}, {'diff': 6.165999999998423e-06}, {'diff': 6.166999999997896e-06}, {'diff': 6.069000000000907e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:40.258" endtime="20201030 10:57:40.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:40.266" level="INFO">${ACCURACY} = {'diff': [6.167000000001366e-06, 6.236000000003211e-06, 6.1529999999983265e-06, 6.165999999998423e-06, 6.166999999997896e-06, 6.069000000000907e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.13...</msg>
<status status="PASS" starttime="20201030 10:57:40.263" endtime="20201030 10:57:40.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.271" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 10:57:40.270" endtime="20201030 10:57:40.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.273" level="INFO">VALUE: [6.167000000001366e-06, 6.236000000003211e-06, 6.1529999999983265e-06, 6.165999999998423e-06, 6.166999999997896e-06, 6.069000000000907e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.167000000001366e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.236999999999215e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.180999999997466e-06, 6.264000000002351e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.2779999999984515e-06, 6.1529999999983265e-06, 6.235999999999742e-06, 6.166000000001892e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.165999999998423e-06, 6.2090000000000756e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.165999999998423e-06, 6.181000000000936e-06, 6.165999999998423e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.180000000001462e-06]</msg>
<status status="PASS" starttime="20201030 10:57:40.272" endtime="20201030 10:57:40.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.267" endtime="20201030 10:57:40.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:40.279" endtime="20201030 10:57:40.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.278" endtime="20201030 10:57:40.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.277" endtime="20201030 10:57:40.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.913" endtime="20201030 10:57:40.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:39.913" endtime="20201030 10:57:40.300"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.309" endtime="20201030 10:57:40.332"></status>
</kw>
<msg timestamp="20201030 10:57:40.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.308" endtime="20201030 10:57:40.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.334" endtime="20201030 10:57:40.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.336" endtime="20201030 10:57:40.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.305" endtime="20201030 10:57:40.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.303" endtime="20201030 10:57:40.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.346" endtime="20201030 10:57:40.631"></status>
</kw>
<msg timestamp="20201030 10:57:40.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024505944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024512097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.344" endtime="20201030 10:57:40.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024505944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024512097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.635" endtime="20201030 10:57:40.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.644" endtime="20201030 10:57:40.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.341" endtime="20201030 10:57:40.646"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.339" endtime="20201030 10:57:40.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:40.651" level="INFO">${RESULT} = [{'diff': 6.1529999999983265e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.166999999997896e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.180999999997466e-06}, {'diff': 6.167000000001366e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:40.647" endtime="20201030 10:57:40.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:40.656" level="INFO">${ACCURACY} = {'diff': [6.1529999999983265e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.180999999997466e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.276...</msg>
<status status="PASS" starttime="20201030 10:57:40.652" endtime="20201030 10:57:40.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.660" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 10:57:40.659" endtime="20201030 10:57:40.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.663" level="INFO">VALUE: [6.1529999999983265e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.180999999997466e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.276999999998978e-06, 6.166999999997896e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.208000000000602e-06, 6.235999999999742e-06, 6.222000000000172e-06, 6.180999999997466e-06, 6.165999999998423e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.194999999997036e-06, 6.194000000001032e-06, 6.11199999999909e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.222000000000172e-06]</msg>
<status status="PASS" starttime="20201030 10:57:40.662" endtime="20201030 10:57:40.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.657" endtime="20201030 10:57:40.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:40.668" endtime="20201030 10:57:40.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.667" endtime="20201030 10:57:40.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.665" endtime="20201030 10:57:40.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.301" endtime="20201030 10:57:40.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.301" endtime="20201030 10:57:40.689"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.698" endtime="20201030 10:57:40.715"></status>
</kw>
<msg timestamp="20201030 10:57:40.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.697" endtime="20201030 10:57:40.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.717" endtime="20201030 10:57:40.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.720" endtime="20201030 10:57:40.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.694" endtime="20201030 10:57:40.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.692" endtime="20201030 10:57:40.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.729" endtime="20201030 10:57:41.016"></status>
</kw>
<msg timestamp="20201030 10:57:41.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.728" endtime="20201030 10:57:41.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.020" endtime="20201030 10:57:41.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.029" endtime="20201030 10:57:41.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.725" endtime="20201030 10:57:41.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.723" endtime="20201030 10:57:41.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.036" level="INFO">${RESULT} = [{'diff': 6.2090000000000756e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.139000000002226e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.194000000001032e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:41.033" endtime="20201030 10:57:41.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:41.040" level="INFO">${ACCURACY} = {'diff': [6.2090000000000756e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.208...</msg>
<status status="PASS" starttime="20201030 10:57:41.037" endtime="20201030 10:57:41.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.045" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 10:57:41.044" endtime="20201030 10:57:41.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.048" level="INFO">VALUE: [6.2090000000000756e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.139000000002226e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.179999999997993e-06, 6.0979999999995205e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.152000000002322e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.152000000002322e-06, 6.1939999999975626e-06, 6.194999999997036e-06, 6.1529999999983265e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.1389999999987566e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.179999999997993e-06, 6.1939999999975626e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.180999999997466e-06, 6.153000000001796e-06, 6.2090000000000756e-06, 6.166999999997896e-06, 6.208000000000602e-06, 6.292000000001491e-06, 6.179999999997993e-06, 6.152000000002322e-06, 6.166999999997896e-06, 6.1389999999987566e-06]</msg>
<status status="PASS" starttime="20201030 10:57:41.046" endtime="20201030 10:57:41.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.041" endtime="20201030 10:57:41.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.053" endtime="20201030 10:57:41.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.051" endtime="20201030 10:57:41.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.050" endtime="20201030 10:57:41.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.690" endtime="20201030 10:57:41.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.689" endtime="20201030 10:57:41.074"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.083" endtime="20201030 10:57:41.102"></status>
</kw>
<msg timestamp="20201030 10:57:41.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.081" endtime="20201030 10:57:41.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.104" endtime="20201030 10:57:41.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.106" endtime="20201030 10:57:41.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.079" endtime="20201030 10:57:41.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.076" endtime="20201030 10:57:41.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.116" endtime="20201030 10:57:41.402"></status>
</kw>
<msg timestamp="20201030 10:57:41.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024678958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.114" endtime="20201030 10:57:41.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024678958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024685069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.406" endtime="20201030 10:57:41.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.414" endtime="20201030 10:57:41.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.111" endtime="20201030 10:57:41.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.109" endtime="20201030 10:57:41.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.421" level="INFO">${RESULT} = [{'diff': 6.110999999999617e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.166999999997896e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.179999999997993e-06}, {'diff': 6.167000000001366e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:41.418" endtime="20201030 10:57:41.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:41.426" level="INFO">${ACCURACY} = {'diff': [6.110999999999617e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.179999999997993e-06, 6.167000000001366e-06, 6.221999999996702e-06, 6.166999999997896e-06, 6.1810...</msg>
<status status="PASS" starttime="20201030 10:57:41.422" endtime="20201030 10:57:41.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.430" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 10:57:41.429" endtime="20201030 10:57:41.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.433" level="INFO">VALUE: [6.110999999999617e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.179999999997993e-06, 6.167000000001366e-06, 6.221999999996702e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.208999999996606e-06, 6.179999999997993e-06, 6.180999999997466e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.152000000002322e-06, 6.167000000001366e-06, 6.097000000000047e-06, 6.194999999997036e-06, 6.194999999997036e-06, 6.167000000001366e-06, 6.0979999999995205e-06, 6.1939999999975626e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.137999999999283e-06, 6.167000000001366e-06, 6.2639999999988816e-06, 6.208000000000602e-06, 6.194999999997036e-06, 6.179999999997993e-06, 6.194000000001032e-06, 6.1529999999983265e-06, 6.180000000001462e-06, 6.1389999999987566e-06, 6.165999999998423e-06, 6.166000000001892e-06, 6.2090000000000756e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.139000000002226e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.2229999999996455e-06, 6.1939999999975626e-06]</msg>
<status status="PASS" starttime="20201030 10:57:41.432" endtime="20201030 10:57:41.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.426" endtime="20201030 10:57:41.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.439" endtime="20201030 10:57:41.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.437" endtime="20201030 10:57:41.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.436" endtime="20201030 10:57:41.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.075" endtime="20201030 10:57:41.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.074" endtime="20201030 10:57:41.460"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.469" endtime="20201030 10:57:41.484"></status>
</kw>
<msg timestamp="20201030 10:57:41.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.467" endtime="20201030 10:57:41.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.485" endtime="20201030 10:57:41.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.488" endtime="20201030 10:57:41.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.465" endtime="20201030 10:57:41.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.463" endtime="20201030 10:57:41.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.497" endtime="20201030 10:57:41.784"></status>
</kw>
<msg timestamp="20201030 10:57:41.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020423, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020429167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:41.495" endtime="20201030 10:57:41.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020423, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020429167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:57:41.789" endtime="20201030 10:57:41.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.797" endtime="20201030 10:57:41.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.493" endtime="20201030 10:57:41.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.491" endtime="20201030 10:57:41.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.804" level="INFO">${RESULT} = [{'diff': 6.167000000001366e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.153000000001796e-06}, {'diff': 6.180999999997466e-06}, {'diff': 6.153000000001796e-06}, {'diff': 6.195000000000506e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:41.801" endtime="20201030 10:57:41.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:41.809" level="INFO">${ACCURACY} = {'diff': [6.167000000001366e-06, 6.194000000001032e-06, 6.153000000001796e-06, 6.180999999997466e-06, 6.153000000001796e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.1810...</msg>
<status status="PASS" starttime="20201030 10:57:41.805" endtime="20201030 10:57:41.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.814" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 10:57:41.813" endtime="20201030 10:57:41.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.816" level="INFO">VALUE: [6.167000000001366e-06, 6.194000000001032e-06, 6.153000000001796e-06, 6.180999999997466e-06, 6.153000000001796e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.180000000001462e-06, 6.1939999999975626e-06, 6.180999999997466e-06, 6.180999999997466e-06, 6.194000000001032e-06, 6.194999999997036e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.179999999997993e-06, 6.180999999997466e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.1939999999975626e-06, 6.166000000001892e-06, 6.194999999997036e-06, 6.0839999999999506e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.166999999997896e-06, 6.180999999997466e-06, 6.2090000000000756e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.152000000002322e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.194000000001032e-06]</msg>
<status status="PASS" starttime="20201030 10:57:41.815" endtime="20201030 10:57:41.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.810" endtime="20201030 10:57:41.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:41.822" endtime="20201030 10:57:41.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.820" endtime="20201030 10:57:41.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.819" endtime="20201030 10:57:41.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.461" endtime="20201030 10:57:41.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.460" endtime="20201030 10:57:41.843"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.852" endtime="20201030 10:57:41.870"></status>
</kw>
<msg timestamp="20201030 10:57:41.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.850" endtime="20201030 10:57:41.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.872" endtime="20201030 10:57:41.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.874" endtime="20201030 10:57:41.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.847" endtime="20201030 10:57:41.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.845" endtime="20201030 10:57:41.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.884" endtime="20201030 10:57:42.172"></status>
</kw>
<msg timestamp="20201030 10:57:42.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024594569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02460075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:41.882" endtime="20201030 10:57:42.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024594569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02460075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:42.177" endtime="20201030 10:57:42.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.186" endtime="20201030 10:57:42.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.879" endtime="20201030 10:57:42.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.877" endtime="20201030 10:57:42.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.192" level="INFO">${RESULT} = [{'diff': 6.181000000000936e-06}, {'diff': 6.139000000002226e-06}, {'diff': 6.195000000000506e-06}, {'diff': 6.166999999997896e-06}, {'diff': 6.194999999997036e-06}, {'diff': 6.194000000001032e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:42.189" endtime="20201030 10:57:42.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.197" level="INFO">${ACCURACY} = {'diff': [6.181000000000936e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.194999999997036e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.167...</msg>
<status status="PASS" starttime="20201030 10:57:42.193" endtime="20201030 10:57:42.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.201" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.200" endtime="20201030 10:57:42.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.204" level="INFO">VALUE: [6.181000000000936e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.194999999997036e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.167000000001366e-06, 6.1939999999975626e-06, 6.180999999997466e-06, 6.1939999999975626e-06, 6.1529999999983265e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.139000000002226e-06, 6.166000000001892e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.179999999997993e-06, 6.179999999997993e-06, 6.166000000001892e-06, 6.110999999999617e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.165999999998423e-06, 6.1389999999987566e-06, 6.180999999997466e-06, 6.208000000000602e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.250000000002781e-06, 6.166999999997896e-06, 6.097000000000047e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.1389999999987566e-06]</msg>
<status status="PASS" starttime="20201030 10:57:42.202" endtime="20201030 10:57:42.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.197" endtime="20201030 10:57:42.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.209" endtime="20201030 10:57:42.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.207" endtime="20201030 10:57:42.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.206" endtime="20201030 10:57:42.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.844" endtime="20201030 10:57:42.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.843" endtime="20201030 10:57:42.230"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.239" endtime="20201030 10:57:42.258"></status>
</kw>
<msg timestamp="20201030 10:57:42.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.237" endtime="20201030 10:57:42.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.259" endtime="20201030 10:57:42.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.262" endtime="20201030 10:57:42.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.235" endtime="20201030 10:57:42.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.233" endtime="20201030 10:57:42.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.271" endtime="20201030 10:57:42.558"></status>
</kw>
<msg timestamp="20201030 10:57:42.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024191667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024197847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.270" endtime="20201030 10:57:42.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024191667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024197847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.562" endtime="20201030 10:57:42.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.571" endtime="20201030 10:57:42.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.267" endtime="20201030 10:57:42.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.265" endtime="20201030 10:57:42.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.578" level="INFO">${RESULT} = [{'diff': 6.180000000001462e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 6.179999999997993e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 6.2090000000000756e-06}, {'diff': 6.181000000000936e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:42.574" endtime="20201030 10:57:42.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.582" level="INFO">${ACCURACY} = {'diff': [6.180000000001462e-06, 6.1389999999987566e-06, 6.179999999997993e-06, 6.1389999999987566e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.194999999997036e-06, 6.180999999997466e-06, 6.1...</msg>
<status status="PASS" starttime="20201030 10:57:42.579" endtime="20201030 10:57:42.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.587" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.586" endtime="20201030 10:57:42.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.589" level="INFO">VALUE: [6.180000000001462e-06, 6.1389999999987566e-06, 6.179999999997993e-06, 6.1389999999987566e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.194999999997036e-06, 6.180999999997466e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.249999999999312e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.1529999999983265e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.180999999997466e-06, 6.1529999999983265e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.1939999999975626e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.180999999997466e-06, 6.165999999998423e-06, 6.1529999999983265e-06, 6.1529999999983265e-06, 6.179999999997993e-06, 6.110999999999617e-06, 6.222000000000172e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.166999999997896e-06, 6.2090000000000756e-06, 6.166999999997896e-06, 6.125000000002656e-06, 6.180999999997466e-06, 6.194000000001032e-06]</msg>
<status status="PASS" starttime="20201030 10:57:42.588" endtime="20201030 10:57:42.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.583" endtime="20201030 10:57:42.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.601" endtime="20201030 10:57:42.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.599" endtime="20201030 10:57:42.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.598" endtime="20201030 10:57:42.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.231" endtime="20201030 10:57:42.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.230" endtime="20201030 10:57:42.622"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.631" endtime="20201030 10:57:42.650"></status>
</kw>
<msg timestamp="20201030 10:57:42.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.630" endtime="20201030 10:57:42.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.652" endtime="20201030 10:57:42.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.655" endtime="20201030 10:57:42.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.627" endtime="20201030 10:57:42.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.625" endtime="20201030 10:57:42.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.664" endtime="20201030 10:57:42.950"></status>
</kw>
<msg timestamp="20201030 10:57:42.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023703569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.663" endtime="20201030 10:57:42.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023703569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.955" endtime="20201030 10:57:42.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.963" endtime="20201030 10:57:42.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.660" endtime="20201030 10:57:42.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.658" endtime="20201030 10:57:42.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.970" level="INFO">${RESULT} = [{'diff': 6.195000000000506e-06}, {'diff': 6.195000000000506e-06}, {'diff': 6.2090000000000756e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.165999999998423e-06}, {'diff': 6.208000000000602e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:42.967" endtime="20201030 10:57:42.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:42.975" level="INFO">${ACCURACY} = {'diff': [6.195000000000506e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.194999999997036e-06, 6.166000000001892e-06, 6.097...</msg>
<status status="PASS" starttime="20201030 10:57:42.971" endtime="20201030 10:57:42.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.980" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 10:57:42.979" endtime="20201030 10:57:42.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.983" level="INFO">VALUE: [6.195000000000506e-06, 6.195000000000506e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.194999999997036e-06, 6.166000000001892e-06, 6.097000000000047e-06, 6.179999999997993e-06, 6.165999999998423e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.235999999999742e-06, 6.180000000001462e-06, 6.222000000000172e-06, 6.165999999998423e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.179999999997993e-06, 6.166999999997896e-06, 6.153000000001796e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.179999999997993e-06, 6.151999999998853e-06, 6.208000000000602e-06, 6.166999999997896e-06, 6.180999999997466e-06, 6.2090000000000756e-06]</msg>
<status status="PASS" starttime="20201030 10:57:42.981" endtime="20201030 10:57:42.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.976" endtime="20201030 10:57:42.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:42.988" endtime="20201030 10:57:43.007"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.986" endtime="20201030 10:57:43.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.985" endtime="20201030 10:57:43.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.623" endtime="20201030 10:57:43.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.623" endtime="20201030 10:57:43.009"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.018" endtime="20201030 10:57:43.036"></status>
</kw>
<msg timestamp="20201030 10:57:43.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.016" endtime="20201030 10:57:43.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.037" endtime="20201030 10:57:43.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.040" endtime="20201030 10:57:43.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.014" endtime="20201030 10:57:43.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.011" endtime="20201030 10:57:43.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.049" endtime="20201030 10:57:43.338"></status>
</kw>
<msg timestamp="20201030 10:57:43.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024006167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024012319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.048" endtime="20201030 10:57:43.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024006167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024012319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.342" endtime="20201030 10:57:43.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.351" endtime="20201030 10:57:43.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.045" endtime="20201030 10:57:43.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.043" endtime="20201030 10:57:43.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.358" level="INFO">${RESULT} = [{'diff': 6.152000000002322e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.153000000001796e-06}, {'diff': 6.208000000000602e-06}, {'diff': 6.180999999997466e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:43.354" endtime="20201030 10:57:43.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:43.362" level="INFO">${ACCURACY} = {'diff': [6.152000000002322e-06, 6.097000000000047e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.208000000000602e-06, 6.180999999997466e-06, 6.208000000000602e-06, 6.180999999997466e-06, 6.1799...</msg>
<status status="PASS" starttime="20201030 10:57:43.359" endtime="20201030 10:57:43.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.366" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 10:57:43.365" endtime="20201030 10:57:43.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.369" level="INFO">VALUE: [6.152000000002322e-06, 6.097000000000047e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.208000000000602e-06, 6.180999999997466e-06, 6.208000000000602e-06, 6.180999999997466e-06, 6.179999999997993e-06, 6.167000000001366e-06, 6.110999999999617e-06, 6.151999999998853e-06, 6.194000000001032e-06, 6.194999999997036e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.152000000002322e-06, 6.110999999999617e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.097000000000047e-06, 6.2079999999971325e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.166999999997896e-06, 6.208000000000602e-06, 6.139000000002226e-06, 6.194999999997036e-06, 6.166000000001892e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.152000000002322e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.180000000001462e-06, 6.180000000001462e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.165999999998423e-06, 6.166999999997896e-06, 6.139000000002226e-06, 6.152000000002322e-06, 6.166999999997896e-06, 6.1529999999983265e-06]</msg>
<status status="PASS" starttime="20201030 10:57:43.368" endtime="20201030 10:57:43.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.363" endtime="20201030 10:57:43.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.374" endtime="20201030 10:57:43.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.373" endtime="20201030 10:57:43.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.371" endtime="20201030 10:57:43.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.010" endtime="20201030 10:57:43.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.009" endtime="20201030 10:57:43.395"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.405" endtime="20201030 10:57:43.422"></status>
</kw>
<msg timestamp="20201030 10:57:43.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.403" endtime="20201030 10:57:43.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.424" endtime="20201030 10:57:43.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.427" endtime="20201030 10:57:43.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.400" endtime="20201030 10:57:43.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.398" endtime="20201030 10:57:43.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.436" endtime="20201030 10:57:43.721"></status>
</kw>
<msg timestamp="20201030 10:57:43.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024458403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024464625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.435" endtime="20201030 10:57:43.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024458403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024464625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.725" endtime="20201030 10:57:43.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.734" endtime="20201030 10:57:43.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.432" endtime="20201030 10:57:43.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.430" endtime="20201030 10:57:43.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.741" level="INFO">${RESULT} = [{'diff': 6.222000000000172e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.166000000001892e-06}, {'diff': 6.180999999997466e-06}, {'diff': 6.153000000001796e-06}, {'diff': 6.180000000001462e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:43.737" endtime="20201030 10:57:43.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:43.745" level="INFO">${ACCURACY} = {'diff': [6.222000000000172e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.180999999997466e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.209...</msg>
<status status="PASS" starttime="20201030 10:57:43.742" endtime="20201030 10:57:43.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.749" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 10:57:43.748" endtime="20201030 10:57:43.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.752" level="INFO">VALUE: [6.222000000000172e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.180999999997466e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.1939999999975626e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 6.153000000001796e-06, 6.179999999997993e-06, 6.1939999999975626e-06, 6.181000000000936e-06, 6.152000000002322e-06, 6.181000000000936e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.180999999997466e-06, 6.165999999998423e-06, 6.180999999997466e-06, 6.167000000001366e-06, 6.1389999999987566e-06, 6.180000000001462e-06, 6.194999999997036e-06, 6.180999999997466e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.179999999997993e-06, 6.2090000000000756e-06, 6.166999999997896e-06, 6.1529999999983265e-06, 6.179999999997993e-06, 6.208000000000602e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.124999999999187e-06, 6.181000000000936e-06, 6.166999999997896e-06, 6.151999999998853e-06, 6.179999999997993e-06, 6.2079999999971325e-06, 6.180000000001462e-06]</msg>
<status status="PASS" starttime="20201030 10:57:43.751" endtime="20201030 10:57:43.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.746" endtime="20201030 10:57:43.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:43.758" endtime="20201030 10:57:43.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.757" endtime="20201030 10:57:43.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.755" endtime="20201030 10:57:43.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.396" endtime="20201030 10:57:43.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.396" endtime="20201030 10:57:43.779"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.788" endtime="20201030 10:57:43.807"></status>
</kw>
<msg timestamp="20201030 10:57:43.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.787" endtime="20201030 10:57:43.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.809" endtime="20201030 10:57:43.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.811" endtime="20201030 10:57:43.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.784" endtime="20201030 10:57:43.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.782" endtime="20201030 10:57:43.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.821" endtime="20201030 10:57:44.106"></status>
</kw>
<msg timestamp="20201030 10:57:44.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.819" endtime="20201030 10:57:44.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.110" endtime="20201030 10:57:44.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.119" endtime="20201030 10:57:44.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.816" endtime="20201030 10:57:44.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.815" endtime="20201030 10:57:44.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.126" level="INFO">${RESULT} = [{'diff': 6.180999999997466e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.1529999999983265e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.222000000000172e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:44.123" endtime="20201030 10:57:44.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.131" level="INFO">${ACCURACY} = {'diff': [6.180999999997466e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.167...</msg>
<status status="PASS" starttime="20201030 10:57:44.127" endtime="20201030 10:57:44.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.136" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.135" endtime="20201030 10:57:44.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.138" level="INFO">VALUE: [6.180999999997466e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.1939999999975626e-06, 6.165999999998423e-06, 6.153000000001796e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.249999999999312e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.2079999999971325e-06, 6.153000000001796e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.180999999997466e-06, 6.2090000000000756e-06, 6.1529999999983265e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.208000000000602e-06, 6.166999999997896e-06, 6.222000000000172e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.167000000001366e-06]</msg>
<status status="PASS" starttime="20201030 10:57:44.137" endtime="20201030 10:57:44.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.132" endtime="20201030 10:57:44.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.144" endtime="20201030 10:57:44.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.142" endtime="20201030 10:57:44.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.141" endtime="20201030 10:57:44.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.780" endtime="20201030 10:57:44.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.779" endtime="20201030 10:57:44.165"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.174" endtime="20201030 10:57:44.192"></status>
</kw>
<msg timestamp="20201030 10:57:44.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.172" endtime="20201030 10:57:44.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.193" endtime="20201030 10:57:44.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.196" endtime="20201030 10:57:44.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.169" endtime="20201030 10:57:44.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.167" endtime="20201030 10:57:44.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.205" endtime="20201030 10:57:44.492"></status>
</kw>
<msg timestamp="20201030 10:57:44.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023679917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023686069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.204" endtime="20201030 10:57:44.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023679917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023686069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.496" endtime="20201030 10:57:44.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.505" endtime="20201030 10:57:44.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.201" endtime="20201030 10:57:44.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.199" endtime="20201030 10:57:44.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.512" level="INFO">${RESULT} = [{'diff': 6.151999999998853e-06}, {'diff': 6.1529999999983265e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 6.165999999998423e-06}, {'diff': 6.2090000000000756e-06}, {'diff': 6.195000000000506e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:44.508" endtime="20201030 10:57:44.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.516" level="INFO">${ACCURACY} = {'diff': [6.151999999998853e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.165999999998423e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6....</msg>
<status status="PASS" starttime="20201030 10:57:44.513" endtime="20201030 10:57:44.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.521" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.520" endtime="20201030 10:57:44.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.523" level="INFO">VALUE: [6.151999999998853e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.165999999998423e-06, 6.2090000000000756e-06, 6.195000000000506e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.208000000000602e-06, 6.179999999997993e-06, 6.1389999999987566e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.137999999999283e-06, 6.1939999999975626e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.180999999997466e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.221999999996702e-06, 6.1939999999975626e-06, 6.1939999999975626e-06, 6.166000000001892e-06, 6.180999999997466e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.194000000001032e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.2090000000000756e-06, 6.1529999999983265e-06, 6.194999999997036e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.180999999997466e-06, 6.166999999997896e-06, 6.208000000000602e-06]</msg>
<status status="PASS" starttime="20201030 10:57:44.522" endtime="20201030 10:57:44.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.517" endtime="20201030 10:57:44.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.528" endtime="20201030 10:57:44.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.527" endtime="20201030 10:57:44.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.526" endtime="20201030 10:57:44.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.166" endtime="20201030 10:57:44.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.165" endtime="20201030 10:57:44.549"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.558" endtime="20201030 10:57:44.582"></status>
</kw>
<msg timestamp="20201030 10:57:44.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.557" endtime="20201030 10:57:44.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.584" endtime="20201030 10:57:44.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.586" endtime="20201030 10:57:44.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.554" endtime="20201030 10:57:44.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.552" endtime="20201030 10:57:44.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.596" endtime="20201030 10:57:44.883"></status>
</kw>
<msg timestamp="20201030 10:57:44.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025803806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025809972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.594" endtime="20201030 10:57:44.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025803806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025809972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.887" endtime="20201030 10:57:44.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.896" endtime="20201030 10:57:44.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.591" endtime="20201030 10:57:44.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.590" endtime="20201030 10:57:44.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.903" level="INFO">${RESULT} = [{'diff': 6.166000000001892e-06}, {'diff': 6.180999999997466e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 6.139000000002226e-06}, {'diff': 6.195000000000506e-06}, {'diff': 6.181000000000936e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:44.899" endtime="20201030 10:57:44.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:44.907" level="INFO">${ACCURACY} = {'diff': [6.166000000001892e-06, 6.180999999997466e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.110999999999617e-06, 6.166...</msg>
<status status="PASS" starttime="20201030 10:57:44.904" endtime="20201030 10:57:44.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.912" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 10:57:44.910" endtime="20201030 10:57:44.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.914" level="INFO">VALUE: [6.166000000001892e-06, 6.180999999997466e-06, 6.1389999999987566e-06, 6.139000000002226e-06, 6.195000000000506e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.110999999999617e-06, 6.166999999997896e-06, 6.167000000001366e-06, 6.2639999999988816e-06, 6.152000000002322e-06, 6.179999999997993e-06, 6.165999999998423e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.1939999999975626e-06, 6.179999999997993e-06, 6.110999999999617e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.222000000000172e-06, 6.110999999999617e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.1529999999983265e-06, 6.110999999999617e-06, 6.195000000000506e-06, 6.1939999999975626e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.1939999999975626e-06, 6.153000000001796e-06, 6.166999999997896e-06, 6.165999999998423e-06, 6.222000000000172e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.194999999997036e-06, 6.181000000000936e-06, 6.139000000002226e-06]</msg>
<status status="PASS" starttime="20201030 10:57:44.913" endtime="20201030 10:57:44.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.908" endtime="20201030 10:57:44.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:44.920" endtime="20201030 10:57:44.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.919" endtime="20201030 10:57:44.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.917" endtime="20201030 10:57:44.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.550" endtime="20201030 10:57:44.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.550" endtime="20201030 10:57:44.941"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.950" endtime="20201030 10:57:44.965"></status>
</kw>
<msg timestamp="20201030 10:57:44.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.949" endtime="20201030 10:57:44.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.966" endtime="20201030 10:57:44.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.969" endtime="20201030 10:57:44.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.946" endtime="20201030 10:57:44.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.944" endtime="20201030 10:57:44.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.978" endtime="20201030 10:57:45.263"></status>
</kw>
<msg timestamp="20201030 10:57:45.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020825139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:44.977" endtime="20201030 10:57:45.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020825139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.268" endtime="20201030 10:57:45.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.276" endtime="20201030 10:57:45.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.974" endtime="20201030 10:57:45.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.972" endtime="20201030 10:57:45.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.283" level="INFO">${RESULT} = [{'diff': 6.194000000001032e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.194000000001032e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:45.280" endtime="20201030 10:57:45.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:45.288" level="INFO">${ACCURACY} = {'diff': [6.194000000001032e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.1950...</msg>
<status status="PASS" starttime="20201030 10:57:45.284" endtime="20201030 10:57:45.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.293" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 10:57:45.292" endtime="20201030 10:57:45.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.296" level="INFO">VALUE: [6.194000000001032e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.222000000000172e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.166999999997896e-06, 6.166000000001892e-06, 6.124999999999187e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.249999999999312e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.151999999998853e-06, 6.139000000002226e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.139000000002226e-06, 6.181000000000936e-06, 6.1389999999987566e-06, 6.208000000000602e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.180999999997466e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.151999999998853e-06, 6.097000000000047e-06, 6.153000000001796e-06, 6.166999999997896e-06, 6.153000000001796e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.2090000000000756e-06]</msg>
<status status="PASS" starttime="20201030 10:57:45.294" endtime="20201030 10:57:45.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.289" endtime="20201030 10:57:45.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:45.301" endtime="20201030 10:57:45.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.299" endtime="20201030 10:57:45.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.298" endtime="20201030 10:57:45.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.942" endtime="20201030 10:57:45.322"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.942" endtime="20201030 10:57:45.322"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.331" endtime="20201030 10:57:45.348"></status>
</kw>
<msg timestamp="20201030 10:57:45.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.329" endtime="20201030 10:57:45.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.349" endtime="20201030 10:57:45.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.352" endtime="20201030 10:57:45.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.326" endtime="20201030 10:57:45.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.324" endtime="20201030 10:57:45.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.361" endtime="20201030 10:57:45.652"></status>
</kw>
<msg timestamp="20201030 10:57:45.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.359" endtime="20201030 10:57:45.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.657" endtime="20201030 10:57:45.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.665" endtime="20201030 10:57:45.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.357" endtime="20201030 10:57:45.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.355" endtime="20201030 10:57:45.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.672" level="INFO">${RESULT} = [{'diff': 6.179999999997993e-06}, {'diff': 6.166999999997896e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.236999999999215e-06}, {'diff': 6.165999999998423e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:45.669" endtime="20201030 10:57:45.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:45.676" level="INFO">${ACCURACY} = {'diff': [6.179999999997993e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.236999999999215e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.1669...</msg>
<status status="PASS" starttime="20201030 10:57:45.673" endtime="20201030 10:57:45.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.681" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 10:57:45.680" endtime="20201030 10:57:45.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.684" level="INFO">VALUE: [6.179999999997993e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.236999999999215e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.166000000001892e-06, 6.2090000000000756e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.208000000000602e-06, 6.1529999999983265e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.2639999999988816e-06, 6.153000000001796e-06, 6.1529999999983265e-06, 6.165999999998423e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.179999999997993e-06, 6.1529999999983265e-06, 6.1389999999987566e-06, 6.181000000000936e-06, 6.179999999997993e-06, 6.221999999996702e-06, 6.222000000000172e-06, 6.153000000001796e-06, 6.179999999997993e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.151999999998853e-06, 6.165999999998423e-06, 6.1529999999983265e-06, 6.166999999997896e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.181000000000936e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201030 10:57:45.682" endtime="20201030 10:57:45.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.677" endtime="20201030 10:57:45.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:45.689" endtime="20201030 10:57:45.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.687" endtime="20201030 10:57:45.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.686" endtime="20201030 10:57:45.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.323" endtime="20201030 10:57:45.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.322" endtime="20201030 10:57:45.710"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.719" endtime="20201030 10:57:45.744"></status>
</kw>
<msg timestamp="20201030 10:57:45.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.717" endtime="20201030 10:57:45.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.745" endtime="20201030 10:57:45.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.748" endtime="20201030 10:57:45.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.715" endtime="20201030 10:57:45.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.712" endtime="20201030 10:57:45.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.757" endtime="20201030 10:57:46.045"></status>
</kw>
<msg timestamp="20201030 10:57:46.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025823236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025829403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:45.756" endtime="20201030 10:57:46.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025823236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025829403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.049" endtime="20201030 10:57:46.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.058" endtime="20201030 10:57:46.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.753" endtime="20201030 10:57:46.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.751" endtime="20201030 10:57:46.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.064" level="INFO">${RESULT} = [{'diff': 6.167000000001366e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.195000000000506e-06}, {'diff': 6.195000000000506e-06}, {'diff': 6.165999999998423e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:46.061" endtime="20201030 10:57:46.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:46.069" level="INFO">${ACCURACY} = {'diff': [6.167000000001366e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.166999999997896e-06, 6.151999999998853e-06, 6.1799...</msg>
<status status="PASS" starttime="20201030 10:57:46.065" endtime="20201030 10:57:46.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.073" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.072" endtime="20201030 10:57:46.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.076" level="INFO">VALUE: [6.167000000001366e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.195000000000506e-06, 6.195000000000506e-06, 6.165999999998423e-06, 6.166999999997896e-06, 6.151999999998853e-06, 6.179999999997993e-06, 6.125000000002656e-06, 6.165999999998423e-06, 6.2079999999971325e-06, 6.195000000000506e-06, 6.179999999997993e-06, 6.181000000000936e-06, 6.1939999999975626e-06, 6.2079999999971325e-06, 6.165999999998423e-06, 6.194000000001032e-06, 6.194000000001032e-06, 6.179999999997993e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.1939999999975626e-06, 6.180999999997466e-06, 6.1529999999983265e-06, 6.165999999998423e-06, 6.180000000001462e-06, 6.250000000002781e-06, 6.167000000001366e-06, 6.137999999999283e-06, 6.166999999997896e-06, 6.222000000000172e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.1389999999987566e-06, 6.2090000000000756e-06, 6.151999999998853e-06, 6.180000000001462e-06, 6.110999999999617e-06, 6.166000000001892e-06, 6.236999999999215e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.110999999999617e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.179999999997993e-06]</msg>
<status status="PASS" starttime="20201030 10:57:46.074" endtime="20201030 10:57:46.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.069" endtime="20201030 10:57:46.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.082" endtime="20201030 10:57:46.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.080" endtime="20201030 10:57:46.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.079" endtime="20201030 10:57:46.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.711" endtime="20201030 10:57:46.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.710" endtime="20201030 10:57:46.103"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.112" endtime="20201030 10:57:46.131"></status>
</kw>
<msg timestamp="20201030 10:57:46.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.110" endtime="20201030 10:57:46.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.132" endtime="20201030 10:57:46.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.135" endtime="20201030 10:57:46.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.107" endtime="20201030 10:57:46.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.105" endtime="20201030 10:57:46.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.144" endtime="20201030 10:57:46.432"></status>
</kw>
<msg timestamp="20201030 10:57:46.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024717542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024723708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.143" endtime="20201030 10:57:46.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024717542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024723708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.436" endtime="20201030 10:57:46.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.445" endtime="20201030 10:57:46.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.140" endtime="20201030 10:57:46.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.138" endtime="20201030 10:57:46.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.452" level="INFO">${RESULT} = [{'diff': 6.166000000001892e-06}, {'diff': 6.2079999999971325e-06}, {'diff': 6.1939999999975626e-06}, {'diff': 6.1939999999975626e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.167000000001366e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:46.449" endtime="20201030 10:57:46.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:46.458" level="INFO">${ACCURACY} = {'diff': [6.166000000001892e-06, 6.2079999999971325e-06, 6.1939999999975626e-06, 6.1939999999975626e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.208000000000602e-06, 6.1...</msg>
<status status="PASS" starttime="20201030 10:57:46.454" endtime="20201030 10:57:46.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.463" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.462" endtime="20201030 10:57:46.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.466" level="INFO">VALUE: [6.166000000001892e-06, 6.2079999999971325e-06, 6.1939999999975626e-06, 6.1939999999975626e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.124999999999187e-06, 6.208000000000602e-06, 6.153000000001796e-06, 6.208000000000602e-06, 6.166999999997896e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.235999999999742e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.180999999997466e-06, 6.180999999997466e-06, 6.194000000001032e-06, 6.2090000000000756e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.1939999999975626e-06, 6.194000000001032e-06, 6.180000000001462e-06, 6.1529999999983265e-06, 6.151999999998853e-06, 6.153000000001796e-06, 6.151999999998853e-06, 6.166000000001892e-06, 6.139000000002226e-06, 6.1389999999987566e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.0979999999995205e-06, 6.195000000000506e-06, 6.167000000001366e-06, 6.165999999998423e-06, 6.165999999998423e-06, 6.1529999999983265e-06, 6.153000000001796e-06, 6.167000000001366e-06, 6.153000000001796e-06, 6.166999999997896e-06, 6.179999999997993e-06, 6.2229999999996455e-06]</msg>
<status status="PASS" starttime="20201030 10:57:46.464" endtime="20201030 10:57:46.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.459" endtime="20201030 10:57:46.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.471" endtime="20201030 10:57:46.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.469" endtime="20201030 10:57:46.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.468" endtime="20201030 10:57:46.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.104" endtime="20201030 10:57:46.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.103" endtime="20201030 10:57:46.492"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.501" endtime="20201030 10:57:46.517"></status>
</kw>
<msg timestamp="20201030 10:57:46.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.499" endtime="20201030 10:57:46.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.519" endtime="20201030 10:57:46.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.521" endtime="20201030 10:57:46.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.497" endtime="20201030 10:57:46.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.494" endtime="20201030 10:57:46.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.531" endtime="20201030 10:57:46.817"></status>
</kw>
<msg timestamp="20201030 10:57:46.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.529" endtime="20201030 10:57:46.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.821" endtime="20201030 10:57:46.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.830" endtime="20201030 10:57:46.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.527" endtime="20201030 10:57:46.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.525" endtime="20201030 10:57:46.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:46.837" level="INFO">${RESULT} = [{'diff': 6.165999999998423e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.1529999999983265e-06}, {'diff': 6.222000000000172e-06}, {'diff': 6.180000000001462e-06}, {'diff': 6.166000000001892e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:46.833" endtime="20201030 10:57:46.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:46.841" level="INFO">${ACCURACY} = {'diff': [6.165999999998423e-06, 6.194000000001032e-06, 6.1529999999983265e-06, 6.222000000000172e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.181...</msg>
<status status="PASS" starttime="20201030 10:57:46.838" endtime="20201030 10:57:46.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.846" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 10:57:46.845" endtime="20201030 10:57:46.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.849" level="INFO">VALUE: [6.165999999998423e-06, 6.194000000001032e-06, 6.1529999999983265e-06, 6.222000000000172e-06, 6.180000000001462e-06, 6.166000000001892e-06, 6.194000000001032e-06, 6.180999999997466e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.2229999999996455e-06, 6.194000000001032e-06, 6.1389999999987566e-06, 6.166000000001892e-06, 6.165999999998423e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.179999999997993e-06, 6.165999999998423e-06, 6.208000000000602e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.195000000000506e-06, 6.166999999997896e-06, 6.180000000001462e-06, 6.166999999997896e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.097000000000047e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.179999999997993e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.166999999997896e-06, 6.181000000000936e-06, 6.180999999997466e-06, 6.167000000001366e-06, 6.166999999997896e-06, 6.166999999997896e-06, 6.165999999998423e-06, 6.165999999998423e-06, 6.1389999999987566e-06]</msg>
<status status="PASS" starttime="20201030 10:57:46.847" endtime="20201030 10:57:46.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.842" endtime="20201030 10:57:46.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:46.854" endtime="20201030 10:57:46.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.852" endtime="20201030 10:57:46.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.851" endtime="20201030 10:57:46.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.493" endtime="20201030 10:57:46.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.492" endtime="20201030 10:57:46.875"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.884" endtime="20201030 10:57:46.905"></status>
</kw>
<msg timestamp="20201030 10:57:46.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.882" endtime="20201030 10:57:46.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:46.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:46.907" endtime="20201030 10:57:46.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.909" endtime="20201030 10:57:46.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.879" endtime="20201030 10:57:46.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.877" endtime="20201030 10:57:46.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:46.919" endtime="20201030 10:57:47.205"></status>
</kw>
<msg timestamp="20201030 10:57:47.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021483847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021499556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:46.917" endtime="20201030 10:57:47.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021483847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021499556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.210" endtime="20201030 10:57:47.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.219" endtime="20201030 10:57:47.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.915" endtime="20201030 10:57:47.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.913" endtime="20201030 10:57:47.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.225" level="INFO">${RESULT} = [{'diff': 1.5708999999999168e-05}, {'diff': 2.331900000000081e-05}, {'diff': 2.0527999999998825e-05}, {'diff': 1.955500000000096e-05}, {'diff': 2.243099999999984e-05}, {'diff': 2.6221999999999357e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:47.222" endtime="20201030 10:57:47.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:47.230" level="INFO">${ACCURACY} = {'diff': [1.5708999999999168e-05, 2.331900000000081e-05, 2.0527999999998825e-05, 1.955500000000096e-05, 2.243099999999984e-05, 2.6221999999999357e-05, 2.238900000000113e-05, 2.145900000000145e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 10:57:47.226" endtime="20201030 10:57:47.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.234" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 10:57:47.233" endtime="20201030 10:57:47.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.237" level="INFO">VALUE: [1.5708999999999168e-05, 2.331900000000081e-05, 2.0527999999998825e-05, 1.955500000000096e-05, 2.243099999999984e-05, 2.6221999999999357e-05, 2.238900000000113e-05, 2.145900000000145e-05, 2.144500000000188e-05, 2.054099999999892e-05, 2.5277000000000632e-05, 2.0514000000002724e-05, 2.144499999999841e-05, 1.952700000000182e-05, 2.238900000000113e-05, 2.045900000000045e-05, 2.5250000000000966e-05, 2.3416000000001796e-05, 2.433300000000138e-05, 2.2485999999998646e-05, 2.534700000000195e-05, 1.95830000000001e-05, 2.047300000000002e-05, 2.333300000000038e-05, 2.4318999999998342e-05, 2.536100000000152e-05, 2.24030000000007e-05, 2.0486000000000115e-05, 2.3320000000000285e-05, 2.237500000000156e-05, 1.9570000000000004e-05, 2.4320000000001285e-05, 1.952700000000182e-05, 2.0513999999999255e-05, 2.437500000000009e-05, 2.1486000000001115e-05, 2.048699999999959e-05, 2.4291999999998676e-05, 2.141700000000274e-05, 1.956899999999706e-05, 2.24030000000007e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.336099999999952e-05, 2.5264000000000536e-05, 2.3401999999998757e-05, 2.0513999999999255e-05, 2.4290999999999202e-05, 1.955500000000096e-05, 2.0513999999999255e-05]</msg>
<status status="PASS" starttime="20201030 10:57:47.235" endtime="20201030 10:57:47.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.231" endtime="20201030 10:57:47.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.243" endtime="20201030 10:57:47.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.242" endtime="20201030 10:57:47.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.240" endtime="20201030 10:57:47.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.876" endtime="20201030 10:57:47.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:46.875" endtime="20201030 10:57:47.264"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.273" endtime="20201030 10:57:47.292"></status>
</kw>
<msg timestamp="20201030 10:57:47.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.272" endtime="20201030 10:57:47.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.294" endtime="20201030 10:57:47.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.296" endtime="20201030 10:57:47.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.269" endtime="20201030 10:57:47.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.267" endtime="20201030 10:57:47.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.306" endtime="20201030 10:57:47.593"></status>
</kw>
<msg timestamp="20201030 10:57:47.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023997472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024008417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.304" endtime="20201030 10:57:47.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023997472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024008417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.597" endtime="20201030 10:57:47.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.606" endtime="20201030 10:57:47.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.301" endtime="20201030 10:57:47.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.300" endtime="20201030 10:57:47.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:47.613" level="INFO">${RESULT} = [{'diff': 1.0945000000001787e-05}, {'diff': 2.1429999999999366e-05}, {'diff': 2.1429999999999366e-05}, {'diff': 2.3333999999999855e-05}, {'diff': 2.043099999999784e-05}, {'diff': 2.5291000000000202e-0...</msg>
<status status="PASS" starttime="20201030 10:57:47.609" endtime="20201030 10:57:47.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:47.618" level="INFO">${ACCURACY} = {'diff': [1.0945000000001787e-05, 2.1429999999999366e-05, 2.1429999999999366e-05, 2.3333999999999855e-05, 2.043099999999784e-05, 2.5291000000000202e-05, 1.9513999999998255e-05, 2.337499999999909e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:47.614" endtime="20201030 10:57:47.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.623" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 10:57:47.621" endtime="20201030 10:57:47.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.625" level="INFO">VALUE: [1.0945000000001787e-05, 2.1429999999999366e-05, 2.1429999999999366e-05, 2.3333999999999855e-05, 2.043099999999784e-05, 2.5291000000000202e-05, 1.9513999999998255e-05, 2.337499999999909e-05, 2.0555999999997965e-05, 2.436100000000052e-05, 2.0486000000000115e-05, 2.4306000000001715e-05, 2.048699999999959e-05, 2.340299999999823e-05, 2.1541999999999395e-05, 2.334699999999995e-05, 2.143100000000231e-05, 2.3277999999998106e-05, 2.0458000000000975e-05, 2.0513999999999255e-05, 2.24169999999968e-05, 2.334699999999995e-05, 2.240299999999723e-05, 2.14029999999997e-05, 2.4292000000002145e-05, 2.436100000000052e-05, 2.1443999999998936e-05, 2.336099999999952e-05, 2.3388000000002657e-05, 2.6207999999999787e-05, 2.1444000000002406e-05, 2.0527999999998825e-05, 2.1486000000001115e-05, 2.431900000000181e-05, 2.3333999999999855e-05, 1.9527999999997825e-05, 1.9570000000000004e-05, 2.337500000000256e-05, 2.338900000000213e-05, 2.5236000000001396e-05, 2.5236000000001396e-05, 2.1415999999999796e-05, 2.3332999999996912e-05, 2.6235999999998927e-05, 2.3416000000001796e-05, 2.5291000000000202e-05, 2.241700000000027e-05, 2.0472000000000545e-05, 2.238900000000113e-05, 2.3347999999999425e-05]</msg>
<status status="PASS" starttime="20201030 10:57:47.624" endtime="20201030 10:57:47.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.619" endtime="20201030 10:57:47.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:47.634" endtime="20201030 10:57:47.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.632" endtime="20201030 10:57:47.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.631" endtime="20201030 10:57:47.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.265" endtime="20201030 10:57:47.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.265" endtime="20201030 10:57:47.655"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.664" endtime="20201030 10:57:47.684"></status>
</kw>
<msg timestamp="20201030 10:57:47.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.662" endtime="20201030 10:57:47.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:47.685" endtime="20201030 10:57:47.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.688" endtime="20201030 10:57:47.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.660" endtime="20201030 10:57:47.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.657" endtime="20201030 10:57:47.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:47.698" endtime="20201030 10:57:47.986"></status>
</kw>
<msg timestamp="20201030 10:57:47.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024996986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025022264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.696" endtime="20201030 10:57:47.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:47.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024996986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025022264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:47.991" endtime="20201030 10:57:47.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.000" endtime="20201030 10:57:48.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.693" endtime="20201030 10:57:48.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.691" endtime="20201030 10:57:48.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.007" level="INFO">${RESULT} = [{'diff': 2.5278000000000106e-05}, {'diff': 2.4320000000001285e-05}, {'diff': 2.336099999999952e-05}, {'diff': 2.24030000000007e-05}, {'diff': 2.5235999999997927e-05}, {'diff': 2.6194000000000217e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:48.004" endtime="20201030 10:57:48.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:48.012" level="INFO">${ACCURACY} = {'diff': [2.5278000000000106e-05, 2.4320000000001285e-05, 2.336099999999952e-05, 2.24030000000007e-05, 2.5235999999997927e-05, 2.6194000000000217e-05, 2.14029999999997e-05, 2.2429999999996897e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 10:57:48.008" endtime="20201030 10:57:48.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.017" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 10:57:48.016" endtime="20201030 10:57:48.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.019" level="INFO">VALUE: [2.5278000000000106e-05, 2.4320000000001285e-05, 2.336099999999952e-05, 2.24030000000007e-05, 2.5235999999997927e-05, 2.6194000000000217e-05, 2.14029999999997e-05, 2.2429999999996897e-05, 1.9513999999998255e-05, 2.5262999999997593e-05, 2.1443999999998936e-05, 2.238899999999766e-05, 1.956899999999706e-05, 1.9500000000002154e-05, 2.236099999999852e-05, 2.5318999999999342e-05, 2.244499999999941e-05, 2.5250000000000966e-05, 2.334699999999995e-05, 2.5305999999999246e-05, 2.147300000000102e-05, 2.047300000000002e-05, 2.5236000000001396e-05, 2.0486000000000115e-05, 2.1486000000001115e-05, 1.955499999999749e-05, 2.337499999999909e-05, 2.4290999999999202e-05, 1.8556000000002904e-05, 1.9542000000000864e-05, 2.5318999999999342e-05, 2.1415999999999796e-05, 2.4305999999998246e-05, 2.148699999999712e-05, 2.5305999999999246e-05, 2.234699999999895e-05, 2.0472000000000545e-05, 1.954100000000139e-05, 2.433300000000138e-05, 2.1457999999998506e-05, 2.234699999999895e-05, 1.85829999999991e-05, 2.5318999999999342e-05, 2.144499999999841e-05, 2.6249999999998497e-05, 2.337499999999909e-05, 1.9556000000000434e-05, 2.0527999999998825e-05, 2.434700000000095e-05, 1.9527999999997825e-05]</msg>
<status status="PASS" starttime="20201030 10:57:48.018" endtime="20201030 10:57:48.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.013" endtime="20201030 10:57:48.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.025" endtime="20201030 10:57:48.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.023" endtime="20201030 10:57:48.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.022" endtime="20201030 10:57:48.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.656" endtime="20201030 10:57:48.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:47.655" endtime="20201030 10:57:48.045"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.055" endtime="20201030 10:57:48.076"></status>
</kw>
<msg timestamp="20201030 10:57:48.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.053" endtime="20201030 10:57:48.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.078" endtime="20201030 10:57:48.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.080" endtime="20201030 10:57:48.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.050" endtime="20201030 10:57:48.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.048" endtime="20201030 10:57:48.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.090" endtime="20201030 10:57:48.375"></status>
</kw>
<msg timestamp="20201030 10:57:48.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026369167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026402028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.088" endtime="20201030 10:57:48.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026369167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026402028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.380" endtime="20201030 10:57:48.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.388" endtime="20201030 10:57:48.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.086" endtime="20201030 10:57:48.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.084" endtime="20201030 10:57:48.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.395" level="INFO">${RESULT} = [{'diff': 3.286100000000208e-05}, {'diff': 2.5278000000000106e-05}, {'diff': 2.4277999999999106e-05}, {'diff': 2.045899999999698e-05}, {'diff': 2.0458000000000975e-05}, {'diff': 2.2402000000001226e-05...</msg>
<status status="PASS" starttime="20201030 10:57:48.392" endtime="20201030 10:57:48.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:48.399" level="INFO">${ACCURACY} = {'diff': [3.286100000000208e-05, 2.5278000000000106e-05, 2.4277999999999106e-05, 2.045899999999698e-05, 2.0458000000000975e-05, 2.2402000000001226e-05, 2.2443999999999936e-05, 2.6236000000002396e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:48.396" endtime="20201030 10:57:48.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.404" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 10:57:48.403" endtime="20201030 10:57:48.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.407" level="INFO">VALUE: [3.286100000000208e-05, 2.5278000000000106e-05, 2.4277999999999106e-05, 2.045899999999698e-05, 2.0458000000000975e-05, 2.2402000000001226e-05, 2.2443999999999936e-05, 2.6236000000002396e-05, 2.333300000000038e-05, 2.4306000000001715e-05, 2.4277999999999106e-05, 2.144500000000188e-05, 2.136099999999752e-05, 2.0499999999999685e-05, 2.5263999999997067e-05, 2.1443999999998936e-05, 1.954099999999792e-05, 2.2333999999998855e-05, 2.5222000000001826e-05, 1.9471999999999545e-05, 2.5250000000000966e-05, 2.334699999999995e-05, 2.430500000000224e-05, 2.0527999999998825e-05, 2.5221999999998357e-05, 2.434700000000095e-05, 2.145899999999798e-05, 2.5278000000000106e-05, 1.9500000000002154e-05, 2.1415999999999796e-05, 1.952699999999835e-05, 1.952699999999835e-05, 2.336100000000299e-05, 2.2430000000000366e-05, 2.245900000000245e-05, 2.144500000000188e-05, 2.4278000000002575e-05, 2.14029999999997e-05, 2.3333999999999855e-05, 2.241700000000027e-05, 2.0458000000000975e-05, 2.5291999999999676e-05, 2.243099999999984e-05, 2.0499999999999685e-05, 2.6235999999998927e-05, 2.4346999999997482e-05, 2.24030000000007e-05, 2.236100000000199e-05, 2.045900000000045e-05, 2.4304999999998772e-05]</msg>
<status status="PASS" starttime="20201030 10:57:48.405" endtime="20201030 10:57:48.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.400" endtime="20201030 10:57:48.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.413" endtime="20201030 10:57:48.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.411" endtime="20201030 10:57:48.433"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.410" endtime="20201030 10:57:48.433"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.046" endtime="20201030 10:57:48.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.046" endtime="20201030 10:57:48.434"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.443" endtime="20201030 10:57:48.462"></status>
</kw>
<msg timestamp="20201030 10:57:48.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.441" endtime="20201030 10:57:48.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.464" endtime="20201030 10:57:48.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.466" endtime="20201030 10:57:48.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.438" endtime="20201030 10:57:48.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.436" endtime="20201030 10:57:48.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.476" endtime="20201030 10:57:48.763"></status>
</kw>
<msg timestamp="20201030 10:57:48.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024882722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.474" endtime="20201030 10:57:48.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024882722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.767" endtime="20201030 10:57:48.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.776" endtime="20201030 10:57:48.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.472" endtime="20201030 10:57:48.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.470" endtime="20201030 10:57:48.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.783" level="INFO">${RESULT} = [{'diff': 3.3874999999999184e-05}, {'diff': 2.1472000000001545e-05}, {'diff': 2.433300000000138e-05}, {'diff': 2.24030000000007e-05}, {'diff': 1.952700000000182e-05}, {'diff': 2.4278000000002575e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:48.779" endtime="20201030 10:57:48.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:48.788" level="INFO">${ACCURACY} = {'diff': [3.3874999999999184e-05, 2.1472000000001545e-05, 2.433300000000138e-05, 2.24030000000007e-05, 1.952700000000182e-05, 2.4278000000002575e-05, 2.141699999999927e-05, 2.2471999999999076e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 10:57:48.784" endtime="20201030 10:57:48.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.793" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 10:57:48.792" endtime="20201030 10:57:48.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.795" level="INFO">VALUE: [3.3874999999999184e-05, 2.1472000000001545e-05, 2.433300000000138e-05, 2.24030000000007e-05, 1.952700000000182e-05, 2.4278000000002575e-05, 2.141699999999927e-05, 2.2471999999999076e-05, 1.9542000000000864e-05, 2.0485999999996646e-05, 2.1458000000001975e-05, 2.4332999999997912e-05, 2.0486000000000115e-05, 2.0486000000000115e-05, 2.1472000000001545e-05, 2.338900000000213e-05, 2.34030000000017e-05, 2.433300000000138e-05, 2.4292000000002145e-05, 2.237500000000156e-05, 2.62230000000023e-05, 1.856899999999953e-05, 2.5305999999999246e-05, 2.0527999999998825e-05, 2.4304999999998772e-05, 2.0500000000003155e-05, 2.048699999999959e-05, 2.336100000000299e-05, 1.9513999999998255e-05, 2.231899999999981e-05, 2.5319999999998816e-05, 2.0486000000000115e-05, 1.8541999999999864e-05, 2.5305999999999246e-05, 2.047300000000002e-05, 2.523700000000087e-05, 2.6180000000000647e-05, 2.145899999999798e-05, 2.620900000000273e-05, 2.3320000000000285e-05, 2.2443999999999936e-05, 2.052699999999935e-05, 2.6264000000001536e-05, 2.4305999999998246e-05, 2.430500000000224e-05, 2.5264000000000536e-05, 2.4263999999999536e-05, 2.0471999999997076e-05, 2.0485999999996646e-05, 2.337500000000256e-05]</msg>
<status status="PASS" starttime="20201030 10:57:48.794" endtime="20201030 10:57:48.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.789" endtime="20201030 10:57:48.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.800" endtime="20201030 10:57:48.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.799" endtime="20201030 10:57:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.798" endtime="20201030 10:57:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.435" endtime="20201030 10:57:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.434" endtime="20201030 10:57:48.821"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.830" endtime="20201030 10:57:48.850"></status>
</kw>
<msg timestamp="20201030 10:57:48.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.829" endtime="20201030 10:57:48.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.852" endtime="20201030 10:57:48.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.854" endtime="20201030 10:57:48.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.826" endtime="20201030 10:57:48.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.824" endtime="20201030 10:57:48.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.864" endtime="20201030 10:57:49.153"></status>
</kw>
<msg timestamp="20201030 10:57:49.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024243861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024279681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.862" endtime="20201030 10:57:49.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024243861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024279681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.158" endtime="20201030 10:57:49.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.166" endtime="20201030 10:57:49.168"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.859" endtime="20201030 10:57:49.169"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.857" endtime="20201030 10:57:49.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.173" level="INFO">${RESULT} = [{'diff': 3.582000000000238e-05}, {'diff': 2.233299999999938e-05}, {'diff': 2.238899999999766e-05}, {'diff': 2.5249999999997497e-05}, {'diff': 2.52230000000013e-05}, {'diff': 3.380600000000081e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:49.170" endtime="20201030 10:57:49.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.177" level="INFO">${ACCURACY} = {'diff': [3.582000000000238e-05, 2.233299999999938e-05, 2.238899999999766e-05, 2.5249999999997497e-05, 2.52230000000013e-05, 3.380600000000081e-05, 9.028000000001202e-06, 2.0556000000001434e-05, 2.243...</msg>
<status status="PASS" starttime="20201030 10:57:49.174" endtime="20201030 10:57:49.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.182" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.181" endtime="20201030 10:57:49.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.185" level="INFO">VALUE: [3.582000000000238e-05, 2.233299999999938e-05, 2.238899999999766e-05, 2.5249999999997497e-05, 2.52230000000013e-05, 3.380600000000081e-05, 9.028000000001202e-06, 2.0556000000001434e-05, 2.243099999999984e-05, 2.5236000000001396e-05, 2.4278000000002575e-05, 2.4236000000000396e-05, 2.1457999999998506e-05, 2.4319999999997816e-05, 2.5291999999999676e-05, 2.3306000000000715e-05, 2.134700000000142e-05, 2.0514000000002724e-05, 2.4332999999997912e-05, 2.1472000000001545e-05, 2.24030000000007e-05, 2.2430000000000366e-05, 2.2457999999999506e-05, 2.0472000000000545e-05, 2.2416000000000796e-05, 2.1472000000001545e-05, 1.9514000000001724e-05, 2.0527999999998825e-05, 2.0499999999999685e-05, 2.5208000000002256e-05, 2.3332999999996912e-05, 2.24030000000007e-05, 2.4290999999999202e-05, 2.052700000000282e-05, 2.436100000000052e-05, 2.144500000000188e-05, 2.5278000000000106e-05, 2.1486000000001115e-05, 2.045900000000045e-05, 2.34030000000017e-05, 2.337499999999909e-05, 2.144500000000188e-05, 2.2401999999997757e-05, 2.2457999999999506e-05, 2.5291000000000202e-05, 2.238900000000113e-05, 2.0457999999997506e-05, 2.3347999999999425e-05, 2.4305999999998246e-05, 2.5235999999997927e-05]</msg>
<status status="PASS" starttime="20201030 10:57:49.183" endtime="20201030 10:57:49.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.178" endtime="20201030 10:57:49.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.190" endtime="20201030 10:57:49.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.188" endtime="20201030 10:57:49.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.187" endtime="20201030 10:57:49.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.822" endtime="20201030 10:57:49.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.822" endtime="20201030 10:57:49.211"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.220" endtime="20201030 10:57:49.236"></status>
</kw>
<msg timestamp="20201030 10:57:49.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.218" endtime="20201030 10:57:49.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.238" endtime="20201030 10:57:49.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.241" endtime="20201030 10:57:49.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.216" endtime="20201030 10:57:49.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.213" endtime="20201030 10:57:49.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.250" endtime="20201030 10:57:49.536"></status>
</kw>
<msg timestamp="20201030 10:57:49.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.249" endtime="20201030 10:57:49.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.540" endtime="20201030 10:57:49.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.550" endtime="20201030 10:57:49.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.246" endtime="20201030 10:57:49.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.244" endtime="20201030 10:57:49.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.557" level="INFO">${RESULT} = [{'diff': 1.0958999999997887e-05}, {'diff': 2.5263999999997067e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.5222000000001826e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.0514000000002724e-0...</msg>
<status status="PASS" starttime="20201030 10:57:49.553" endtime="20201030 10:57:49.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.561" level="INFO">${ACCURACY} = {'diff': [1.0958999999997887e-05, 2.5263999999997067e-05, 2.437500000000009e-05, 2.5222000000001826e-05, 2.0486000000000115e-05, 2.0514000000002724e-05, 2.234700000000242e-05, 2.1429999999999366e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:49.558" endtime="20201030 10:57:49.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.566" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.565" endtime="20201030 10:57:49.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.568" level="INFO">VALUE: [1.0958999999997887e-05, 2.5263999999997067e-05, 2.437500000000009e-05, 2.5222000000001826e-05, 2.0486000000000115e-05, 2.0514000000002724e-05, 2.234700000000242e-05, 2.1429999999999366e-05, 2.338899999999866e-05, 1.956899999999706e-05, 2.051299999999978e-05, 2.1457999999998506e-05, 2.337500000000256e-05, 2.0472000000000545e-05, 2.4304999999998772e-05, 2.1457999999998506e-05, 2.237500000000156e-05, 2.4348000000000425e-05, 2.241700000000027e-05, 2.523700000000087e-05, 2.0499999999999685e-05, 2.0528000000002294e-05, 2.1500000000000685e-05, 2.4332999999997912e-05, 1.956900000000053e-05, 2.5278000000000106e-05, 2.4305999999998246e-05, 2.337499999999909e-05, 2.4332999999997912e-05, 2.5291999999999676e-05, 2.1458000000001975e-05, 2.429100000000267e-05, 2.045900000000045e-05, 2.0457999999997506e-05, 2.5250000000000966e-05, 2.0513999999999255e-05, 2.431900000000181e-05, 2.4263999999999536e-05, 2.1457999999998506e-05, 2.244499999999941e-05, 1.9542000000000864e-05, 1.9513999999998255e-05, 2.4320000000001285e-05, 2.5278000000000106e-05, 2.1443999999998936e-05, 2.055499999999849e-05, 2.048699999999959e-05, 2.143099999999884e-05, 2.4305999999998246e-05, 1.9570000000000004e-05]</msg>
<status status="PASS" starttime="20201030 10:57:49.567" endtime="20201030 10:57:49.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.562" endtime="20201030 10:57:49.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.575" endtime="20201030 10:57:49.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.573" endtime="20201030 10:57:49.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.572" endtime="20201030 10:57:49.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.212" endtime="20201030 10:57:49.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.211" endtime="20201030 10:57:49.595"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.604" endtime="20201030 10:57:49.623"></status>
</kw>
<msg timestamp="20201030 10:57:49.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.603" endtime="20201030 10:57:49.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.625" endtime="20201030 10:57:49.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.627" endtime="20201030 10:57:49.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.600" endtime="20201030 10:57:49.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.598" endtime="20201030 10:57:49.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.637" endtime="20201030 10:57:49.924"></status>
</kw>
<msg timestamp="20201030 10:57:49.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023863653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023896597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.635" endtime="20201030 10:57:49.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023863653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023896597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:49.928" endtime="20201030 10:57:49.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.937" endtime="20201030 10:57:49.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.633" endtime="20201030 10:57:49.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.631" endtime="20201030 10:57:49.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:49.943" level="INFO">${RESULT} = [{'diff': 3.294400000000003e-05}, {'diff': 2.340299999999823e-05}, {'diff': 2.145899999999798e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.338900000000213e-05}, {'diff': 2.054099999999892e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:49.940" endtime="20201030 10:57:49.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:49.949" level="INFO">${ACCURACY} = {'diff': [3.294400000000003e-05, 2.340299999999823e-05, 2.145899999999798e-05, 2.0486000000000115e-05, 2.338900000000213e-05, 2.054099999999892e-05, 2.1472000000001545e-05, 2.0458000000000975e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 10:57:49.944" endtime="20201030 10:57:49.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.953" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 10:57:49.952" endtime="20201030 10:57:49.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:49.956" level="INFO">VALUE: [3.294400000000003e-05, 2.340299999999823e-05, 2.145899999999798e-05, 2.0486000000000115e-05, 2.338900000000213e-05, 2.054099999999892e-05, 2.1472000000001545e-05, 2.0458000000000975e-05, 2.434700000000095e-05, 1.9556000000000434e-05, 2.436100000000052e-05, 2.145899999999798e-05, 2.338899999999866e-05, 1.9542000000000864e-05, 2.5291999999999676e-05, 2.24030000000007e-05, 1.9556000000000434e-05, 1.9528000000001294e-05, 2.0499999999999685e-05, 2.3429999999997897e-05, 2.5222000000001826e-05, 2.6207999999999787e-05, 2.334699999999995e-05, 2.0499999999999685e-05, 2.1443999999998936e-05, 2.2471999999999076e-05, 1.9542000000000864e-05, 2.0486000000000115e-05, 2.437500000000009e-05, 2.0514000000002724e-05, 2.5304999999999772e-05, 2.337499999999909e-05, 1.956900000000053e-05, 2.0486000000000115e-05, 2.4291999999998676e-05, 2.6250000000001966e-05, 2.054099999999892e-05, 2.340299999999823e-05, 1.95830000000001e-05, 2.5277000000000632e-05, 2.333300000000038e-05, 2.4318999999998342e-05, 2.2416000000000796e-05, 1.9542000000000864e-05, 2.234699999999895e-05, 2.3318999999997342e-05, 2.433300000000138e-05, 2.4333999999997385e-05, 2.34030000000017e-05, 1.955499999999749e-05]</msg>
<status status="PASS" starttime="20201030 10:57:49.954" endtime="20201030 10:57:49.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.950" endtime="20201030 10:57:49.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:49.961" endtime="20201030 10:57:49.981"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.959" endtime="20201030 10:57:49.981"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.958" endtime="20201030 10:57:49.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.596" endtime="20201030 10:57:49.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.596" endtime="20201030 10:57:49.982"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:49.991" endtime="20201030 10:57:50.013"></status>
</kw>
<msg timestamp="20201030 10:57:50.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:49.990" endtime="20201030 10:57:50.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.015" endtime="20201030 10:57:50.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.017" endtime="20201030 10:57:50.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.987" endtime="20201030 10:57:50.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.985" endtime="20201030 10:57:50.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.027" endtime="20201030 10:57:50.315"></status>
</kw>
<msg timestamp="20201030 10:57:50.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024024042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.025" endtime="20201030 10:57:50.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024024042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.320" endtime="20201030 10:57:50.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.329" endtime="20201030 10:57:50.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.023" endtime="20201030 10:57:50.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.021" endtime="20201030 10:57:50.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.335" level="INFO">${RESULT} = [{'diff': 3.191599999999989e-05}, {'diff': 2.337499999999909e-05}, {'diff': 2.433300000000138e-05}, {'diff': 2.336099999999952e-05}, {'diff': 2.1471999999998076e-05}, {'diff': 2.336099999999952e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:50.332" endtime="20201030 10:57:50.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:50.340" level="INFO">${ACCURACY} = {'diff': [3.191599999999989e-05, 2.337499999999909e-05, 2.433300000000138e-05, 2.336099999999952e-05, 2.1471999999998076e-05, 2.336099999999952e-05, 1.9513999999998255e-05, 1.9500000000002154e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 10:57:50.336" endtime="20201030 10:57:50.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.344" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 10:57:50.343" endtime="20201030 10:57:50.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.347" level="INFO">VALUE: [3.191599999999989e-05, 2.337499999999909e-05, 2.433300000000138e-05, 2.336099999999952e-05, 2.1471999999998076e-05, 2.336099999999952e-05, 1.9513999999998255e-05, 1.9500000000002154e-05, 2.144500000000188e-05, 2.4332999999997912e-05, 2.4332999999997912e-05, 2.24030000000007e-05, 2.237499999999809e-05, 2.1500000000000685e-05, 2.434700000000095e-05, 2.4278000000002575e-05, 2.236100000000199e-05, 2.340299999999823e-05, 2.1514000000000255e-05, 2.144500000000188e-05, 2.144500000000188e-05, 2.1471999999998076e-05, 2.5304999999999772e-05, 2.143099999999884e-05, 1.9556000000000434e-05, 2.0513999999999255e-05, 1.9541999999997395e-05, 1.951300000000225e-05, 2.045900000000045e-05, 2.045900000000045e-05, 2.141699999999927e-05, 2.5291999999999676e-05, 2.337499999999909e-05, 2.4304999999998772e-05, 2.5222000000001826e-05, 2.0415999999998796e-05, 2.4319999999997816e-05, 2.144499999999841e-05, 2.5291999999999676e-05, 2.0472000000000545e-05, 2.1458000000001975e-05, 2.237500000000156e-05, 1.95830000000001e-05, 2.0499999999999685e-05, 2.4304999999998772e-05, 2.0570000000001004e-05, 2.0499999999999685e-05, 2.5319999999998816e-05, 2.5235999999997927e-05, 2.430500000000224e-05]</msg>
<status status="PASS" starttime="20201030 10:57:50.345" endtime="20201030 10:57:50.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.341" endtime="20201030 10:57:50.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.352" endtime="20201030 10:57:50.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.351" endtime="20201030 10:57:50.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.349" endtime="20201030 10:57:50.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.983" endtime="20201030 10:57:50.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:49.982" endtime="20201030 10:57:50.373"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.382" endtime="20201030 10:57:50.401"></status>
</kw>
<msg timestamp="20201030 10:57:50.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.380" endtime="20201030 10:57:50.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.403" endtime="20201030 10:57:50.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.406" endtime="20201030 10:57:50.407"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.378" endtime="20201030 10:57:50.408"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.376" endtime="20201030 10:57:50.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.415" endtime="20201030 10:57:50.703"></status>
</kw>
<msg timestamp="20201030 10:57:50.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024906653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.413" endtime="20201030 10:57:50.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024906653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.708" endtime="20201030 10:57:50.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.716" endtime="20201030 10:57:50.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.411" endtime="20201030 10:57:50.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.409" endtime="20201030 10:57:50.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:50.723" level="INFO">${RESULT} = [{'diff': 1.0957999999998413e-05}, {'diff': 2.1500000000000685e-05}, {'diff': 2.438899999999966e-05}, {'diff': 2.4305999999998246e-05}, {'diff': 2.0499999999999685e-05}, {'diff': 2.243099999999984e-05...</msg>
<status status="PASS" starttime="20201030 10:57:50.720" endtime="20201030 10:57:50.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:50.728" level="INFO">${ACCURACY} = {'diff': [1.0957999999998413e-05, 2.1500000000000685e-05, 2.438899999999966e-05, 2.4305999999998246e-05, 2.0499999999999685e-05, 2.243099999999984e-05, 1.956900000000053e-05, 2.518099999999912e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:57:50.724" endtime="20201030 10:57:50.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.732" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 10:57:50.731" endtime="20201030 10:57:50.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.735" level="INFO">VALUE: [1.0957999999998413e-05, 2.1500000000000685e-05, 2.438899999999966e-05, 2.4305999999998246e-05, 2.0499999999999685e-05, 2.243099999999984e-05, 1.956900000000053e-05, 2.518099999999912e-05, 2.4304999999998772e-05, 2.436100000000052e-05, 2.338899999999866e-05, 2.5278000000000106e-05, 1.954100000000139e-05, 2.0486000000000115e-05, 2.4306000000001715e-05, 2.338899999999866e-05, 2.052699999999935e-05, 1.9513999999998255e-05, 2.431900000000181e-05, 2.244500000000288e-05, 2.338899999999866e-05, 2.238900000000113e-05, 2.1416000000003266e-05, 2.338900000000213e-05, 2.2430000000000366e-05, 2.237500000000156e-05, 2.143099999999884e-05, 2.1457999999998506e-05, 2.0513999999999255e-05, 2.4306000000001715e-05, 2.4320000000001285e-05, 2.233299999999938e-05, 2.4305999999998246e-05, 2.3305999999997246e-05, 2.044500000000088e-05, 1.959699999999967e-05, 2.1458000000001975e-05, 2.5250000000000966e-05, 2.334699999999995e-05, 2.5318999999999342e-05, 2.0499999999999685e-05, 2.429100000000267e-05, 2.5249999999997497e-05, 2.0499999999999685e-05, 1.9556000000000434e-05, 1.954099999999792e-05, 2.5278000000000106e-05, 2.6208000000003256e-05, 2.0486000000000115e-05, 2.2416000000000796e-05]</msg>
<status status="PASS" starttime="20201030 10:57:50.733" endtime="20201030 10:57:50.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.728" endtime="20201030 10:57:50.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:50.741" endtime="20201030 10:57:50.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.739" endtime="20201030 10:57:50.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.738" endtime="20201030 10:57:50.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.374" endtime="20201030 10:57:50.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.373" endtime="20201030 10:57:50.762"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.771" endtime="20201030 10:57:50.788"></status>
</kw>
<msg timestamp="20201030 10:57:50.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.769" endtime="20201030 10:57:50.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:50.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:50.790" endtime="20201030 10:57:50.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.792" endtime="20201030 10:57:50.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.766" endtime="20201030 10:57:50.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.764" endtime="20201030 10:57:50.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:50.802" endtime="20201030 10:57:51.089"></status>
</kw>
<msg timestamp="20201030 10:57:51.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023062444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:50.800" endtime="20201030 10:57:51.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023062444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.094" endtime="20201030 10:57:51.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.102" endtime="20201030 10:57:51.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.797" endtime="20201030 10:57:51.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.796" endtime="20201030 10:57:51.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.109" level="INFO">${RESULT} = [{'diff': 8.111000000001617e-06}, {'diff': 2.0499999999999685e-05}, {'diff': 2.238900000000113e-05}, {'diff': 2.5262999999997593e-05}, {'diff': 2.0513999999999255e-05}, {'diff': 2.0499999999999685e-05...</msg>
<status status="PASS" starttime="20201030 10:57:51.106" endtime="20201030 10:57:51.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.114" level="INFO">${ACCURACY} = {'diff': [8.111000000001617e-06, 2.0499999999999685e-05, 2.238900000000113e-05, 2.5262999999997593e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.340299999999823e-05, 2.5304999999999772e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:57:51.110" endtime="20201030 10:57:51.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.119" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.118" endtime="20201030 10:57:51.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.122" level="INFO">VALUE: [8.111000000001617e-06, 2.0499999999999685e-05, 2.238900000000113e-05, 2.5262999999997593e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.340299999999823e-05, 2.5304999999999772e-05, 1.9513999999998255e-05, 1.951299999999878e-05, 2.436100000000052e-05, 1.956900000000053e-05, 2.5250000000000966e-05, 2.334699999999995e-05, 2.338899999999866e-05, 2.1458000000001975e-05, 2.5291000000000202e-05, 1.9513999999998255e-05, 2.1415999999999796e-05, 2.0472000000000545e-05, 2.5278000000000106e-05, 2.145900000000145e-05, 2.4290999999999202e-05, 1.9542000000000864e-05, 2.338899999999866e-05, 2.4348000000000425e-05, 2.5249999999997497e-05, 2.336099999999952e-05, 1.956900000000053e-05, 2.0513999999999255e-05, 2.4306000000001715e-05, 2.5278000000000106e-05, 2.5319999999998816e-05, 2.5305999999999246e-05, 1.9527999999997825e-05, 2.5250000000000966e-05, 2.0486000000000115e-05, 2.5221999999998357e-05, 2.1457999999998506e-05, 2.1457999999998506e-05, 2.144500000000188e-05, 2.5250000000000966e-05, 2.0499999999999685e-05, 2.5291000000000202e-05, 2.1500000000000685e-05, 2.433300000000138e-05, 2.334699999999995e-05, 2.3347999999999425e-05, 1.9514000000001724e-05, 2.061100000000024e-05]</msg>
<status status="PASS" starttime="20201030 10:57:51.120" endtime="20201030 10:57:51.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.115" endtime="20201030 10:57:51.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.127" endtime="20201030 10:57:51.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.125" endtime="20201030 10:57:51.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.124" endtime="20201030 10:57:51.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.763" endtime="20201030 10:57:51.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:50.762" endtime="20201030 10:57:51.148"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.157" endtime="20201030 10:57:51.179"></status>
</kw>
<msg timestamp="20201030 10:57:51.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.155" endtime="20201030 10:57:51.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.181" endtime="20201030 10:57:51.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.183" endtime="20201030 10:57:51.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.153" endtime="20201030 10:57:51.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.150" endtime="20201030 10:57:51.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.193" endtime="20201030 10:57:51.481"></status>
</kw>
<msg timestamp="20201030 10:57:51.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023822125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023832083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.191" endtime="20201030 10:57:51.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023822125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023832083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.485" endtime="20201030 10:57:51.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.494" endtime="20201030 10:57:51.496"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.188" endtime="20201030 10:57:51.496"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.187" endtime="20201030 10:57:51.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.501" level="INFO">${RESULT} = [{'diff': 9.958000000000883e-06}, {'diff': 2.0527999999998825e-05}, {'diff': 2.4292000000002145e-05}, {'diff': 2.5236000000001396e-05}, {'diff': 2.238900000000113e-05}, {'diff': 2.0513999999999255e-05...</msg>
<status status="PASS" starttime="20201030 10:57:51.498" endtime="20201030 10:57:51.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.505" level="INFO">${ACCURACY} = {'diff': [9.958000000000883e-06, 2.0527999999998825e-05, 2.4292000000002145e-05, 2.5236000000001396e-05, 2.238900000000113e-05, 2.0513999999999255e-05, 2.5320000000002285e-05, 2.0486000000000115e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:51.502" endtime="20201030 10:57:51.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.510" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.509" endtime="20201030 10:57:51.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.513" level="INFO">VALUE: [9.958000000000883e-06, 2.0527999999998825e-05, 2.4292000000002145e-05, 2.5236000000001396e-05, 2.238900000000113e-05, 2.0513999999999255e-05, 2.5320000000002285e-05, 2.0486000000000115e-05, 1.9499999999998685e-05, 2.2457999999999506e-05, 2.145899999999798e-05, 2.336099999999952e-05, 2.143099999999884e-05, 2.145899999999798e-05, 2.336100000000299e-05, 1.9542000000000864e-05, 2.1429999999999366e-05, 2.1444000000002406e-05, 2.6208000000003256e-05, 2.0500000000003155e-05, 2.436100000000052e-05, 2.2457999999999506e-05, 1.9514000000001724e-05, 2.0486000000000115e-05, 2.0457999999997506e-05, 2.4290999999999202e-05, 1.9500000000002154e-05, 2.436100000000052e-05, 2.2457999999999506e-05, 2.6249999999998497e-05, 1.951300000000225e-05, 2.4291999999998676e-05, 2.1430000000002836e-05, 2.338900000000213e-05, 2.436100000000052e-05, 2.0513999999999255e-05, 2.0486000000000115e-05, 2.331900000000081e-05, 2.5236000000001396e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.34030000000017e-05, 2.1458000000001975e-05, 2.334699999999995e-05, 2.4346999999997482e-05, 2.144500000000188e-05, 2.4291999999998676e-05, 2.4292000000002145e-05, 2.048699999999959e-05, 2.5291999999999676e-05]</msg>
<status status="PASS" starttime="20201030 10:57:51.511" endtime="20201030 10:57:51.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.506" endtime="20201030 10:57:51.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.518" endtime="20201030 10:57:51.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.516" endtime="20201030 10:57:51.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.515" endtime="20201030 10:57:51.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.149" endtime="20201030 10:57:51.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.148" endtime="20201030 10:57:51.539"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.548" endtime="20201030 10:57:51.568"></status>
</kw>
<msg timestamp="20201030 10:57:51.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.547" endtime="20201030 10:57:51.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.569" endtime="20201030 10:57:51.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.572" endtime="20201030 10:57:51.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.544" endtime="20201030 10:57:51.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.542" endtime="20201030 10:57:51.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.582" endtime="20201030 10:57:51.868"></status>
</kw>
<msg timestamp="20201030 10:57:51.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024618806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.580" endtime="20201030 10:57:51.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024618806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.872" endtime="20201030 10:57:51.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.881" endtime="20201030 10:57:51.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.577" endtime="20201030 10:57:51.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.575" endtime="20201030 10:57:51.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:51.888" level="INFO">${RESULT} = [{'diff': 1.2846999999999859e-05}, {'diff': 2.5222000000001826e-05}, {'diff': 2.4333999999997385e-05}, {'diff': 2.4304999999998772e-05}, {'diff': 2.24030000000007e-05}, {'diff': 2.2415999999997327e-05...</msg>
<status status="PASS" starttime="20201030 10:57:51.884" endtime="20201030 10:57:51.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:51.892" level="INFO">${ACCURACY} = {'diff': [1.2846999999999859e-05, 2.5222000000001826e-05, 2.4333999999997385e-05, 2.4304999999998772e-05, 2.24030000000007e-05, 2.2415999999997327e-05, 2.2443999999999936e-05, 1.962500000000228e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:51.889" endtime="20201030 10:57:51.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.897" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 10:57:51.896" endtime="20201030 10:57:51.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.899" level="INFO">VALUE: [1.2846999999999859e-05, 2.5222000000001826e-05, 2.4333999999997385e-05, 2.4304999999998772e-05, 2.24030000000007e-05, 2.2415999999997327e-05, 2.2443999999999936e-05, 1.962500000000228e-05, 2.5334000000001855e-05, 1.9542000000000864e-05, 2.5264000000000536e-05, 2.337499999999909e-05, 2.3402000000002227e-05, 2.5277000000000632e-05, 2.518100000000259e-05, 2.5319999999998816e-05, 2.241700000000027e-05, 2.2402000000001226e-05, 2.237500000000156e-05, 2.336099999999952e-05, 2.334699999999995e-05, 2.5249999999997497e-05, 2.244500000000288e-05, 2.3347999999999425e-05, 1.9485999999999115e-05, 2.14029999999997e-05, 2.5235999999997927e-05, 1.962500000000228e-05, 2.436099999999705e-05, 1.9527999999997825e-05, 2.5236000000001396e-05, 2.2416000000000796e-05, 2.340299999999823e-05, 2.338899999999866e-05, 2.333300000000038e-05, 2.5291999999999676e-05, 2.1471999999998076e-05, 2.5264000000000536e-05, 2.047300000000002e-05, 2.0513999999999255e-05, 2.433300000000138e-05, 2.5291999999999676e-05, 2.5278000000000106e-05, 2.5250000000000966e-05, 2.238899999999766e-05, 2.0444000000001405e-05, 2.6236000000002396e-05, 2.5250000000000966e-05, 2.436100000000052e-05, 2.4318999999998342e-05]</msg>
<status status="PASS" starttime="20201030 10:57:51.898" endtime="20201030 10:57:51.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.893" endtime="20201030 10:57:51.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:51.905" endtime="20201030 10:57:51.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.904" endtime="20201030 10:57:51.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.903" endtime="20201030 10:57:51.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.540" endtime="20201030 10:57:51.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.539" endtime="20201030 10:57:51.926"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.935" endtime="20201030 10:57:51.954"></status>
</kw>
<msg timestamp="20201030 10:57:51.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.934" endtime="20201030 10:57:51.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.956" endtime="20201030 10:57:51.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.958" endtime="20201030 10:57:51.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.931" endtime="20201030 10:57:51.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.929" endtime="20201030 10:57:51.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.968" endtime="20201030 10:57:52.253"></status>
</kw>
<msg timestamp="20201030 10:57:52.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024266181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024273264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.966" endtime="20201030 10:57:52.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024266181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024273264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.258" endtime="20201030 10:57:52.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.266" endtime="20201030 10:57:52.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.964" endtime="20201030 10:57:52.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.962" endtime="20201030 10:57:52.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.273" level="INFO">${RESULT} = [{'diff': 7.0829999999980076e-06}, {'diff': 2.333300000000038e-05}, {'diff': 2.3429999999997897e-05}, {'diff': 2.4305999999998246e-05}, {'diff': 2.2416000000000796e-05}, {'diff': 2.2402000000001226e-0...</msg>
<status status="PASS" starttime="20201030 10:57:52.270" endtime="20201030 10:57:52.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:52.279" level="INFO">${ACCURACY} = {'diff': [7.0829999999980076e-06, 2.333300000000038e-05, 2.3429999999997897e-05, 2.4305999999998246e-05, 2.2416000000000796e-05, 2.2402000000001226e-05, 2.143100000000231e-05, 2.2402000000001226e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:52.274" endtime="20201030 10:57:52.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.283" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 10:57:52.282" endtime="20201030 10:57:52.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.286" level="INFO">VALUE: [7.0829999999980076e-06, 2.333300000000038e-05, 2.3429999999997897e-05, 2.4305999999998246e-05, 2.2416000000000796e-05, 2.2402000000001226e-05, 2.143100000000231e-05, 2.2402000000001226e-05, 2.3347999999999425e-05, 2.143099999999884e-05, 2.243099999999984e-05, 1.9556000000000434e-05, 2.5249999999997497e-05, 2.0499999999999685e-05, 2.436100000000052e-05, 2.0500000000003155e-05, 2.3277999999998106e-05, 1.9556000000000434e-05, 2.2512999999998312e-05, 2.336099999999952e-05, 1.9542000000000864e-05, 2.3320000000000285e-05, 1.9514000000001724e-05, 1.9570000000000004e-05, 1.9541999999997395e-05, 2.1458000000001975e-05, 2.24169999999968e-05, 2.4276999999999632e-05, 2.1486000000001115e-05, 2.145900000000145e-05, 2.4304999999998772e-05, 2.0486000000000115e-05, 2.336099999999952e-05, 2.2402000000001226e-05, 2.5291999999999676e-05, 2.337500000000256e-05, 1.9514000000001724e-05, 2.433300000000138e-05, 2.6250000000001966e-05, 2.0486000000000115e-05, 2.5264000000000536e-05, 2.336099999999952e-05, 2.433300000000138e-05, 2.433300000000138e-05, 2.1500000000000685e-05, 2.245900000000245e-05, 2.3318999999997342e-05, 2.145899999999798e-05, 2.537500000000109e-05, 1.9486000000002585e-05]</msg>
<status status="PASS" starttime="20201030 10:57:52.284" endtime="20201030 10:57:52.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.279" endtime="20201030 10:57:52.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.291" endtime="20201030 10:57:52.310"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.289" endtime="20201030 10:57:52.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.288" endtime="20201030 10:57:52.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.927" endtime="20201030 10:57:52.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.926" endtime="20201030 10:57:52.312"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.321" endtime="20201030 10:57:52.341"></status>
</kw>
<msg timestamp="20201030 10:57:52.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.319" endtime="20201030 10:57:52.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.342" endtime="20201030 10:57:52.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.345" endtime="20201030 10:57:52.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.317" endtime="20201030 10:57:52.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.314" endtime="20201030 10:57:52.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.354" endtime="20201030 10:57:52.643"></status>
</kw>
<msg timestamp="20201030 10:57:52.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025333819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025348542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.353" endtime="20201030 10:57:52.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025333819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025348542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.647" endtime="20201030 10:57:52.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.656" endtime="20201030 10:57:52.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.350" endtime="20201030 10:57:52.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.348" endtime="20201030 10:57:52.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.663" level="INFO">${RESULT} = [{'diff': 1.4723000000001207e-05}, {'diff': 2.434700000000095e-05}, {'diff': 1.9556000000000434e-05}, {'diff': 2.5264000000000536e-05}, {'diff': 2.2333999999998855e-05}, {'diff': 2.0556000000001434e-0...</msg>
<status status="PASS" starttime="20201030 10:57:52.660" endtime="20201030 10:57:52.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:52.667" level="INFO">${ACCURACY} = {'diff': [1.4723000000001207e-05, 2.434700000000095e-05, 1.9556000000000434e-05, 2.5264000000000536e-05, 2.2333999999998855e-05, 2.0556000000001434e-05, 2.5292000000003145e-05, 2.1457999999998506e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:52.664" endtime="20201030 10:57:52.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.672" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 10:57:52.671" endtime="20201030 10:57:52.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.675" level="INFO">VALUE: [1.4723000000001207e-05, 2.434700000000095e-05, 1.9556000000000434e-05, 2.5264000000000536e-05, 2.2333999999998855e-05, 2.0556000000001434e-05, 2.5292000000003145e-05, 2.1457999999998506e-05, 2.333300000000038e-05, 1.9541999999997395e-05, 2.4346999999997482e-05, 1.9486000000002585e-05, 2.143099999999884e-05, 2.0430000000001836e-05, 1.9542000000000864e-05, 1.956900000000053e-05, 2.0541999999998395e-05, 2.045900000000045e-05, 2.6180000000000647e-05, 1.9485999999999115e-05, 2.0486000000000115e-05, 2.5278000000000106e-05, 2.1526999999996882e-05, 2.337500000000256e-05, 1.9542000000000864e-05, 2.238899999999766e-05, 2.5278000000000106e-05, 2.0514000000002724e-05, 2.244499999999941e-05, 2.0486000000000115e-05, 2.4348000000000425e-05, 2.0486000000000115e-05, 2.143099999999884e-05, 2.5319999999998816e-05, 2.1485999999997646e-05, 2.336100000000299e-05, 2.334699999999995e-05, 2.4348000000000425e-05, 2.34030000000017e-05, 2.1471999999998076e-05, 2.6264000000001536e-05, 1.9542000000000864e-05, 2.5262999999997593e-05, 2.2416000000000796e-05, 2.0527999999998825e-05, 2.437500000000009e-05, 2.4334000000000855e-05, 1.9514000000001724e-05, 1.95830000000001e-05, 1.9570000000000004e-05]</msg>
<status status="PASS" starttime="20201030 10:57:52.673" endtime="20201030 10:57:52.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.668" endtime="20201030 10:57:52.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.685" endtime="20201030 10:57:52.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.683" endtime="20201030 10:57:52.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.682" endtime="20201030 10:57:52.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.313" endtime="20201030 10:57:52.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.312" endtime="20201030 10:57:52.706"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.715" endtime="20201030 10:57:52.732"></status>
</kw>
<msg timestamp="20201030 10:57:52.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.713" endtime="20201030 10:57:52.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.734" endtime="20201030 10:57:52.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.737" endtime="20201030 10:57:52.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.711" endtime="20201030 10:57:52.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.708" endtime="20201030 10:57:52.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.746" endtime="20201030 10:57:53.032"></status>
</kw>
<msg timestamp="20201030 10:57:53.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023169194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023187806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.744" endtime="20201030 10:57:53.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023169194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023187806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.037" endtime="20201030 10:57:53.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.046" endtime="20201030 10:57:53.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.742" endtime="20201030 10:57:53.049"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.740" endtime="20201030 10:57:53.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.055" level="INFO">${RESULT} = [{'diff': 1.8611999999997714e-05}, {'diff': 2.340299999999823e-05}, {'diff': 2.2401999999997757e-05}, {'diff': 2.334699999999995e-05}, {'diff': 2.234700000000242e-05}, {'diff': 2.5236000000001396e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:53.051" endtime="20201030 10:57:53.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.062" level="INFO">${ACCURACY} = {'diff': [1.8611999999997714e-05, 2.340299999999823e-05, 2.2401999999997757e-05, 2.334699999999995e-05, 2.234700000000242e-05, 2.5236000000001396e-05, 2.0513999999999255e-05, 2.3320000000000285e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:53.057" endtime="20201030 10:57:53.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.068" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.067" endtime="20201030 10:57:53.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.072" level="INFO">VALUE: [1.8611999999997714e-05, 2.340299999999823e-05, 2.2401999999997757e-05, 2.334699999999995e-05, 2.234700000000242e-05, 2.5236000000001396e-05, 2.0513999999999255e-05, 2.3320000000000285e-05, 2.4276999999999632e-05, 2.1443999999998936e-05, 2.238900000000113e-05, 2.4304999999998772e-05, 2.5291000000000202e-05, 1.95830000000001e-05, 1.9485999999999115e-05, 2.331900000000081e-05, 1.9528000000001294e-05, 2.0457999999997506e-05, 2.5236000000001396e-05, 2.237499999999809e-05, 2.1444000000002406e-05, 2.4306000000001715e-05, 2.0513999999999255e-05, 2.236100000000199e-05, 2.5291999999999676e-05, 2.145899999999798e-05, 2.229100000000067e-05, 1.9542000000000864e-05, 2.4319999999997816e-05, 2.619499999999969e-05, 2.4348000000000425e-05, 1.951299999999878e-05, 2.5236000000001396e-05, 1.9528000000001294e-05, 2.0472000000000545e-05, 2.3263999999998536e-05, 2.333300000000038e-05, 2.337500000000256e-05, 2.337500000000256e-05, 2.141699999999927e-05, 2.1443999999998936e-05, 1.9541999999997395e-05, 2.4290999999999202e-05, 2.333300000000038e-05, 2.3362000000002464e-05, 1.9527999999997825e-05, 2.244499999999941e-05, 2.1486000000001115e-05, 2.52369999999974e-05, 2.329100000000167e-05]</msg>
<status status="PASS" starttime="20201030 10:57:53.070" endtime="20201030 10:57:53.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.063" endtime="20201030 10:57:53.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.081" endtime="20201030 10:57:53.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.079" endtime="20201030 10:57:53.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.077" endtime="20201030 10:57:53.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.707" endtime="20201030 10:57:53.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.706" endtime="20201030 10:57:53.103"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.112" endtime="20201030 10:57:53.129"></status>
</kw>
<msg timestamp="20201030 10:57:53.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.110" endtime="20201030 10:57:53.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.131" endtime="20201030 10:57:53.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.133" endtime="20201030 10:57:53.135"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.107" endtime="20201030 10:57:53.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.105" endtime="20201030 10:57:53.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.143" endtime="20201030 10:57:53.429"></status>
</kw>
<msg timestamp="20201030 10:57:53.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023497764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.141" endtime="20201030 10:57:53.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023497764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.434" endtime="20201030 10:57:53.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.443" endtime="20201030 10:57:53.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.139" endtime="20201030 10:57:53.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.137" endtime="20201030 10:57:53.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.450" level="INFO">${RESULT} = [{'diff': 9.972000000000453e-06}, {'diff': 2.334699999999995e-05}, {'diff': 2.5278000000000106e-05}, {'diff': 2.434700000000095e-05}, {'diff': 2.4305999999998246e-05}, {'diff': 2.0499999999999685e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:53.446" endtime="20201030 10:57:53.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.455" level="INFO">${ACCURACY} = {'diff': [9.972000000000453e-06, 2.334699999999995e-05, 2.5278000000000106e-05, 2.434700000000095e-05, 2.4305999999998246e-05, 2.0499999999999685e-05, 2.530500000000324e-05, 1.955500000000096e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 10:57:53.451" endtime="20201030 10:57:53.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.460" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.459" endtime="20201030 10:57:53.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.463" level="INFO">VALUE: [9.972000000000453e-06, 2.334699999999995e-05, 2.5278000000000106e-05, 2.434700000000095e-05, 2.4305999999998246e-05, 2.0499999999999685e-05, 2.530500000000324e-05, 1.955500000000096e-05, 2.4304999999998772e-05, 2.1486000000001115e-05, 2.045900000000045e-05, 2.4319999999997816e-05, 2.6249999999998497e-05, 2.238900000000113e-05, 2.24030000000007e-05, 2.0499999999999685e-05, 2.1457999999998506e-05, 2.2430000000000366e-05, 2.336099999999952e-05, 2.2471999999999076e-05, 2.5304999999999772e-05, 2.5264000000000536e-05, 2.047300000000002e-05, 2.2416000000000796e-05, 2.0527999999998825e-05, 2.2457999999999506e-05, 2.4318999999998342e-05, 1.9556000000000434e-05, 2.0541999999998395e-05, 2.336099999999952e-05, 2.4278000000002575e-05, 2.0499999999999685e-05, 1.9499999999998685e-05, 2.433300000000138e-05, 1.9556000000000434e-05, 2.045900000000045e-05, 2.334699999999995e-05, 2.5304999999999772e-05, 2.5318999999999342e-05, 2.145900000000145e-05, 2.518100000000259e-05, 2.4304999999998772e-05, 2.243099999999984e-05, 2.048699999999959e-05, 2.4278000000002575e-05, 2.2430000000000366e-05, 2.4319999999997816e-05, 2.329100000000167e-05, 2.144500000000188e-05, 2.437500000000009e-05]</msg>
<status status="PASS" starttime="20201030 10:57:53.461" endtime="20201030 10:57:53.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.456" endtime="20201030 10:57:53.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.468" endtime="20201030 10:57:53.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.466" endtime="20201030 10:57:53.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.465" endtime="20201030 10:57:53.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.104" endtime="20201030 10:57:53.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.103" endtime="20201030 10:57:53.489"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.498" endtime="20201030 10:57:53.518"></status>
</kw>
<msg timestamp="20201030 10:57:53.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.496" endtime="20201030 10:57:53.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.520" endtime="20201030 10:57:53.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.522" endtime="20201030 10:57:53.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.494" endtime="20201030 10:57:53.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.491" endtime="20201030 10:57:53.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.532" endtime="20201030 10:57:53.820"></status>
</kw>
<msg timestamp="20201030 10:57:53.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024079583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024115347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.530" endtime="20201030 10:57:53.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024079583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024115347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.824" endtime="20201030 10:57:53.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.833" endtime="20201030 10:57:53.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.527" endtime="20201030 10:57:53.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.526" endtime="20201030 10:57:53.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:53.840" level="INFO">${RESULT} = [{'diff': 3.576399999999716e-05}, {'diff': 2.048699999999959e-05}, {'diff': 2.052700000000282e-05}, {'diff': 2.244499999999941e-05}, {'diff': 2.4319999999997816e-05}, {'diff': 2.0500000000003155e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:53.837" endtime="20201030 10:57:53.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:53.844" level="INFO">${ACCURACY} = {'diff': [3.576399999999716e-05, 2.048699999999959e-05, 2.052700000000282e-05, 2.244499999999941e-05, 2.4319999999997816e-05, 2.0500000000003155e-05, 2.143100000000231e-05, 2.4306000000001715e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 10:57:53.841" endtime="20201030 10:57:53.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.849" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 10:57:53.848" endtime="20201030 10:57:53.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.852" level="INFO">VALUE: [3.576399999999716e-05, 2.048699999999959e-05, 2.052700000000282e-05, 2.244499999999941e-05, 2.4319999999997816e-05, 2.0500000000003155e-05, 2.143100000000231e-05, 2.4306000000001715e-05, 2.333300000000038e-05, 2.431900000000181e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 2.5264000000000536e-05, 2.2402000000001226e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.236100000000199e-05, 2.14029999999997e-05, 2.334699999999995e-05, 2.4290999999999202e-05, 2.5290999999996733e-05, 2.145899999999798e-05, 2.243099999999984e-05, 2.5250000000000966e-05, 2.141699999999927e-05, 2.1485999999997646e-05, 2.1457999999998506e-05, 2.5278000000000106e-05, 2.5207999999998787e-05, 1.9556000000000434e-05, 2.047300000000002e-05, 2.0486000000000115e-05, 2.24030000000007e-05, 2.620899999999926e-05, 2.237499999999809e-05, 2.1415999999999796e-05, 1.9500000000002154e-05, 2.618100000000012e-05, 2.238899999999766e-05, 2.337499999999909e-05, 1.9542000000000864e-05, 2.144499999999841e-05, 2.3306000000000715e-05, 1.9527999999997825e-05, 2.333300000000038e-05, 2.5278000000000106e-05, 2.1541999999999395e-05, 2.144500000000188e-05, 2.337499999999909e-05]</msg>
<status status="PASS" starttime="20201030 10:57:53.850" endtime="20201030 10:57:53.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.845" endtime="20201030 10:57:53.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:53.857" endtime="20201030 10:57:53.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.855" endtime="20201030 10:57:53.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.854" endtime="20201030 10:57:53.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.490" endtime="20201030 10:57:53.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.489" endtime="20201030 10:57:53.878"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.887" endtime="20201030 10:57:53.904"></status>
</kw>
<msg timestamp="20201030 10:57:53.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.885" endtime="20201030 10:57:53.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:53.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:53.905" endtime="20201030 10:57:53.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.908" endtime="20201030 10:57:53.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.882" endtime="20201030 10:57:53.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.880" endtime="20201030 10:57:53.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:53.917" endtime="20201030 10:57:54.205"></status>
</kw>
<msg timestamp="20201030 10:57:54.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:53.916" endtime="20201030 10:57:54.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.209" endtime="20201030 10:57:54.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.218" endtime="20201030 10:57:54.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.913" endtime="20201030 10:57:54.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.911" endtime="20201030 10:57:54.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.225" level="INFO">${RESULT} = [{'diff': 1.0972000000001453e-05}, {'diff': 2.1471999999998076e-05}, {'diff': 2.5264000000000536e-05}, {'diff': 2.234700000000242e-05}, {'diff': 2.1401999999996757e-05}, {'diff': 2.3333999999999855e-0...</msg>
<status status="PASS" starttime="20201030 10:57:54.221" endtime="20201030 10:57:54.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:54.229" level="INFO">${ACCURACY} = {'diff': [1.0972000000001453e-05, 2.1471999999998076e-05, 2.5264000000000536e-05, 2.234700000000242e-05, 2.1401999999996757e-05, 2.3333999999999855e-05, 2.144500000000188e-05, 2.238899999999766e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:54.226" endtime="20201030 10:57:54.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.234" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 10:57:54.233" endtime="20201030 10:57:54.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.236" level="INFO">VALUE: [1.0972000000001453e-05, 2.1471999999998076e-05, 2.5264000000000536e-05, 2.234700000000242e-05, 2.1401999999996757e-05, 2.3333999999999855e-05, 2.144500000000188e-05, 2.238899999999766e-05, 2.5263000000001062e-05, 2.1472000000001545e-05, 2.5264000000000536e-05, 2.4292000000002145e-05, 1.9541999999997395e-05, 2.24030000000007e-05, 2.337499999999909e-05, 2.1457999999998506e-05, 2.1499999999997216e-05, 2.145900000000145e-05, 2.237499999999809e-05, 2.055499999999849e-05, 1.9556000000000434e-05, 2.0472000000000545e-05, 2.5306000000002715e-05, 2.5291000000000202e-05, 1.9528000000001294e-05, 1.9527999999997825e-05, 2.333300000000038e-05, 1.9556000000000434e-05, 2.0556000000001434e-05, 2.2415999999997327e-05, 2.2486000000002115e-05, 2.336099999999952e-05, 2.4292000000002145e-05, 2.0486000000000115e-05, 2.42770000000031e-05, 2.3320000000000285e-05, 1.8652000000000946e-05, 2.347299999999955e-05, 2.238900000000113e-05, 2.336099999999952e-05, 2.2430000000000366e-05, 2.143099999999884e-05, 2.5264000000000536e-05, 2.5250000000000966e-05, 2.331900000000081e-05, 1.9514000000001724e-05, 2.056900000000153e-05, 2.1500000000000685e-05, 2.436099999999705e-05, 2.5263999999997067e-05]</msg>
<status status="PASS" starttime="20201030 10:57:54.235" endtime="20201030 10:57:54.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.230" endtime="20201030 10:57:54.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.242" endtime="20201030 10:57:54.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.241" endtime="20201030 10:57:54.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.240" endtime="20201030 10:57:54.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.879" endtime="20201030 10:57:54.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:53.878" endtime="20201030 10:57:54.263"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.272" endtime="20201030 10:57:54.293"></status>
</kw>
<msg timestamp="20201030 10:57:54.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.271" endtime="20201030 10:57:54.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.295" endtime="20201030 10:57:54.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.297" endtime="20201030 10:57:54.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.268" endtime="20201030 10:57:54.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.266" endtime="20201030 10:57:54.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.307" endtime="20201030 10:57:54.593"></status>
</kw>
<msg timestamp="20201030 10:57:54.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023244056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.305" endtime="20201030 10:57:54.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023244056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.598" endtime="20201030 10:57:54.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.606" endtime="20201030 10:57:54.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.302" endtime="20201030 10:57:54.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.300" endtime="20201030 10:57:54.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.613" level="INFO">${RESULT} = [{'diff': 1.0930999999998747e-05}, {'diff': 2.0472000000000545e-05}, {'diff': 2.241700000000027e-05}, {'diff': 2.4320000000001285e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.236100000000199e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:54.610" endtime="20201030 10:57:54.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:54.618" level="INFO">${ACCURACY} = {'diff': [1.0930999999998747e-05, 2.0472000000000545e-05, 2.241700000000027e-05, 2.4320000000001285e-05, 2.344500000000041e-05, 2.236100000000199e-05, 2.336099999999952e-05, 2.5319999999998816e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:57:54.614" endtime="20201030 10:57:54.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.623" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 10:57:54.622" endtime="20201030 10:57:54.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.626" level="INFO">VALUE: [1.0930999999998747e-05, 2.0472000000000545e-05, 2.241700000000027e-05, 2.4320000000001285e-05, 2.344500000000041e-05, 2.236100000000199e-05, 2.336099999999952e-05, 2.5319999999998816e-05, 2.0472000000000545e-05, 2.5194000000002686e-05, 2.5277000000000632e-05, 1.9542000000000864e-05, 2.1485999999997646e-05, 1.9542000000000864e-05, 2.241700000000027e-05, 2.143099999999884e-05, 2.1458000000001975e-05, 2.152700000000035e-05, 2.0472000000000545e-05, 2.2387999999998187e-05, 2.238900000000113e-05, 2.4305999999998246e-05, 2.1486000000001115e-05, 2.2443999999999936e-05, 2.344500000000041e-05, 2.241700000000027e-05, 2.0430000000001836e-05, 2.338900000000213e-05, 2.1471999999998076e-05, 2.241700000000027e-05, 2.329100000000167e-05, 2.3333999999999855e-05, 1.956900000000053e-05, 2.334699999999995e-05, 2.237500000000156e-05, 2.52369999999974e-05, 2.0458000000000975e-05, 2.237500000000156e-05, 2.2362000000001464e-05, 2.238900000000113e-05, 2.0499999999999685e-05, 2.338899999999866e-05, 2.238900000000113e-05, 2.615299999999751e-05, 2.243099999999984e-05, 1.9514000000001724e-05, 1.962499999999881e-05, 2.1457999999998506e-05, 2.338899999999866e-05, 2.3290999999998202e-05]</msg>
<status status="PASS" starttime="20201030 10:57:54.624" endtime="20201030 10:57:54.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.619" endtime="20201030 10:57:54.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:54.631" endtime="20201030 10:57:54.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.629" endtime="20201030 10:57:54.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.628" endtime="20201030 10:57:54.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.264" endtime="20201030 10:57:54.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.264" endtime="20201030 10:57:54.652"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.661" endtime="20201030 10:57:54.677"></status>
</kw>
<msg timestamp="20201030 10:57:54.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.659" endtime="20201030 10:57:54.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:54.679" endtime="20201030 10:57:54.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.681" endtime="20201030 10:57:54.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.657" endtime="20201030 10:57:54.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.655" endtime="20201030 10:57:54.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.691" endtime="20201030 10:57:54.978"></status>
</kw>
<msg timestamp="20201030 10:57:54.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021480917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.689" endtime="20201030 10:57:54.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:54.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021480917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:54.983" endtime="20201030 10:57:54.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:54.991" endtime="20201030 10:57:54.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.687" endtime="20201030 10:57:54.994"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.685" endtime="20201030 10:57:54.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:54.998" level="INFO">${RESULT} = [{'diff': 3.104199999999849e-05}, {'diff': 1.9527999999997825e-05}, {'diff': 2.241700000000027e-05}, {'diff': 2.1486000000001115e-05}, {'diff': 2.0499999999999685e-05}, {'diff': 2.334699999999995e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:54.995" endtime="20201030 10:57:54.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.003" level="INFO">${ACCURACY} = {'diff': [3.104199999999849e-05, 1.9527999999997825e-05, 2.241700000000027e-05, 2.1486000000001115e-05, 2.0499999999999685e-05, 2.334699999999995e-05, 1.9513999999998255e-05, 2.436100000000052e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:57:54.999" endtime="20201030 10:57:55.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.007" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.006" endtime="20201030 10:57:55.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.010" level="INFO">VALUE: [3.104199999999849e-05, 1.9527999999997825e-05, 2.241700000000027e-05, 2.1486000000001115e-05, 2.0499999999999685e-05, 2.334699999999995e-05, 1.9513999999998255e-05, 2.436100000000052e-05, 2.0514000000002724e-05, 2.237500000000156e-05, 2.233300000000285e-05, 2.4306000000001715e-05, 2.336099999999952e-05, 2.5306000000002715e-05, 1.9514000000001724e-05, 2.5236000000001396e-05, 2.136100000000099e-05, 1.962499999999881e-05, 2.438899999999966e-05, 2.243099999999984e-05, 2.0513999999999255e-05, 2.3347999999999425e-05, 2.3306000000000715e-05, 2.337499999999909e-05, 2.4334000000000855e-05, 2.431900000000181e-05, 2.143099999999884e-05, 2.0527999999998825e-05, 2.337500000000256e-05, 2.0499999999999685e-05, 2.3362000000002464e-05, 2.1472000000001545e-05, 1.9570000000000004e-05, 1.862500000000128e-05, 2.433300000000138e-05, 2.6221999999999357e-05, 1.9471999999999545e-05, 2.2443999999999936e-05, 2.1457999999998506e-05, 2.4332999999997912e-05, 2.5250000000000966e-05, 2.430500000000224e-05, 2.1471999999998076e-05, 2.0514000000002724e-05, 1.8637999999997906e-05, 2.3320000000000285e-05, 2.2388000000001657e-05, 2.241700000000027e-05, 2.4334000000000855e-05, 2.24030000000007e-05]</msg>
<status status="PASS" starttime="20201030 10:57:55.008" endtime="20201030 10:57:55.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.004" endtime="20201030 10:57:55.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.015" endtime="20201030 10:57:55.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.013" endtime="20201030 10:57:55.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.012" endtime="20201030 10:57:55.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.653" endtime="20201030 10:57:55.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:54.652" endtime="20201030 10:57:55.036"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.045" endtime="20201030 10:57:55.064"></status>
</kw>
<msg timestamp="20201030 10:57:55.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.043" endtime="20201030 10:57:55.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.065" endtime="20201030 10:57:55.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.068" endtime="20201030 10:57:55.070"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.041" endtime="20201030 10:57:55.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.038" endtime="20201030 10:57:55.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.078" endtime="20201030 10:57:55.364"></status>
</kw>
<msg timestamp="20201030 10:57:55.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024291806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024326681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.077" endtime="20201030 10:57:55.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024291806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024326681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.368" endtime="20201030 10:57:55.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.377" endtime="20201030 10:57:55.379"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.074" endtime="20201030 10:57:55.379"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.072" endtime="20201030 10:57:55.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.384" level="INFO">${RESULT} = [{'diff': 3.4875000000000184e-05}, {'diff': 1.9542000000000864e-05}, {'diff': 2.2443999999999936e-05}, {'diff': 2.0472000000000545e-05}, {'diff': 2.5236000000001396e-05}, {'diff': 2.0457999999997506e-...</msg>
<status status="PASS" starttime="20201030 10:57:55.381" endtime="20201030 10:57:55.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.388" level="INFO">${ACCURACY} = {'diff': [3.4875000000000184e-05, 1.9542000000000864e-05, 2.2443999999999936e-05, 2.0472000000000545e-05, 2.5236000000001396e-05, 2.0457999999997506e-05, 2.336100000000299e-05, 2.3290999999998202e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:55.385" endtime="20201030 10:57:55.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.393" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.392" endtime="20201030 10:57:55.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.395" level="INFO">VALUE: [3.4875000000000184e-05, 1.9542000000000864e-05, 2.2443999999999936e-05, 2.0472000000000545e-05, 2.5236000000001396e-05, 2.0457999999997506e-05, 2.336100000000299e-05, 2.3290999999998202e-05, 2.0527999999998825e-05, 1.956900000000053e-05, 2.24030000000007e-05, 2.1415999999999796e-05, 2.430500000000224e-05, 1.959700000000314e-05, 2.337500000000256e-05, 2.334699999999995e-05, 2.236100000000199e-05, 2.431900000000181e-05, 2.5249999999997497e-05, 2.1443999999998936e-05, 1.9542000000000864e-05, 2.0499999999999685e-05, 2.238900000000113e-05, 2.143100000000231e-05, 2.2401999999997757e-05, 1.954100000000139e-05, 2.337499999999909e-05, 2.1472000000001545e-05, 2.0499999999999685e-05, 2.5291999999999676e-05, 2.333300000000038e-05, 1.9528000000001294e-05, 2.5264000000000536e-05, 2.0527999999998825e-05, 2.338900000000213e-05, 2.6278000000001106e-05, 2.4305999999998246e-05, 2.1429999999999366e-05, 2.4318999999998342e-05, 2.531900000000281e-05, 2.5291000000000202e-05, 2.240299999999723e-05, 2.333300000000038e-05, 2.0485999999996646e-05, 2.1471999999998076e-05, 1.9556000000000434e-05, 2.5264000000000536e-05, 2.431900000000181e-05, 2.24030000000007e-05, 2.5320000000002285e-05]</msg>
<status status="PASS" starttime="20201030 10:57:55.394" endtime="20201030 10:57:55.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.389" endtime="20201030 10:57:55.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.402" endtime="20201030 10:57:55.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.400" endtime="20201030 10:57:55.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.399" endtime="20201030 10:57:55.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.037" endtime="20201030 10:57:55.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.036" endtime="20201030 10:57:55.422"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.432" endtime="20201030 10:57:55.454"></status>
</kw>
<msg timestamp="20201030 10:57:55.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.430" endtime="20201030 10:57:55.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.455" endtime="20201030 10:57:55.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.458" endtime="20201030 10:57:55.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.427" endtime="20201030 10:57:55.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.425" endtime="20201030 10:57:55.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.467" endtime="20201030 10:57:55.753"></status>
</kw>
<msg timestamp="20201030 10:57:55.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024669069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.466" endtime="20201030 10:57:55.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024669069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.758" endtime="20201030 10:57:55.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.766" endtime="20201030 10:57:55.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.463" endtime="20201030 10:57:55.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.461" endtime="20201030 10:57:55.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.773" level="INFO">${RESULT} = [{'diff': 3.0040999999998014e-05}, {'diff': 2.5250000000000966e-05}, {'diff': 2.1514000000000255e-05}, {'diff': 2.1472000000001545e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.0486000000000115e-...</msg>
<status status="PASS" starttime="20201030 10:57:55.770" endtime="20201030 10:57:55.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:55.778" level="INFO">${ACCURACY} = {'diff': [3.0040999999998014e-05, 2.5250000000000966e-05, 2.1514000000000255e-05, 2.1472000000001545e-05, 2.0486000000000115e-05, 2.0486000000000115e-05, 2.434700000000095e-05, 2.154099999999992e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:55.774" endtime="20201030 10:57:55.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.783" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 10:57:55.782" endtime="20201030 10:57:55.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.786" level="INFO">VALUE: [3.0040999999998014e-05, 2.5250000000000966e-05, 2.1514000000000255e-05, 2.1472000000001545e-05, 2.0486000000000115e-05, 2.0486000000000115e-05, 2.434700000000095e-05, 2.154099999999992e-05, 2.5305999999999246e-05, 2.4348000000000425e-05, 2.1485999999997646e-05, 2.4305999999998246e-05, 2.1457999999998506e-05, 2.045900000000045e-05, 2.5235999999997927e-05, 2.5222000000001826e-05, 2.5318999999999342e-05, 2.5318999999999342e-05, 2.3458000000000506e-05, 2.24030000000007e-05, 2.436100000000052e-05, 2.338900000000213e-05, 2.143100000000231e-05, 2.3318999999997342e-05, 2.338900000000213e-05, 2.437500000000009e-05, 2.0472000000000545e-05, 2.14029999999997e-05, 2.337500000000256e-05, 2.5264000000000536e-05, 2.2430000000000366e-05, 2.1500000000000685e-05, 2.5221999999998357e-05, 2.5304999999999772e-05, 2.243099999999984e-05, 2.336099999999952e-05, 2.3306000000000715e-05, 2.4292000000002145e-05, 2.151300000000078e-05, 2.2443999999999936e-05, 2.5222000000001826e-05, 2.144500000000188e-05, 2.3401999999998757e-05, 2.5304999999999772e-05, 2.245899999999898e-05, 2.1486000000001115e-05, 2.5250000000000966e-05, 2.4304999999998772e-05, 2.336100000000299e-05, 2.1458000000001975e-05]</msg>
<status status="PASS" starttime="20201030 10:57:55.784" endtime="20201030 10:57:55.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.779" endtime="20201030 10:57:55.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.791" endtime="20201030 10:57:55.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.790" endtime="20201030 10:57:55.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.788" endtime="20201030 10:57:55.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.423" endtime="20201030 10:57:55.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.423" endtime="20201030 10:57:55.812"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.821" endtime="20201030 10:57:55.838"></status>
</kw>
<msg timestamp="20201030 10:57:55.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.819" endtime="20201030 10:57:55.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.840" endtime="20201030 10:57:55.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.842" endtime="20201030 10:57:55.844"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.817" endtime="20201030 10:57:55.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.815" endtime="20201030 10:57:55.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.852" endtime="20201030 10:57:56.140"></status>
</kw>
<msg timestamp="20201030 10:57:56.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.850" endtime="20201030 10:57:56.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.145" endtime="20201030 10:57:56.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.153" endtime="20201030 10:57:56.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.847" endtime="20201030 10:57:56.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.846" endtime="20201030 10:57:56.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.160" level="INFO">${RESULT} = [{'diff': 7.097000000001047e-06}, {'diff': 2.1457999999998506e-05}, {'diff': 1.956900000000053e-05}, {'diff': 1.9570000000000004e-05}, {'diff': 2.6264000000001536e-05}, {'diff': 2.231899999999981e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:56.157" endtime="20201030 10:57:56.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.165" level="INFO">${ACCURACY} = {'diff': [7.097000000001047e-06, 2.1457999999998506e-05, 1.956900000000053e-05, 1.9570000000000004e-05, 2.6264000000001536e-05, 2.231899999999981e-05, 1.9528000000001294e-05, 2.3347999999999425e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:56.161" endtime="20201030 10:57:56.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.169" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.168" endtime="20201030 10:57:56.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.172" level="INFO">VALUE: [7.097000000001047e-06, 2.1457999999998506e-05, 1.956900000000053e-05, 1.9570000000000004e-05, 2.6264000000001536e-05, 2.231899999999981e-05, 1.9528000000001294e-05, 2.3347999999999425e-05, 2.433300000000138e-05, 2.1485999999997646e-05, 2.0499999999999685e-05, 1.9527999999997825e-05, 2.5221999999998357e-05, 2.245900000000245e-05, 2.436100000000052e-05, 2.431900000000181e-05, 2.1429999999999366e-05, 2.238900000000113e-05, 2.4277999999999106e-05, 2.5347999999997956e-05, 2.5333999999998386e-05, 2.238900000000113e-05, 2.24030000000007e-05, 2.0499999999999685e-05, 2.436099999999705e-05, 2.143099999999884e-05, 2.0486000000000115e-05, 2.1443999999998936e-05, 2.4334000000000855e-05, 2.144499999999841e-05, 2.240299999999723e-05, 2.1443999999998936e-05, 2.145900000000145e-05, 2.1443999999998936e-05, 2.0499999999999685e-05, 2.4319999999997816e-05, 2.154099999999992e-05, 2.334699999999995e-05, 1.952699999999835e-05, 1.9528000000001294e-05, 2.522299999999783e-05, 2.143100000000231e-05, 2.138900000000013e-05, 2.340299999999823e-05, 2.0486000000000115e-05, 2.143099999999884e-05, 2.1457999999998506e-05, 2.516699999999955e-05, 2.237499999999809e-05, 2.0541999999998395e-05]</msg>
<status status="PASS" starttime="20201030 10:57:56.170" endtime="20201030 10:57:56.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.165" endtime="20201030 10:57:56.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.177" endtime="20201030 10:57:56.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.175" endtime="20201030 10:57:56.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.174" endtime="20201030 10:57:56.197"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.813" endtime="20201030 10:57:56.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.812" endtime="20201030 10:57:56.198"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.207" endtime="20201030 10:57:56.225"></status>
</kw>
<msg timestamp="20201030 10:57:56.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.205" endtime="20201030 10:57:56.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.226" endtime="20201030 10:57:56.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.229" endtime="20201030 10:57:56.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.203" endtime="20201030 10:57:56.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.200" endtime="20201030 10:57:56.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.238" endtime="20201030 10:57:56.524"></status>
</kw>
<msg timestamp="20201030 10:57:56.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022980597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023004861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.237" endtime="20201030 10:57:56.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022980597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023004861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.528" endtime="20201030 10:57:56.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.537" endtime="20201030 10:57:56.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.234" endtime="20201030 10:57:56.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.232" endtime="20201030 10:57:56.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.544" level="INFO">${RESULT} = [{'diff': 2.4264000000003005e-05}, {'diff': 2.0541999999998395e-05}, {'diff': 2.337499999999909e-05}, {'diff': 2.440299999999923e-05}, {'diff': 2.5320000000002285e-05}, {'diff': 1.9500000000002154e-05...</msg>
<status status="PASS" starttime="20201030 10:57:56.540" endtime="20201030 10:57:56.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.548" level="INFO">${ACCURACY} = {'diff': [2.4264000000003005e-05, 2.0541999999998395e-05, 2.337499999999909e-05, 2.440299999999923e-05, 2.5320000000002285e-05, 1.9500000000002154e-05, 2.3277999999998106e-05, 2.2430000000000366e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:56.545" endtime="20201030 10:57:56.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.553" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.552" endtime="20201030 10:57:56.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.555" level="INFO">VALUE: [2.4264000000003005e-05, 2.0541999999998395e-05, 2.337499999999909e-05, 2.440299999999923e-05, 2.5320000000002285e-05, 1.9500000000002154e-05, 2.3277999999998106e-05, 2.2430000000000366e-05, 2.0527999999998825e-05, 2.243099999999984e-05, 2.0486000000000115e-05, 2.5319999999998816e-05, 2.243099999999984e-05, 2.619499999999969e-05, 2.5264000000000536e-05, 2.1471999999998076e-05, 2.0513999999999255e-05, 2.237499999999809e-05, 2.238900000000113e-05, 2.3401999999998757e-05, 2.433300000000138e-05, 2.0513999999999255e-05, 2.433300000000138e-05, 2.4276999999999632e-05, 2.4305999999998246e-05, 2.338900000000213e-05, 1.9542000000000864e-05, 2.436100000000052e-05, 2.438899999999966e-05, 1.951299999999878e-05, 2.144499999999841e-05, 2.434700000000095e-05, 2.340299999999823e-05, 2.5318999999999342e-05, 2.5306000000002715e-05, 1.9500000000002154e-05, 2.047300000000002e-05, 1.95830000000001e-05, 2.144499999999841e-05, 1.9527999999997825e-05, 2.0486000000000115e-05, 2.236099999999852e-05, 2.6263999999998067e-05, 2.4263000000000062e-05, 2.0458000000000975e-05, 2.147300000000102e-05, 2.0541999999998395e-05, 2.044500000000088e-05, 2.0486000000000115e-05, 2.237500000000156e-05]</msg>
<status status="PASS" starttime="20201030 10:57:56.554" endtime="20201030 10:57:56.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.549" endtime="20201030 10:57:56.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.561" endtime="20201030 10:57:56.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.560" endtime="20201030 10:57:56.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.559" endtime="20201030 10:57:56.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.199" endtime="20201030 10:57:56.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.198" endtime="20201030 10:57:56.582"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.591" endtime="20201030 10:57:56.616"></status>
</kw>
<msg timestamp="20201030 10:57:56.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.590" endtime="20201030 10:57:56.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.617" endtime="20201030 10:57:56.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.620" endtime="20201030 10:57:56.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.587" endtime="20201030 10:57:56.622"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.585" endtime="20201030 10:57:56.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.629" endtime="20201030 10:57:56.914"></status>
</kw>
<msg timestamp="20201030 10:57:56.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025333833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025361944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.628" endtime="20201030 10:57:56.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025333833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025361944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:56.919" endtime="20201030 10:57:56.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.927" endtime="20201030 10:57:56.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.625" endtime="20201030 10:57:56.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.623" endtime="20201030 10:57:56.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:56.934" level="INFO">${RESULT} = [{'diff': 2.8111000000000802e-05}, {'diff': 2.141699999999927e-05}, {'diff': 2.1429999999999366e-05}, {'diff': 2.141699999999927e-05}, {'diff': 2.5264000000000536e-05}, {'diff': 2.3416000000001796e-05...</msg>
<status status="PASS" starttime="20201030 10:57:56.931" endtime="20201030 10:57:56.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:56.939" level="INFO">${ACCURACY} = {'diff': [2.8111000000000802e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.5264000000000536e-05, 2.3416000000001796e-05, 2.2457999999999506e-05, 2.4332999999997912e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:56.935" endtime="20201030 10:57:56.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.944" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 10:57:56.943" endtime="20201030 10:57:56.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:56.947" level="INFO">VALUE: [2.8111000000000802e-05, 2.141699999999927e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.5264000000000536e-05, 2.3416000000001796e-05, 2.2457999999999506e-05, 2.4332999999997912e-05, 2.238900000000113e-05, 2.237499999999809e-05, 2.0486000000000115e-05, 2.433300000000138e-05, 2.0513999999999255e-05, 1.9541999999997395e-05, 2.6277000000001632e-05, 2.0486000000000115e-05, 1.9542000000000864e-05, 2.24030000000007e-05, 2.0542000000001864e-05, 2.4305999999998246e-05, 2.5278000000000106e-05, 2.333300000000038e-05, 1.947299999999902e-05, 1.9527999999997825e-05, 2.5235999999997927e-05, 2.336099999999952e-05, 2.241700000000027e-05, 2.0472000000000545e-05, 2.5263000000001062e-05, 2.143099999999884e-05, 1.9542000000000864e-05, 2.4320000000001285e-05, 2.0472000000000545e-05, 2.4306000000001715e-05, 2.337499999999909e-05, 1.9556000000000434e-05, 2.4348000000000425e-05, 2.2347999999998425e-05, 2.234700000000242e-05, 2.0458000000000975e-05, 2.1429999999999366e-05, 1.954100000000139e-05, 2.6249999999998497e-05, 2.5264000000000536e-05, 2.437500000000009e-05, 2.5278000000000106e-05, 2.0486000000000115e-05, 2.344500000000041e-05, 2.243099999999984e-05, 2.1457999999998506e-05]</msg>
<status status="PASS" starttime="20201030 10:57:56.945" endtime="20201030 10:57:56.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.940" endtime="20201030 10:57:56.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:56.952" endtime="20201030 10:57:56.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.950" endtime="20201030 10:57:56.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.949" endtime="20201030 10:57:56.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.583" endtime="20201030 10:57:56.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.583" endtime="20201030 10:57:56.973"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.982" endtime="20201030 10:57:56.998"></status>
</kw>
<msg timestamp="20201030 10:57:56.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.980" endtime="20201030 10:57:56.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.999" endtime="20201030 10:57:57.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.002" endtime="20201030 10:57:57.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.978" endtime="20201030 10:57:57.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.975" endtime="20201030 10:57:57.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.012" endtime="20201030 10:57:57.298"></status>
</kw>
<msg timestamp="20201030 10:57:57.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.010" endtime="20201030 10:57:57.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.303" endtime="20201030 10:57:57.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.311" endtime="20201030 10:57:57.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.007" endtime="20201030 10:57:57.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.006" endtime="20201030 10:57:57.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.318" level="INFO">${RESULT} = [{'diff': 1.759699999999767e-05}, {'diff': 1.9542000000000864e-05}, {'diff': 2.337500000000256e-05}, {'diff': 2.440299999999923e-05}, {'diff': 2.0472000000000545e-05}, {'diff': 2.144499999999841e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:57.315" endtime="20201030 10:57:57.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:57.323" level="INFO">${ACCURACY} = {'diff': [1.759699999999767e-05, 1.9542000000000864e-05, 2.337500000000256e-05, 2.440299999999923e-05, 2.0472000000000545e-05, 2.144499999999841e-05, 2.434700000000095e-05, 1.952699999999835e-05, 1.95...</msg>
<status status="PASS" starttime="20201030 10:57:57.319" endtime="20201030 10:57:57.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.327" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 10:57:57.326" endtime="20201030 10:57:57.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.330" level="INFO">VALUE: [1.759699999999767e-05, 1.9542000000000864e-05, 2.337500000000256e-05, 2.440299999999923e-05, 2.0472000000000545e-05, 2.144499999999841e-05, 2.434700000000095e-05, 1.952699999999835e-05, 1.9513999999998255e-05, 2.5277000000000632e-05, 2.433300000000138e-05, 1.9542000000000864e-05, 2.238900000000113e-05, 2.4332999999997912e-05, 2.244499999999941e-05, 2.2402000000001226e-05, 2.24030000000007e-05, 2.1443999999998936e-05, 2.143099999999884e-05, 1.9570000000000004e-05, 1.9499999999998685e-05, 2.5264000000000536e-05, 1.956900000000053e-05, 2.047300000000002e-05, 2.0472000000000545e-05, 2.134700000000142e-05, 2.1443999999998936e-05, 2.338899999999866e-05, 2.434700000000095e-05, 2.0499999999999685e-05, 1.9500000000002154e-05, 2.5221999999998357e-05, 2.3306000000000715e-05, 2.244499999999941e-05, 2.2430000000000366e-05, 2.241700000000027e-05, 2.3333999999999855e-05, 2.5236000000001396e-05, 2.6221999999999357e-05, 2.145900000000145e-05, 1.962500000000228e-05, 2.0486000000000115e-05, 2.4291999999998676e-05, 2.047300000000002e-05, 2.0472000000000545e-05, 2.3292000000001145e-05, 2.520899999999826e-05, 2.4332999999997912e-05, 1.9528000000001294e-05, 2.4318999999998342e-05]</msg>
<status status="PASS" starttime="20201030 10:57:57.328" endtime="20201030 10:57:57.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.324" endtime="20201030 10:57:57.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.335" endtime="20201030 10:57:57.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.333" endtime="20201030 10:57:57.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.332" endtime="20201030 10:57:57.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.974" endtime="20201030 10:57:57.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.973" endtime="20201030 10:57:57.356"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.365" endtime="20201030 10:57:57.385"></status>
</kw>
<msg timestamp="20201030 10:57:57.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.363" endtime="20201030 10:57:57.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.386" endtime="20201030 10:57:57.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.389" endtime="20201030 10:57:57.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.361" endtime="20201030 10:57:57.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.358" endtime="20201030 10:57:57.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.398" endtime="20201030 10:57:57.684"></status>
</kw>
<msg timestamp="20201030 10:57:57.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025346861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025375944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.397" endtime="20201030 10:57:57.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025346861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025375944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.688" endtime="20201030 10:57:57.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.697" endtime="20201030 10:57:57.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.394" endtime="20201030 10:57:57.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.392" endtime="20201030 10:57:57.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:57.704" level="INFO">${RESULT} = [{'diff': 2.9083000000002662e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.5264000000000536e-05}, {'diff': 2.243099999999984e-05}, {'diff': 2.2457999999999506e-05}, {'diff': 2.143100000000231e-05...</msg>
<status status="PASS" starttime="20201030 10:57:57.700" endtime="20201030 10:57:57.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:57.708" level="INFO">${ACCURACY} = {'diff': [2.9083000000002662e-05, 2.0486000000000115e-05, 2.5264000000000536e-05, 2.243099999999984e-05, 2.2457999999999506e-05, 2.143100000000231e-05, 2.1458000000001975e-05, 2.6221999999999357e-05, ...</msg>
<status status="PASS" starttime="20201030 10:57:57.705" endtime="20201030 10:57:57.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.713" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 10:57:57.712" endtime="20201030 10:57:57.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.715" level="INFO">VALUE: [2.9083000000002662e-05, 2.0486000000000115e-05, 2.5264000000000536e-05, 2.243099999999984e-05, 2.2457999999999506e-05, 2.143100000000231e-05, 2.1458000000001975e-05, 2.6221999999999357e-05, 2.5264000000000536e-05, 1.9471999999999545e-05, 2.3318999999997342e-05, 2.5333999999998386e-05, 2.0472000000000545e-05, 1.9542000000000864e-05, 2.241700000000027e-05, 2.431900000000181e-05, 2.0541999999998395e-05, 2.336099999999952e-05, 2.4334000000000855e-05, 2.5236000000001396e-05, 2.1429999999999366e-05, 2.24030000000007e-05, 2.0471999999997076e-05, 2.240299999999723e-05, 2.0514000000002724e-05, 2.6235999999998927e-05, 2.1458000000001975e-05, 2.234699999999895e-05, 2.24030000000007e-05, 2.433300000000138e-05, 2.5319999999998816e-05, 2.436099999999705e-05, 2.1472000000001545e-05, 2.241700000000027e-05, 2.238900000000113e-05, 1.956900000000053e-05, 2.436100000000052e-05, 2.0499999999999685e-05, 2.237500000000156e-05, 2.2457999999999506e-05, 2.0513999999999255e-05, 2.237500000000156e-05, 2.5333999999998386e-05, 2.138900000000013e-05, 2.237500000000156e-05, 2.436100000000052e-05, 2.0513999999999255e-05, 2.5277000000000632e-05, 1.9514000000001724e-05, 2.24030000000007e-05]</msg>
<status status="PASS" starttime="20201030 10:57:57.714" endtime="20201030 10:57:57.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.709" endtime="20201030 10:57:57.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:57.727" endtime="20201030 10:57:57.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.725" endtime="20201030 10:57:57.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.724" endtime="20201030 10:57:57.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.357" endtime="20201030 10:57:57.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.356" endtime="20201030 10:57:57.747"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.756" endtime="20201030 10:57:57.773"></status>
</kw>
<msg timestamp="20201030 10:57:57.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.755" endtime="20201030 10:57:57.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:57.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:57.774" endtime="20201030 10:57:57.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.777" endtime="20201030 10:57:57.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.752" endtime="20201030 10:57:57.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.750" endtime="20201030 10:57:57.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:57.786" endtime="20201030 10:57:58.072"></status>
</kw>
<msg timestamp="20201030 10:57:58.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020758417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020774111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:57.785" endtime="20201030 10:57:58.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020758417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020774111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.076" endtime="20201030 10:57:58.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.085" endtime="20201030 10:57:58.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.782" endtime="20201030 10:57:58.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.780" endtime="20201030 10:57:58.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.092" level="INFO">${RESULT} = [{'diff': 1.5694000000000125e-05}, {'diff': 2.337499999999909e-05}, {'diff': 2.0528000000002294e-05}, {'diff': 2.1429999999999366e-05}, {'diff': 2.0499999999999685e-05}, {'diff': 2.2416000000000796e-0...</msg>
<status status="PASS" starttime="20201030 10:57:58.088" endtime="20201030 10:57:58.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:58.097" level="INFO">${ACCURACY} = {'diff': [1.5694000000000125e-05, 2.337499999999909e-05, 2.0528000000002294e-05, 2.1429999999999366e-05, 2.0499999999999685e-05, 2.2416000000000796e-05, 2.6263999999998067e-05, 2.5235999999997927e-05,...</msg>
<status status="PASS" starttime="20201030 10:57:58.093" endtime="20201030 10:57:58.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.102" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 10:57:58.101" endtime="20201030 10:57:58.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.104" level="INFO">VALUE: [1.5694000000000125e-05, 2.337499999999909e-05, 2.0528000000002294e-05, 2.1429999999999366e-05, 2.0499999999999685e-05, 2.2416000000000796e-05, 2.6263999999998067e-05, 2.5235999999997927e-05, 2.2416000000000796e-05, 2.5291999999999676e-05, 1.962499999999881e-05, 2.5236000000001396e-05, 2.334699999999995e-05, 1.955500000000096e-05, 2.2430000000000366e-05, 2.5346999999998482e-05, 2.240299999999723e-05, 2.5278000000000106e-05, 2.0500000000003155e-05, 2.0472000000000545e-05, 2.6194000000000217e-05, 2.052700000000282e-05, 2.244500000000288e-05, 2.0528000000002294e-05, 2.438899999999966e-05, 2.238900000000113e-05, 2.4304999999998772e-05, 2.4334000000000855e-05, 2.5291000000000202e-05, 2.0527999999998825e-05, 2.055500000000196e-05, 2.338900000000213e-05, 2.1457999999998506e-05, 2.051299999999978e-05, 2.244499999999941e-05, 2.047300000000002e-05, 2.0513999999999255e-05, 2.4249999999999966e-05, 2.336099999999952e-05, 2.5319999999998816e-05, 2.240299999999723e-05, 2.0486000000000115e-05, 2.141699999999927e-05, 2.051299999999978e-05, 2.334699999999995e-05, 2.4291999999998676e-05, 2.0486000000000115e-05, 2.238900000000113e-05, 2.3332999999996912e-05, 2.5319999999998816e-05]</msg>
<status status="PASS" starttime="20201030 10:57:58.103" endtime="20201030 10:57:58.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.098" endtime="20201030 10:57:58.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.109" endtime="20201030 10:57:58.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.108" endtime="20201030 10:57:58.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.107" endtime="20201030 10:57:58.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.748" endtime="20201030 10:57:58.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:57.748" endtime="20201030 10:57:58.130"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.139" endtime="20201030 10:57:58.159"></status>
</kw>
<msg timestamp="20201030 10:57:58.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.138" endtime="20201030 10:57:58.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.161" endtime="20201030 10:57:58.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.163" endtime="20201030 10:57:58.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.135" endtime="20201030 10:57:58.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.133" endtime="20201030 10:57:58.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.173" endtime="20201030 10:57:58.459"></status>
</kw>
<msg timestamp="20201030 10:57:58.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024666736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024687222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.171" endtime="20201030 10:57:58.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024666736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024687222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.464" endtime="20201030 10:57:58.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.473" endtime="20201030 10:57:58.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.168" endtime="20201030 10:57:58.475"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.167" endtime="20201030 10:57:58.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.479" level="INFO">${RESULT} = [{'diff': 2.0486000000000115e-05}, {'diff': 2.434700000000095e-05}, {'diff': 1.9570000000000004e-05}, {'diff': 2.433300000000138e-05}, {'diff': 2.047300000000002e-05}, {'diff': 2.5291999999999676e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:58.476" endtime="20201030 10:57:58.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:58.484" level="INFO">${ACCURACY} = {'diff': [2.0486000000000115e-05, 2.434700000000095e-05, 1.9570000000000004e-05, 2.433300000000138e-05, 2.047300000000002e-05, 2.5291999999999676e-05, 1.9556000000000434e-05, 2.0499999999999685e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:57:58.480" endtime="20201030 10:57:58.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.488" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 10:57:58.487" endtime="20201030 10:57:58.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.491" level="INFO">VALUE: [2.0486000000000115e-05, 2.434700000000095e-05, 1.9570000000000004e-05, 2.433300000000138e-05, 2.047300000000002e-05, 2.5291999999999676e-05, 1.9556000000000434e-05, 2.0499999999999685e-05, 2.6264000000001536e-05, 2.4320000000001285e-05, 2.1444000000002406e-05, 2.5236000000001396e-05, 2.436100000000052e-05, 2.337500000000256e-05, 2.238900000000113e-05, 2.437500000000009e-05, 2.0513999999999255e-05, 2.436100000000052e-05, 2.0528000000002294e-05, 2.4332999999997912e-05, 2.5278000000000106e-05, 2.148700000000059e-05, 2.340299999999823e-05, 2.337499999999909e-05, 2.620899999999926e-05, 2.3361999999998995e-05, 2.0499999999999685e-05, 2.4319999999997816e-05, 2.0486000000000115e-05, 2.0485999999996646e-05, 2.143099999999884e-05, 2.337500000000256e-05, 2.433300000000138e-05, 2.1514000000000255e-05, 2.5250000000000966e-05, 2.5278000000000106e-05, 2.0499999999999685e-05, 2.2443999999999936e-05, 2.0486000000000115e-05, 2.5250000000000966e-05, 2.241700000000027e-05, 2.334699999999995e-05, 1.944499999999988e-05, 1.95830000000001e-05, 2.241700000000027e-05, 2.4429999999998897e-05, 1.955500000000096e-05, 2.0500000000003155e-05, 2.1443999999998936e-05, 2.5277000000000632e-05]</msg>
<status status="PASS" starttime="20201030 10:57:58.489" endtime="20201030 10:57:58.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.485" endtime="20201030 10:57:58.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.496" endtime="20201030 10:57:58.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.495" endtime="20201030 10:57:58.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.493" endtime="20201030 10:57:58.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.131" endtime="20201030 10:57:58.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.131" endtime="20201030 10:57:58.517"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.526" endtime="20201030 10:57:58.546"></status>
</kw>
<msg timestamp="20201030 10:57:58.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.524" endtime="20201030 10:57:58.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.547" endtime="20201030 10:57:58.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.550" endtime="20201030 10:57:58.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.522" endtime="20201030 10:57:58.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.519" endtime="20201030 10:57:58.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.559" endtime="20201030 10:57:58.847"></status>
</kw>
<msg timestamp="20201030 10:57:58.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02486175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024877472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:58.558" endtime="20201030 10:57:58.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02486175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024877472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:57:58.851" endtime="20201030 10:57:58.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.860" endtime="20201030 10:57:58.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.555" endtime="20201030 10:57:58.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.553" endtime="20201030 10:57:58.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:58.867" level="INFO">${RESULT} = [{'diff': 1.5722000000002734e-05}, {'diff': 2.5250000000000966e-05}, {'diff': 2.337499999999909e-05}, {'diff': 2.237499999999809e-05}, {'diff': 1.9471999999999545e-05}, {'diff': 2.5278000000000106e-05...</msg>
<status status="PASS" starttime="20201030 10:57:58.863" endtime="20201030 10:57:58.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:58.871" level="INFO">${ACCURACY} = {'diff': [1.5722000000002734e-05, 2.5250000000000966e-05, 2.337499999999909e-05, 2.237499999999809e-05, 1.9471999999999545e-05, 2.5278000000000106e-05, 2.340299999999823e-05, 2.241700000000027e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:57:58.868" endtime="20201030 10:57:58.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.876" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 10:57:58.875" endtime="20201030 10:57:58.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.878" level="INFO">VALUE: [1.5722000000002734e-05, 2.5250000000000966e-05, 2.337499999999909e-05, 2.237499999999809e-05, 1.9471999999999545e-05, 2.5278000000000106e-05, 2.340299999999823e-05, 2.241700000000027e-05, 1.9500000000002154e-05, 2.4304999999998772e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.3362000000002464e-05, 1.9471999999999545e-05, 1.95830000000001e-05, 2.147299999999755e-05, 2.143100000000231e-05, 1.9514000000001724e-05, 2.4304999999998772e-05, 2.3347999999999425e-05, 2.34030000000017e-05, 2.337499999999909e-05, 1.85829999999991e-05, 2.4320000000001285e-05, 2.4290999999999202e-05, 2.0486000000000115e-05, 2.5319999999998816e-05, 2.337499999999909e-05, 2.144499999999841e-05, 2.145899999999798e-05, 2.24030000000007e-05, 2.3320000000000285e-05, 1.9528000000001294e-05, 2.238900000000113e-05, 2.24030000000007e-05, 2.5291999999999676e-05, 2.5333999999998386e-05, 1.959699999999967e-05, 2.0499999999999685e-05, 2.5236000000001396e-05, 1.9513999999998255e-05, 2.336100000000299e-05, 2.5249999999997497e-05, 2.24030000000007e-05, 2.5318999999999342e-05, 2.2430000000000366e-05, 2.5264000000000536e-05, 2.4304999999998772e-05, 2.436100000000052e-05, 2.4278000000002575e-05]</msg>
<status status="PASS" starttime="20201030 10:57:58.877" endtime="20201030 10:57:58.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.872" endtime="20201030 10:57:58.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:58.884" endtime="20201030 10:57:58.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.883" endtime="20201030 10:57:58.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.882" endtime="20201030 10:57:58.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.518" endtime="20201030 10:57:58.905"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.517" endtime="20201030 10:57:58.905"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.914" endtime="20201030 10:57:58.936"></status>
</kw>
<msg timestamp="20201030 10:57:58.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.913" endtime="20201030 10:57:58.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:58.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:58.937" endtime="20201030 10:57:58.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.940" endtime="20201030 10:57:58.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.910" endtime="20201030 10:57:58.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.908" endtime="20201030 10:57:58.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:58.949" endtime="20201030 10:57:59.236"></status>
</kw>
<msg timestamp="20201030 10:57:59.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023516764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023571694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:58.948" endtime="20201030 10:57:59.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023516764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023571694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.240" endtime="20201030 10:57:59.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.249" endtime="20201030 10:57:59.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.945" endtime="20201030 10:57:59.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.943" endtime="20201030 10:57:59.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.256" level="INFO">${RESULT} = [{'diff': 5.4930000000001644e-05}, {'diff': 5.583400000000113e-05}, {'diff': 5.111099999999952e-05}, {'diff': 5.106899999999734e-05}, {'diff': 5.211199999999999e-05}, {'diff': 5.198600000000039e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:59.252" endtime="20201030 10:57:59.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.261" level="INFO">${ACCURACY} = {'diff': [5.4930000000001644e-05, 5.583400000000113e-05, 5.111099999999952e-05, 5.106899999999734e-05, 5.211199999999999e-05, 5.198600000000039e-05, 4.91940000000024e-05, 5.3916000000001074e-05, 5.202...</msg>
<status status="PASS" starttime="20201030 10:57:59.257" endtime="20201030 10:57:59.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.266" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.265" endtime="20201030 10:57:59.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.268" level="INFO">VALUE: [5.4930000000001644e-05, 5.583400000000113e-05, 5.111099999999952e-05, 5.106899999999734e-05, 5.211199999999999e-05, 5.198600000000039e-05, 4.91940000000024e-05, 5.3916000000001074e-05, 5.20279999999991e-05, 5.48609999999998e-05, 5.3944000000000214e-05, 5.684700000000223e-05, 5.105600000000071e-05, 5.016600000000079e-05, 5.3999999999998494e-05, 5.297200000000182e-05, 5.3957999999999784e-05, 5.012500000000156e-05, 5.016700000000027e-05, 5.106900000000081e-05, 5.112500000000256e-05, 5.581999999999809e-05, 5.397200000000282e-05, 5.112499999999909e-05, 5.009700000000242e-05, 5.015200000000122e-05, 5.3944000000000214e-05, 5.40419999999972e-05, 5.108299999999691e-05, 5.590299999999951e-05, 5.01530000000007e-05, 5.3930000000000644e-05, 5.588899999999994e-05, 5.011099999999852e-05, 5.107000000000028e-05, 5.112500000000256e-05, 5.2929999999999644e-05, 5.58610000000008e-05, 5.391700000000055e-05, 5.295900000000173e-05, 5.483300000000066e-05, 5.012500000000156e-05, 5.205600000000171e-05, 5.488899999999894e-05, 5.106999999999681e-05, 5.588899999999994e-05, 5.308399999999838e-05, 5.29730000000013e-05, 5.580499999999905e-05, 5.400000000000196e-05]</msg>
<status status="PASS" starttime="20201030 10:57:59.267" endtime="20201030 10:57:59.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.262" endtime="20201030 10:57:59.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.273" endtime="20201030 10:57:59.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.272" endtime="20201030 10:57:59.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.271" endtime="20201030 10:57:59.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.906" endtime="20201030 10:57:59.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:58.906" endtime="20201030 10:57:59.294"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.303" endtime="20201030 10:57:59.322"></status>
</kw>
<msg timestamp="20201030 10:57:59.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.302" endtime="20201030 10:57:59.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.324" endtime="20201030 10:57:59.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.326" endtime="20201030 10:57:59.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.299" endtime="20201030 10:57:59.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.297" endtime="20201030 10:57:59.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.336" endtime="20201030 10:57:59.626"></status>
</kw>
<msg timestamp="20201030 10:57:59.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021219375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021258972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.334" endtime="20201030 10:57:59.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021219375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021258972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.630" endtime="20201030 10:57:59.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.639" endtime="20201030 10:57:59.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.332" endtime="20201030 10:57:59.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.330" endtime="20201030 10:57:59.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.646" level="INFO">${RESULT} = [{'diff': 3.9597000000002325e-05}, {'diff': 5.5915999999999605e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.0195000000002876e-05}, {'diff': 5.581999999999809e-05}, {'diff': 5.313900000000066e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:59.642" endtime="20201030 10:57:59.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:57:59.650" level="INFO">${ACCURACY} = {'diff': [3.9597000000002325e-05, 5.5915999999999605e-05, 5.48609999999998e-05, 5.0195000000002876e-05, 5.581999999999809e-05, 5.313900000000066e-05, 5.202800000000257e-05, 5.211100000000052e-05, 5.39...</msg>
<status status="PASS" starttime="20201030 10:57:59.647" endtime="20201030 10:57:59.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.656" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 10:57:59.654" endtime="20201030 10:57:59.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.659" level="INFO">VALUE: [3.9597000000002325e-05, 5.5915999999999605e-05, 5.48609999999998e-05, 5.0195000000002876e-05, 5.581999999999809e-05, 5.313900000000066e-05, 5.202800000000257e-05, 5.211100000000052e-05, 5.391700000000055e-05, 5.1151999999998754e-05, 5.199999999999996e-05, 5.019399999999993e-05, 5.483300000000066e-05, 5.591699999999908e-05, 5.106899999999734e-05, 5.306999999999881e-05, 5.2957999999998784e-05, 5.019399999999993e-05, 5.104200000000114e-05, 5.113899999999866e-05, 5.3944000000000214e-05, 5.4985999999999924e-05, 5.6791999999999954e-05, 5.02079999999995e-05, 5.583399999999766e-05, 5.206999999999781e-05, 5.008299999999938e-05, 5.019499999999941e-05, 5.199999999999996e-05, 5.400000000000196e-05, 5.016700000000027e-05, 5.1971999999997354e-05, 5.015299999999723e-05, 5.579200000000242e-05, 5.209699999999748e-05, 5.211100000000052e-05, 5.199999999999996e-05, 5.6764000000000814e-05, 5.205600000000171e-05, 5.579099999999948e-05, 5.5915999999999605e-05, 5.3916000000001074e-05, 5.105500000000124e-05, 5.48609999999998e-05, 5.591699999999908e-05, 5.201399999999953e-05, 5.5791999999998954e-05, 5.590299999999951e-05, 5.293099999999912e-05, 5.009699999999895e-05]</msg>
<status status="PASS" starttime="20201030 10:57:59.657" endtime="20201030 10:57:59.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.651" endtime="20201030 10:57:59.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.664" endtime="20201030 10:57:59.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.662" endtime="20201030 10:57:59.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.661" endtime="20201030 10:57:59.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.295" endtime="20201030 10:57:59.685"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.295" endtime="20201030 10:57:59.685"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.694" endtime="20201030 10:57:59.718"></status>
</kw>
<msg timestamp="20201030 10:57:59.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.692" endtime="20201030 10:57:59.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.720" endtime="20201030 10:57:59.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.723" endtime="20201030 10:57:59.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.689" endtime="20201030 10:57:59.725"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.687" endtime="20201030 10:57:59.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.732" endtime="20201030 10:58:00.018"></status>
</kw>
<msg timestamp="20201030 10:58:00.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.731" endtime="20201030 10:58:00.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.022" endtime="20201030 10:58:00.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.031" endtime="20201030 10:58:00.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.728" endtime="20201030 10:58:00.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.726" endtime="20201030 10:58:00.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.037" level="INFO">${RESULT} = [{'diff': 5.3915999999997605e-05}, {'diff': 5.581900000000209e-05}, {'diff': 5.205499999999877e-05}, {'diff': 5.013899999999766e-05}, {'diff': 5.388900000000141e-05}, {'diff': 5.479200000000142e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:00.034" endtime="20201030 10:58:00.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:00.042" level="INFO">${ACCURACY} = {'diff': [5.3915999999997605e-05, 5.581900000000209e-05, 5.205499999999877e-05, 5.013899999999766e-05, 5.388900000000141e-05, 5.479200000000142e-05, 5.586099999999733e-05, 5.4901999999999035e-05, 5.19...</msg>
<status status="PASS" starttime="20201030 10:58:00.038" endtime="20201030 10:58:00.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.046" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 10:58:00.045" endtime="20201030 10:58:00.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.049" level="INFO">VALUE: [5.3915999999997605e-05, 5.581900000000209e-05, 5.205499999999877e-05, 5.013899999999766e-05, 5.388900000000141e-05, 5.479200000000142e-05, 5.586099999999733e-05, 5.4901999999999035e-05, 5.198600000000039e-05, 5.2916000000000074e-05, 5.4916000000002074e-05, 5.009699999999895e-05, 5.395899999999926e-05, 5.10279999999981e-05, 5.381900000000009e-05, 5.206999999999781e-05, 5.108399999999985e-05, 5.30410000000002e-05, 5.3930000000000644e-05, 5.205499999999877e-05, 5.297200000000182e-05, 5.013900000000113e-05, 5.6764000000000814e-05, 5.583299999999819e-05, 5.1971999999997354e-05, 5.4915999999998605e-05, 5.008299999999938e-05, 5.016700000000027e-05, 5.2985999999997924e-05, 5.197200000000082e-05, 5.111099999999952e-05, 5.687500000000137e-05, 5.4915999999998605e-05, 5.106900000000081e-05, 5.194500000000116e-05, 5.400000000000196e-05, 5.300000000000096e-05, 5.008399999999885e-05, 5.388899999999794e-05, 5.205599999999824e-05, 5.107000000000028e-05, 5.111099999999952e-05, 5.584700000000123e-05, 5.295900000000173e-05, 5.105600000000071e-05, 5.3901999999998035e-05, 5.291699999999955e-05, 5.208300000000138e-05, 5.58480000000007e-05, 5.2943999999999214e-05]</msg>
<status status="PASS" starttime="20201030 10:58:00.048" endtime="20201030 10:58:00.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.043" endtime="20201030 10:58:00.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.055" endtime="20201030 10:58:00.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.053" endtime="20201030 10:58:00.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.052" endtime="20201030 10:58:00.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.686" endtime="20201030 10:58:00.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.685" endtime="20201030 10:58:00.076"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.085" endtime="20201030 10:58:00.106"></status>
</kw>
<msg timestamp="20201030 10:58:00.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.083" endtime="20201030 10:58:00.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.107" endtime="20201030 10:58:00.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.110" endtime="20201030 10:58:00.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.081" endtime="20201030 10:58:00.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.078" endtime="20201030 10:58:00.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.119" endtime="20201030 10:58:00.405"></status>
</kw>
<msg timestamp="20201030 10:58:00.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023438278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023499833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.118" endtime="20201030 10:58:00.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023438278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023499833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.409" endtime="20201030 10:58:00.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.418" endtime="20201030 10:58:00.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.115" endtime="20201030 10:58:00.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.113" endtime="20201030 10:58:00.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.425" level="INFO">${RESULT} = [{'diff': 6.155500000000133e-05}, {'diff': 5.302700000000063e-05}, {'diff': 5.583300000000166e-05}, {'diff': 5.298600000000139e-05}, {'diff': 5.207000000000128e-05}, {'diff': 5.388900000000141e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:00.421" endtime="20201030 10:58:00.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:00.430" level="INFO">${ACCURACY} = {'diff': [6.155500000000133e-05, 5.302700000000063e-05, 5.583300000000166e-05, 5.298600000000139e-05, 5.207000000000128e-05, 5.388900000000141e-05, 5.305499999999977e-05, 5.009699999999895e-05, 5.4027...</msg>
<status status="PASS" starttime="20201030 10:58:00.426" endtime="20201030 10:58:00.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.434" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 10:58:00.433" endtime="20201030 10:58:00.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.437" level="INFO">VALUE: [6.155500000000133e-05, 5.302700000000063e-05, 5.583300000000166e-05, 5.298600000000139e-05, 5.207000000000128e-05, 5.388900000000141e-05, 5.305499999999977e-05, 5.009699999999895e-05, 5.402700000000163e-05, 5.587500000000037e-05, 5.491699999999808e-05, 5.493100000000112e-05, 5.4944000000001214e-05, 5.30280000000001e-05, 5.388899999999794e-05, 5.008399999999885e-05, 5.209699999999748e-05, 5.201399999999953e-05, 5.008299999999938e-05, 5.105600000000071e-05, 5.112499999999909e-05, 5.487499999999937e-05, 5.588899999999994e-05, 5.58480000000007e-05, 5.688900000000094e-05, 5.209700000000095e-05, 5.391700000000055e-05, 5.686099999999833e-05, 5.211100000000052e-05, 5.297299999999783e-05, 5.30410000000002e-05, 5.205600000000171e-05, 5.4972000000000354e-05, 5.201399999999953e-05, 5.397200000000282e-05, 5.3971999999999354e-05, 5.008399999999885e-05, 5.3999999999998494e-05, 5.30280000000001e-05, 5.30280000000001e-05, 5.4027999999997633e-05, 5.487499999999937e-05, 5.111099999999952e-05, 5.583299999999819e-05, 5.5916000000003074e-05, 4.913900000000013e-05, 5.311100000000152e-05, 5.293099999999912e-05, 5.112499999999909e-05, 5.105500000000124e-05]</msg>
<status status="PASS" starttime="20201030 10:58:00.436" endtime="20201030 10:58:00.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.431" endtime="20201030 10:58:00.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.442" endtime="20201030 10:58:00.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.441" endtime="20201030 10:58:00.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.439" endtime="20201030 10:58:00.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.077" endtime="20201030 10:58:00.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.076" endtime="20201030 10:58:00.463"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.472" endtime="20201030 10:58:00.494"></status>
</kw>
<msg timestamp="20201030 10:58:00.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.471" endtime="20201030 10:58:00.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.495" endtime="20201030 10:58:00.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.498" endtime="20201030 10:58:00.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.468" endtime="20201030 10:58:00.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.466" endtime="20201030 10:58:00.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.507" endtime="20201030 10:58:00.794"></status>
</kw>
<msg timestamp="20201030 10:58:00.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.506" endtime="20201030 10:58:00.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023140861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.799" endtime="20201030 10:58:00.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.807" endtime="20201030 10:58:00.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.503" endtime="20201030 10:58:00.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.501" endtime="20201030 10:58:00.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:00.814" level="INFO">${RESULT} = [{'diff': 6.05689999999999e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.008400000000232e-05}, {'diff': 5.395899999999926e-05}, {'diff': 5.495900000000026e-05}, {'diff': 5.206899999999834e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:00.811" endtime="20201030 10:58:00.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:00.819" level="INFO">${ACCURACY} = {'diff': [6.05689999999999e-05, 5.48609999999998e-05, 5.008400000000232e-05, 5.395899999999926e-05, 5.495900000000026e-05, 5.206899999999834e-05, 5.006899999999981e-05, 5.38470000000027e-05, 5.2999999...</msg>
<status status="PASS" starttime="20201030 10:58:00.815" endtime="20201030 10:58:00.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.823" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 10:58:00.822" endtime="20201030 10:58:00.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.826" level="INFO">VALUE: [6.05689999999999e-05, 5.48609999999998e-05, 5.008400000000232e-05, 5.395899999999926e-05, 5.495900000000026e-05, 5.206899999999834e-05, 5.006899999999981e-05, 5.38470000000027e-05, 5.2999999999997494e-05, 5.395900000000273e-05, 5.3013999999997063e-05, 5.491700000000155e-05, 5.300000000000096e-05, 5.295899999999826e-05, 5.3985999999998924e-05, 5.4901999999999035e-05, 5.291700000000302e-05, 5.204200000000214e-05, 5.393100000000012e-05, 5.4915999999998605e-05, 5.4944000000001214e-05, 5.2014000000003e-05, 5.199999999999996e-05, 5.490299999999851e-05, 5.107000000000028e-05, 5.198600000000039e-05, 5.6764000000000814e-05, 5.300000000000096e-05, 5.011100000000199e-05, 5.198600000000039e-05, 5.018099999999984e-05, 5.108300000000038e-05, 5.384699999999923e-05, 5.297200000000182e-05, 5.008299999999938e-05, 5.207000000000128e-05, 5.490299999999851e-05, 5.204199999999867e-05, 5.304199999999967e-05, 5.301400000000053e-05, 5.390300000000098e-05, 5.19730000000003e-05, 5.484700000000023e-05, 5.201399999999953e-05, 5.404200000000067e-05, 5.393100000000012e-05, 5.579200000000242e-05, 5.201399999999953e-05, 5.009799999999842e-05, 5.105600000000071e-05]</msg>
<status status="PASS" starttime="20201030 10:58:00.824" endtime="20201030 10:58:00.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.819" endtime="20201030 10:58:00.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:00.831" endtime="20201030 10:58:00.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.829" endtime="20201030 10:58:00.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.828" endtime="20201030 10:58:00.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.464" endtime="20201030 10:58:00.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.463" endtime="20201030 10:58:00.852"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.861" endtime="20201030 10:58:00.885"></status>
</kw>
<msg timestamp="20201030 10:58:00.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.859" endtime="20201030 10:58:00.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:00.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:00.887" endtime="20201030 10:58:00.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.890" endtime="20201030 10:58:00.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.857" endtime="20201030 10:58:00.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.854" endtime="20201030 10:58:00.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:00.899" endtime="20201030 10:58:01.185"></status>
</kw>
<msg timestamp="20201030 10:58:01.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026160653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026199278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:00.898" endtime="20201030 10:58:01.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026160653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026199278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.189" endtime="20201030 10:58:01.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.197" endtime="20201030 10:58:01.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.895" endtime="20201030 10:58:01.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.893" endtime="20201030 10:58:01.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.204" level="INFO">${RESULT} = [{'diff': 3.8625000000000465e-05}, {'diff': 5.008299999999938e-05}, {'diff': 5.306900000000281e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.198600000000039e-05}, {'diff': 5.198600000000039e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:01.201" endtime="20201030 10:58:01.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.209" level="INFO">${ACCURACY} = {'diff': [3.8625000000000465e-05, 5.008299999999938e-05, 5.306900000000281e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.198600000000039e-05, 5.111099999999952e-05, 5.581899999999862e-05, 5.204...</msg>
<status status="PASS" starttime="20201030 10:58:01.205" endtime="20201030 10:58:01.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.213" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.212" endtime="20201030 10:58:01.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.216" level="INFO">VALUE: [3.8625000000000465e-05, 5.008299999999938e-05, 5.306900000000281e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.198600000000039e-05, 5.111099999999952e-05, 5.581899999999862e-05, 5.204199999999867e-05, 5.10279999999981e-05, 5.6764000000000814e-05, 5.400000000000196e-05, 5.487499999999937e-05, 5.2943999999999214e-05, 5.106899999999734e-05, 5.011099999999852e-05, 5.582000000000156e-05, 5.590299999999951e-05, 5.390300000000098e-05, 5.3901999999998035e-05, 5.105600000000071e-05, 5.008299999999938e-05, 5.113899999999866e-05, 5.387499999999837e-05, 5.583299999999819e-05, 5.212500000000009e-05, 5.48609999999998e-05, 5.294499999999869e-05, 5.6735999999998205e-05, 5.10279999999981e-05, 5.208299999999791e-05, 5.006899999999981e-05, 5.113900000000213e-05, 5.383299999999966e-05, 5.484700000000023e-05, 5.198600000000039e-05, 5.006999999999928e-05, 5.40280000000011e-05, 5.102800000000157e-05, 5.480600000000099e-05, 5.30410000000002e-05, 5.290299999999998e-05, 5.2943999999999214e-05, 5.286100000000127e-05, 5.297200000000182e-05, 5.3916000000001074e-05, 5.212500000000009e-05, 5.2957999999998784e-05, 5.006999999999928e-05, 5.208300000000138e-05]</msg>
<status status="PASS" starttime="20201030 10:58:01.214" endtime="20201030 10:58:01.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.209" endtime="20201030 10:58:01.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.222" endtime="20201030 10:58:01.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.220" endtime="20201030 10:58:01.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.219" endtime="20201030 10:58:01.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.853" endtime="20201030 10:58:01.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:00.852" endtime="20201030 10:58:01.243"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.252" endtime="20201030 10:58:01.272"></status>
</kw>
<msg timestamp="20201030 10:58:01.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.250" endtime="20201030 10:58:01.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.273" endtime="20201030 10:58:01.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.276" endtime="20201030 10:58:01.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.248" endtime="20201030 10:58:01.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.245" endtime="20201030 10:58:01.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.285" endtime="20201030 10:58:01.571"></status>
</kw>
<msg timestamp="20201030 10:58:01.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.284" endtime="20201030 10:58:01.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.576" endtime="20201030 10:58:01.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.584" endtime="20201030 10:58:01.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.281" endtime="20201030 10:58:01.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.279" endtime="20201030 10:58:01.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.591" level="INFO">${RESULT} = [{'diff': 3.7652999999998604e-05}, {'diff': 5.115299999999823e-05}, {'diff': 5.58610000000008e-05}, {'diff': 5.487499999999937e-05}, {'diff': 5.487499999999937e-05}, {'diff': 5.305599999999924e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:01.588" endtime="20201030 10:58:01.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.596" level="INFO">${ACCURACY} = {'diff': [3.7652999999998604e-05, 5.115299999999823e-05, 5.58610000000008e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.305599999999924e-05, 5.384699999999923e-05, 5.3985999999998924e-05, 5.586...</msg>
<status status="PASS" starttime="20201030 10:58:01.592" endtime="20201030 10:58:01.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.601" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.600" endtime="20201030 10:58:01.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.604" level="INFO">VALUE: [3.7652999999998604e-05, 5.115299999999823e-05, 5.58610000000008e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.305599999999924e-05, 5.384699999999923e-05, 5.3985999999998924e-05, 5.586200000000027e-05, 5.405500000000077e-05, 5.58610000000008e-05, 5.486100000000327e-05, 5.3999999999998494e-05, 5.106899999999734e-05, 5.112500000000256e-05, 5.018099999999984e-05, 5.118000000000136e-05, 5.201399999999953e-05, 5.206900000000181e-05, 5.394499999999969e-05, 5.488899999999894e-05, 5.019499999999941e-05, 5.4972000000000354e-05, 5.590299999999951e-05, 5.109699999999995e-05, 5.011100000000199e-05, 5.4944000000001214e-05, 5.2943999999999214e-05, 5.3901999999998035e-05, 5.019499999999941e-05, 5.388900000000141e-05, 5.4985999999999924e-05, 5.4013999999998064e-05, 5.104199999999767e-05, 5.311100000000152e-05, 5.4999999999999494e-05, 5.005599999999971e-05, 5.4013999999998064e-05, 5.199999999999996e-05, 5.206899999999834e-05, 5.019499999999941e-05, 5.583300000000166e-05, 5.113900000000213e-05, 5.194500000000116e-05, 5.208299999999791e-05, 5.387499999999837e-05, 5.113900000000213e-05, 5.583300000000166e-05, 5.212500000000009e-05, 5.008299999999938e-05]</msg>
<status status="PASS" starttime="20201030 10:58:01.602" endtime="20201030 10:58:01.604"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.597" endtime="20201030 10:58:01.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.609" endtime="20201030 10:58:01.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.607" endtime="20201030 10:58:01.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.606" endtime="20201030 10:58:01.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.244" endtime="20201030 10:58:01.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.243" endtime="20201030 10:58:01.630"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.639" endtime="20201030 10:58:01.658"></status>
</kw>
<msg timestamp="20201030 10:58:01.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.637" endtime="20201030 10:58:01.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:01.660" endtime="20201030 10:58:01.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.663" endtime="20201030 10:58:01.664"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.634" endtime="20201030 10:58:01.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.632" endtime="20201030 10:58:01.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.672" endtime="20201030 10:58:01.961"></status>
</kw>
<msg timestamp="20201030 10:58:01.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.670" endtime="20201030 10:58:01.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:01.966" endtime="20201030 10:58:01.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:01.976" endtime="20201030 10:58:01.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.668" endtime="20201030 10:58:01.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.666" endtime="20201030 10:58:01.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:01.982" level="INFO">${RESULT} = [{'diff': 3.8652999999999604e-05}, {'diff': 5.201300000000006e-05}, {'diff': 5.301400000000053e-05}, {'diff': 5.390300000000098e-05}, {'diff': 5.2985999999997924e-05}, {'diff': 5.016700000000027e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:01.979" endtime="20201030 10:58:01.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:01.987" level="INFO">${ACCURACY} = {'diff': [3.8652999999999604e-05, 5.201300000000006e-05, 5.301400000000053e-05, 5.390300000000098e-05, 5.2985999999997924e-05, 5.016700000000027e-05, 5.394500000000316e-05, 5.404200000000067e-05, 5.00...</msg>
<status status="PASS" starttime="20201030 10:58:01.983" endtime="20201030 10:58:01.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.991" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 10:58:01.990" endtime="20201030 10:58:01.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:01.994" level="INFO">VALUE: [3.8652999999999604e-05, 5.201300000000006e-05, 5.301400000000053e-05, 5.390300000000098e-05, 5.2985999999997924e-05, 5.016700000000027e-05, 5.394500000000316e-05, 5.404200000000067e-05, 5.009699999999895e-05, 5.487499999999937e-05, 5.404200000000067e-05, 5.111099999999952e-05, 5.011100000000199e-05, 5.312500000000109e-05, 5.581900000000209e-05, 5.588899999999994e-05, 5.3999999999998494e-05, 5.584799999999723e-05, 5.209700000000095e-05, 5.297200000000182e-05, 5.300000000000096e-05, 5.3999999999998494e-05, 5.105499999999777e-05, 5.591699999999908e-05, 5.20409999999992e-05, 5.400000000000196e-05, 5.487499999999937e-05, 5.204100000000267e-05, 5.208299999999791e-05, 5.48609999999998e-05, 5.102800000000157e-05, 5.011099999999852e-05, 5.019499999999941e-05, 5.205599999999824e-05, 5.107000000000028e-05, 4.918099999999884e-05, 5.300000000000096e-05, 5.211199999999999e-05, 5.105500000000124e-05, 5.58480000000007e-05, 5.118100000000084e-05, 5.005499999999677e-05, 5.011200000000146e-05, 5.112500000000256e-05, 5.297200000000182e-05, 5.4930000000001644e-05, 5.583300000000166e-05, 5.01530000000007e-05, 5.011099999999852e-05, 5.3971999999999354e-05]</msg>
<status status="PASS" starttime="20201030 10:58:01.992" endtime="20201030 10:58:01.994"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.987" endtime="20201030 10:58:01.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:01.999" endtime="20201030 10:58:02.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.997" endtime="20201030 10:58:02.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.996" endtime="20201030 10:58:02.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.631" endtime="20201030 10:58:02.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:01.630" endtime="20201030 10:58:02.019"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.028" endtime="20201030 10:58:02.051"></status>
</kw>
<msg timestamp="20201030 10:58:02.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.027" endtime="20201030 10:58:02.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.053" endtime="20201030 10:58:02.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.055" endtime="20201030 10:58:02.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.024" endtime="20201030 10:58:02.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.022" endtime="20201030 10:58:02.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.064" endtime="20201030 10:58:02.350"></status>
</kw>
<msg timestamp="20201030 10:58:02.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024158097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024204347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.063" endtime="20201030 10:58:02.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024158097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024204347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.354" endtime="20201030 10:58:02.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.362" endtime="20201030 10:58:02.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.060" endtime="20201030 10:58:02.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.058" endtime="20201030 10:58:02.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.369" level="INFO">${RESULT} = [{'diff': 4.625000000000115e-05}, {'diff': 5.3971999999999354e-05}, {'diff': 5.106900000000081e-05}, {'diff': 5.487499999999937e-05}, {'diff': 5.297200000000182e-05}, {'diff': 5.684700000000223e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:02.366" endtime="20201030 10:58:02.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:02.373" level="INFO">${ACCURACY} = {'diff': [4.625000000000115e-05, 5.3971999999999354e-05, 5.106900000000081e-05, 5.487499999999937e-05, 5.297200000000182e-05, 5.684700000000223e-05, 5.395900000000273e-05, 5.294499999999869e-05, 5.486...</msg>
<status status="PASS" starttime="20201030 10:58:02.370" endtime="20201030 10:58:02.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.377" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 10:58:02.376" endtime="20201030 10:58:02.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.380" level="INFO">VALUE: [4.625000000000115e-05, 5.3971999999999354e-05, 5.106900000000081e-05, 5.487499999999937e-05, 5.297200000000182e-05, 5.684700000000223e-05, 5.395900000000273e-05, 5.294499999999869e-05, 5.48609999999998e-05, 5.202800000000257e-05, 5.581999999999809e-05, 5.483300000000066e-05, 5.588899999999994e-05, 5.000000000000143e-05, 5.199999999999996e-05, 5.104200000000114e-05, 5.588899999999994e-05, 5.008399999999885e-05, 5.199999999999996e-05, 5.587500000000037e-05, 5.3930000000000644e-05, 5.48609999999998e-05, 5.383399999999913e-05, 5.112500000000256e-05, 5.201399999999953e-05, 5.486200000000274e-05, 5.406999999999981e-05, 5.583299999999819e-05, 5.391700000000055e-05, 5.106899999999734e-05, 5.484700000000023e-05, 5.2929999999999644e-05, 5.294499999999869e-05, 5.199999999999996e-05, 5.016700000000027e-05, 5.583300000000166e-05, 5.390300000000098e-05, 5.113899999999866e-05, 5.493099999999765e-05, 5.199999999999996e-05, 5.391700000000055e-05, 5.29730000000013e-05, 5.012500000000156e-05, 5.199999999999996e-05, 5.588899999999994e-05, 5.105500000000124e-05, 5.198600000000039e-05, 5.206899999999834e-05, 5.480600000000099e-05, 5.579200000000242e-05]</msg>
<status status="PASS" starttime="20201030 10:58:02.378" endtime="20201030 10:58:02.382"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.374" endtime="20201030 10:58:02.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:02.386" endtime="20201030 10:58:02.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.384" endtime="20201030 10:58:02.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.383" endtime="20201030 10:58:02.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.020" endtime="20201030 10:58:02.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.020" endtime="20201030 10:58:02.407"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.415" endtime="20201030 10:58:02.438"></status>
</kw>
<msg timestamp="20201030 10:58:02.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.414" endtime="20201030 10:58:02.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.439" endtime="20201030 10:58:02.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.442" endtime="20201030 10:58:02.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.411" endtime="20201030 10:58:02.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.409" endtime="20201030 10:58:02.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.451" endtime="20201030 10:58:02.736"></status>
</kw>
<msg timestamp="20201030 10:58:02.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023835486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023876028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.449" endtime="20201030 10:58:02.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023835486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023876028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.740" endtime="20201030 10:58:02.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.749" endtime="20201030 10:58:02.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.447" endtime="20201030 10:58:02.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.445" endtime="20201030 10:58:02.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:02.755" level="INFO">${RESULT} = [{'diff': 4.054200000000105e-05}, {'diff': 5.390299999999751e-05}, {'diff': 5.105600000000071e-05}, {'diff': 5.109799999999942e-05}, {'diff': 5.583300000000166e-05}, {'diff': 5.6819999999999093e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:02.752" endtime="20201030 10:58:02.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:02.760" level="INFO">${ACCURACY} = {'diff': [4.054200000000105e-05, 5.390299999999751e-05, 5.105600000000071e-05, 5.109799999999942e-05, 5.583300000000166e-05, 5.6819999999999093e-05, 5.484700000000023e-05, 5.104200000000114e-05, 5.486...</msg>
<status status="PASS" starttime="20201030 10:58:02.756" endtime="20201030 10:58:02.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.765" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 10:58:02.764" endtime="20201030 10:58:02.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.767" level="INFO">VALUE: [4.054200000000105e-05, 5.390299999999751e-05, 5.105600000000071e-05, 5.109799999999942e-05, 5.583300000000166e-05, 5.6819999999999093e-05, 5.484700000000023e-05, 5.104200000000114e-05, 5.486199999999927e-05, 5.201399999999953e-05, 5.580499999999905e-05, 5.109800000000289e-05, 5.206899999999834e-05, 5.105500000000124e-05, 5.107000000000028e-05, 5.4929999999998175e-05, 5.390299999999751e-05, 5.5721999999997635e-05, 5.012499999999809e-05, 5.4930000000001644e-05, 4.912500000000056e-05, 5.2929999999999644e-05, 5.206899999999834e-05, 5.104100000000167e-05, 5.584700000000123e-05, 5.493100000000112e-05, 5.581899999999862e-05, 5.295800000000225e-05, 5.490299999999851e-05, 5.305499999999977e-05, 5.391700000000055e-05, 5.3916000000001074e-05, 5.108300000000038e-05, 5.4944000000001214e-05, 5.004200000000014e-05, 5.484699999999676e-05, 5.009699999999895e-05, 5.484700000000023e-05, 5.199999999999996e-05, 5.105599999999724e-05, 5.3957999999999784e-05, 5.295900000000173e-05, 5.294499999999869e-05, 5.388899999999794e-05, 5.588899999999994e-05, 5.298600000000139e-05, 5.584700000000123e-05, 5.011099999999852e-05, 5.107000000000028e-05, 5.395899999999926e-05]</msg>
<status status="PASS" starttime="20201030 10:58:02.766" endtime="20201030 10:58:02.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.761" endtime="20201030 10:58:02.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:02.807" endtime="20201030 10:58:02.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.806" endtime="20201030 10:58:02.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.804" endtime="20201030 10:58:02.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.407" endtime="20201030 10:58:02.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.407" endtime="20201030 10:58:02.828"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.837" endtime="20201030 10:58:02.859"></status>
</kw>
<msg timestamp="20201030 10:58:02.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.835" endtime="20201030 10:58:02.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.861" endtime="20201030 10:58:02.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.864" endtime="20201030 10:58:02.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.832" endtime="20201030 10:58:02.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.830" endtime="20201030 10:58:02.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.873" endtime="20201030 10:58:03.162"></status>
</kw>
<msg timestamp="20201030 10:58:03.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024431528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024488333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.871" endtime="20201030 10:58:03.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024431528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024488333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.166" endtime="20201030 10:58:03.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.175" endtime="20201030 10:58:03.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.868" endtime="20201030 10:58:03.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.867" endtime="20201030 10:58:03.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.181" level="INFO">${RESULT} = [{'diff': 5.680500000000005e-05}, {'diff': 5.105599999999724e-05}, {'diff': 5.301299999999759e-05}, {'diff': 5.105500000000124e-05}, {'diff': 5.2957999999998784e-05}, {'diff': 5.199999999999996e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:03.178" endtime="20201030 10:58:03.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:03.185" level="INFO">${ACCURACY} = {'diff': [5.680500000000005e-05, 5.105599999999724e-05, 5.301299999999759e-05, 5.105500000000124e-05, 5.2957999999998784e-05, 5.199999999999996e-05, 5.205599999999824e-05, 5.1985999999996924e-05, 5.48...</msg>
<status status="PASS" starttime="20201030 10:58:03.182" endtime="20201030 10:58:03.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.190" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 10:58:03.189" endtime="20201030 10:58:03.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.192" level="INFO">VALUE: [5.680500000000005e-05, 5.105599999999724e-05, 5.301299999999759e-05, 5.105500000000124e-05, 5.2957999999998784e-05, 5.199999999999996e-05, 5.205599999999824e-05, 5.1985999999996924e-05, 5.486100000000327e-05, 5.582000000000156e-05, 5.3985999999998924e-05, 5.4901999999999035e-05, 5.2929999999999644e-05, 5.108399999999985e-05, 5.4915999999998605e-05, 5.4944000000001214e-05, 5.581899999999862e-05, 5.4902000000002504e-05, 5.201399999999953e-05, 5.395800000000325e-05, 5.107000000000028e-05, 5.295899999999826e-05, 5.009699999999895e-05, 5.207000000000128e-05, 5.384699999999923e-05, 5.591699999999908e-05, 5.3901999999998035e-05, 5.294400000000268e-05, 5.2943999999999214e-05, 5.488900000000241e-05, 5.2985999999997924e-05, 5.20279999999991e-05, 5.487500000000284e-05, 5.484700000000023e-05, 5.104199999999767e-05, 5.304199999999967e-05, 5.008299999999938e-05, 5.008399999999885e-05, 5.3930000000000644e-05, 5.01669999999968e-05, 5.3916000000001074e-05, 5.102800000000157e-05, 5.400000000000196e-05, 5.297200000000182e-05, 5.5777999999999384e-05, 5.30280000000001e-05, 5.488900000000241e-05, 5.2929999999999644e-05, 5.018000000000036e-05, 5.487499999999937e-05]</msg>
<status status="PASS" starttime="20201030 10:58:03.191" endtime="20201030 10:58:03.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.186" endtime="20201030 10:58:03.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.197" endtime="20201030 10:58:03.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.196" endtime="20201030 10:58:03.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.195" endtime="20201030 10:58:03.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.829" endtime="20201030 10:58:03.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.828" endtime="20201030 10:58:03.218"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.227" endtime="20201030 10:58:03.246"></status>
</kw>
<msg timestamp="20201030 10:58:03.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.225" endtime="20201030 10:58:03.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.248" endtime="20201030 10:58:03.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.250" endtime="20201030 10:58:03.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.223" endtime="20201030 10:58:03.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.220" endtime="20201030 10:58:03.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.259" endtime="20201030 10:58:03.544"></status>
</kw>
<msg timestamp="20201030 10:58:03.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021176139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021230056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.258" endtime="20201030 10:58:03.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021176139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021230056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.548" endtime="20201030 10:58:03.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.557" endtime="20201030 10:58:03.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.255" endtime="20201030 10:58:03.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.253" endtime="20201030 10:58:03.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.563" level="INFO">${RESULT} = [{'diff': 5.391700000000055e-05}, {'diff': 5.3985999999998924e-05}, {'diff': 5.391700000000055e-05}, {'diff': 5.584700000000123e-05}, {'diff': 5.209700000000095e-05}, {'diff': 5.008299999999938e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:03.560" endtime="20201030 10:58:03.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:03.567" level="INFO">${ACCURACY} = {'diff': [5.391700000000055e-05, 5.3985999999998924e-05, 5.391700000000055e-05, 5.584700000000123e-05, 5.209700000000095e-05, 5.008299999999938e-05, 5.3999999999998494e-05, 5.295800000000225e-05, 5.02...</msg>
<status status="PASS" starttime="20201030 10:58:03.564" endtime="20201030 10:58:03.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.572" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 10:58:03.570" endtime="20201030 10:58:03.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.574" level="INFO">VALUE: [5.391700000000055e-05, 5.3985999999998924e-05, 5.391700000000055e-05, 5.584700000000123e-05, 5.209700000000095e-05, 5.008299999999938e-05, 5.3999999999998494e-05, 5.295800000000225e-05, 5.023600000000211e-05, 5.293100000000259e-05, 5.4958000000000784e-05, 5.209699999999748e-05, 5.294500000000216e-05, 5.30280000000001e-05, 5.199999999999996e-05, 5.583299999999819e-05, 5.398600000000239e-05, 5.011100000000199e-05, 5.48609999999998e-05, 5.5902000000000035e-05, 5.102800000000157e-05, 5.295899999999826e-05, 5.487499999999937e-05, 5.5901999999996566e-05, 5.580600000000199e-05, 5.199999999999996e-05, 5.104100000000167e-05, 5.211100000000052e-05, 5.3971999999999354e-05, 5.111100000000299e-05, 5.298600000000139e-05, 5.297200000000182e-05, 5.591699999999908e-05, 5.2971999999998354e-05, 5.495900000000026e-05, 5.580499999999905e-05, 5.295900000000173e-05, 5.016600000000079e-05, 5.388900000000141e-05, 5.20279999999991e-05, 5.4915999999998605e-05, 4.912500000000056e-05, 5.111099999999952e-05, 5.6750000000001244e-05, 5.391700000000055e-05, 5.113899999999866e-05, 5.5763999999999814e-05, 5.487499999999937e-05, 5.684799999999823e-05, 5.2014000000003e-05]</msg>
<status status="PASS" starttime="20201030 10:58:03.573" endtime="20201030 10:58:03.576"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.568" endtime="20201030 10:58:03.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.580" endtime="20201030 10:58:03.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.578" endtime="20201030 10:58:03.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.577" endtime="20201030 10:58:03.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.219" endtime="20201030 10:58:03.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.218" endtime="20201030 10:58:03.600"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.609" endtime="20201030 10:58:03.628"></status>
</kw>
<msg timestamp="20201030 10:58:03.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.607" endtime="20201030 10:58:03.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.629" endtime="20201030 10:58:03.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.632" endtime="20201030 10:58:03.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.605" endtime="20201030 10:58:03.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.603" endtime="20201030 10:58:03.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.641" endtime="20201030 10:58:03.926"></status>
</kw>
<msg timestamp="20201030 10:58:03.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02061175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:03.639" endtime="20201030 10:58:03.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02061175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:03.930" endtime="20201030 10:58:03.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.938" endtime="20201030 10:58:03.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.637" endtime="20201030 10:58:03.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.635" endtime="20201030 10:58:03.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.945" level="INFO">${RESULT} = [{'diff': 4.5388999999999846e-05}, {'diff': 5.01530000000007e-05}, {'diff': 5.5888000000000465e-05}, {'diff': 5.102699999999863e-05}, {'diff': 5.494500000000069e-05}, {'diff': 5.579099999999948e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:03.942" endtime="20201030 10:58:03.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:03.950" level="INFO">${ACCURACY} = {'diff': [4.5388999999999846e-05, 5.01530000000007e-05, 5.5888000000000465e-05, 5.102699999999863e-05, 5.494500000000069e-05, 5.579099999999948e-05, 5.00270000000011e-05, 5.304199999999967e-05, 5.0055...</msg>
<status status="PASS" starttime="20201030 10:58:03.946" endtime="20201030 10:58:03.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.954" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 10:58:03.953" endtime="20201030 10:58:03.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.957" level="INFO">VALUE: [4.5388999999999846e-05, 5.01530000000007e-05, 5.5888000000000465e-05, 5.102699999999863e-05, 5.494500000000069e-05, 5.579099999999948e-05, 5.00270000000011e-05, 5.304199999999967e-05, 5.005500000000024e-05, 5.688899999999747e-05, 5.009699999999895e-05, 5.204199999999867e-05, 5.401400000000153e-05, 5.583400000000113e-05, 5.581900000000209e-05, 5.213900000000313e-05, 5.105600000000071e-05, 5.109699999999995e-05, 5.3916000000001074e-05, 5.591699999999908e-05, 5.487499999999937e-05, 5.111099999999952e-05, 5.483300000000066e-05, 5.205599999999824e-05, 5.2916000000000074e-05, 5.306899999999934e-05, 5.483300000000066e-05, 5.5888000000000465e-05, 5.104199999999767e-05, 5.30280000000001e-05, 5.5791999999998954e-05, 5.209700000000095e-05, 5.393100000000012e-05, 5.588899999999994e-05, 5.5972000000001354e-05, 5.390300000000098e-05, 5.4999999999999494e-05, 5.2943999999999214e-05, 5.4944000000001214e-05, 5.483400000000013e-05, 5.401400000000153e-05, 5.484700000000023e-05, 5.199999999999996e-05, 5.395899999999926e-05, 5.4777999999998384e-05, 5.3916000000001074e-05, 5.294499999999869e-05, 5.305499999999977e-05, 5.484700000000023e-05, 5.009699999999895e-05]</msg>
<status status="PASS" starttime="20201030 10:58:03.955" endtime="20201030 10:58:03.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.951" endtime="20201030 10:58:03.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.962" endtime="20201030 10:58:03.981"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.960" endtime="20201030 10:58:03.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.959" endtime="20201030 10:58:03.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.601" endtime="20201030 10:58:03.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.601" endtime="20201030 10:58:03.982"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.991" endtime="20201030 10:58:04.009"></status>
</kw>
<msg timestamp="20201030 10:58:04.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.990" endtime="20201030 10:58:04.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.011" endtime="20201030 10:58:04.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.014" endtime="20201030 10:58:04.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.987" endtime="20201030 10:58:04.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.985" endtime="20201030 10:58:04.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.023" endtime="20201030 10:58:04.309"></status>
</kw>
<msg timestamp="20201030 10:58:04.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020451194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.021" endtime="20201030 10:58:04.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020451194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.313" endtime="20201030 10:58:04.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.322" endtime="20201030 10:58:04.323"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.018" endtime="20201030 10:58:04.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.017" endtime="20201030 10:58:04.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.328" level="INFO">${RESULT} = [{'diff': 6.352699999999725e-05}, {'diff': 5.493100000000112e-05}, {'diff': 5.2971999999998354e-05}, {'diff': 5.490300000000198e-05}, {'diff': 5.2957999999998784e-05}, {'diff': 5.581900000000209e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:04.325" endtime="20201030 10:58:04.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:04.332" level="INFO">${ACCURACY} = {'diff': [6.352699999999725e-05, 5.493100000000112e-05, 5.2971999999998354e-05, 5.490300000000198e-05, 5.2957999999998784e-05, 5.581900000000209e-05, 5.109699999999995e-05, 5.58610000000008e-05, 5.102...</msg>
<status status="PASS" starttime="20201030 10:58:04.329" endtime="20201030 10:58:04.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.337" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 10:58:04.336" endtime="20201030 10:58:04.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.339" level="INFO">VALUE: [6.352699999999725e-05, 5.493100000000112e-05, 5.2971999999998354e-05, 5.490300000000198e-05, 5.2957999999998784e-05, 5.581900000000209e-05, 5.109699999999995e-05, 5.58610000000008e-05, 5.10279999999981e-05, 5.301400000000053e-05, 5.2985999999997924e-05, 5.204200000000214e-05, 5.58610000000008e-05, 5.388899999999794e-05, 5.205600000000171e-05, 5.401400000000153e-05, 5.016600000000079e-05, 5.3944000000000214e-05, 5.205499999999877e-05, 5.393100000000012e-05, 5.002800000000057e-05, 5.491699999999808e-05, 5.487499999999937e-05, 5.10279999999981e-05, 5.4943999999997745e-05, 5.488900000000241e-05, 5.491700000000155e-05, 5.2943999999999214e-05, 5.113899999999866e-05, 5.583300000000166e-05, 5.493100000000112e-05, 5.012500000000156e-05, 5.484700000000023e-05, 5.587500000000037e-05, 5.488900000000241e-05, 5.5915999999999605e-05, 5.3944000000000214e-05, 5.297200000000182e-05, 5.6763999999997344e-05, 5.484700000000023e-05, 5.211100000000052e-05, 5.106999999999681e-05, 5.113899999999866e-05, 5.00270000000011e-05, 5.201300000000006e-05, 5.6735999999998205e-05, 5.018000000000036e-05, 5.2971999999998354e-05, 5.198600000000039e-05, 5.018000000000036e-05]</msg>
<status status="PASS" starttime="20201030 10:58:04.338" endtime="20201030 10:58:04.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.333" endtime="20201030 10:58:04.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.344" endtime="20201030 10:58:04.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.342" endtime="20201030 10:58:04.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.341" endtime="20201030 10:58:04.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.983" endtime="20201030 10:58:04.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.983" endtime="20201030 10:58:04.365"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.373" endtime="20201030 10:58:04.396"></status>
</kw>
<msg timestamp="20201030 10:58:04.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.372" endtime="20201030 10:58:04.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.398" endtime="20201030 10:58:04.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.400" endtime="20201030 10:58:04.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.369" endtime="20201030 10:58:04.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.367" endtime="20201030 10:58:04.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.409" endtime="20201030 10:58:04.696"></status>
</kw>
<msg timestamp="20201030 10:58:04.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025050986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025097236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.408" endtime="20201030 10:58:04.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025050986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025097236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.700" endtime="20201030 10:58:04.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.708" endtime="20201030 10:58:04.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.405" endtime="20201030 10:58:04.711"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.403" endtime="20201030 10:58:04.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:04.715" level="INFO">${RESULT} = [{'diff': 4.624999999999768e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.301400000000053e-05}, {'diff': 5.008399999999885e-05}, {'diff': 5.109799999999942e-05}, {'diff': 5.3957999999999784e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:04.712" endtime="20201030 10:58:04.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:04.719" level="INFO">${ACCURACY} = {'diff': [4.624999999999768e-05, 5.48609999999998e-05, 5.301400000000053e-05, 5.008399999999885e-05, 5.109799999999942e-05, 5.3957999999999784e-05, 5.48609999999998e-05, 5.393099999999665e-05, 5.01389...</msg>
<status status="PASS" starttime="20201030 10:58:04.716" endtime="20201030 10:58:04.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.724" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 10:58:04.723" endtime="20201030 10:58:04.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.727" level="INFO">VALUE: [4.624999999999768e-05, 5.48609999999998e-05, 5.301400000000053e-05, 5.008399999999885e-05, 5.109799999999942e-05, 5.3957999999999784e-05, 5.48609999999998e-05, 5.393099999999665e-05, 5.013899999999766e-05, 5.008299999999938e-05, 5.490300000000198e-05, 5.491700000000155e-05, 5.2929999999999644e-05, 5.3944000000000214e-05, 5.105600000000071e-05, 5.397299999999883e-05, 5.107000000000028e-05, 5.58610000000008e-05, 5.20279999999991e-05, 5.3930000000000644e-05, 5.5763999999999814e-05, 5.488900000000241e-05, 5.109699999999995e-05, 5.012500000000156e-05, 5.198600000000039e-05, 5.101399999999853e-05, 5.011100000000199e-05, 5.011200000000146e-05, 5.097199999999982e-05, 5.012499999999809e-05, 5.009699999999895e-05, 5.202800000000257e-05, 5.584699999999776e-05, 5.4915999999998605e-05, 5.487499999999937e-05, 5.2971999999998354e-05, 5.011099999999852e-05, 5.591699999999908e-05, 5.202800000000257e-05, 5.291699999999955e-05, 5.300000000000096e-05, 5.490300000000198e-05, 5.297200000000182e-05, 5.013899999999766e-05, 5.295900000000173e-05, 5.4915999999998605e-05, 5.108300000000038e-05, 5.107000000000028e-05, 5.008299999999938e-05, 5.398700000000187e-05]</msg>
<status status="PASS" starttime="20201030 10:58:04.725" endtime="20201030 10:58:04.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.720" endtime="20201030 10:58:04.729"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:04.733" endtime="20201030 10:58:04.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.732" endtime="20201030 10:58:04.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.730" endtime="20201030 10:58:04.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.366" endtime="20201030 10:58:04.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.365" endtime="20201030 10:58:04.754"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.763" endtime="20201030 10:58:04.784"></status>
</kw>
<msg timestamp="20201030 10:58:04.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.761" endtime="20201030 10:58:04.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:04.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:04.786" endtime="20201030 10:58:04.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.788" endtime="20201030 10:58:04.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.759" endtime="20201030 10:58:04.790"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.757" endtime="20201030 10:58:04.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:04.797" endtime="20201030 10:58:05.083"></status>
</kw>
<msg timestamp="20201030 10:58:05.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:04.795" endtime="20201030 10:58:05.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.087" endtime="20201030 10:58:05.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.095" endtime="20201030 10:58:05.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.793" endtime="20201030 10:58:05.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.791" endtime="20201030 10:58:05.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.102" level="INFO">${RESULT} = [{'diff': 5.970899999999807e-05}, {'diff': 5.293099999999912e-05}, {'diff': 5.490299999999851e-05}, {'diff': 5.490299999999851e-05}, {'diff': 5.587500000000037e-05}, {'diff': 5.109699999999995e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:05.099" endtime="20201030 10:58:05.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.107" level="INFO">${ACCURACY} = {'diff': [5.970899999999807e-05, 5.293099999999912e-05, 5.490299999999851e-05, 5.490299999999851e-05, 5.587500000000037e-05, 5.109699999999995e-05, 5.112500000000256e-05, 5.297200000000182e-05, 5.0111...</msg>
<status status="PASS" starttime="20201030 10:58:05.103" endtime="20201030 10:58:05.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.111" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.110" endtime="20201030 10:58:05.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.114" level="INFO">VALUE: [5.970899999999807e-05, 5.293099999999912e-05, 5.490299999999851e-05, 5.490299999999851e-05, 5.587500000000037e-05, 5.109699999999995e-05, 5.112500000000256e-05, 5.297200000000182e-05, 5.011100000000199e-05, 5.018000000000036e-05, 5.108399999999985e-05, 5.2138000000000184e-05, 5.201300000000006e-05, 5.390299999999751e-05, 5.016700000000027e-05, 5.2957999999998784e-05, 5.5777999999999384e-05, 5.208300000000138e-05, 5.583300000000166e-05, 5.581899999999862e-05, 4.926400000000025e-05, 5.6778000000000384e-05, 5.201300000000006e-05, 5.493099999999765e-05, 5.104200000000114e-05, 5.677699999999744e-05, 5.111099999999952e-05, 5.105499999999777e-05, 5.594500000000169e-05, 5.583300000000166e-05, 5.102800000000157e-05, 5.206999999999781e-05, 5.1957999999997784e-05, 5.197200000000082e-05, 5.4972000000000354e-05, 5.3930000000000644e-05, 5.588899999999994e-05, 5.295899999999826e-05, 5.490299999999851e-05, 5.2985999999997924e-05, 5.112499999999909e-05, 5.4972000000000354e-05, 5.393100000000012e-05, 5.68610000000018e-05, 5.105600000000071e-05, 5.3985999999998924e-05, 5.195900000000073e-05, 5.111099999999952e-05, 5.484700000000023e-05, 5.4929999999998175e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.113" endtime="20201030 10:58:05.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.108" endtime="20201030 10:58:05.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.119" endtime="20201030 10:58:05.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.117" endtime="20201030 10:58:05.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.116" endtime="20201030 10:58:05.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.755" endtime="20201030 10:58:05.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:04.755" endtime="20201030 10:58:05.140"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.148" endtime="20201030 10:58:05.175"></status>
</kw>
<msg timestamp="20201030 10:58:05.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.147" endtime="20201030 10:58:05.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.177" endtime="20201030 10:58:05.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.179" endtime="20201030 10:58:05.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.144" endtime="20201030 10:58:05.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.142" endtime="20201030 10:58:05.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.188" endtime="20201030 10:58:05.475"></status>
</kw>
<msg timestamp="20201030 10:58:05.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023894361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023952111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.187" endtime="20201030 10:58:05.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023894361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023952111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.479" endtime="20201030 10:58:05.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.487" endtime="20201030 10:58:05.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.184" endtime="20201030 10:58:05.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.183" endtime="20201030 10:58:05.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.494" level="INFO">${RESULT} = [{'diff': 5.7750000000002244e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.493100000000112e-05}, {'diff': 5.008400000000232e-05}, {'diff': 5.304199999999967e-05}, {'diff': 5.01530000000007e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:05.490" endtime="20201030 10:58:05.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.498" level="INFO">${ACCURACY} = {'diff': [5.7750000000002244e-05, 5.199999999999996e-05, 5.493100000000112e-05, 5.008400000000232e-05, 5.304199999999967e-05, 5.01530000000007e-05, 5.198699999999987e-05, 4.924999999999721e-05, 5.1999...</msg>
<status status="PASS" starttime="20201030 10:58:05.495" endtime="20201030 10:58:05.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.502" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.501" endtime="20201030 10:58:05.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.505" level="INFO">VALUE: [5.7750000000002244e-05, 5.199999999999996e-05, 5.493100000000112e-05, 5.008400000000232e-05, 5.304199999999967e-05, 5.01530000000007e-05, 5.198699999999987e-05, 4.924999999999721e-05, 5.199999999999996e-05, 5.1014000000002e-05, 5.30410000000002e-05, 5.016700000000027e-05, 5.2957999999998784e-05, 5.301300000000106e-05, 5.305599999999924e-05, 5.581900000000209e-05, 5.019399999999993e-05, 5.48609999999998e-05, 5.304199999999967e-05, 5.020899999999898e-05, 5.5805999999998523e-05, 5.113899999999866e-05, 5.2957999999998784e-05, 5.5902000000000035e-05, 5.195900000000073e-05, 5.016700000000027e-05, 5.390300000000098e-05, 5.304199999999967e-05, 5.018099999999984e-05, 5.5805999999998523e-05, 5.016600000000079e-05, 5.113900000000213e-05, 5.1014000000002e-05, 5.199999999999996e-05, 5.111199999999899e-05, 5.390300000000098e-05, 5.305599999999924e-05, 5.305599999999924e-05, 5.108299999999691e-05, 5.016700000000027e-05, 5.594499999999822e-05, 5.198600000000039e-05, 5.113899999999866e-05, 5.195800000000125e-05, 5.211199999999999e-05, 5.581900000000209e-05, 5.115299999999823e-05, 5.309699999999848e-05, 4.912499999999709e-05, 5.590299999999951e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.503" endtime="20201030 10:58:05.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.499" endtime="20201030 10:58:05.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.510" endtime="20201030 10:58:05.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.508" endtime="20201030 10:58:05.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.507" endtime="20201030 10:58:05.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.140" endtime="20201030 10:58:05.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.140" endtime="20201030 10:58:05.530"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.539" endtime="20201030 10:58:05.562"></status>
</kw>
<msg timestamp="20201030 10:58:05.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.538" endtime="20201030 10:58:05.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.564" endtime="20201030 10:58:05.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.566" endtime="20201030 10:58:05.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.535" endtime="20201030 10:58:05.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.533" endtime="20201030 10:58:05.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.575" endtime="20201030 10:58:05.861"></status>
</kw>
<msg timestamp="20201030 10:58:05.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024908986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024964778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.574" endtime="20201030 10:58:05.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024908986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024964778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.865" endtime="20201030 10:58:05.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.873" endtime="20201030 10:58:05.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.571" endtime="20201030 10:58:05.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.569" endtime="20201030 10:58:05.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:05.880" level="INFO">${RESULT} = [{'diff': 5.5791999999998954e-05}, {'diff': 5.494500000000069e-05}, {'diff': 5.388900000000141e-05}, {'diff': 5.293099999999912e-05}, {'diff': 5.016700000000027e-05}, {'diff': 5.583400000000113e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:05.877" endtime="20201030 10:58:05.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:05.884" level="INFO">${ACCURACY} = {'diff': [5.5791999999998954e-05, 5.494500000000069e-05, 5.388900000000141e-05, 5.293099999999912e-05, 5.016700000000027e-05, 5.583400000000113e-05, 5.4972000000000354e-05, 5.391700000000055e-05, 5.19...</msg>
<status status="PASS" starttime="20201030 10:58:05.881" endtime="20201030 10:58:05.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.888" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 10:58:05.887" endtime="20201030 10:58:05.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.891" level="INFO">VALUE: [5.5791999999998954e-05, 5.494500000000069e-05, 5.388900000000141e-05, 5.293099999999912e-05, 5.016700000000027e-05, 5.583400000000113e-05, 5.4972000000000354e-05, 5.391700000000055e-05, 5.199999999999996e-05, 5.487500000000284e-05, 5.294400000000268e-05, 5.487500000000284e-05, 5.484700000000023e-05, 5.481900000000109e-05, 5.408399999999938e-05, 5.387499999999837e-05, 5.008299999999938e-05, 5.211099999999705e-05, 5.581999999999809e-05, 5.483400000000013e-05, 5.209800000000042e-05, 5.387499999999837e-05, 5.199999999999996e-05, 5.581999999999809e-05, 5.493100000000112e-05, 5.388899999999794e-05, 5.381999999999956e-05, 5.209700000000095e-05, 5.587500000000037e-05, 5.2943999999999214e-05, 5.293099999999912e-05, 5.4958000000000784e-05, 5.580499999999905e-05, 5.3916000000001074e-05, 5.579099999999948e-05, 5.291699999999955e-05, 5.5777999999999384e-05, 5.390300000000098e-05, 5.1971999999997354e-05, 5.018000000000036e-05, 5.5805999999998523e-05, 5.011099999999852e-05, 5.198600000000039e-05, 5.019399999999993e-05, 5.293099999999912e-05, 5.390300000000098e-05, 5.590299999999951e-05, 5.108300000000038e-05, 5.48609999999998e-05, 5.583400000000113e-05]</msg>
<status status="PASS" starttime="20201030 10:58:05.890" endtime="20201030 10:58:05.893"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.885" endtime="20201030 10:58:05.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:05.897" endtime="20201030 10:58:05.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.895" endtime="20201030 10:58:05.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.894" endtime="20201030 10:58:05.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.531" endtime="20201030 10:58:05.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.531" endtime="20201030 10:58:05.917"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.926" endtime="20201030 10:58:05.949"></status>
</kw>
<msg timestamp="20201030 10:58:05.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.924" endtime="20201030 10:58:05.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:05.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:05.951" endtime="20201030 10:58:05.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.953" endtime="20201030 10:58:05.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.922" endtime="20201030 10:58:05.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.920" endtime="20201030 10:58:05.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:05.962" endtime="20201030 10:58:06.247"></status>
</kw>
<msg timestamp="20201030 10:58:06.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024755583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024819097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:05.961" endtime="20201030 10:58:06.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024755583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024819097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:06.251" endtime="20201030 10:58:06.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.260" endtime="20201030 10:58:06.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.958" endtime="20201030 10:58:06.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.956" endtime="20201030 10:58:06.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.266" level="INFO">${RESULT} = [{'diff': 6.351399999999716e-05}, {'diff': 5.201399999999953e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.583299999999819e-05}, {'diff': 5.490299999999851e-05}, {'diff': 5.099999999999896e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:06.263" endtime="20201030 10:58:06.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:06.271" level="INFO">${ACCURACY} = {'diff': [6.351399999999716e-05, 5.201399999999953e-05, 5.48609999999998e-05, 5.583299999999819e-05, 5.490299999999851e-05, 5.099999999999896e-05, 5.484700000000023e-05, 5.199999999999996e-05, 5.68050...</msg>
<status status="PASS" starttime="20201030 10:58:06.267" endtime="20201030 10:58:06.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.276" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 10:58:06.275" endtime="20201030 10:58:06.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.278" level="INFO">VALUE: [6.351399999999716e-05, 5.201399999999953e-05, 5.48609999999998e-05, 5.583299999999819e-05, 5.490299999999851e-05, 5.099999999999896e-05, 5.484700000000023e-05, 5.199999999999996e-05, 5.680500000000005e-05, 5.494499999999722e-05, 5.300000000000096e-05, 5.491699999999808e-05, 5.197200000000082e-05, 5.108400000000332e-05, 5.198600000000039e-05, 5.490300000000198e-05, 5.104100000000167e-05, 5.5791999999998954e-05, 5.298600000000139e-05, 5.20279999999991e-05, 5.4944000000001214e-05, 5.394499999999969e-05, 5.102800000000157e-05, 5.204200000000214e-05, 5.29730000000013e-05, 5.1957999999997784e-05, 5.584700000000123e-05, 5.4958000000000784e-05, 5.487499999999937e-05, 5.30280000000001e-05, 5.488899999999894e-05, 5.5957999999998315e-05, 5.391700000000055e-05, 5.099999999999896e-05, 5.584700000000123e-05, 5.199999999999996e-05, 5.2971999999998354e-05, 5.104200000000114e-05, 5.0014000000001e-05, 5.3985999999998924e-05, 5.295899999999826e-05, 5.004100000000067e-05, 5.304199999999967e-05, 5.201300000000006e-05, 5.391700000000055e-05, 5.295899999999826e-05, 5.206899999999834e-05, 5.004200000000014e-05, 5.111100000000299e-05, 5.290299999999998e-05]</msg>
<status status="PASS" starttime="20201030 10:58:06.277" endtime="20201030 10:58:06.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.272" endtime="20201030 10:58:06.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.283" endtime="20201030 10:58:06.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.281" endtime="20201030 10:58:06.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.280" endtime="20201030 10:58:06.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.918" endtime="20201030 10:58:06.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:05.918" endtime="20201030 10:58:06.304"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.312" endtime="20201030 10:58:06.331"></status>
</kw>
<msg timestamp="20201030 10:58:06.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.311" endtime="20201030 10:58:06.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.333" endtime="20201030 10:58:06.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.335" endtime="20201030 10:58:06.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.308" endtime="20201030 10:58:06.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.306" endtime="20201030 10:58:06.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.344" endtime="20201030 10:58:06.634"></status>
</kw>
<msg timestamp="20201030 10:58:06.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02037125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:06.342" endtime="20201030 10:58:06.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02037125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:06.638" endtime="20201030 10:58:06.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.646" endtime="20201030 10:58:06.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.340" endtime="20201030 10:58:06.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.338" endtime="20201030 10:58:06.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.653" level="INFO">${RESULT} = [{'diff': 4.7181000000000306e-05}, {'diff': 5.301400000000053e-05}, {'diff': 5.48479999999997e-05}, {'diff': 5.193099999999812e-05}, {'diff': 5.581900000000209e-05}, {'diff': 5.587500000000037e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:06.649" endtime="20201030 10:58:06.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:06.657" level="INFO">${ACCURACY} = {'diff': [4.7181000000000306e-05, 5.301400000000053e-05, 5.48479999999997e-05, 5.193099999999812e-05, 5.581900000000209e-05, 5.587500000000037e-05, 5.3930000000000644e-05, 5.108399999999985e-05, 5.201...</msg>
<status status="PASS" starttime="20201030 10:58:06.654" endtime="20201030 10:58:06.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.661" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 10:58:06.660" endtime="20201030 10:58:06.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.664" level="INFO">VALUE: [4.7181000000000306e-05, 5.301400000000053e-05, 5.48479999999997e-05, 5.193099999999812e-05, 5.581900000000209e-05, 5.587500000000037e-05, 5.3930000000000644e-05, 5.108399999999985e-05, 5.201399999999953e-05, 5.391700000000055e-05, 5.111100000000299e-05, 5.388899999999794e-05, 5.391700000000055e-05, 5.013900000000113e-05, 5.101399999999853e-05, 5.488899999999894e-05, 5.012499999999809e-05, 5.006899999999981e-05, 5.197200000000082e-05, 5.297299999999783e-05, 5.109799999999942e-05, 5.201399999999953e-05, 5.300000000000096e-05, 5.201399999999953e-05, 5.588899999999994e-05, 5.2943999999999214e-05, 5.104200000000114e-05, 5.01530000000007e-05, 5.009800000000189e-05, 5.199999999999996e-05, 5.2999999999997494e-05, 5.588899999999994e-05, 5.294499999999869e-05, 5.390299999999751e-05, 5.398600000000239e-05, 5.108399999999985e-05, 5.580499999999905e-05, 5.48609999999998e-05, 5.201399999999953e-05, 5.301400000000053e-05, 5.008299999999938e-05, 5.105500000000124e-05, 5.490299999999851e-05, 5.5763999999999814e-05, 5.012500000000156e-05, 5.111200000000246e-05, 5.391700000000055e-05, 5.6805999999999524e-05, 5.388899999999794e-05, 5.094400000000068e-05]</msg>
<status status="PASS" starttime="20201030 10:58:06.662" endtime="20201030 10:58:06.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.658" endtime="20201030 10:58:06.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.669" endtime="20201030 10:58:06.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.667" endtime="20201030 10:58:06.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.666" endtime="20201030 10:58:06.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.305" endtime="20201030 10:58:06.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.304" endtime="20201030 10:58:06.689"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.698" endtime="20201030 10:58:06.717"></status>
</kw>
<msg timestamp="20201030 10:58:06.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.696" endtime="20201030 10:58:06.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.719" endtime="20201030 10:58:06.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.721" endtime="20201030 10:58:06.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.694" endtime="20201030 10:58:06.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.692" endtime="20201030 10:58:06.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.730" endtime="20201030 10:58:07.017"></status>
</kw>
<msg timestamp="20201030 10:58:07.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02140125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021446556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:06.729" endtime="20201030 10:58:07.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02140125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021446556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:07.021" endtime="20201030 10:58:07.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.029" endtime="20201030 10:58:07.030"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.726" endtime="20201030 10:58:07.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.724" endtime="20201030 10:58:07.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.035" level="INFO">${RESULT} = [{'diff': 4.530599999999843e-05}, {'diff': 5.111099999999952e-05}, {'diff': 5.2971999999998354e-05}, {'diff': 5.6764000000000814e-05}, {'diff': 5.3887999999998465e-05}, {'diff': 5.491699999999808e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:07.032" endtime="20201030 10:58:07.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.040" level="INFO">${ACCURACY} = {'diff': [4.530599999999843e-05, 5.111099999999952e-05, 5.2971999999998354e-05, 5.6764000000000814e-05, 5.3887999999998465e-05, 5.491699999999808e-05, 5.2014000000003e-05, 5.009699999999895e-05, 5.190...</msg>
<status status="PASS" starttime="20201030 10:58:07.036" endtime="20201030 10:58:07.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.044" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.043" endtime="20201030 10:58:07.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.046" level="INFO">VALUE: [4.530599999999843e-05, 5.111099999999952e-05, 5.2971999999998354e-05, 5.6764000000000814e-05, 5.3887999999998465e-05, 5.491699999999808e-05, 5.2014000000003e-05, 5.009699999999895e-05, 5.190299999999898e-05, 5.301400000000053e-05, 5.297200000000182e-05, 5.108399999999985e-05, 5.10279999999981e-05, 4.911100000000099e-05, 5.591699999999908e-05, 5.587500000000037e-05, 5.395899999999926e-05, 5.295899999999826e-05, 5.584700000000123e-05, 5.591699999999908e-05, 5.393100000000012e-05, 5.5929999999999175e-05, 5.2014000000003e-05, 5.2943999999999214e-05, 5.304199999999967e-05, 5.012499999999809e-05, 5.48609999999998e-05, 5.208400000000085e-05, 5.011099999999852e-05, 5.016700000000027e-05, 5.201399999999953e-05, 5.686099999999833e-05, 5.011099999999852e-05, 5.008299999999938e-05, 5.201300000000006e-05, 5.297200000000182e-05, 5.305499999999977e-05, 5.009700000000242e-05, 4.908299999999838e-05, 5.199999999999996e-05, 5.111100000000299e-05, 5.198600000000039e-05, 5.294400000000268e-05, 5.105500000000124e-05, 5.006899999999981e-05, 5.484700000000023e-05, 5.691700000000008e-05, 5.2971999999998354e-05, 5.108399999999985e-05, 5.2901999999997035e-05]</msg>
<status status="PASS" starttime="20201030 10:58:07.045" endtime="20201030 10:58:07.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.040" endtime="20201030 10:58:07.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.052" endtime="20201030 10:58:07.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.051" endtime="20201030 10:58:07.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.049" endtime="20201030 10:58:07.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.690" endtime="20201030 10:58:07.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.690" endtime="20201030 10:58:07.073"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.082" endtime="20201030 10:58:07.105"></status>
</kw>
<msg timestamp="20201030 10:58:07.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.080" endtime="20201030 10:58:07.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.107" endtime="20201030 10:58:07.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.109" endtime="20201030 10:58:07.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.077" endtime="20201030 10:58:07.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.075" endtime="20201030 10:58:07.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.118" endtime="20201030 10:58:07.403"></status>
</kw>
<msg timestamp="20201030 10:58:07.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024602667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024657528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.116" endtime="20201030 10:58:07.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024602667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024657528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.408" endtime="20201030 10:58:07.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.416" endtime="20201030 10:58:07.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.114" endtime="20201030 10:58:07.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.112" endtime="20201030 10:58:07.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.423" level="INFO">${RESULT} = [{'diff': 5.48609999999998e-05}, {'diff': 5.2957999999998784e-05}, {'diff': 5.394499999999969e-05}, {'diff': 5.308400000000185e-05}, {'diff': 5.009700000000242e-05}, {'diff': 5.016700000000027e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:07.419" endtime="20201030 10:58:07.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.428" level="INFO">${ACCURACY} = {'diff': [5.48609999999998e-05, 5.2957999999998784e-05, 5.394499999999969e-05, 5.308400000000185e-05, 5.009700000000242e-05, 5.016700000000027e-05, 5.00279999999971e-05, 5.3985999999998924e-05, 5.6889...</msg>
<status status="PASS" starttime="20201030 10:58:07.424" endtime="20201030 10:58:07.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.432" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.431" endtime="20201030 10:58:07.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.434" level="INFO">VALUE: [5.48609999999998e-05, 5.2957999999998784e-05, 5.394499999999969e-05, 5.308400000000185e-05, 5.009700000000242e-05, 5.016700000000027e-05, 5.00279999999971e-05, 5.3985999999998924e-05, 5.688900000000094e-05, 5.483299999999719e-05, 5.400000000000196e-05, 5.391700000000055e-05, 5.397299999999883e-05, 5.594500000000169e-05, 5.198600000000039e-05, 5.209700000000095e-05, 5.5791999999998954e-05, 5.5888000000000465e-05, 5.304199999999967e-05, 5.102800000000157e-05, 5.4958000000000784e-05, 5.305599999999924e-05, 5.48479999999997e-05, 4.912500000000056e-05, 5.394499999999969e-05, 5.208400000000085e-05, 5.583299999999819e-05, 5.304199999999967e-05, 5.488900000000241e-05, 5.30280000000001e-05, 5.12080000000005e-05, 5.397200000000282e-05, 5.2929999999999644e-05, 5.4957999999997315e-05, 5.098599999999939e-05, 5.01530000000007e-05, 5.112499999999909e-05, 5.487499999999937e-05, 5.590299999999951e-05, 5.3916000000001074e-05, 5.591700000000255e-05, 5.400000000000196e-05, 5.111099999999952e-05, 5.10279999999981e-05, 5.022200000000254e-05, 5.1165999999998324e-05, 5.48479999999997e-05, 5.205599999999824e-05, 5.008399999999885e-05, 5.400000000000196e-05]</msg>
<status status="PASS" starttime="20201030 10:58:07.433" endtime="20201030 10:58:07.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.428" endtime="20201030 10:58:07.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.439" endtime="20201030 10:58:07.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.438" endtime="20201030 10:58:07.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.437" endtime="20201030 10:58:07.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.074" endtime="20201030 10:58:07.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.073" endtime="20201030 10:58:07.460"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.469" endtime="20201030 10:58:07.493"></status>
</kw>
<msg timestamp="20201030 10:58:07.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.467" endtime="20201030 10:58:07.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.494" endtime="20201030 10:58:07.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.497" endtime="20201030 10:58:07.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.465" endtime="20201030 10:58:07.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.462" endtime="20201030 10:58:07.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.506" endtime="20201030 10:58:07.792"></status>
</kw>
<msg timestamp="20201030 10:58:07.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024505972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024542667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.505" endtime="20201030 10:58:07.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024505972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024542667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.797" endtime="20201030 10:58:07.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.805" endtime="20201030 10:58:07.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.502" endtime="20201030 10:58:07.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.500" endtime="20201030 10:58:07.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:07.812" level="INFO">${RESULT} = [{'diff': 3.669499999999978e-05}, {'diff': 5.006999999999928e-05}, {'diff': 5.019399999999993e-05}, {'diff': 5.297200000000182e-05}, {'diff': 5.297299999999783e-05}, {'diff': 5.119400000000093e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:07.808" endtime="20201030 10:58:07.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:07.816" level="INFO">${ACCURACY} = {'diff': [3.669499999999978e-05, 5.006999999999928e-05, 5.019399999999993e-05, 5.297200000000182e-05, 5.297299999999783e-05, 5.119400000000093e-05, 5.483299999999719e-05, 5.008299999999938e-05, 5.4902...</msg>
<status status="PASS" starttime="20201030 10:58:07.813" endtime="20201030 10:58:07.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.821" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 10:58:07.820" endtime="20201030 10:58:07.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.823" level="INFO">VALUE: [3.669499999999978e-05, 5.006999999999928e-05, 5.019399999999993e-05, 5.297200000000182e-05, 5.297299999999783e-05, 5.119400000000093e-05, 5.483299999999719e-05, 5.008299999999938e-05, 5.490299999999851e-05, 5.209700000000095e-05, 5.3916000000001074e-05, 5.105600000000071e-05, 5.3944000000000214e-05, 5.2957999999998784e-05, 5.201399999999953e-05, 5.487499999999937e-05, 5.3916000000001074e-05, 5.209699999999748e-05, 5.584700000000123e-05, 5.197200000000082e-05, 5.012500000000156e-05, 5.591699999999908e-05, 5.484700000000023e-05, 5.487499999999937e-05, 5.104200000000114e-05, 5.201399999999953e-05, 5.024999999999821e-05, 5.580499999999905e-05, 5.298600000000139e-05, 5.494500000000069e-05, 5.297200000000182e-05, 5.487499999999937e-05, 5.295900000000173e-05, 5.002699999999763e-05, 5.20279999999991e-05, 5.4944000000001214e-05, 5.581900000000209e-05, 5.3957999999999784e-05, 5.583399999999766e-05, 5.40419999999972e-05, 5.582000000000156e-05, 5.490299999999851e-05, 5.113899999999866e-05, 5.293099999999912e-05, 5.5805999999998523e-05, 5.009699999999895e-05, 5.4999999999999494e-05, 5.112499999999909e-05, 5.577700000000338e-05, 5.209700000000095e-05]</msg>
<status status="PASS" starttime="20201030 10:58:07.822" endtime="20201030 10:58:07.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.817" endtime="20201030 10:58:07.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:07.832" endtime="20201030 10:58:07.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.830" endtime="20201030 10:58:07.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.829" endtime="20201030 10:58:07.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.461" endtime="20201030 10:58:07.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.460" endtime="20201030 10:58:07.853"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.861" endtime="20201030 10:58:07.883"></status>
</kw>
<msg timestamp="20201030 10:58:07.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.860" endtime="20201030 10:58:07.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:07.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:07.885" endtime="20201030 10:58:07.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.887" endtime="20201030 10:58:07.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.857" endtime="20201030 10:58:07.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.855" endtime="20201030 10:58:07.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:07.896" endtime="20201030 10:58:08.181"></status>
</kw>
<msg timestamp="20201030 10:58:08.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023679222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023724569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:07.895" endtime="20201030 10:58:08.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023679222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023724569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:08.185" endtime="20201030 10:58:08.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.193" endtime="20201030 10:58:08.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.892" endtime="20201030 10:58:08.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.890" endtime="20201030 10:58:08.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.200" level="INFO">${RESULT} = [{'diff': 4.5347000000001136e-05}, {'diff': 5.106900000000081e-05}, {'diff': 5.206999999999781e-05}, {'diff': 5.493100000000112e-05}, {'diff': 5.397200000000282e-05}, {'diff': 5.20279999999991e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:08.197" endtime="20201030 10:58:08.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:08.204" level="INFO">${ACCURACY} = {'diff': [4.5347000000001136e-05, 5.106900000000081e-05, 5.206999999999781e-05, 5.493100000000112e-05, 5.397200000000282e-05, 5.20279999999991e-05, 5.305499999999977e-05, 5.201399999999953e-05, 5.0068...</msg>
<status status="PASS" starttime="20201030 10:58:08.201" endtime="20201030 10:58:08.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.208" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 10:58:08.207" endtime="20201030 10:58:08.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.211" level="INFO">VALUE: [4.5347000000001136e-05, 5.106900000000081e-05, 5.206999999999781e-05, 5.493100000000112e-05, 5.397200000000282e-05, 5.20279999999991e-05, 5.305499999999977e-05, 5.201399999999953e-05, 5.006899999999981e-05, 5.113900000000213e-05, 5.58480000000007e-05, 5.2999999999997494e-05, 5.3915999999997605e-05, 5.009700000000242e-05, 5.198600000000039e-05, 5.013900000000113e-05, 5.3971999999999354e-05, 5.3916000000001074e-05, 5.495900000000026e-05, 5.108300000000038e-05, 5.106900000000081e-05, 5.4944000000001214e-05, 5.583300000000166e-05, 5.211099999999705e-05, 5.199999999999996e-05, 5.10279999999981e-05, 5.1971999999997354e-05, 5.018099999999984e-05, 5.583400000000113e-05, 5.493099999999765e-05, 5.104200000000114e-05, 4.926399999999678e-05, 5.390300000000098e-05, 5.676300000000134e-05, 5.5915999999999605e-05, 5.008299999999938e-05, 5.494500000000069e-05, 5.58610000000008e-05, 5.197200000000082e-05, 5.206900000000181e-05, 5.581899999999862e-05, 5.583300000000166e-05, 5.11530000000017e-05, 5.488900000000241e-05, 5.497299999999983e-05, 5.008299999999938e-05, 5.295800000000225e-05, 5.495900000000026e-05, 5.294400000000268e-05, 5.590300000000298e-05]</msg>
<status status="PASS" starttime="20201030 10:58:08.209" endtime="20201030 10:58:08.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.205" endtime="20201030 10:58:08.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.217" endtime="20201030 10:58:08.236"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.215" endtime="20201030 10:58:08.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.214" endtime="20201030 10:58:08.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.854" endtime="20201030 10:58:08.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:07.853" endtime="20201030 10:58:08.237"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.246" endtime="20201030 10:58:08.265"></status>
</kw>
<msg timestamp="20201030 10:58:08.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.244" endtime="20201030 10:58:08.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.267" endtime="20201030 10:58:08.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.269" endtime="20201030 10:58:08.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.242" endtime="20201030 10:58:08.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.240" endtime="20201030 10:58:08.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.278" endtime="20201030 10:58:08.563"></status>
</kw>
<msg timestamp="20201030 10:58:08.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020912486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020955, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:08.276" endtime="20201030 10:58:08.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020912486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020955, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:08.567" endtime="20201030 10:58:08.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.575" endtime="20201030 10:58:08.576"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.274" endtime="20201030 10:58:08.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.272" endtime="20201030 10:58:08.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.581" level="INFO">${RESULT} = [{'diff': 4.251400000000044e-05}, {'diff': 5.298600000000139e-05}, {'diff': 5.3957999999999784e-05}, {'diff': 5.491699999999808e-05}, {'diff': 5.201399999999953e-05}, {'diff': 5.579099999999948e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:08.578" endtime="20201030 10:58:08.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:08.586" level="INFO">${ACCURACY} = {'diff': [4.251400000000044e-05, 5.298600000000139e-05, 5.3957999999999784e-05, 5.491699999999808e-05, 5.201399999999953e-05, 5.579099999999948e-05, 5.388900000000141e-05, 5.488899999999894e-05, 5.579...</msg>
<status status="PASS" starttime="20201030 10:58:08.582" endtime="20201030 10:58:08.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.591" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 10:58:08.590" endtime="20201030 10:58:08.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.593" level="INFO">VALUE: [4.251400000000044e-05, 5.298600000000139e-05, 5.3957999999999784e-05, 5.491699999999808e-05, 5.201399999999953e-05, 5.579099999999948e-05, 5.388900000000141e-05, 5.488899999999894e-05, 5.579100000000295e-05, 5.101399999999853e-05, 5.004100000000067e-05, 5.108300000000038e-05, 5.205499999999877e-05, 5.107000000000028e-05, 5.583299999999819e-05, 5.20409999999992e-05, 5.108399999999985e-05, 5.104100000000167e-05, 5.293099999999912e-05, 5.2957999999998784e-05, 5.580499999999905e-05, 5.201399999999953e-05, 5.58610000000008e-05, 5.099999999999896e-05, 5.587500000000037e-05, 5.487499999999937e-05, 5.48479999999997e-05, 5.3971999999999354e-05, 5.583399999999766e-05, 5.390299999999751e-05, 5.390300000000098e-05, 5.5805999999998523e-05, 5.305499999999977e-05, 5.490299999999851e-05, 5.58610000000008e-05, 5.198600000000039e-05, 5.198600000000039e-05, 5.018099999999984e-05, 5.199999999999996e-05, 5.1014000000002e-05, 5.205599999999824e-05, 5.391699999999708e-05, 5.1014000000002e-05, 5.391700000000055e-05, 5.004200000000014e-05, 5.6749999999997774e-05, 5.105500000000124e-05, 5.294499999999869e-05, 5.581999999999809e-05, 5.591699999999908e-05]</msg>
<status status="PASS" starttime="20201030 10:58:08.592" endtime="20201030 10:58:08.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.587" endtime="20201030 10:58:08.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.598" endtime="20201030 10:58:08.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.597" endtime="20201030 10:58:08.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.596" endtime="20201030 10:58:08.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.238" endtime="20201030 10:58:08.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.238" endtime="20201030 10:58:08.619"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.628" endtime="20201030 10:58:08.647"></status>
</kw>
<msg timestamp="20201030 10:58:08.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.626" endtime="20201030 10:58:08.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:08.648" endtime="20201030 10:58:08.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.651" endtime="20201030 10:58:08.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.623" endtime="20201030 10:58:08.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.621" endtime="20201030 10:58:08.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.659" endtime="20201030 10:58:08.946"></status>
</kw>
<msg timestamp="20201030 10:58:08.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021150222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021207, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:08.658" endtime="20201030 10:58:08.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021150222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021207, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:08.950" endtime="20201030 10:58:08.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:08.958" endtime="20201030 10:58:08.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.655" endtime="20201030 10:58:08.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.654" endtime="20201030 10:58:08.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:08.965" level="INFO">${RESULT} = [{'diff': 5.6778000000000384e-05}, {'diff': 5.4958000000000784e-05}, {'diff': 5.388900000000141e-05}, {'diff': 5.205599999999824e-05}, {'diff': 5.018000000000036e-05}, {'diff': 5.009700000000242e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:08.962" endtime="20201030 10:58:08.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:08.969" level="INFO">${ACCURACY} = {'diff': [5.6778000000000384e-05, 5.4958000000000784e-05, 5.388900000000141e-05, 5.205599999999824e-05, 5.018000000000036e-05, 5.009700000000242e-05, 5.398600000000239e-05, 5.2957999999998784e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 10:58:08.966" endtime="20201030 10:58:08.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.973" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 10:58:08.972" endtime="20201030 10:58:08.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:08.976" level="INFO">VALUE: [5.6778000000000384e-05, 5.4958000000000784e-05, 5.388900000000141e-05, 5.205599999999824e-05, 5.018000000000036e-05, 5.009700000000242e-05, 5.398600000000239e-05, 5.2957999999998784e-05, 5.30280000000001e-05, 5.4943999999997745e-05, 5.198600000000039e-05, 5.212500000000009e-05, 5.306899999999934e-05, 5.587500000000037e-05, 5.4972000000000354e-05, 5.490299999999851e-05, 5.209699999999748e-05, 5.487499999999937e-05, 5.494500000000069e-05, 5.009799999999842e-05, 5.4013999999998064e-05, 5.588899999999994e-05, 5.5805999999998523e-05, 5.30280000000001e-05, 5.10279999999981e-05, 5.11530000000017e-05, 5.29730000000013e-05, 5.48609999999998e-05, 5.50280000000021e-05, 5.212500000000009e-05, 5.1014000000002e-05, 5.113900000000213e-05, 5.481900000000109e-05, 5.018000000000036e-05, 5.201399999999953e-05, 5.591700000000255e-05, 5.293099999999912e-05, 5.213899999999966e-05, 5.5915999999999605e-05, 5.581999999999809e-05, 5.21530000000027e-05, 5.2930000000003113e-05, 5.387500000000184e-05, 5.305600000000271e-05, 5.104200000000114e-05, 5.591699999999908e-05, 5.294500000000216e-05, 4.929199999999939e-05, 5.112500000000256e-05, 5.201399999999953e-05]</msg>
<status status="PASS" starttime="20201030 10:58:08.974" endtime="20201030 10:58:08.976"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.970" endtime="20201030 10:58:08.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:08.981" endtime="20201030 10:58:09.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.979" endtime="20201030 10:58:09.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.978" endtime="20201030 10:58:09.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.620" endtime="20201030 10:58:09.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:08.619" endtime="20201030 10:58:09.001"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.010" endtime="20201030 10:58:09.034"></status>
</kw>
<msg timestamp="20201030 10:58:09.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.008" endtime="20201030 10:58:09.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.036" endtime="20201030 10:58:09.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.038" endtime="20201030 10:58:09.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.006" endtime="20201030 10:58:09.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.004" endtime="20201030 10:58:09.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.047" endtime="20201030 10:58:09.332"></status>
</kw>
<msg timestamp="20201030 10:58:09.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025557597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025608708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.046" endtime="20201030 10:58:09.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025557597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025608708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.336" endtime="20201030 10:58:09.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.345" endtime="20201030 10:58:09.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.043" endtime="20201030 10:58:09.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.042" endtime="20201030 10:58:09.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.351" level="INFO">${RESULT} = [{'diff': 5.111099999999952e-05}, {'diff': 5.583300000000166e-05}, {'diff': 5.487499999999937e-05}, {'diff': 5.30280000000001e-05}, {'diff': 5.105600000000071e-05}, {'diff': 5.105500000000124e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:09.348" endtime="20201030 10:58:09.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:09.355" level="INFO">${ACCURACY} = {'diff': [5.111099999999952e-05, 5.583300000000166e-05, 5.487499999999937e-05, 5.30280000000001e-05, 5.105600000000071e-05, 5.105500000000124e-05, 5.297200000000182e-05, 5.1137999999999184e-05, 5.5790...</msg>
<status status="PASS" starttime="20201030 10:58:09.352" endtime="20201030 10:58:09.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.359" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 10:58:09.358" endtime="20201030 10:58:09.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.362" level="INFO">VALUE: [5.111099999999952e-05, 5.583300000000166e-05, 5.487499999999937e-05, 5.30280000000001e-05, 5.105600000000071e-05, 5.105500000000124e-05, 5.297200000000182e-05, 5.1137999999999184e-05, 5.579099999999948e-05, 5.581900000000209e-05, 5.5971999999997885e-05, 5.012499999999809e-05, 5.10279999999981e-05, 5.112499999999909e-05, 5.587500000000037e-05, 5.484700000000023e-05, 5.293099999999912e-05, 5.009700000000242e-05, 5.4999999999999494e-05, 5.199999999999996e-05, 5.293100000000259e-05, 5.391700000000055e-05, 5.306999999999881e-05, 5.386200000000174e-05, 5.483300000000066e-05, 5.104200000000114e-05, 5.3985999999998924e-05, 5.102800000000157e-05, 5.390300000000098e-05, 5.115299999999823e-05, 5.195800000000125e-05, 5.687500000000137e-05, 5.583300000000166e-05, 5.197200000000082e-05, 5.208400000000085e-05, 5.48609999999998e-05, 5.293100000000259e-05, 5.006899999999981e-05, 5.112499999999909e-05, 5.107000000000028e-05, 5.1971999999997354e-05, 5.11530000000017e-05, 5.5805999999998523e-05, 5.199999999999996e-05, 5.113900000000213e-05, 5.390300000000098e-05, 5.388900000000141e-05, 5.102800000000157e-05, 5.688900000000094e-05, 5.10270000000021e-05]</msg>
<status status="PASS" starttime="20201030 10:58:09.360" endtime="20201030 10:58:09.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.356" endtime="20201030 10:58:09.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.368" endtime="20201030 10:58:09.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.366" endtime="20201030 10:58:09.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.365" endtime="20201030 10:58:09.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.002" endtime="20201030 10:58:09.388"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.002" endtime="20201030 10:58:09.388"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.397" endtime="20201030 10:58:09.416"></status>
</kw>
<msg timestamp="20201030 10:58:09.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.395" endtime="20201030 10:58:09.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.418" endtime="20201030 10:58:09.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.420" endtime="20201030 10:58:09.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.393" endtime="20201030 10:58:09.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.391" endtime="20201030 10:58:09.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.429" endtime="20201030 10:58:09.714"></status>
</kw>
<msg timestamp="20201030 10:58:09.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.428" endtime="20201030 10:58:09.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.719" endtime="20201030 10:58:09.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.727" endtime="20201030 10:58:09.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.425" endtime="20201030 10:58:09.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.423" endtime="20201030 10:58:09.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:09.733" level="INFO">${RESULT} = [{'diff': 4.818099999999784e-05}, {'diff': 5.388900000000141e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.581899999999862e-05}, {'diff': 5.008299999999938e-05}, {'diff': 5.6000000000000494e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:09.730" endtime="20201030 10:58:09.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:09.738" level="INFO">${ACCURACY} = {'diff': [4.818099999999784e-05, 5.388900000000141e-05, 5.212500000000009e-05, 5.581899999999862e-05, 5.008299999999938e-05, 5.6000000000000494e-05, 5.198600000000039e-05, 5.590299999999951e-05, 5.386...</msg>
<status status="PASS" starttime="20201030 10:58:09.734" endtime="20201030 10:58:09.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.743" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 10:58:09.742" endtime="20201030 10:58:09.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.745" level="INFO">VALUE: [4.818099999999784e-05, 5.388900000000141e-05, 5.212500000000009e-05, 5.581899999999862e-05, 5.008299999999938e-05, 5.6000000000000494e-05, 5.198600000000039e-05, 5.590299999999951e-05, 5.38609999999988e-05, 5.495900000000026e-05, 5.297200000000182e-05, 5.298600000000139e-05, 5.580600000000199e-05, 5.30280000000001e-05, 5.102800000000157e-05, 5.104200000000114e-05, 5.211100000000052e-05, 5.290299999999998e-05, 5.011099999999852e-05, 5.68610000000018e-05, 5.493099999999765e-05, 5.201399999999953e-05, 5.112499999999909e-05, 5.009699999999895e-05, 5.301400000000053e-05, 5.107000000000028e-05, 5.4943999999997745e-05, 5.3999999999998494e-05, 5.119400000000093e-05, 5.293099999999912e-05, 5.20279999999991e-05, 5.30280000000001e-05, 5.19730000000003e-05, 5.2971999999998354e-05, 5.109699999999995e-05, 5.293100000000259e-05, 5.002800000000057e-05, 5.1138000000002654e-05, 5.295900000000173e-05, 5.494500000000069e-05, 5.199999999999996e-05, 5.583300000000166e-05, 5.583400000000113e-05, 5.3971999999999354e-05, 5.199999999999996e-05, 5.5915999999999605e-05, 5.4930000000001644e-05, 5.4916000000002074e-05, 5.493100000000112e-05, 5.680500000000005e-05]</msg>
<status status="PASS" starttime="20201030 10:58:09.744" endtime="20201030 10:58:09.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.739" endtime="20201030 10:58:09.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:09.750" endtime="20201030 10:58:09.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.749" endtime="20201030 10:58:09.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.748" endtime="20201030 10:58:09.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.389" endtime="20201030 10:58:09.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.389" endtime="20201030 10:58:09.771"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.780" endtime="20201030 10:58:09.803"></status>
</kw>
<msg timestamp="20201030 10:58:09.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.778" endtime="20201030 10:58:09.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.805" endtime="20201030 10:58:09.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.807" endtime="20201030 10:58:09.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.776" endtime="20201030 10:58:09.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.774" endtime="20201030 10:58:09.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.817" endtime="20201030 10:58:10.106"></status>
</kw>
<msg timestamp="20201030 10:58:10.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:09.815" endtime="20201030 10:58:10.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.110" endtime="20201030 10:58:10.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.118" endtime="20201030 10:58:10.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.813" endtime="20201030 10:58:10.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.811" endtime="20201030 10:58:10.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.125" level="INFO">${RESULT} = [{'diff': 6.45280000000012e-05}, {'diff': 5.2916000000000074e-05}, {'diff': 5.584699999999776e-05}, {'diff': 5.3971999999999354e-05}, {'diff': 5.009699999999895e-05}, {'diff': 5.584700000000123e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:10.121" endtime="20201030 10:58:10.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.129" level="INFO">${ACCURACY} = {'diff': [6.45280000000012e-05, 5.2916000000000074e-05, 5.584699999999776e-05, 5.3971999999999354e-05, 5.009699999999895e-05, 5.584700000000123e-05, 5.3971999999999354e-05, 5.58610000000008e-05, 5.198...</msg>
<status status="PASS" starttime="20201030 10:58:10.126" endtime="20201030 10:58:10.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.133" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 10:58:10.132" endtime="20201030 10:58:10.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.135" level="INFO">VALUE: [6.45280000000012e-05, 5.2916000000000074e-05, 5.584699999999776e-05, 5.3971999999999354e-05, 5.009699999999895e-05, 5.584700000000123e-05, 5.3971999999999354e-05, 5.58610000000008e-05, 5.198600000000039e-05, 5.388900000000141e-05, 5.105499999999777e-05, 5.109699999999995e-05, 5.205599999999824e-05, 5.008299999999938e-05, 5.491699999999808e-05, 5.301400000000053e-05, 5.009799999999842e-05, 5.583299999999819e-05, 5.204199999999867e-05, 5.301400000000053e-05, 5.104199999999767e-05, 5.6749999999997774e-05, 5.581999999999809e-05, 5.388900000000141e-05, 5.205599999999824e-05, 5.205600000000171e-05, 5.384699999999923e-05, 5.018099999999984e-05, 5.590299999999951e-05, 5.295800000000225e-05, 5.582000000000156e-05, 5.202800000000257e-05, 5.2985999999997924e-05, 5.48479999999997e-05, 5.104199999999767e-05, 5.104200000000114e-05, 5.309700000000195e-05, 5.494500000000069e-05, 5.394499999999969e-05, 5.584700000000123e-05, 5.108399999999985e-05, 5.013899999999766e-05, 5.587500000000037e-05, 5.387499999999837e-05, 4.911100000000099e-05, 5.3957999999999784e-05, 5.3943999999996745e-05, 5.301300000000106e-05, 5.5805999999998523e-05, 5.104199999999767e-05]</msg>
<status status="PASS" starttime="20201030 10:58:10.134" endtime="20201030 10:58:10.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.129" endtime="20201030 10:58:10.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.140" endtime="20201030 10:58:10.160"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.139" endtime="20201030 10:58:10.160"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.138" endtime="20201030 10:58:10.161"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.772" endtime="20201030 10:58:10.161"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.771" endtime="20201030 10:58:10.161"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.170" endtime="20201030 10:58:10.189"></status>
</kw>
<msg timestamp="20201030 10:58:10.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.168" endtime="20201030 10:58:10.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.191" endtime="20201030 10:58:10.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.194" endtime="20201030 10:58:10.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.166" endtime="20201030 10:58:10.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.164" endtime="20201030 10:58:10.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.202" endtime="20201030 10:58:10.488"></status>
</kw>
<msg timestamp="20201030 10:58:10.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021255431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021296056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.201" endtime="20201030 10:58:10.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021255431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021296056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:10.492" endtime="20201030 10:58:10.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.500" endtime="20201030 10:58:10.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.198" endtime="20201030 10:58:10.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.197" endtime="20201030 10:58:10.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.507" level="INFO">${RESULT} = [{'diff': 4.0624999999998995e-05}, {'diff': 5.394499999999969e-05}, {'diff': 5.58749999999969e-05}, {'diff': 5.494500000000069e-05}, {'diff': 5.488899999999894e-05}, {'diff': 5.307000000000228e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:10.504" endtime="20201030 10:58:10.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.511" level="INFO">${ACCURACY} = {'diff': [4.0624999999998995e-05, 5.394499999999969e-05, 5.58749999999969e-05, 5.494500000000069e-05, 5.488899999999894e-05, 5.307000000000228e-05, 5.297200000000182e-05, 5.104199999999767e-05, 5.2055...</msg>
<status status="PASS" starttime="20201030 10:58:10.508" endtime="20201030 10:58:10.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.516" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 10:58:10.515" endtime="20201030 10:58:10.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.518" level="INFO">VALUE: [4.0624999999998995e-05, 5.394499999999969e-05, 5.58749999999969e-05, 5.494500000000069e-05, 5.488899999999894e-05, 5.307000000000228e-05, 5.297200000000182e-05, 5.104199999999767e-05, 5.205599999999824e-05, 5.108399999999985e-05, 5.112500000000256e-05, 5.493100000000112e-05, 5.584799999999723e-05, 5.016700000000027e-05, 5.298600000000139e-05, 5.197200000000082e-05, 5.3944000000000214e-05, 5.201300000000006e-05, 5.111099999999952e-05, 5.3944000000000214e-05, 5.4944000000001214e-05, 5.58610000000008e-05, 5.199999999999996e-05, 5.5805999999998523e-05, 5.487499999999937e-05, 5.205599999999824e-05, 5.583299999999819e-05, 5.484700000000023e-05, 5.397299999999883e-05, 5.008300000000285e-05, 5.206900000000181e-05, 5.583400000000113e-05, 5.108399999999985e-05, 5.011199999999799e-05, 5.3971999999999354e-05, 5.304199999999967e-05, 5.583300000000166e-05, 5.4958000000000784e-05, 5.098600000000286e-05, 5.113899999999866e-05, 5.011099999999852e-05, 5.205599999999824e-05, 5.20279999999991e-05, 5.487499999999937e-05, 5.4958000000000784e-05, 5.009700000000242e-05, 5.6778000000000384e-05, 5.4930000000001644e-05, 5.4887999999999465e-05, 5.4958000000000784e-05]</msg>
<status status="PASS" starttime="20201030 10:58:10.517" endtime="20201030 10:58:10.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.512" endtime="20201030 10:58:10.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.524" endtime="20201030 10:58:10.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.522" endtime="20201030 10:58:10.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.521" endtime="20201030 10:58:10.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.162" endtime="20201030 10:58:10.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.162" endtime="20201030 10:58:10.545"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.553" endtime="20201030 10:58:10.581"></status>
</kw>
<msg timestamp="20201030 10:58:10.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.552" endtime="20201030 10:58:10.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.583" endtime="20201030 10:58:10.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.585" endtime="20201030 10:58:10.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.549" endtime="20201030 10:58:10.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.547" endtime="20201030 10:58:10.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.594" endtime="20201030 10:58:10.880"></status>
</kw>
<msg timestamp="20201030 10:58:10.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0246805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024752625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:10.592" endtime="20201030 10:58:10.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0246805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024752625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:10.884" endtime="20201030 10:58:10.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.892" endtime="20201030 10:58:10.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.590" endtime="20201030 10:58:10.894"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.588" endtime="20201030 10:58:10.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:10.899" level="INFO">${RESULT} = [{'diff': 7.212499999999927e-05}, {'diff': 8.255499999999805e-05}, {'diff': 8.170799999999978e-05}, {'diff': 8.355499999999905e-05}, {'diff': 8.156999999999956e-05}, {'diff': 8.175000000000196e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:10.896" endtime="20201030 10:58:10.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:10.904" level="INFO">${ACCURACY} = {'diff': [7.212499999999927e-05, 8.255499999999805e-05, 8.170799999999978e-05, 8.355499999999905e-05, 8.156999999999956e-05, 8.175000000000196e-05, 8.254200000000142e-05, 8.652799999999891e-05, 8.4471...</msg>
<status status="PASS" starttime="20201030 10:58:10.900" endtime="20201030 10:58:10.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.908" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 10:58:10.907" endtime="20201030 10:58:10.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.911" level="INFO">VALUE: [7.212499999999927e-05, 8.255499999999805e-05, 8.170799999999978e-05, 8.355499999999905e-05, 8.156999999999956e-05, 8.175000000000196e-05, 8.254200000000142e-05, 8.652799999999891e-05, 8.447199999999863e-05, 8.455500000000005e-05, 8.545800000000006e-05, 8.06520000000005e-05, 8.448600000000167e-05, 8.172199999999935e-05, 8.354199999999895e-05, 8.552800000000138e-05, 8.351399999999981e-05, 8.076400000000053e-05, 8.533399999999941e-05, 8.256899999999762e-05, 8.362500000000037e-05, 8.638899999999922e-05, 8.544399999999702e-05, 8.54859999999992e-05, 8.256900000000109e-05, 8.066700000000301e-05, 8.645900000000054e-05, 8.251400000000228e-05, 8.458300000000266e-05, 8.061100000000126e-05, 8.355499999999905e-05, 8.647200000000063e-05, 8.162499999999837e-05, 8.347199999999763e-05, 8.362500000000037e-05, 8.066600000000007e-05, 8.541600000000135e-05, 8.343000000000239e-05, 8.06390000000004e-05, 8.649999999999977e-05, 8.056899999999909e-05, 8.269500000000068e-05, 8.640199999999931e-05, 8.362500000000037e-05, 8.255499999999805e-05, 8.356899999999862e-05, 8.166700000000054e-05, 8.548600000000267e-05, 8.548600000000267e-05, 8.15979999999987e-05]</msg>
<status status="PASS" starttime="20201030 10:58:10.909" endtime="20201030 10:58:10.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.905" endtime="20201030 10:58:10.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:10.916" endtime="20201030 10:58:10.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.914" endtime="20201030 10:58:10.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.913" endtime="20201030 10:58:10.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.545" endtime="20201030 10:58:10.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.545" endtime="20201030 10:58:10.937"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.945" endtime="20201030 10:58:10.969"></status>
</kw>
<msg timestamp="20201030 10:58:10.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.944" endtime="20201030 10:58:10.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:10.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:10.970" endtime="20201030 10:58:10.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.973" endtime="20201030 10:58:10.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.941" endtime="20201030 10:58:10.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.939" endtime="20201030 10:58:10.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:10.982" endtime="20201030 10:58:11.268"></status>
</kw>
<msg timestamp="20201030 10:58:11.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02472775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:10.980" endtime="20201030 10:58:11.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024652833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02472775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:11.273" endtime="20201030 10:58:11.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.281" endtime="20201030 10:58:11.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.977" endtime="20201030 10:58:11.284"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.976" endtime="20201030 10:58:11.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.288" level="INFO">${RESULT} = [{'diff': 7.491700000000073e-05}, {'diff': 8.156999999999956e-05}, {'diff': 8.351399999999981e-05}, {'diff': 8.450000000000124e-05}, {'diff': 8.649999999999977e-05}, {'diff': 8.638899999999922e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:11.285" endtime="20201030 10:58:11.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:11.292" level="INFO">${ACCURACY} = {'diff': [7.491700000000073e-05, 8.156999999999956e-05, 8.351399999999981e-05, 8.450000000000124e-05, 8.649999999999977e-05, 8.638899999999922e-05, 8.15979999999987e-05, 8.558399999999966e-05, 8.35130...</msg>
<status status="PASS" starttime="20201030 10:58:11.289" endtime="20201030 10:58:11.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.297" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 10:58:11.296" endtime="20201030 10:58:11.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.299" level="INFO">VALUE: [7.491700000000073e-05, 8.156999999999956e-05, 8.351399999999981e-05, 8.450000000000124e-05, 8.649999999999977e-05, 8.638899999999922e-05, 8.15979999999987e-05, 8.558399999999966e-05, 8.351300000000034e-05, 8.263899999999894e-05, 8.637500000000312e-05, 8.169399999999674e-05, 8.543000000000092e-05, 8.15970000000027e-05, 8.254200000000142e-05, 8.544400000000049e-05, 8.168000000000064e-05, 8.450000000000124e-05, 8.449999999999777e-05, 8.267999999999817e-05, 8.065299999999997e-05, 8.263899999999894e-05, 8.263899999999894e-05, 8.450000000000124e-05, 8.733299999999847e-05, 8.062500000000083e-05, 8.545800000000006e-05, 8.456899999999962e-05, 8.449999999999777e-05, 8.440299999999679e-05, 8.262499999999937e-05, 8.159699999999923e-05, 8.265300000000197e-05, 8.544499999999997e-05, 8.448600000000167e-05, 8.355499999999905e-05, 8.263899999999894e-05, 8.640300000000226e-05, 8.541699999999736e-05, 8.158399999999913e-05, 8.162500000000183e-05, 8.174999999999849e-05, 8.255600000000099e-05, 8.448600000000167e-05, 8.257000000000056e-05, 8.351399999999981e-05, 8.441699999999983e-05, 8.651399999999934e-05, 8.638899999999922e-05, 8.344499999999797e-05]</msg>
<status status="PASS" starttime="20201030 10:58:11.298" endtime="20201030 10:58:11.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.293" endtime="20201030 10:58:11.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.304" endtime="20201030 10:58:11.323"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.302" endtime="20201030 10:58:11.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.301" endtime="20201030 10:58:11.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.937" endtime="20201030 10:58:11.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:10.937" endtime="20201030 10:58:11.325"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.333" endtime="20201030 10:58:11.355"></status>
</kw>
<msg timestamp="20201030 10:58:11.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.332" endtime="20201030 10:58:11.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.357" endtime="20201030 10:58:11.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.359" endtime="20201030 10:58:11.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.329" endtime="20201030 10:58:11.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.327" endtime="20201030 10:58:11.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.368" endtime="20201030 10:58:11.653"></status>
</kw>
<msg timestamp="20201030 10:58:11.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023400958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023483528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.367" endtime="20201030 10:58:11.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023400958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023483528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.657" endtime="20201030 10:58:11.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.666" endtime="20201030 10:58:11.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.364" endtime="20201030 10:58:11.668"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.362" endtime="20201030 10:58:11.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.672" level="INFO">${RESULT} = [{'diff': 8.257000000000056e-05}, {'diff': 8.461200000000127e-05}, {'diff': 7.970800000000125e-05}, {'diff': 8.455500000000005e-05}, {'diff': 8.268100000000111e-05}, {'diff': 8.06390000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:11.669" endtime="20201030 10:58:11.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:11.677" level="INFO">${ACCURACY} = {'diff': [8.257000000000056e-05, 8.461200000000127e-05, 7.970800000000125e-05, 8.455500000000005e-05, 8.268100000000111e-05, 8.06390000000004e-05, 8.651400000000281e-05, 8.644500000000097e-05, 8.16250...</msg>
<status status="PASS" starttime="20201030 10:58:11.673" endtime="20201030 10:58:11.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.682" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 10:58:11.680" endtime="20201030 10:58:11.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.684" level="INFO">VALUE: [8.257000000000056e-05, 8.461200000000127e-05, 7.970800000000125e-05, 8.455500000000005e-05, 8.268100000000111e-05, 8.06390000000004e-05, 8.651400000000281e-05, 8.644500000000097e-05, 8.162500000000183e-05, 8.16390000000014e-05, 8.448600000000167e-05, 8.16520000000015e-05, 8.170799999999978e-05, 8.637499999999965e-05, 8.551399999999834e-05, 8.26109999999998e-05, 8.354199999999895e-05, 8.551399999999834e-05, 8.54859999999992e-05, 8.455500000000005e-05, 7.972199999999735e-05, 8.26109999999998e-05, 8.263899999999894e-05, 8.454100000000048e-05, 8.170799999999978e-05, 8.076400000000053e-05, 8.551400000000181e-05, 8.641600000000235e-05, 8.451400000000081e-05, 8.645900000000054e-05, 8.452700000000091e-05, 8.641700000000183e-05, 8.270900000000025e-05, 8.07910000000002e-05, 8.545800000000006e-05, 8.549999999999877e-05, 8.647199999999716e-05, 8.266700000000154e-05, 8.351399999999981e-05, 8.17230000000023e-05, 8.640299999999879e-05, 8.44309999999994e-05, 8.550000000000224e-05, 8.454100000000048e-05, 8.165300000000097e-05, 8.451400000000081e-05, 8.169499999999968e-05, 8.172299999999882e-05, 8.166600000000107e-05, 8.067999999999964e-05]</msg>
<status status="PASS" starttime="20201030 10:58:11.683" endtime="20201030 10:58:11.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.678" endtime="20201030 10:58:11.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.690" endtime="20201030 10:58:11.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.689" endtime="20201030 10:58:11.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.687" endtime="20201030 10:58:11.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.326" endtime="20201030 10:58:11.711"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.325" endtime="20201030 10:58:11.711"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.720" endtime="20201030 10:58:11.748"></status>
</kw>
<msg timestamp="20201030 10:58:11.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.718" endtime="20201030 10:58:11.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.750" endtime="20201030 10:58:11.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.752" endtime="20201030 10:58:11.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.716" endtime="20201030 10:58:11.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.713" endtime="20201030 10:58:11.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.761" endtime="20201030 10:58:12.046"></status>
</kw>
<msg timestamp="20201030 10:58:12.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023969556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02403975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:11.760" endtime="20201030 10:58:12.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023969556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02403975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:12.050" endtime="20201030 10:58:12.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.059" endtime="20201030 10:58:12.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.757" endtime="20201030 10:58:12.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.755" endtime="20201030 10:58:12.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.065" level="INFO">${RESULT} = [{'diff': 7.019399999999912e-05}, {'diff': 8.266700000000154e-05}, {'diff': 8.261199999999927e-05}, {'diff': 8.644400000000149e-05}, {'diff': 8.347300000000057e-05}, {'diff': 8.647200000000063e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:12.062" endtime="20201030 10:58:12.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.070" level="INFO">${ACCURACY} = {'diff': [7.019399999999912e-05, 8.266700000000154e-05, 8.261199999999927e-05, 8.644400000000149e-05, 8.347300000000057e-05, 8.647200000000063e-05, 8.544499999999997e-05, 8.26109999999998e-05, 8.17359...</msg>
<status status="PASS" starttime="20201030 10:58:12.066" endtime="20201030 10:58:12.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.075" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.074" endtime="20201030 10:58:12.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.077" level="INFO">VALUE: [7.019399999999912e-05, 8.266700000000154e-05, 8.261199999999927e-05, 8.644400000000149e-05, 8.347300000000057e-05, 8.647200000000063e-05, 8.544499999999997e-05, 8.26109999999998e-05, 8.173599999999892e-05, 8.627800000000213e-05, 8.651399999999934e-05, 8.550000000000224e-05, 8.263899999999894e-05, 8.641599999999888e-05, 8.654199999999848e-05, 8.070800000000225e-05, 8.268000000000164e-05, 8.64860000000002e-05, 8.070799999999878e-05, 8.356900000000209e-05, 8.26659999999986e-05, 8.073600000000139e-05, 8.355600000000199e-05, 8.262499999999937e-05, 8.649999999999977e-05, 8.265199999999903e-05, 8.362500000000037e-05, 8.357000000000156e-05, 8.452800000000038e-05, 8.070899999999825e-05, 8.361099999999733e-05, 8.641700000000183e-05, 8.54729999999991e-05, 8.64860000000002e-05, 8.069499999999868e-05, 8.63470000000005e-05, 8.268100000000111e-05, 8.077699999999716e-05, 8.159800000000217e-05, 8.640300000000226e-05, 8.551400000000181e-05, 8.170899999999925e-05, 8.640299999999879e-05, 8.649999999999977e-05, 8.363899999999994e-05, 8.554200000000095e-05, 8.170799999999978e-05, 8.355599999999852e-05, 8.647200000000063e-05, 8.355600000000199e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.076" endtime="20201030 10:58:12.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.071" endtime="20201030 10:58:12.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.082" endtime="20201030 10:58:12.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.081" endtime="20201030 10:58:12.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.080" endtime="20201030 10:58:12.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.712" endtime="20201030 10:58:12.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.711" endtime="20201030 10:58:12.103"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.112" endtime="20201030 10:58:12.135"></status>
</kw>
<msg timestamp="20201030 10:58:12.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.110" endtime="20201030 10:58:12.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.136" endtime="20201030 10:58:12.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.139" endtime="20201030 10:58:12.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.107" endtime="20201030 10:58:12.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.105" endtime="20201030 10:58:12.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.148" endtime="20201030 10:58:12.434"></status>
</kw>
<msg timestamp="20201030 10:58:12.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023695125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023771944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.146" endtime="20201030 10:58:12.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023695125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023771944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.439" endtime="20201030 10:58:12.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.447" endtime="20201030 10:58:12.448"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.144" endtime="20201030 10:58:12.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.142" endtime="20201030 10:58:12.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.453" level="INFO">${RESULT} = [{'diff': 7.68189999999988e-05}, {'diff': 8.640300000000226e-05}, {'diff': 8.16390000000014e-05}, {'diff': 8.173599999999892e-05}, {'diff': 8.255500000000152e-05}, {'diff': 8.556900000000062e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:12.450" endtime="20201030 10:58:12.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.458" level="INFO">${ACCURACY} = {'diff': [7.68189999999988e-05, 8.640300000000226e-05, 8.16390000000014e-05, 8.173599999999892e-05, 8.255500000000152e-05, 8.556900000000062e-05, 8.352799999999938e-05, 8.650000000000324e-05, 8.541700...</msg>
<status status="PASS" starttime="20201030 10:58:12.454" endtime="20201030 10:58:12.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.462" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.461" endtime="20201030 10:58:12.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.465" level="INFO">VALUE: [7.68189999999988e-05, 8.640300000000226e-05, 8.16390000000014e-05, 8.173599999999892e-05, 8.255500000000152e-05, 8.556900000000062e-05, 8.352799999999938e-05, 8.650000000000324e-05, 8.541700000000083e-05, 8.359700000000123e-05, 8.451400000000081e-05, 8.26529999999985e-05, 8.065299999999997e-05, 8.35980000000007e-05, 8.056999999999856e-05, 8.454199999999995e-05, 8.079199999999967e-05, 8.07230000000013e-05, 8.452800000000038e-05, 8.558300000000019e-05, 8.158299999999966e-05, 8.64860000000002e-05, 8.26659999999986e-05, 8.44309999999994e-05, 8.352799999999938e-05, 8.63470000000005e-05, 8.172199999999935e-05, 8.255600000000099e-05, 8.547199999999963e-05, 8.076400000000053e-05, 8.274999999999949e-05, 8.541700000000083e-05, 8.358400000000113e-05, 8.070899999999825e-05, 8.256900000000109e-05, 8.359700000000123e-05, 8.448600000000167e-05, 8.070799999999878e-05, 8.451399999999734e-05, 8.552799999999791e-05, 8.457000000000256e-05, 8.644500000000097e-05, 8.645800000000106e-05, 8.16529999999975e-05, 8.362500000000037e-05, 8.444400000000296e-05, 8.074999999999749e-05, 8.44309999999994e-05, 8.169499999999968e-05, 8.362500000000037e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.463" endtime="20201030 10:58:12.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.458" endtime="20201030 10:58:12.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.470" endtime="20201030 10:58:12.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.468" endtime="20201030 10:58:12.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.467" endtime="20201030 10:58:12.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.104" endtime="20201030 10:58:12.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.103" endtime="20201030 10:58:12.490"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.499" endtime="20201030 10:58:12.521"></status>
</kw>
<msg timestamp="20201030 10:58:12.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.497" endtime="20201030 10:58:12.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.523" endtime="20201030 10:58:12.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.526" endtime="20201030 10:58:12.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.495" endtime="20201030 10:58:12.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.493" endtime="20201030 10:58:12.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.534" endtime="20201030 10:58:12.820"></status>
</kw>
<msg timestamp="20201030 10:58:12.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023261792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023351139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.533" endtime="20201030 10:58:12.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023261792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023351139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.824" endtime="20201030 10:58:12.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.833" endtime="20201030 10:58:12.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.530" endtime="20201030 10:58:12.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.529" endtime="20201030 10:58:12.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.839" level="INFO">${RESULT} = [{'diff': 8.934700000000004e-05}, {'diff': 8.169499999999968e-05}, {'diff': 8.458300000000266e-05}, {'diff': 8.452699999999744e-05}, {'diff': 8.46110000000018e-05}, {'diff': 8.741599999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:12.836" endtime="20201030 10:58:12.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:12.844" level="INFO">${ACCURACY} = {'diff': [8.934700000000004e-05, 8.169499999999968e-05, 8.458300000000266e-05, 8.452699999999744e-05, 8.46110000000018e-05, 8.741599999999988e-05, 8.258400000000013e-05, 8.452800000000038e-05, 8.64860...</msg>
<status status="PASS" starttime="20201030 10:58:12.840" endtime="20201030 10:58:12.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.849" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 10:58:12.848" endtime="20201030 10:58:12.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.851" level="INFO">VALUE: [8.934700000000004e-05, 8.169499999999968e-05, 8.458300000000266e-05, 8.452699999999744e-05, 8.46110000000018e-05, 8.741599999999988e-05, 8.258400000000013e-05, 8.452800000000038e-05, 8.64860000000002e-05, 8.254200000000142e-05, 8.456899999999962e-05, 8.455500000000005e-05, 8.352699999999991e-05, 8.454100000000048e-05, 8.555500000000105e-05, 8.751400000000034e-05, 8.162500000000183e-05, 8.454199999999995e-05, 8.652800000000238e-05, 8.262500000000284e-05, 8.358400000000113e-05, 8.073599999999792e-05, 8.642999999999845e-05, 8.451399999999734e-05, 8.172299999999882e-05, 8.458299999999919e-05, 8.26109999999998e-05, 8.454100000000048e-05, 8.36110000000008e-05, 8.168100000000011e-05, 8.554200000000095e-05, 8.64860000000002e-05, 8.276299999999959e-05, 8.348600000000067e-05, 8.362500000000037e-05, 8.268000000000164e-05, 8.259700000000023e-05, 8.549999999999877e-05, 8.270900000000025e-05, 7.969500000000115e-05, 8.361200000000027e-05, 8.268100000000111e-05, 8.356899999999862e-05, 8.368000000000264e-05, 8.26390000000024e-05, 8.162499999999837e-05, 8.258300000000066e-05, 8.351399999999981e-05, 8.361099999999733e-05, 8.558399999999966e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.850" endtime="20201030 10:58:12.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.845" endtime="20201030 10:58:12.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.861" endtime="20201030 10:58:12.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.859" endtime="20201030 10:58:12.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.858" endtime="20201030 10:58:12.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.491" endtime="20201030 10:58:12.885"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.491" endtime="20201030 10:58:12.885"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.894" endtime="20201030 10:58:12.914"></status>
</kw>
<msg timestamp="20201030 10:58:12.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.892" endtime="20201030 10:58:12.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.915" endtime="20201030 10:58:12.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.918" endtime="20201030 10:58:12.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.890" endtime="20201030 10:58:12.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.888" endtime="20201030 10:58:12.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.927" endtime="20201030 10:58:13.212"></status>
</kw>
<msg timestamp="20201030 10:58:13.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020215542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020304778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.925" endtime="20201030 10:58:13.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020215542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020304778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.216" endtime="20201030 10:58:13.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.224" endtime="20201030 10:58:13.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.923" endtime="20201030 10:58:13.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.921" endtime="20201030 10:58:13.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.231" level="INFO">${RESULT} = [{'diff': 8.923599999999948e-05}, {'diff': 8.168099999999665e-05}, {'diff': 8.266600000000207e-05}, {'diff': 8.543000000000092e-05}, {'diff': 8.64860000000002e-05}, {'diff': 8.069399999999921e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:13.228" endtime="20201030 10:58:13.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:13.236" level="INFO">${ACCURACY} = {'diff': [8.923599999999948e-05, 8.168099999999665e-05, 8.266600000000207e-05, 8.543000000000092e-05, 8.64860000000002e-05, 8.069399999999921e-05, 8.162499999999837e-05, 8.357000000000156e-05, 8.45839...</msg>
<status status="PASS" starttime="20201030 10:58:13.232" endtime="20201030 10:58:13.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.240" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 10:58:13.239" endtime="20201030 10:58:13.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.243" level="INFO">VALUE: [8.923599999999948e-05, 8.168099999999665e-05, 8.266600000000207e-05, 8.543000000000092e-05, 8.64860000000002e-05, 8.069399999999921e-05, 8.162499999999837e-05, 8.357000000000156e-05, 8.458399999999866e-05, 8.166700000000054e-05, 8.368099999999865e-05, 8.067999999999964e-05, 8.077700000000063e-05, 8.254099999999848e-05, 8.07910000000002e-05, 8.072199999999835e-05, 8.268100000000111e-05, 8.254200000000142e-05, 8.268100000000111e-05, 8.367999999999917e-05, 8.258400000000013e-05, 8.36529999999995e-05, 8.354099999999948e-05, 8.07910000000002e-05, 8.352799999999938e-05, 8.549999999999877e-05, 8.551400000000181e-05, 8.169400000000021e-05, 8.35980000000007e-05, 8.64860000000002e-05, 8.259700000000023e-05, 8.641700000000183e-05, 8.648699999999968e-05, 8.262499999999937e-05, 8.550000000000224e-05, 8.270799999999731e-05, 8.26390000000024e-05, 8.356899999999862e-05, 8.454100000000048e-05, 8.550000000000224e-05, 8.649999999999977e-05, 8.552799999999791e-05, 8.637499999999965e-05, 8.449999999999777e-05, 8.073600000000139e-05, 8.254199999999795e-05, 8.448600000000167e-05, 8.644500000000097e-05, 8.643000000000192e-05, 8.358300000000166e-05]</msg>
<status status="PASS" starttime="20201030 10:58:13.242" endtime="20201030 10:58:13.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.237" endtime="20201030 10:58:13.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.248" endtime="20201030 10:58:13.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.246" endtime="20201030 10:58:13.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.245" endtime="20201030 10:58:13.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.886" endtime="20201030 10:58:13.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.886" endtime="20201030 10:58:13.269"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.277" endtime="20201030 10:58:13.300"></status>
</kw>
<msg timestamp="20201030 10:58:13.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.276" endtime="20201030 10:58:13.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.301" endtime="20201030 10:58:13.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.304" endtime="20201030 10:58:13.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.273" endtime="20201030 10:58:13.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.271" endtime="20201030 10:58:13.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.313" endtime="20201030 10:58:13.602"></status>
</kw>
<msg timestamp="20201030 10:58:13.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023519847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023608236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.311" endtime="20201030 10:58:13.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023519847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023608236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.607" endtime="20201030 10:58:13.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.615" endtime="20201030 10:58:13.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.309" endtime="20201030 10:58:13.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.307" endtime="20201030 10:58:13.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.622" level="INFO">${RESULT} = [{'diff': 8.838900000000122e-05}, {'diff': 8.16109999999988e-05}, {'diff': 8.358399999999766e-05}, {'diff': 8.641700000000183e-05}, {'diff': 8.063800000000093e-05}, {'diff': 8.455599999999952e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:13.618" endtime="20201030 10:58:13.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:13.626" level="INFO">${ACCURACY} = {'diff': [8.838900000000122e-05, 8.16109999999988e-05, 8.358399999999766e-05, 8.641700000000183e-05, 8.063800000000093e-05, 8.455599999999952e-05, 8.351399999999981e-05, 8.166700000000054e-05, 8.06809...</msg>
<status status="PASS" starttime="20201030 10:58:13.623" endtime="20201030 10:58:13.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.630" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 10:58:13.629" endtime="20201030 10:58:13.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.633" level="INFO">VALUE: [8.838900000000122e-05, 8.16109999999988e-05, 8.358399999999766e-05, 8.641700000000183e-05, 8.063800000000093e-05, 8.455599999999952e-05, 8.351399999999981e-05, 8.166700000000054e-05, 8.068099999999911e-05, 8.063800000000093e-05, 8.540300000000126e-05, 8.16390000000014e-05, 8.352699999999991e-05, 8.64860000000002e-05, 8.445799999999906e-05, 8.158299999999966e-05, 8.44859999999982e-05, 8.644400000000149e-05, 8.15970000000027e-05, 8.741599999999988e-05, 8.162499999999837e-05, 8.647200000000063e-05, 8.448600000000167e-05, 8.252799999999838e-05, 8.266700000000154e-05, 8.541700000000083e-05, 8.63470000000005e-05, 8.07230000000013e-05, 8.356899999999862e-05, 8.54310000000004e-05, 8.254100000000195e-05, 8.445800000000253e-05, 8.641700000000183e-05, 8.540300000000126e-05, 8.15979999999987e-05, 8.06109999999978e-05, 8.547199999999963e-05, 8.644399999999802e-05, 8.54859999999992e-05, 8.254200000000142e-05, 8.350000000000024e-05, 8.552800000000138e-05, 8.256899999999762e-05, 8.354199999999895e-05, 8.451400000000081e-05, 8.543000000000092e-05, 8.06390000000004e-05, 8.062500000000083e-05, 8.44859999999982e-05, 8.255499999999805e-05]</msg>
<status status="PASS" starttime="20201030 10:58:13.631" endtime="20201030 10:58:13.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.627" endtime="20201030 10:58:13.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.638" endtime="20201030 10:58:13.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.636" endtime="20201030 10:58:13.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.635" endtime="20201030 10:58:13.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.270" endtime="20201030 10:58:13.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.269" endtime="20201030 10:58:13.659"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.667" endtime="20201030 10:58:13.691"></status>
</kw>
<msg timestamp="20201030 10:58:13.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.666" endtime="20201030 10:58:13.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.693" endtime="20201030 10:58:13.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.695" endtime="20201030 10:58:13.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.663" endtime="20201030 10:58:13.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.661" endtime="20201030 10:58:13.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.704" endtime="20201030 10:58:13.990"></status>
</kw>
<msg timestamp="20201030 10:58:13.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025754611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025842931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.703" endtime="20201030 10:58:13.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025754611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025842931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.994" endtime="20201030 10:58:14.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.002" endtime="20201030 10:58:14.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.700" endtime="20201030 10:58:14.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.699" endtime="20201030 10:58:14.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.009" level="INFO">${RESULT} = [{'diff': 8.831999999999937e-05}, {'diff': 7.976399999999953e-05}, {'diff': 8.351399999999981e-05}, {'diff': 8.54310000000004e-05}, {'diff': 8.544400000000049e-05}, {'diff': 8.636100000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:14.006" endtime="20201030 10:58:14.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:14.013" level="INFO">${ACCURACY} = {'diff': [8.831999999999937e-05, 7.976399999999953e-05, 8.351399999999981e-05, 8.54310000000004e-05, 8.544400000000049e-05, 8.636100000000008e-05, 8.07910000000002e-05, 8.637499999999965e-05, 8.254200...</msg>
<status status="PASS" starttime="20201030 10:58:14.010" endtime="20201030 10:58:14.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.017" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 10:58:14.016" endtime="20201030 10:58:14.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.020" level="INFO">VALUE: [8.831999999999937e-05, 7.976399999999953e-05, 8.351399999999981e-05, 8.54310000000004e-05, 8.544400000000049e-05, 8.636100000000008e-05, 8.07910000000002e-05, 8.637499999999965e-05, 8.254200000000142e-05, 8.256900000000109e-05, 8.354199999999895e-05, 8.644500000000097e-05, 8.541699999999736e-05, 8.551400000000181e-05, 8.637499999999965e-05, 8.350000000000024e-05, 8.269400000000121e-05, 8.636100000000008e-05, 8.07780000000001e-05, 8.259700000000023e-05, 8.251400000000228e-05, 8.262499999999937e-05, 8.44720000000021e-05, 8.54859999999992e-05, 8.255600000000099e-05, 8.352699999999991e-05, 8.162500000000183e-05, 8.262499999999937e-05, 8.344499999999797e-05, 8.544499999999997e-05, 8.15840000000026e-05, 8.638899999999922e-05, 8.552800000000138e-05, 8.633299999999747e-05, 8.458299999999919e-05, 8.636100000000008e-05, 8.069400000000268e-05, 8.451399999999734e-05, 8.44720000000021e-05, 8.15970000000027e-05, 8.63470000000005e-05, 8.16390000000014e-05, 8.437500000000112e-05, 8.64860000000002e-05, 8.448600000000167e-05, 8.637499999999965e-05, 8.734699999999804e-05, 8.552800000000138e-05, 8.15979999999987e-05, 8.162499999999837e-05]</msg>
<status status="PASS" starttime="20201030 10:58:14.018" endtime="20201030 10:58:14.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.014" endtime="20201030 10:58:14.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.026" endtime="20201030 10:58:14.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.024" endtime="20201030 10:58:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.023" endtime="20201030 10:58:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.659" endtime="20201030 10:58:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.659" endtime="20201030 10:58:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.266" endtime="20201030 10:58:14.047"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:35.183" endtime="20201030 10:58:14.048" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.056" endtime="20201030 10:58:14.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.055" endtime="20201030 10:58:14.076"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.089" endtime="20201030 10:58:14.113"></status>
</kw>
<msg timestamp="20201030 10:58:14.114" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.088" endtime="20201030 10:58:14.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.115" endtime="20201030 10:58:14.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.119" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:14.117" endtime="20201030 10:58:14.119"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:14.085" endtime="20201030 10:58:14.120"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:14.083" endtime="20201030 10:58:14.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.081" endtime="20201030 10:58:14.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:14.125" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:14.124" endtime="20201030 10:58:14.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.122" endtime="20201030 10:58:14.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.081" endtime="20201030 10:58:14.126"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.080" endtime="20201030 10:58:14.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.127" endtime="20201030 10:58:14.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.078" endtime="20201030 10:58:14.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.077" endtime="20201030 10:58:14.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.053" endtime="20201030 10:58:14.129"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.141" endtime="20201030 10:58:14.160"></status>
</kw>
<msg timestamp="20201030 10:58:14.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.139" endtime="20201030 10:58:14.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.162" endtime="20201030 10:58:14.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.165" endtime="20201030 10:58:14.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.135" endtime="20201030 10:58:14.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.133" endtime="20201030 10:58:14.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.174" endtime="20201030 10:58:14.459"></status>
</kw>
<msg timestamp="20201030 10:58:14.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079705306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079714056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.172" endtime="20201030 10:58:14.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079705306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079714056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.463" endtime="20201030 10:58:14.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.472" endtime="20201030 10:58:14.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.169" endtime="20201030 10:58:14.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.168" endtime="20201030 10:58:14.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.478" level="INFO">${RESULT} = [{'diff': 8.750000000001812e-06}, {'diff': 8.735999999995303e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.818999999993249e-06}, {'diff': 8.763999999994443e-06}, {'diff': 8.750000000001812e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:14.475" endtime="20201030 10:58:14.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:14.482" level="INFO">${ACCURACY} = {'diff': [8.750000000001812e-06, 8.735999999995303e-06, 8.750000000001812e-06, 8.818999999993249e-06, 8.763999999994443e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.791000000007987e-06, 8.7500...</msg>
<status status="PASS" starttime="20201030 10:58:14.479" endtime="20201030 10:58:14.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.488" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 10:58:14.487" endtime="20201030 10:58:14.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.490" level="INFO">VALUE: [8.750000000001812e-06, 8.735999999995303e-06, 8.750000000001812e-06, 8.818999999993249e-06, 8.763999999994443e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.791000000007987e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.707999999996163e-06, 8.763999999994443e-06, 8.735999999995303e-06, 8.777000000001478e-06, 8.76400000000832e-06, 8.778000000000952e-06, 8.763999999994443e-06, 8.791000000007987e-06, 8.778000000000952e-06, 8.763999999994443e-06, 8.750000000001812e-06, 8.763999999994443e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.736000000009181e-06, 8.76400000000832e-06, 8.750000000001812e-06, 8.819999999992723e-06, 8.763000000008847e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.763999999994443e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.778000000000952e-06, 8.763999999994443e-06, 8.79200000000746e-06, 8.763999999994443e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.763999999994443e-06, 8.763999999994443e-06, 8.763999999994443e-06, 8.8200000000066e-06, 8.735999999995303e-06, 8.76400000000832e-06]</msg>
<status status="PASS" starttime="20201030 10:58:14.489" endtime="20201030 10:58:14.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.483" endtime="20201030 10:58:14.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.495" endtime="20201030 10:58:14.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.493" endtime="20201030 10:58:14.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.492" endtime="20201030 10:58:14.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.132" endtime="20201030 10:58:14.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.131" endtime="20201030 10:58:14.515"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.525" endtime="20201030 10:58:14.546"></status>
</kw>
<msg timestamp="20201030 10:58:14.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.523" endtime="20201030 10:58:14.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.547" endtime="20201030 10:58:14.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.550" endtime="20201030 10:58:14.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.520" endtime="20201030 10:58:14.552"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.518" endtime="20201030 10:58:14.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.559" endtime="20201030 10:58:14.845"></status>
</kw>
<msg timestamp="20201030 10:58:14.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022987111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022995889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.557" endtime="20201030 10:58:14.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022987111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022995889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.849" endtime="20201030 10:58:14.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.857" endtime="20201030 10:58:14.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.555" endtime="20201030 10:58:14.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.553" endtime="20201030 10:58:14.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.864" level="INFO">${RESULT} = [{'diff': 8.777999999997482e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.776999999998009e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:14.860" endtime="20201030 10:58:14.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:14.869" level="INFO">${ACCURACY} = {'diff': [8.777999999997482e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.776999999998009e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.7500...</msg>
<status status="PASS" starttime="20201030 10:58:14.865" endtime="20201030 10:58:14.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.874" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 10:58:14.873" endtime="20201030 10:58:14.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.877" level="INFO">VALUE: [8.777999999997482e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.776999999998009e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.776999999998009e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.819999999999661e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.750000000001812e-06, 8.777000000001478e-06, 8.819999999999661e-06, 8.805000000000618e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.735999999998773e-06, 8.832999999999758e-06, 8.750000000001812e-06, 8.708999999999106e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.791000000001048e-06]</msg>
<status status="PASS" starttime="20201030 10:58:14.875" endtime="20201030 10:58:14.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.870" endtime="20201030 10:58:14.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.882" endtime="20201030 10:58:14.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.880" endtime="20201030 10:58:14.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.879" endtime="20201030 10:58:14.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.516" endtime="20201030 10:58:14.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.516" endtime="20201030 10:58:14.903"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.912" endtime="20201030 10:58:14.928"></status>
</kw>
<msg timestamp="20201030 10:58:14.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.910" endtime="20201030 10:58:14.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.930" endtime="20201030 10:58:14.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.932" endtime="20201030 10:58:14.934"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.908" endtime="20201030 10:58:14.935"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.905" endtime="20201030 10:58:14.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.941" endtime="20201030 10:58:15.228"></status>
</kw>
<msg timestamp="20201030 10:58:15.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02244875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:14.940" endtime="20201030 10:58:15.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02244875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:15.232" endtime="20201030 10:58:15.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.240" endtime="20201030 10:58:15.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.937" endtime="20201030 10:58:15.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.936" endtime="20201030 10:58:15.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.247" level="INFO">${RESULT} = [{'diff': 8.764000000001382e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.777000000001478e-06}, {'diff': 8.819999999999661e-06}, {'diff': 8.778000000000952e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:15.244" endtime="20201030 10:58:15.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:15.251" level="INFO">${ACCURACY} = {'diff': [8.764000000001382e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.777000000001478e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.7360...</msg>
<status status="PASS" starttime="20201030 10:58:15.248" endtime="20201030 10:58:15.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.256" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 10:58:15.254" endtime="20201030 10:58:15.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.258" level="INFO">VALUE: [8.764000000001382e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.777000000001478e-06, 8.819999999999661e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.665999999997454e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.708999999999106e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.791999999997052e-06, 8.778000000000952e-06, 8.763999999997912e-06]</msg>
<status status="PASS" starttime="20201030 10:58:15.257" endtime="20201030 10:58:15.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.252" endtime="20201030 10:58:15.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.262" endtime="20201030 10:58:15.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.261" endtime="20201030 10:58:15.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.260" endtime="20201030 10:58:15.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.904" endtime="20201030 10:58:15.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.903" endtime="20201030 10:58:15.284"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.293" endtime="20201030 10:58:15.310"></status>
</kw>
<msg timestamp="20201030 10:58:15.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.291" endtime="20201030 10:58:15.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.311" endtime="20201030 10:58:15.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.314" endtime="20201030 10:58:15.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.288" endtime="20201030 10:58:15.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.286" endtime="20201030 10:58:15.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.323" endtime="20201030 10:58:15.609"></status>
</kw>
<msg timestamp="20201030 10:58:15.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023868931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023877667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.321" endtime="20201030 10:58:15.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023868931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023877667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.614" endtime="20201030 10:58:15.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.622" endtime="20201030 10:58:15.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.319" endtime="20201030 10:58:15.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.317" endtime="20201030 10:58:15.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.629" level="INFO">${RESULT} = [{'diff': 8.736000000002242e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.735999999998773e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:15.625" endtime="20201030 10:58:15.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:15.633" level="INFO">${ACCURACY} = {'diff': [8.736000000002242e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.7780...</msg>
<status status="PASS" starttime="20201030 10:58:15.630" endtime="20201030 10:58:15.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.637" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 10:58:15.636" endtime="20201030 10:58:15.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.640" level="INFO">VALUE: [8.736000000002242e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.778000000000952e-06, 8.819000000000188e-06, 8.750000000001812e-06, 8.763000000001908e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.763000000001908e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.737000000001716e-06, 8.736999999998246e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.806000000000092e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.680000000000493e-06, 8.763999999997912e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201030 10:58:15.638" endtime="20201030 10:58:15.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.634" endtime="20201030 10:58:15.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.646" endtime="20201030 10:58:15.665"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.644" endtime="20201030 10:58:15.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.643" endtime="20201030 10:58:15.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.284" endtime="20201030 10:58:15.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.284" endtime="20201030 10:58:15.666"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.675" endtime="20201030 10:58:15.697"></status>
</kw>
<msg timestamp="20201030 10:58:15.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.673" endtime="20201030 10:58:15.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.699" endtime="20201030 10:58:15.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.702" endtime="20201030 10:58:15.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.671" endtime="20201030 10:58:15.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.669" endtime="20201030 10:58:15.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.710" endtime="20201030 10:58:15.995"></status>
</kw>
<msg timestamp="20201030 10:58:15.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022604167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.709" endtime="20201030 10:58:15.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022604167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.000" endtime="20201030 10:58:16.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.008" endtime="20201030 10:58:16.009"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.706" endtime="20201030 10:58:16.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.705" endtime="20201030 10:58:16.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.014" level="INFO">${RESULT} = [{'diff': 8.735999999998773e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.764000000001382e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:16.011" endtime="20201030 10:58:16.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.019" level="INFO">${ACCURACY} = {'diff': [8.735999999998773e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.819000000000188e-06, 8.7639...</msg>
<status status="PASS" starttime="20201030 10:58:16.015" endtime="20201030 10:58:16.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.024" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.023" endtime="20201030 10:58:16.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.027" level="INFO">VALUE: [8.735999999998773e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.819000000000188e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.736999999998246e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.762999999998439e-06, 8.750000000001812e-06, 8.790999999997579e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.680999999999967e-06, 8.790999999997579e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.778000000000952e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201030 10:58:16.025" endtime="20201030 10:58:16.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.020" endtime="20201030 10:58:16.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.032" endtime="20201030 10:58:16.051"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.030" endtime="20201030 10:58:16.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.029" endtime="20201030 10:58:16.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.667" endtime="20201030 10:58:16.052"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.667" endtime="20201030 10:58:16.052"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.061" endtime="20201030 10:58:16.079"></status>
</kw>
<msg timestamp="20201030 10:58:16.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.060" endtime="20201030 10:58:16.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.081" endtime="20201030 10:58:16.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.083" endtime="20201030 10:58:16.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.057" endtime="20201030 10:58:16.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.055" endtime="20201030 10:58:16.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.092" endtime="20201030 10:58:16.378"></status>
</kw>
<msg timestamp="20201030 10:58:16.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.091" endtime="20201030 10:58:16.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.382" endtime="20201030 10:58:16.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.391" endtime="20201030 10:58:16.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.088" endtime="20201030 10:58:16.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.086" endtime="20201030 10:58:16.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.397" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.791999999997052e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.750000000001812e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:16.394" endtime="20201030 10:58:16.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.402" level="INFO">${ACCURACY} = {'diff': [8.778000000000952e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.791999999997052e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.790999999997579e-06, 8.7920...</msg>
<status status="PASS" starttime="20201030 10:58:16.398" endtime="20201030 10:58:16.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.406" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.405" endtime="20201030 10:58:16.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.408" level="INFO">VALUE: [8.778000000000952e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.791999999997052e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.790999999997579e-06, 8.792000000000522e-06, 8.708999999999106e-06, 8.763000000001908e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.762999999998439e-06, 8.750000000001812e-06, 8.791999999997052e-06, 8.735999999998773e-06, 8.736999999998246e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.777000000001478e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.804999999997148e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.777999999997482e-06, 8.819999999999661e-06]</msg>
<status status="PASS" starttime="20201030 10:58:16.407" endtime="20201030 10:58:16.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.402" endtime="20201030 10:58:16.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.413" endtime="20201030 10:58:16.433"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.412" endtime="20201030 10:58:16.433"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.411" endtime="20201030 10:58:16.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.053" endtime="20201030 10:58:16.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.053" endtime="20201030 10:58:16.434"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.443" endtime="20201030 10:58:16.461"></status>
</kw>
<msg timestamp="20201030 10:58:16.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.441" endtime="20201030 10:58:16.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.462" endtime="20201030 10:58:16.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.465" endtime="20201030 10:58:16.466"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.438" endtime="20201030 10:58:16.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.436" endtime="20201030 10:58:16.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.474" endtime="20201030 10:58:16.759"></status>
</kw>
<msg timestamp="20201030 10:58:16.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023467042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023475806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.472" endtime="20201030 10:58:16.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023467042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023475806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.763" endtime="20201030 10:58:16.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.771" endtime="20201030 10:58:16.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.470" endtime="20201030 10:58:16.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.468" endtime="20201030 10:58:16.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.778" level="INFO">${RESULT} = [{'diff': 8.763999999997912e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.763000000001908e-06}, {'diff': 8.777999999997482e-06}, {'diff': 8.695000000003006e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:16.775" endtime="20201030 10:58:16.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:16.782" level="INFO">${ACCURACY} = {'diff': [8.763999999997912e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.763000000001908e-06, 8.777999999997482e-06, 8.695000000003006e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.7639...</msg>
<status status="PASS" starttime="20201030 10:58:16.779" endtime="20201030 10:58:16.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.787" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 10:58:16.786" endtime="20201030 10:58:16.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.789" level="INFO">VALUE: [8.763999999997912e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.763000000001908e-06, 8.777999999997482e-06, 8.695000000003006e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.762999999998439e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.708000000003102e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.763000000001908e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.694999999999536e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.763000000001908e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201030 10:58:16.788" endtime="20201030 10:58:16.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.783" endtime="20201030 10:58:16.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.797" endtime="20201030 10:58:16.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.796" endtime="20201030 10:58:16.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.795" endtime="20201030 10:58:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.435" endtime="20201030 10:58:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.434" endtime="20201030 10:58:16.818"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.827" endtime="20201030 10:58:16.843"></status>
</kw>
<msg timestamp="20201030 10:58:16.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.825" endtime="20201030 10:58:16.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.844" endtime="20201030 10:58:16.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.847" endtime="20201030 10:58:16.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.823" endtime="20201030 10:58:16.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.820" endtime="20201030 10:58:16.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.856" endtime="20201030 10:58:17.141"></status>
</kw>
<msg timestamp="20201030 10:58:17.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021348097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.854" endtime="20201030 10:58:17.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021348097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.145" endtime="20201030 10:58:17.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.153" endtime="20201030 10:58:17.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.852" endtime="20201030 10:58:17.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.850" endtime="20201030 10:58:17.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.160" level="INFO">${RESULT} = [{'diff': 8.806000000000092e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.819000000000188e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.764000000001382e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:17.157" endtime="20201030 10:58:17.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.211" level="INFO">${ACCURACY} = {'diff': [8.806000000000092e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.7499...</msg>
<status status="PASS" starttime="20201030 10:58:17.161" endtime="20201030 10:58:17.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.215" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.214" endtime="20201030 10:58:17.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.217" level="INFO">VALUE: [8.806000000000092e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.776999999998009e-06, 8.723000000002146e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.833999999999231e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.832999999999758e-06, 8.736000000002242e-06, 8.666000000000923e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.709000000002576e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201030 10:58:17.216" endtime="20201030 10:58:17.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.212" endtime="20201030 10:58:17.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.222" endtime="20201030 10:58:17.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.221" endtime="20201030 10:58:17.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.220" endtime="20201030 10:58:17.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.819" endtime="20201030 10:58:17.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.818" endtime="20201030 10:58:17.243"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.252" endtime="20201030 10:58:17.270"></status>
</kw>
<msg timestamp="20201030 10:58:17.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.250" endtime="20201030 10:58:17.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.271" endtime="20201030 10:58:17.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.274" endtime="20201030 10:58:17.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.248" endtime="20201030 10:58:17.277"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.246" endtime="20201030 10:58:17.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.284" endtime="20201030 10:58:17.569"></status>
</kw>
<msg timestamp="20201030 10:58:17.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023245653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023254431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.282" endtime="20201030 10:58:17.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023245653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023254431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.573" endtime="20201030 10:58:17.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.582" endtime="20201030 10:58:17.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.280" endtime="20201030 10:58:17.584"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.278" endtime="20201030 10:58:17.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.588" level="INFO">${RESULT} = [{'diff': 8.777999999997482e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.832999999999758e-06}, {'diff': 8.790999999997579e-06}, {'diff': 8.749999999998342e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:17.585" endtime="20201030 10:58:17.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.592" level="INFO">${ACCURACY} = {'diff': [8.777999999997482e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.832999999999758e-06, 8.790999999997579e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.7630...</msg>
<status status="PASS" starttime="20201030 10:58:17.589" endtime="20201030 10:58:17.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.597" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.596" endtime="20201030 10:58:17.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.600" level="INFO">VALUE: [8.777999999997482e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.832999999999758e-06, 8.790999999997579e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.763000000001908e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.762999999998439e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.846999999999328e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.819999999999661e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.777000000001478e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.680000000000493e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.777000000001478e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.777000000001478e-06, 8.749999999998342e-06]</msg>
<status status="PASS" starttime="20201030 10:58:17.598" endtime="20201030 10:58:17.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.593" endtime="20201030 10:58:17.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.605" endtime="20201030 10:58:17.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.603" endtime="20201030 10:58:17.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.602" endtime="20201030 10:58:17.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.244" endtime="20201030 10:58:17.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.243" endtime="20201030 10:58:17.625"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.634" endtime="20201030 10:58:17.652"></status>
</kw>
<msg timestamp="20201030 10:58:17.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.633" endtime="20201030 10:58:17.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.653" endtime="20201030 10:58:17.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.655" endtime="20201030 10:58:17.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.630" endtime="20201030 10:58:17.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.628" endtime="20201030 10:58:17.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.664" endtime="20201030 10:58:17.950"></status>
</kw>
<msg timestamp="20201030 10:58:17.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022869458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.663" endtime="20201030 10:58:17.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022869458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.955" endtime="20201030 10:58:17.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.963" endtime="20201030 10:58:17.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.660" endtime="20201030 10:58:17.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.659" endtime="20201030 10:58:17.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.969" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.791000000001048e-06}, {'diff': 8.791000000001048e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.763999999997912e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:17.966" endtime="20201030 10:58:17.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:17.974" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.7359...</msg>
<status status="PASS" starttime="20201030 10:58:17.970" endtime="20201030 10:58:17.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.979" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 10:58:17.978" endtime="20201030 10:58:17.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.982" level="INFO">VALUE: [8.694999999999536e-06, 8.763999999997912e-06, 8.791000000001048e-06, 8.791000000001048e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.832999999999758e-06, 8.723000000002146e-06, 8.776999999998009e-06, 8.776999999998009e-06, 8.790999999997579e-06, 8.708999999999106e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.694999999999536e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.791999999997052e-06, 8.762999999998439e-06, 8.736999999998246e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.763999999997912e-06]</msg>
<status status="PASS" starttime="20201030 10:58:17.980" endtime="20201030 10:58:17.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.975" endtime="20201030 10:58:17.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.991" endtime="20201030 10:58:18.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.989" endtime="20201030 10:58:18.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.988" endtime="20201030 10:58:18.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.626" endtime="20201030 10:58:18.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.626" endtime="20201030 10:58:18.012"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.020" endtime="20201030 10:58:18.040"></status>
</kw>
<msg timestamp="20201030 10:58:18.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.019" endtime="20201030 10:58:18.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.041" endtime="20201030 10:58:18.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.044" endtime="20201030 10:58:18.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.016" endtime="20201030 10:58:18.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.014" endtime="20201030 10:58:18.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.053" endtime="20201030 10:58:18.339"></status>
</kw>
<msg timestamp="20201030 10:58:18.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023496458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023505222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.051" endtime="20201030 10:58:18.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023496458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023505222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.343" endtime="20201030 10:58:18.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.351" endtime="20201030 10:58:18.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.049" endtime="20201030 10:58:18.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.047" endtime="20201030 10:58:18.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.358" level="INFO">${RESULT} = [{'diff': 8.763999999997912e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.722999999998676e-06}, {'diff': 8.708000000003102e-06}, {'diff': 8.721999999999203e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:18.355" endtime="20201030 10:58:18.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.362" level="INFO">${ACCURACY} = {'diff': [8.763999999997912e-06, 8.806000000000092e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.708000000003102e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.8060...</msg>
<status status="PASS" starttime="20201030 10:58:18.359" endtime="20201030 10:58:18.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.366" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.365" endtime="20201030 10:58:18.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.369" level="INFO">VALUE: [8.763999999997912e-06, 8.806000000000092e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.708000000003102e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.791999999997052e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.722999999998676e-06, 8.776999999998009e-06, 8.777000000001478e-06, 8.680000000000493e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.709000000002576e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201030 10:58:18.367" endtime="20201030 10:58:18.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.363" endtime="20201030 10:58:18.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.374" endtime="20201030 10:58:18.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.372" endtime="20201030 10:58:18.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.371" endtime="20201030 10:58:18.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.013" endtime="20201030 10:58:18.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.012" endtime="20201030 10:58:18.394"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.403" endtime="20201030 10:58:18.420"></status>
</kw>
<msg timestamp="20201030 10:58:18.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.401" endtime="20201030 10:58:18.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.421" endtime="20201030 10:58:18.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.424" endtime="20201030 10:58:18.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.399" endtime="20201030 10:58:18.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.397" endtime="20201030 10:58:18.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.433" endtime="20201030 10:58:18.718"></status>
</kw>
<msg timestamp="20201030 10:58:18.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022635472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.431" endtime="20201030 10:58:18.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022635472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.722" endtime="20201030 10:58:18.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.731" endtime="20201030 10:58:18.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.429" endtime="20201030 10:58:18.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.427" endtime="20201030 10:58:18.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.737" level="INFO">${RESULT} = [{'diff': 8.735999999998773e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.723000000002146e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.792000000000522e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:18.734" endtime="20201030 10:58:18.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:18.741" level="INFO">${ACCURACY} = {'diff': [8.735999999998773e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.8050...</msg>
<status status="PASS" starttime="20201030 10:58:18.738" endtime="20201030 10:58:18.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.746" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 10:58:18.745" endtime="20201030 10:58:18.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.749" level="INFO">VALUE: [8.735999999998773e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.805000000000618e-06, 8.792000000000522e-06, 8.695000000003006e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.763000000001908e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.762999999998439e-06, 8.805000000000618e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.833999999999231e-06, 8.723000000002146e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.805999999996622e-06, 8.750000000001812e-06, 8.737000000001716e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.680000000000493e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06]</msg>
<status status="PASS" starttime="20201030 10:58:18.747" endtime="20201030 10:58:18.750"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.742" endtime="20201030 10:58:18.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.754" endtime="20201030 10:58:18.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.753" endtime="20201030 10:58:18.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.751" endtime="20201030 10:58:18.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.395" endtime="20201030 10:58:18.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.395" endtime="20201030 10:58:18.775"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.784" endtime="20201030 10:58:18.806"></status>
</kw>
<msg timestamp="20201030 10:58:18.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.782" endtime="20201030 10:58:18.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.807" endtime="20201030 10:58:18.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.810" endtime="20201030 10:58:18.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.779" endtime="20201030 10:58:18.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.777" endtime="20201030 10:58:18.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.819" endtime="20201030 10:58:19.106"></status>
</kw>
<msg timestamp="20201030 10:58:19.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024029875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024038667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.817" endtime="20201030 10:58:19.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024029875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024038667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.110" endtime="20201030 10:58:19.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.118" endtime="20201030 10:58:19.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.815" endtime="20201030 10:58:19.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.813" endtime="20201030 10:58:19.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.125" level="INFO">${RESULT} = [{'diff': 8.792000000000522e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.778000000000952e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:19.121" endtime="20201030 10:58:19.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.130" level="INFO">${ACCURACY} = {'diff': [8.792000000000522e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.7499...</msg>
<status status="PASS" starttime="20201030 10:58:19.126" endtime="20201030 10:58:19.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.134" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.133" endtime="20201030 10:58:19.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.137" level="INFO">VALUE: [8.792000000000522e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.762999999998439e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.736999999998246e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.694000000000063e-06, 8.777000000001478e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.722000000002672e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.762999999998439e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.777999999997482e-06, 8.723000000002146e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.708999999999106e-06, 8.8340000000027e-06, 8.750000000001812e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201030 10:58:19.135" endtime="20201030 10:58:19.137"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.131" endtime="20201030 10:58:19.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.142" endtime="20201030 10:58:19.161"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.140" endtime="20201030 10:58:19.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.139" endtime="20201030 10:58:19.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.776" endtime="20201030 10:58:19.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.775" endtime="20201030 10:58:19.162"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.171" endtime="20201030 10:58:19.189"></status>
</kw>
<msg timestamp="20201030 10:58:19.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.169" endtime="20201030 10:58:19.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.191" endtime="20201030 10:58:19.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.193" endtime="20201030 10:58:19.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.167" endtime="20201030 10:58:19.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.165" endtime="20201030 10:58:19.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.202" endtime="20201030 10:58:19.488"></status>
</kw>
<msg timestamp="20201030 10:58:19.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0233325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:19.200" endtime="20201030 10:58:19.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0233325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:19.492" endtime="20201030 10:58:19.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.501" endtime="20201030 10:58:19.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.198" endtime="20201030 10:58:19.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.196" endtime="20201030 10:58:19.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.507" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.776999999998009e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.778000000000952e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:19.504" endtime="20201030 10:58:19.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.511" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.708999999999106e-06, 8.776999999998009e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.7360...</msg>
<status status="PASS" starttime="20201030 10:58:19.508" endtime="20201030 10:58:19.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.516" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.515" endtime="20201030 10:58:19.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.518" level="INFO">VALUE: [8.721999999999203e-06, 8.708999999999106e-06, 8.776999999998009e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.819999999999661e-06, 8.806000000000092e-06, 8.764000000001382e-06, 8.762999999998439e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.762999999998439e-06, 8.833999999999231e-06, 8.763999999997912e-06, 8.736999999998246e-06, 8.736000000002242e-06, 8.708999999999106e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.762999999998439e-06, 8.777000000001478e-06, 8.792000000000522e-06, 8.763000000001908e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.819000000000188e-06]</msg>
<status status="PASS" starttime="20201030 10:58:19.517" endtime="20201030 10:58:19.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.512" endtime="20201030 10:58:19.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.523" endtime="20201030 10:58:19.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.522" endtime="20201030 10:58:19.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.520" endtime="20201030 10:58:19.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.163" endtime="20201030 10:58:19.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.163" endtime="20201030 10:58:19.544"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.553" endtime="20201030 10:58:19.570"></status>
</kw>
<msg timestamp="20201030 10:58:19.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.551" endtime="20201030 10:58:19.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.572" endtime="20201030 10:58:19.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.574" endtime="20201030 10:58:19.576"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.549" endtime="20201030 10:58:19.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.546" endtime="20201030 10:58:19.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.584" endtime="20201030 10:58:19.868"></status>
</kw>
<msg timestamp="20201030 10:58:19.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023684014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.582" endtime="20201030 10:58:19.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023684014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.873" endtime="20201030 10:58:19.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.881" endtime="20201030 10:58:19.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.579" endtime="20201030 10:58:19.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.578" endtime="20201030 10:58:19.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.888" level="INFO">${RESULT} = [{'diff': 8.749999999998342e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.763000000001908e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.846999999999328e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:19.884" endtime="20201030 10:58:19.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:19.892" level="INFO">${ACCURACY} = {'diff': [8.749999999998342e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.763000000001908e-06, 8.763999999997912e-06, 8.846999999999328e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.7910...</msg>
<status status="PASS" starttime="20201030 10:58:19.889" endtime="20201030 10:58:19.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.896" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 10:58:19.895" endtime="20201030 10:58:19.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.899" level="INFO">VALUE: [8.749999999998342e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.763000000001908e-06, 8.763999999997912e-06, 8.846999999999328e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.791000000001048e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.860999999998898e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.722999999998676e-06, 8.778000000000952e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.805000000000618e-06, 8.777999999997482e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201030 10:58:19.897" endtime="20201030 10:58:19.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.893" endtime="20201030 10:58:19.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.905" endtime="20201030 10:58:19.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.903" endtime="20201030 10:58:19.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.902" endtime="20201030 10:58:19.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.545" endtime="20201030 10:58:19.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.544" endtime="20201030 10:58:19.925"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.934" endtime="20201030 10:58:19.957"></status>
</kw>
<msg timestamp="20201030 10:58:19.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.932" endtime="20201030 10:58:19.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.958" endtime="20201030 10:58:19.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.961" endtime="20201030 10:58:19.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.930" endtime="20201030 10:58:19.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.928" endtime="20201030 10:58:19.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.970" endtime="20201030 10:58:20.256"></status>
</kw>
<msg timestamp="20201030 10:58:20.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024043472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024052222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.969" endtime="20201030 10:58:20.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024043472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024052222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.261" endtime="20201030 10:58:20.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.269" endtime="20201030 10:58:20.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.966" endtime="20201030 10:58:20.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.964" endtime="20201030 10:58:20.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.276" level="INFO">${RESULT} = [{'diff': 8.750000000001812e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.750000000001812e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:20.272" endtime="20201030 10:58:20.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:20.281" level="INFO">${ACCURACY} = {'diff': [8.750000000001812e-06, 8.749999999998342e-06, 8.667000000000397e-06, 8.750000000001812e-06, 8.667000000000397e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.7769...</msg>
<status status="PASS" starttime="20201030 10:58:20.276" endtime="20201030 10:58:20.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.285" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 10:58:20.284" endtime="20201030 10:58:20.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.288" level="INFO">VALUE: [8.750000000001812e-06, 8.749999999998342e-06, 8.667000000000397e-06, 8.750000000001812e-06, 8.667000000000397e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.776999999998009e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.736999999998246e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.722999999998676e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.846999999999328e-06, 8.806000000000092e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 10:58:20.286" endtime="20201030 10:58:20.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.281" endtime="20201030 10:58:20.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.293" endtime="20201030 10:58:20.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.291" endtime="20201030 10:58:20.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.290" endtime="20201030 10:58:20.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.926" endtime="20201030 10:58:20.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.926" endtime="20201030 10:58:20.313"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.322" endtime="20201030 10:58:20.340"></status>
</kw>
<msg timestamp="20201030 10:58:20.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.320" endtime="20201030 10:58:20.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.341" endtime="20201030 10:58:20.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.344" endtime="20201030 10:58:20.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.318" endtime="20201030 10:58:20.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.316" endtime="20201030 10:58:20.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.353" endtime="20201030 10:58:20.641"></status>
</kw>
<msg timestamp="20201030 10:58:20.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02283625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:20.351" endtime="20201030 10:58:20.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02283625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:20.645" endtime="20201030 10:58:20.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.654" endtime="20201030 10:58:20.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.349" endtime="20201030 10:58:20.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.347" endtime="20201030 10:58:20.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.660" level="INFO">${RESULT} = [{'diff': 8.735999999998773e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.750000000001812e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:20.657" endtime="20201030 10:58:20.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:20.665" level="INFO">${ACCURACY} = {'diff': [8.735999999998773e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.7780...</msg>
<status status="PASS" starttime="20201030 10:58:20.661" endtime="20201030 10:58:20.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.669" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 10:58:20.668" endtime="20201030 10:58:20.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.671" level="INFO">VALUE: [8.735999999998773e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.860999999998898e-06, 8.763999999997912e-06, 8.737000000001716e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.806000000000092e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.778000000000952e-06, 8.762999999998439e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.763000000001908e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.791000000001048e-06, 8.680999999999967e-06, 8.819000000000188e-06, 8.736999999998246e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.737000000001716e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201030 10:58:20.670" endtime="20201030 10:58:20.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.665" endtime="20201030 10:58:20.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.677" endtime="20201030 10:58:20.696"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.675" endtime="20201030 10:58:20.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.674" endtime="20201030 10:58:20.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.314" endtime="20201030 10:58:20.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.314" endtime="20201030 10:58:20.697"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.706" endtime="20201030 10:58:20.726"></status>
</kw>
<msg timestamp="20201030 10:58:20.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.704" endtime="20201030 10:58:20.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.728" endtime="20201030 10:58:20.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.730" endtime="20201030 10:58:20.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.702" endtime="20201030 10:58:20.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.700" endtime="20201030 10:58:20.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.740" endtime="20201030 10:58:21.026"></status>
</kw>
<msg timestamp="20201030 10:58:21.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025729236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025738, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:20.738" endtime="20201030 10:58:21.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025729236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025738, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:21.031" endtime="20201030 10:58:21.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.039" endtime="20201030 10:58:21.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.735" endtime="20201030 10:58:21.041"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.734" endtime="20201030 10:58:21.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.046" level="INFO">${RESULT} = [{'diff': 8.764000000001382e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.763999999997912e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:21.042" endtime="20201030 10:58:21.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:21.050" level="INFO">${ACCURACY} = {'diff': [8.764000000001382e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.7499...</msg>
<status status="PASS" starttime="20201030 10:58:21.047" endtime="20201030 10:58:21.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.054" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 10:58:21.053" endtime="20201030 10:58:21.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.057" level="INFO">VALUE: [8.764000000001382e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.749999999998342e-06, 8.777000000001478e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.736999999998246e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.805999999996622e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.805000000000618e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201030 10:58:21.055" endtime="20201030 10:58:21.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.051" endtime="20201030 10:58:21.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.062" endtime="20201030 10:58:21.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.061" endtime="20201030 10:58:21.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.060" endtime="20201030 10:58:21.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.698" endtime="20201030 10:58:21.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.698" endtime="20201030 10:58:21.083"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.092" endtime="20201030 10:58:21.109"></status>
</kw>
<msg timestamp="20201030 10:58:21.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.090" endtime="20201030 10:58:21.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.110" endtime="20201030 10:58:21.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.113" endtime="20201030 10:58:21.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.088" endtime="20201030 10:58:21.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.086" endtime="20201030 10:58:21.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.122" endtime="20201030 10:58:21.407"></status>
</kw>
<msg timestamp="20201030 10:58:21.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021651167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.120" endtime="20201030 10:58:21.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021651167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.411" endtime="20201030 10:58:21.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.419" endtime="20201030 10:58:21.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.118" endtime="20201030 10:58:21.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.116" endtime="20201030 10:58:21.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.426" level="INFO">${RESULT} = [{'diff': 8.735999999998773e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.819999999999661e-06}, {'diff': 8.777999999997482e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.749999999998342e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:21.423" endtime="20201030 10:58:21.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:21.431" level="INFO">${ACCURACY} = {'diff': [8.735999999998773e-06, 8.763999999997912e-06, 8.819999999999661e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.792000000000522e-06, 8.7639...</msg>
<status status="PASS" starttime="20201030 10:58:21.427" endtime="20201030 10:58:21.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.436" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 10:58:21.434" endtime="20201030 10:58:21.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.438" level="INFO">VALUE: [8.735999999998773e-06, 8.763999999997912e-06, 8.819999999999661e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.846999999999328e-06, 8.763999999997912e-06, 8.762999999998439e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.694999999999536e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.680000000000493e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201030 10:58:21.437" endtime="20201030 10:58:21.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.432" endtime="20201030 10:58:21.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.443" endtime="20201030 10:58:21.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.442" endtime="20201030 10:58:21.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.440" endtime="20201030 10:58:21.463"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.084" endtime="20201030 10:58:21.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.084" endtime="20201030 10:58:21.464"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.472" endtime="20201030 10:58:21.490"></status>
</kw>
<msg timestamp="20201030 10:58:21.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.471" endtime="20201030 10:58:21.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.491" endtime="20201030 10:58:21.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.494" endtime="20201030 10:58:21.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.468" endtime="20201030 10:58:21.496"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.466" endtime="20201030 10:58:21.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.503" endtime="20201030 10:58:21.790"></status>
</kw>
<msg timestamp="20201030 10:58:21.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.501" endtime="20201030 10:58:21.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.795" endtime="20201030 10:58:21.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.803" endtime="20201030 10:58:21.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.499" endtime="20201030 10:58:21.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.497" endtime="20201030 10:58:21.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.809" level="INFO">${RESULT} = [{'diff': 8.708999999999106e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.832999999999758e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.667000000000397e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:21.806" endtime="20201030 10:58:21.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:21.814" level="INFO">${ACCURACY} = {'diff': [8.708999999999106e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.832999999999758e-06, 8.749999999998342e-06, 8.667000000000397e-06, 8.750000000001812e-06, 8.832999999999758e-06, 8.7780...</msg>
<status status="PASS" starttime="20201030 10:58:21.810" endtime="20201030 10:58:21.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.818" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 10:58:21.817" endtime="20201030 10:58:21.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.820" level="INFO">VALUE: [8.708999999999106e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.832999999999758e-06, 8.749999999998342e-06, 8.667000000000397e-06, 8.750000000001812e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.806000000000092e-06, 8.777999999997482e-06, 8.762999999998439e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.791000000001048e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.776999999998009e-06, 8.707999999999633e-06, 8.832999999999758e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.847000000002797e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.792000000000522e-06, 8.736999999998246e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.847000000002797e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201030 10:58:21.819" endtime="20201030 10:58:21.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.814" endtime="20201030 10:58:21.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.825" endtime="20201030 10:58:21.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.824" endtime="20201030 10:58:21.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.823" endtime="20201030 10:58:21.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.465" endtime="20201030 10:58:21.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.464" endtime="20201030 10:58:21.846"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.855" endtime="20201030 10:58:21.872"></status>
</kw>
<msg timestamp="20201030 10:58:21.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.853" endtime="20201030 10:58:21.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.874" endtime="20201030 10:58:21.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.876" endtime="20201030 10:58:21.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.851" endtime="20201030 10:58:21.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.849" endtime="20201030 10:58:21.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.885" endtime="20201030 10:58:22.172"></status>
</kw>
<msg timestamp="20201030 10:58:22.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.884" endtime="20201030 10:58:22.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.176" endtime="20201030 10:58:22.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.185" endtime="20201030 10:58:22.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.881" endtime="20201030 10:58:22.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.879" endtime="20201030 10:58:22.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.192" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.764000000001382e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:22.188" endtime="20201030 10:58:22.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.196" level="INFO">${ACCURACY} = {'diff': [8.778000000000952e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.7360...</msg>
<status status="PASS" starttime="20201030 10:58:22.192" endtime="20201030 10:58:22.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.200" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.199" endtime="20201030 10:58:22.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.202" level="INFO">VALUE: [8.778000000000952e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.763000000001908e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201030 10:58:22.201" endtime="20201030 10:58:22.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.196" endtime="20201030 10:58:22.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.208" endtime="20201030 10:58:22.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.207" endtime="20201030 10:58:22.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.206" endtime="20201030 10:58:22.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.847" endtime="20201030 10:58:22.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.847" endtime="20201030 10:58:22.229"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.238" endtime="20201030 10:58:22.256"></status>
</kw>
<msg timestamp="20201030 10:58:22.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.236" endtime="20201030 10:58:22.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.257" endtime="20201030 10:58:22.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.260" endtime="20201030 10:58:22.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.234" endtime="20201030 10:58:22.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.231" endtime="20201030 10:58:22.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.269" endtime="20201030 10:58:22.555"></status>
</kw>
<msg timestamp="20201030 10:58:22.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021360417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021369167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.267" endtime="20201030 10:58:22.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021360417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021369167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.559" endtime="20201030 10:58:22.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.567" endtime="20201030 10:58:22.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.265" endtime="20201030 10:58:22.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.263" endtime="20201030 10:58:22.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.574" level="INFO">${RESULT} = [{'diff': 8.750000000001812e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.777000000001478e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.749999999998342e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:22.570" endtime="20201030 10:58:22.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.579" level="INFO">${ACCURACY} = {'diff': [8.750000000001812e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.7500...</msg>
<status status="PASS" starttime="20201030 10:58:22.575" endtime="20201030 10:58:22.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.583" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.582" endtime="20201030 10:58:22.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.586" level="INFO">VALUE: [8.750000000001812e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.777000000001478e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.846999999999328e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.736999999998246e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.709000000002576e-06, 8.735999999998773e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.666000000000923e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201030 10:58:22.584" endtime="20201030 10:58:22.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.579" endtime="20201030 10:58:22.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.591" endtime="20201030 10:58:22.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.589" endtime="20201030 10:58:22.611"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.588" endtime="20201030 10:58:22.611"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.230" endtime="20201030 10:58:22.611"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.229" endtime="20201030 10:58:22.612"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.620" endtime="20201030 10:58:22.635"></status>
</kw>
<msg timestamp="20201030 10:58:22.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.618" endtime="20201030 10:58:22.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.637" endtime="20201030 10:58:22.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.639" endtime="20201030 10:58:22.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.616" endtime="20201030 10:58:22.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.614" endtime="20201030 10:58:22.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.648" endtime="20201030 10:58:22.934"></status>
</kw>
<msg timestamp="20201030 10:58:22.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.647" endtime="20201030 10:58:22.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.938" endtime="20201030 10:58:22.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.947" endtime="20201030 10:58:22.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.644" endtime="20201030 10:58:22.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.643" endtime="20201030 10:58:22.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.953" level="INFO">${RESULT} = [{'diff': 8.792000000000522e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.750000000001812e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:22.950" endtime="20201030 10:58:22.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:22.957" level="INFO">${ACCURACY} = {'diff': [8.792000000000522e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.667000000000397e-06, 8.764000000001382e-06, 8.7640...</msg>
<status status="PASS" starttime="20201030 10:58:22.954" endtime="20201030 10:58:22.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.962" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 10:58:22.961" endtime="20201030 10:58:22.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.964" level="INFO">VALUE: [8.792000000000522e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.667000000000397e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.776999999998009e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.791999999997052e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.737000000001716e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.709000000002576e-06, 8.737000000001716e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.832999999999758e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.777999999997482e-06]</msg>
<status status="PASS" starttime="20201030 10:58:22.963" endtime="20201030 10:58:22.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.958" endtime="20201030 10:58:22.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.969" endtime="20201030 10:58:22.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.968" endtime="20201030 10:58:22.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.967" endtime="20201030 10:58:22.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.612" endtime="20201030 10:58:22.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.612" endtime="20201030 10:58:22.990"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.000" endtime="20201030 10:58:23.021"></status>
</kw>
<msg timestamp="20201030 10:58:23.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.998" endtime="20201030 10:58:23.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.022" endtime="20201030 10:58:23.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.025" endtime="20201030 10:58:23.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.995" endtime="20201030 10:58:23.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.993" endtime="20201030 10:58:23.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.034" endtime="20201030 10:58:23.320"></status>
</kw>
<msg timestamp="20201030 10:58:23.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024094417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.032" endtime="20201030 10:58:23.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024094417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.324" endtime="20201030 10:58:23.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.333" endtime="20201030 10:58:23.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.030" endtime="20201030 10:58:23.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.028" endtime="20201030 10:58:23.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.339" level="INFO">${RESULT} = [{'diff': 8.764000000001382e-06}, {'diff': 8.804999999997148e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.708000000003102e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:23.336" endtime="20201030 10:58:23.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:23.343" level="INFO">${ACCURACY} = {'diff': [8.764000000001382e-06, 8.804999999997148e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.708000000003102e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.7500...</msg>
<status status="PASS" starttime="20201030 10:58:23.340" endtime="20201030 10:58:23.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.348" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 10:58:23.347" endtime="20201030 10:58:23.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.351" level="INFO">VALUE: [8.764000000001382e-06, 8.804999999997148e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.708000000003102e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.805000000000618e-06, 8.778000000000952e-06, 8.736999999998246e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.832999999999758e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.736999999998246e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.694999999999536e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.791999999997052e-06, 8.736000000002242e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201030 10:58:23.349" endtime="20201030 10:58:23.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.344" endtime="20201030 10:58:23.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.356" endtime="20201030 10:58:23.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.355" endtime="20201030 10:58:23.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.353" endtime="20201030 10:58:23.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.991" endtime="20201030 10:58:23.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.990" endtime="20201030 10:58:23.377"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.385" endtime="20201030 10:58:23.403"></status>
</kw>
<msg timestamp="20201030 10:58:23.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.384" endtime="20201030 10:58:23.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.405" endtime="20201030 10:58:23.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.407" endtime="20201030 10:58:23.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.381" endtime="20201030 10:58:23.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.379" endtime="20201030 10:58:23.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.416" endtime="20201030 10:58:23.702"></status>
</kw>
<msg timestamp="20201030 10:58:23.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.415" endtime="20201030 10:58:23.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.706" endtime="20201030 10:58:23.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.714" endtime="20201030 10:58:23.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.412" endtime="20201030 10:58:23.716"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.411" endtime="20201030 10:58:23.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.721" level="INFO">${RESULT} = [{'diff': 8.735999999998773e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.819000000000188e-06}, {'diff': 8.819000000000188e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.721999999999203e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:23.718" endtime="20201030 10:58:23.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:23.726" level="INFO">${ACCURACY} = {'diff': [8.735999999998773e-06, 8.721999999999203e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.7499...</msg>
<status status="PASS" starttime="20201030 10:58:23.722" endtime="20201030 10:58:23.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.730" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 10:58:23.729" endtime="20201030 10:58:23.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.733" level="INFO">VALUE: [8.735999999998773e-06, 8.721999999999203e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.791999999997052e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.707999999999633e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201030 10:58:23.731" endtime="20201030 10:58:23.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.727" endtime="20201030 10:58:23.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.738" endtime="20201030 10:58:23.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.736" endtime="20201030 10:58:23.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.735" endtime="20201030 10:58:23.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.378" endtime="20201030 10:58:23.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.377" endtime="20201030 10:58:23.758"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.767" endtime="20201030 10:58:23.786"></status>
</kw>
<msg timestamp="20201030 10:58:23.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.765" endtime="20201030 10:58:23.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.788" endtime="20201030 10:58:23.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.790" endtime="20201030 10:58:23.792"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.763" endtime="20201030 10:58:23.793"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.761" endtime="20201030 10:58:23.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.799" endtime="20201030 10:58:24.088"></status>
</kw>
<msg timestamp="20201030 10:58:24.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02424475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024253528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:23.798" endtime="20201030 10:58:24.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02424475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024253528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:24.093" endtime="20201030 10:58:24.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.101" endtime="20201030 10:58:24.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.795" endtime="20201030 10:58:24.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.794" endtime="20201030 10:58:24.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.108" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.737000000001716e-06}, {'diff': 8.749999999998342e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:24.104" endtime="20201030 10:58:24.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:24.112" level="INFO">${ACCURACY} = {'diff': [8.778000000000952e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.737000000001716e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.7639...</msg>
<status status="PASS" starttime="20201030 10:58:24.109" endtime="20201030 10:58:24.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.116" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 10:58:24.115" endtime="20201030 10:58:24.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.119" level="INFO">VALUE: [8.778000000000952e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.737000000001716e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.763999999997912e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.763000000001908e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.762999999998439e-06, 8.819000000000188e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.790999999997579e-06, 8.735999999998773e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.847999999998801e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.805000000000618e-06, 8.805000000000618e-06]</msg>
<status status="PASS" starttime="20201030 10:58:24.117" endtime="20201030 10:58:24.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.113" endtime="20201030 10:58:24.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.124" endtime="20201030 10:58:24.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.122" endtime="20201030 10:58:24.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.121" endtime="20201030 10:58:24.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.759" endtime="20201030 10:58:24.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.759" endtime="20201030 10:58:24.144"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.153" endtime="20201030 10:58:24.178"></status>
</kw>
<msg timestamp="20201030 10:58:24.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.151" endtime="20201030 10:58:24.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.179" endtime="20201030 10:58:24.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.182" endtime="20201030 10:58:24.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.149" endtime="20201030 10:58:24.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.147" endtime="20201030 10:58:24.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.191" endtime="20201030 10:58:24.476"></status>
</kw>
<msg timestamp="20201030 10:58:24.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025155417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025164208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.189" endtime="20201030 10:58:24.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025155417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025164208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.480" endtime="20201030 10:58:24.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.489" endtime="20201030 10:58:24.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.187" endtime="20201030 10:58:24.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.185" endtime="20201030 10:58:24.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.495" level="INFO">${RESULT} = [{'diff': 8.791000000001048e-06}, {'diff': 8.777000000001478e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.776999999998009e-06}, {'diff': 8.792000000000522e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:24.492" endtime="20201030 10:58:24.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:24.500" level="INFO">${ACCURACY} = {'diff': [8.791000000001048e-06, 8.777000000001478e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.7780...</msg>
<status status="PASS" starttime="20201030 10:58:24.497" endtime="20201030 10:58:24.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.504" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 10:58:24.503" endtime="20201030 10:58:24.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.507" level="INFO">VALUE: [8.791000000001048e-06, 8.777000000001478e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.776999999998009e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.819999999999661e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.777000000001478e-06, 8.749999999998342e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.791000000001048e-06, 8.764000000001382e-06, 8.777000000001478e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.791999999997052e-06, 8.791000000001048e-06, 8.763999999997912e-06, 8.762999999998439e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.763999999997912e-06]</msg>
<status status="PASS" starttime="20201030 10:58:24.505" endtime="20201030 10:58:24.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.500" endtime="20201030 10:58:24.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.512" endtime="20201030 10:58:24.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.511" endtime="20201030 10:58:24.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.510" endtime="20201030 10:58:24.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.145" endtime="20201030 10:58:24.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.145" endtime="20201030 10:58:24.533"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.542" endtime="20201030 10:58:24.559"></status>
</kw>
<msg timestamp="20201030 10:58:24.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.540" endtime="20201030 10:58:24.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.561" endtime="20201030 10:58:24.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.563" endtime="20201030 10:58:24.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.537" endtime="20201030 10:58:24.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.535" endtime="20201030 10:58:24.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.572" endtime="20201030 10:58:24.858"></status>
</kw>
<msg timestamp="20201030 10:58:24.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023383306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023392069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.571" endtime="20201030 10:58:24.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023383306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023392069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.862" endtime="20201030 10:58:24.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.870" endtime="20201030 10:58:24.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.568" endtime="20201030 10:58:24.872"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.567" endtime="20201030 10:58:24.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.877" level="INFO">${RESULT} = [{'diff': 8.763000000001908e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.806000000000092e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:24.874" endtime="20201030 10:58:24.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:24.882" level="INFO">${ACCURACY} = {'diff': [8.763000000001908e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.860999999998898e-06, 8.7779...</msg>
<status status="PASS" starttime="20201030 10:58:24.878" endtime="20201030 10:58:24.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.886" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 10:58:24.885" endtime="20201030 10:58:24.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.889" level="INFO">VALUE: [8.763000000001908e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.806000000000092e-06, 8.749999999998342e-06, 8.860999999998898e-06, 8.777999999997482e-06, 8.750000000001812e-06, 8.846999999999328e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.763999999997912e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.736999999998246e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.777000000001478e-06, 8.791000000001048e-06, 8.791999999997052e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.805000000000618e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.778000000000952e-06, 8.735999999998773e-06]</msg>
<status status="PASS" starttime="20201030 10:58:24.887" endtime="20201030 10:58:24.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.883" endtime="20201030 10:58:24.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.894" endtime="20201030 10:58:24.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.892" endtime="20201030 10:58:24.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.891" endtime="20201030 10:58:24.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.534" endtime="20201030 10:58:24.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.533" endtime="20201030 10:58:24.914"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.923" endtime="20201030 10:58:24.941"></status>
</kw>
<msg timestamp="20201030 10:58:24.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.921" endtime="20201030 10:58:24.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.943" endtime="20201030 10:58:24.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.945" endtime="20201030 10:58:24.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.919" endtime="20201030 10:58:24.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.917" endtime="20201030 10:58:24.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.954" endtime="20201030 10:58:25.241"></status>
</kw>
<msg timestamp="20201030 10:58:25.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023734625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023743389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.953" endtime="20201030 10:58:25.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023734625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023743389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.246" endtime="20201030 10:58:25.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.254" endtime="20201030 10:58:25.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.950" endtime="20201030 10:58:25.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.948" endtime="20201030 10:58:25.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.261" level="INFO">${RESULT} = [{'diff': 8.764000000001382e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.749999999998342e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:25.257" endtime="20201030 10:58:25.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:25.265" level="INFO">${ACCURACY} = {'diff': [8.764000000001382e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.819000000000188e-06, 8.7499...</msg>
<status status="PASS" starttime="20201030 10:58:25.262" endtime="20201030 10:58:25.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.269" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 10:58:25.268" endtime="20201030 10:58:25.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.272" level="INFO">VALUE: [8.764000000001382e-06, 8.792000000000522e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.819000000000188e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.735999999998773e-06, 8.736999999998246e-06, 8.764000000001382e-06, 8.694000000000063e-06, 8.763999999997912e-06, 8.805000000000618e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.778000000000952e-06, 8.735999999998773e-06, 8.791999999997052e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.819999999999661e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 10:58:25.270" endtime="20201030 10:58:25.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.266" endtime="20201030 10:58:25.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.277" endtime="20201030 10:58:25.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.275" endtime="20201030 10:58:25.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.274" endtime="20201030 10:58:25.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.915" endtime="20201030 10:58:25.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.915" endtime="20201030 10:58:25.297"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.306" endtime="20201030 10:58:25.325"></status>
</kw>
<msg timestamp="20201030 10:58:25.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.304" endtime="20201030 10:58:25.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.326" endtime="20201030 10:58:25.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.329" endtime="20201030 10:58:25.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.302" endtime="20201030 10:58:25.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.300" endtime="20201030 10:58:25.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.338" endtime="20201030 10:58:25.623"></status>
</kw>
<msg timestamp="20201030 10:58:25.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022651333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022660069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.336" endtime="20201030 10:58:25.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022651333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022660069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.627" endtime="20201030 10:58:25.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.635" endtime="20201030 10:58:25.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.334" endtime="20201030 10:58:25.637"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.332" endtime="20201030 10:58:25.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.642" level="INFO">${RESULT} = [{'diff': 8.736000000002242e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.721999999999203e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:25.638" endtime="20201030 10:58:25.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:25.646" level="INFO">${ACCURACY} = {'diff': [8.736000000002242e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.7499...</msg>
<status status="PASS" starttime="20201030 10:58:25.643" endtime="20201030 10:58:25.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.650" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 10:58:25.649" endtime="20201030 10:58:25.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.653" level="INFO">VALUE: [8.736000000002242e-06, 8.764000000001382e-06, 8.763999999997912e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.749999999998342e-06, 8.736000000002242e-06, 8.764000000001382e-06, 8.750000000001812e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.792000000000522e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.819999999999661e-06, 8.805000000000618e-06, 8.832999999999758e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.777999999997482e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.762999999998439e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.777999999997482e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201030 10:58:25.651" endtime="20201030 10:58:25.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.647" endtime="20201030 10:58:25.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.658" endtime="20201030 10:58:25.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.657" endtime="20201030 10:58:25.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.656" endtime="20201030 10:58:25.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.298" endtime="20201030 10:58:25.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.298" endtime="20201030 10:58:25.679"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.688" endtime="20201030 10:58:25.708"></status>
</kw>
<msg timestamp="20201030 10:58:25.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.686" endtime="20201030 10:58:25.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.710" endtime="20201030 10:58:25.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.712" endtime="20201030 10:58:25.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.684" endtime="20201030 10:58:25.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.682" endtime="20201030 10:58:25.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.721" endtime="20201030 10:58:26.007"></status>
</kw>
<msg timestamp="20201030 10:58:26.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.720" endtime="20201030 10:58:26.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.011" endtime="20201030 10:58:26.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.019" endtime="20201030 10:58:26.021"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.717" endtime="20201030 10:58:26.021"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.716" endtime="20201030 10:58:26.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.026" level="INFO">${RESULT} = [{'diff': 2.7834000000000886e-05}, {'diff': 2.212499999999784e-05}, {'diff': 2.3944000000001436e-05}, {'diff': 2.4012999999999812e-05}, {'diff': 2.595899999999901e-05}, {'diff': 2.4027999999998856e-05...</msg>
<status status="PASS" starttime="20201030 10:58:26.023" endtime="20201030 10:58:26.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:26.031" level="INFO">${ACCURACY} = {'diff': [2.7834000000000886e-05, 2.212499999999784e-05, 2.3944000000001436e-05, 2.4012999999999812e-05, 2.595899999999901e-05, 2.4027999999998856e-05, 2.3042000000000895e-05, 2.1221999999997826e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:26.027" endtime="20201030 10:58:26.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.035" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 10:58:26.034" endtime="20201030 10:58:26.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.038" level="INFO">VALUE: [2.7834000000000886e-05, 2.212499999999784e-05, 2.3944000000001436e-05, 2.4012999999999812e-05, 2.595899999999901e-05, 2.4027999999998856e-05, 2.3042000000000895e-05, 2.1221999999997826e-05, 2.6028000000000856e-05, 2.118099999999859e-05, 2.3097999999999175e-05, 2.4971999999998107e-05, 2.4957999999998537e-05, 2.5930000000000397e-05, 2.5041999999999426e-05, 2.5929999999996928e-05, 2.115299999999945e-05, 2.209700000000217e-05, 1.9222000000002765e-05, 2.113899999999988e-05, 2.3999999999999716e-05, 2.305500000000099e-05, 2.4013999999999286e-05, 2.4957999999998537e-05, 2.1165999999999546e-05, 2.497299999999758e-05, 2.4957999999998537e-05, 2.116699999999902e-05, 2.1207999999998256e-05, 2.211099999999827e-05, 2.109700000000117e-05, 2.2083999999998605e-05, 2.0235999999999865e-05, 2.393100000000134e-05, 2.5027999999999856e-05, 2.690299999999826e-05, 2.4014000000002755e-05, 2.0222000000000295e-05, 2.5902000000001257e-05, 2.398699999999962e-05, 2.4971999999998107e-05, 2.593099999999987e-05, 2.59170000000003e-05, 2.3986000000000146e-05, 2.4014000000002755e-05, 2.3986000000000146e-05, 2.4999999999997247e-05, 2.69309999999974e-05, 2.3070000000000035e-05, 2.3056000000000465e-05]</msg>
<status status="PASS" starttime="20201030 10:58:26.036" endtime="20201030 10:58:26.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.032" endtime="20201030 10:58:26.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.044" endtime="20201030 10:58:26.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.042" endtime="20201030 10:58:26.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.040" endtime="20201030 10:58:26.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.680" endtime="20201030 10:58:26.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.680" endtime="20201030 10:58:26.065"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.073" endtime="20201030 10:58:26.095"></status>
</kw>
<msg timestamp="20201030 10:58:26.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.072" endtime="20201030 10:58:26.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.096" endtime="20201030 10:58:26.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.099" endtime="20201030 10:58:26.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.069" endtime="20201030 10:58:26.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.067" endtime="20201030 10:58:26.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.108" endtime="20201030 10:58:26.395"></status>
</kw>
<msg timestamp="20201030 10:58:26.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024075917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024110472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.106" endtime="20201030 10:58:26.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024075917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024110472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.399" endtime="20201030 10:58:26.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.408" endtime="20201030 10:58:26.409"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.104" endtime="20201030 10:58:26.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.102" endtime="20201030 10:58:26.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.414" level="INFO">${RESULT} = [{'diff': 3.4555000000002084e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.115299999999945e-05}, {'diff': 2.4082999999997662e-05}, {'diff': 2.5930000000000397e-05}, {'diff': 2.593099999999987e-05...</msg>
<status status="PASS" starttime="20201030 10:58:26.411" endtime="20201030 10:58:26.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:26.418" level="INFO">${ACCURACY} = {'diff': [3.4555000000002084e-05, 2.3999999999999716e-05, 2.115299999999945e-05, 2.4082999999997662e-05, 2.5930000000000397e-05, 2.593099999999987e-05, 2.211099999999827e-05, 2.12090000000012e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 10:58:26.415" endtime="20201030 10:58:26.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.423" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 10:58:26.422" endtime="20201030 10:58:26.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.425" level="INFO">VALUE: [3.4555000000002084e-05, 2.3999999999999716e-05, 2.115299999999945e-05, 2.4082999999997662e-05, 2.5930000000000397e-05, 2.593099999999987e-05, 2.211099999999827e-05, 2.12090000000012e-05, 2.411100000000027e-05, 2.0165999999998546e-05, 2.311099999999927e-05, 2.115299999999945e-05, 2.3070000000000035e-05, 2.116699999999902e-05, 2.5000000000000716e-05, 2.1207999999998256e-05, 2.116699999999902e-05, 2.4013999999999286e-05, 2.4027999999998856e-05, 2.4013999999999286e-05, 2.1165999999999546e-05, 2.309700000000317e-05, 2.20969999999987e-05, 2.113899999999988e-05, 2.116699999999902e-05, 2.5068999999999092e-05, 2.5000000000000716e-05, 2.306900000000056e-05, 2.4986000000001146e-05, 2.2152000000000976e-05, 2.6902000000002257e-05, 2.3083999999999605e-05, 2.206899999999956e-05, 2.306900000000056e-05, 2.588899999999769e-05, 2.3972000000000576e-05, 2.118099999999859e-05, 2.115299999999945e-05, 2.69170000000013e-05, 2.2083999999998605e-05, 2.3083999999999605e-05, 2.311099999999927e-05, 2.4151999999999507e-05, 2.4041999999998426e-05, 2.113899999999988e-05, 2.016699999999802e-05, 2.119500000000163e-05, 2.0222000000000295e-05, 2.408300000000113e-05, 2.4985999999997677e-05]</msg>
<status status="PASS" starttime="20201030 10:58:26.424" endtime="20201030 10:58:26.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.419" endtime="20201030 10:58:26.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.430" endtime="20201030 10:58:26.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.429" endtime="20201030 10:58:26.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.427" endtime="20201030 10:58:26.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.066" endtime="20201030 10:58:26.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.065" endtime="20201030 10:58:26.451"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.459" endtime="20201030 10:58:26.482"></status>
</kw>
<msg timestamp="20201030 10:58:26.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.458" endtime="20201030 10:58:26.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.483" endtime="20201030 10:58:26.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.485" endtime="20201030 10:58:26.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.455" endtime="20201030 10:58:26.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.453" endtime="20201030 10:58:26.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.494" endtime="20201030 10:58:26.782"></status>
</kw>
<msg timestamp="20201030 10:58:26.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024804472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024818917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.493" endtime="20201030 10:58:26.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024804472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024818917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.786" endtime="20201030 10:58:26.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.795" endtime="20201030 10:58:26.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.490" endtime="20201030 10:58:26.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.489" endtime="20201030 10:58:26.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.801" level="INFO">${RESULT} = [{'diff': 1.4444999999998348e-05}, {'diff': 2.690300000000173e-05}, {'diff': 2.4971999999998107e-05}, {'diff': 2.5014000000000286e-05}, {'diff': 2.3986000000000146e-05}, {'diff': 2.593099999999987e-05...</msg>
<status status="PASS" starttime="20201030 10:58:26.798" endtime="20201030 10:58:26.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:26.805" level="INFO">${ACCURACY} = {'diff': [1.4444999999998348e-05, 2.690300000000173e-05, 2.4971999999998107e-05, 2.5014000000000286e-05, 2.3986000000000146e-05, 2.593099999999987e-05, 2.2097999999998175e-05, 2.5027999999999856e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:26.802" endtime="20201030 10:58:26.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.810" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 10:58:26.809" endtime="20201030 10:58:26.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.813" level="INFO">VALUE: [1.4444999999998348e-05, 2.690300000000173e-05, 2.4971999999998107e-05, 2.5014000000000286e-05, 2.3986000000000146e-05, 2.593099999999987e-05, 2.2097999999998175e-05, 2.5027999999999856e-05, 2.5957999999999537e-05, 2.4054999999998522e-05, 2.211099999999827e-05, 2.1180000000002586e-05, 2.12090000000012e-05, 2.497300000000105e-05, 2.211100000000174e-05, 2.4098000000000175e-05, 2.119500000000163e-05, 2.691699999999783e-05, 2.1193999999998686e-05, 2.5916000000000827e-05, 2.1166000000003016e-05, 2.0166000000002016e-05, 2.4986000000001146e-05, 2.4986000000001146e-05, 2.213900000000088e-05, 2.594499999999944e-05, 2.3999999999999716e-05, 2.212499999999784e-05, 2.308300000000013e-05, 2.0208000000000725e-05, 2.4943999999998967e-05, 2.4041999999998426e-05, 2.3152000000001977e-05, 2.113899999999988e-05, 2.116699999999902e-05, 2.311100000000274e-05, 2.406900000000156e-05, 2.1193999999998686e-05, 2.3056000000000465e-05, 2.118099999999859e-05, 2.1180000000002586e-05, 2.018099999999759e-05, 2.112500000000031e-05, 2.6929999999997928e-05, 2.590300000000073e-05, 2.2207999999999256e-05, 2.5014000000000286e-05, 2.3999999999999716e-05, 2.4972000000001576e-05, 2.6901999999998788e-05]</msg>
<status status="PASS" starttime="20201030 10:58:26.811" endtime="20201030 10:58:26.814"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.806" endtime="20201030 10:58:26.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.818" endtime="20201030 10:58:26.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.817" endtime="20201030 10:58:26.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.815" endtime="20201030 10:58:26.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.452" endtime="20201030 10:58:26.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.451" endtime="20201030 10:58:26.839"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.847" endtime="20201030 10:58:26.868"></status>
</kw>
<msg timestamp="20201030 10:58:26.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.846" endtime="20201030 10:58:26.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.870" endtime="20201030 10:58:26.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.872" endtime="20201030 10:58:26.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.843" endtime="20201030 10:58:26.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.841" endtime="20201030 10:58:26.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.881" endtime="20201030 10:58:27.166"></status>
</kw>
<msg timestamp="20201030 10:58:27.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023574708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.880" endtime="20201030 10:58:27.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023574708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.170" endtime="20201030 10:58:27.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.178" endtime="20201030 10:58:27.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.877" endtime="20201030 10:58:27.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.875" endtime="20201030 10:58:27.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.185" level="INFO">${RESULT} = [{'diff': 3.069500000000072e-05}, {'diff': 2.4943999999998967e-05}, {'diff': 2.593099999999987e-05}, {'diff': 2.406900000000156e-05}, {'diff': 2.5027999999999856e-05}, {'diff': 2.5930000000000397e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:27.182" endtime="20201030 10:58:27.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.190" level="INFO">${ACCURACY} = {'diff': [3.069500000000072e-05, 2.4943999999998967e-05, 2.593099999999987e-05, 2.406900000000156e-05, 2.5027999999999856e-05, 2.5930000000000397e-05, 2.5916000000000827e-05, 2.2084000000002074e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:27.186" endtime="20201030 10:58:27.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.194" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.193" endtime="20201030 10:58:27.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.197" level="INFO">VALUE: [3.069500000000072e-05, 2.4943999999998967e-05, 2.593099999999987e-05, 2.406900000000156e-05, 2.5027999999999856e-05, 2.5930000000000397e-05, 2.5916000000000827e-05, 2.2084000000002074e-05, 2.211100000000174e-05, 2.3042000000000895e-05, 2.3999999999999716e-05, 2.597300000000205e-05, 2.0235999999999865e-05, 2.690299999999826e-05, 2.3068999999997092e-05, 2.3999999999999716e-05, 2.591699999999683e-05, 2.2152000000000976e-05, 2.112500000000031e-05, 2.5985999999998677e-05, 2.5027999999999856e-05, 2.211100000000174e-05, 2.4985999999997677e-05, 2.6874999999999122e-05, 2.119499999999816e-05, 2.113899999999988e-05, 2.4957999999998537e-05, 2.595900000000248e-05, 2.30969999999997e-05, 2.018100000000106e-05, 2.209700000000217e-05, 2.111100000000074e-05, 2.113899999999988e-05, 2.493100000000234e-05, 2.4958000000002006e-05, 2.5943999999999967e-05, 2.105499999999899e-05, 2.211100000000174e-05, 2.3999999999999716e-05, 2.4971999999998107e-05, 2.590300000000073e-05, 2.4943999999998967e-05, 2.308300000000013e-05, 2.311099999999927e-05, 2.413899999999941e-05, 2.211100000000174e-05, 2.398700000000309e-05, 2.111100000000074e-05, 2.306900000000056e-05, 2.204100000000042e-05]</msg>
<status status="PASS" starttime="20201030 10:58:27.195" endtime="20201030 10:58:27.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.191" endtime="20201030 10:58:27.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.202" endtime="20201030 10:58:27.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.200" endtime="20201030 10:58:27.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.199" endtime="20201030 10:58:27.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.840" endtime="20201030 10:58:27.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.839" endtime="20201030 10:58:27.223"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.231" endtime="20201030 10:58:27.251"></status>
</kw>
<msg timestamp="20201030 10:58:27.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.230" endtime="20201030 10:58:27.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.252" endtime="20201030 10:58:27.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.255" endtime="20201030 10:58:27.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.227" endtime="20201030 10:58:27.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.225" endtime="20201030 10:58:27.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.264" endtime="20201030 10:58:27.552"></status>
</kw>
<msg timestamp="20201030 10:58:27.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021452375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021476389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.262" endtime="20201030 10:58:27.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021452375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021476389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.557" endtime="20201030 10:58:27.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.565" endtime="20201030 10:58:27.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.260" endtime="20201030 10:58:27.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.258" endtime="20201030 10:58:27.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.572" level="INFO">${RESULT} = [{'diff': 2.4013999999999286e-05}, {'diff': 2.5027999999999856e-05}, {'diff': 2.2111999999997745e-05}, {'diff': 2.211100000000174e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.112500000000031e-05...</msg>
<status status="PASS" starttime="20201030 10:58:27.568" endtime="20201030 10:58:27.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.576" level="INFO">${ACCURACY} = {'diff': [2.4013999999999286e-05, 2.5027999999999856e-05, 2.2111999999997745e-05, 2.211100000000174e-05, 2.3042000000000895e-05, 2.112500000000031e-05, 2.4999999999997247e-05, 2.120899999999773e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:27.573" endtime="20201030 10:58:27.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.580" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.579" endtime="20201030 10:58:27.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.583" level="INFO">VALUE: [2.4013999999999286e-05, 2.5027999999999856e-05, 2.2111999999997745e-05, 2.211100000000174e-05, 2.3042000000000895e-05, 2.112500000000031e-05, 2.4999999999997247e-05, 2.120899999999773e-05, 2.3055999999996996e-05, 2.113899999999988e-05, 2.494500000000191e-05, 2.113899999999988e-05, 2.4943999999998967e-05, 2.215300000000045e-05, 2.4028000000002325e-05, 2.115299999999945e-05, 2.2041999999999895e-05, 2.494499999999844e-05, 2.6888999999998692e-05, 2.3999999999999716e-05, 2.3068999999997092e-05, 2.688900000000216e-05, 2.019500000000063e-05, 2.494499999999844e-05, 2.688900000000216e-05, 2.030500000000171e-05, 2.4040999999998952e-05, 2.113899999999988e-05, 2.304100000000142e-05, 2.4930000000002867e-05, 2.5958000000003006e-05, 2.211099999999827e-05, 2.3083999999999605e-05, 2.215300000000045e-05, 2.115299999999945e-05, 2.4985999999997677e-05, 2.218099999999959e-05, 2.211099999999827e-05, 2.112500000000031e-05, 2.1151999999999976e-05, 2.594499999999944e-05, 2.4944000000002436e-05, 2.590300000000073e-05, 2.1221999999997826e-05, 2.4971999999998107e-05, 2.3056000000000465e-05, 2.113899999999988e-05, 2.688900000000216e-05, 2.4013999999999286e-05, 2.5957999999999537e-05]</msg>
<status status="PASS" starttime="20201030 10:58:27.581" endtime="20201030 10:58:27.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.576" endtime="20201030 10:58:27.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.588" endtime="20201030 10:58:27.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.586" endtime="20201030 10:58:27.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.585" endtime="20201030 10:58:27.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.224" endtime="20201030 10:58:27.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.223" endtime="20201030 10:58:27.608"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.617" endtime="20201030 10:58:27.638"></status>
</kw>
<msg timestamp="20201030 10:58:27.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.615" endtime="20201030 10:58:27.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.639" endtime="20201030 10:58:27.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.642" endtime="20201030 10:58:27.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.613" endtime="20201030 10:58:27.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.611" endtime="20201030 10:58:27.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.651" endtime="20201030 10:58:27.935"></status>
</kw>
<msg timestamp="20201030 10:58:27.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.649" endtime="20201030 10:58:27.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.940" endtime="20201030 10:58:27.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.948" endtime="20201030 10:58:27.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.646" endtime="20201030 10:58:27.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.645" endtime="20201030 10:58:27.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.955" level="INFO">${RESULT} = [{'diff': 2.7888999999999692e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.115299999999945e-05}, {'diff': 2.213900000000088e-05}, {'diff': 2.4041999999998426e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:27.952" endtime="20201030 10:58:27.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:27.959" level="INFO">${ACCURACY} = {'diff': [2.7888999999999692e-05, 2.112500000000031e-05, 2.590300000000073e-05, 2.115299999999945e-05, 2.213900000000088e-05, 2.4041999999998426e-05, 2.0194000000001155e-05, 2.408300000000113e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 10:58:27.956" endtime="20201030 10:58:27.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.963" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 10:58:27.962" endtime="20201030 10:58:27.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.966" level="INFO">VALUE: [2.7888999999999692e-05, 2.112500000000031e-05, 2.590300000000073e-05, 2.115299999999945e-05, 2.213900000000088e-05, 2.4041999999998426e-05, 2.0194000000001155e-05, 2.408300000000113e-05, 2.2152000000000976e-05, 2.115299999999945e-05, 2.495899999999801e-05, 2.1207999999998256e-05, 2.4056000000001465e-05, 2.5916000000000827e-05, 2.0165999999998546e-05, 2.4028000000002325e-05, 2.308300000000013e-05, 2.4971999999998107e-05, 2.02090000000002e-05, 2.212500000000131e-05, 2.5943999999999967e-05, 2.5041999999999426e-05, 2.4068999999998092e-05, 2.0263999999999005e-05, 2.209700000000217e-05, 2.215300000000045e-05, 1.9291999999997145e-05, 2.3054999999997522e-05, 2.305500000000099e-05, 2.0222000000000295e-05, 2.212500000000131e-05, 2.5999999999998247e-05, 2.4013999999999286e-05, 2.5013000000000812e-05, 2.216700000000002e-05, 2.687500000000259e-05, 2.018100000000106e-05, 2.0235999999999865e-05, 2.4999999999997247e-05, 2.112500000000031e-05, 2.59170000000003e-05, 2.4055999999997996e-05, 2.0208000000000725e-05, 2.3040999999997952e-05, 2.4013999999999286e-05, 2.2069999999999035e-05, 2.302700000000185e-05, 2.306900000000056e-05, 2.306900000000056e-05, 2.5040999999999952e-05]</msg>
<status status="PASS" starttime="20201030 10:58:27.964" endtime="20201030 10:58:27.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.960" endtime="20201030 10:58:27.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.972" endtime="20201030 10:58:27.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.970" endtime="20201030 10:58:27.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.969" endtime="20201030 10:58:27.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.609" endtime="20201030 10:58:27.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.609" endtime="20201030 10:58:27.992"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.001" endtime="20201030 10:58:28.019"></status>
</kw>
<msg timestamp="20201030 10:58:28.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.999" endtime="20201030 10:58:28.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.021" endtime="20201030 10:58:28.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.023" endtime="20201030 10:58:28.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.997" endtime="20201030 10:58:28.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.995" endtime="20201030 10:58:28.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.032" endtime="20201030 10:58:28.320"></status>
</kw>
<msg timestamp="20201030 10:58:28.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020499917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.031" endtime="20201030 10:58:28.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020499917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.324" endtime="20201030 10:58:28.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.332" endtime="20201030 10:58:28.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.028" endtime="20201030 10:58:28.335"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.026" endtime="20201030 10:58:28.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.339" level="INFO">${RESULT} = [{'diff': 1.4500000000000624e-05}, {'diff': 2.4972000000001576e-05}, {'diff': 2.4026999999999382e-05}, {'diff': 2.5930000000000397e-05}, {'diff': 2.495900000000148e-05}, {'diff': 2.4999999999997247e-0...</msg>
<status status="PASS" starttime="20201030 10:58:28.336" endtime="20201030 10:58:28.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:28.344" level="INFO">${ACCURACY} = {'diff': [1.4500000000000624e-05, 2.4972000000001576e-05, 2.4026999999999382e-05, 2.5930000000000397e-05, 2.495900000000148e-05, 2.4999999999997247e-05, 2.20969999999987e-05, 2.5000000000000716e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:28.340" endtime="20201030 10:58:28.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.348" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 10:58:28.347" endtime="20201030 10:58:28.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.351" level="INFO">VALUE: [1.4500000000000624e-05, 2.4972000000001576e-05, 2.4026999999999382e-05, 2.5930000000000397e-05, 2.495900000000148e-05, 2.4999999999997247e-05, 2.20969999999987e-05, 2.5000000000000716e-05, 2.5014000000000286e-05, 2.59170000000003e-05, 2.113900000000335e-05, 2.1151999999999976e-05, 2.1165999999999546e-05, 2.306900000000056e-05, 2.4985999999997677e-05, 2.1221999999997826e-05, 2.0237000000002808e-05, 2.305500000000099e-05, 2.306900000000056e-05, 2.113899999999988e-05, 2.4028000000002325e-05, 2.4056000000001465e-05, 2.7013999999998817e-05, 2.1179999999999116e-05, 2.019500000000063e-05, 2.5014000000000286e-05, 2.4958000000002006e-05, 2.019499999999716e-05, 2.4971999999998107e-05, 2.6901999999998788e-05, 2.113899999999988e-05, 2.208299999999913e-05, 2.0180000000001586e-05, 2.593099999999987e-05, 2.59170000000003e-05, 2.4986000000001146e-05, 2.2111999999997745e-05, 2.306900000000056e-05, 2.311099999999927e-05, 2.4056000000001465e-05, 2.1179999999999116e-05, 2.2138000000001407e-05, 2.0208000000000725e-05, 2.4014000000002755e-05, 2.3040999999997952e-05, 2.30969999999997e-05, 2.309700000000317e-05, 2.5943999999999967e-05, 2.59170000000003e-05, 2.3083999999999605e-05]</msg>
<status status="PASS" starttime="20201030 10:58:28.350" endtime="20201030 10:58:28.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.345" endtime="20201030 10:58:28.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.356" endtime="20201030 10:58:28.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.355" endtime="20201030 10:58:28.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.353" endtime="20201030 10:58:28.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.993" endtime="20201030 10:58:28.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.993" endtime="20201030 10:58:28.377"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.385" endtime="20201030 10:58:28.408"></status>
</kw>
<msg timestamp="20201030 10:58:28.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.384" endtime="20201030 10:58:28.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.410" endtime="20201030 10:58:28.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.412" endtime="20201030 10:58:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.381" endtime="20201030 10:58:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.379" endtime="20201030 10:58:28.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.421" endtime="20201030 10:58:28.709"></status>
</kw>
<msg timestamp="20201030 10:58:28.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022987264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023023764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.419" endtime="20201030 10:58:28.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022987264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023023764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.713" endtime="20201030 10:58:28.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.721" endtime="20201030 10:58:28.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.417" endtime="20201030 10:58:28.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.415" endtime="20201030 10:58:28.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.728" level="INFO">${RESULT} = [{'diff': 3.649999999999834e-05}, {'diff': 2.687500000000259e-05}, {'diff': 2.3083999999999605e-05}, {'diff': 2.218099999999959e-05}, {'diff': 2.5000000000000716e-05}, {'diff': 2.20969999999987e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:28.725" endtime="20201030 10:58:28.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:28.732" level="INFO">${ACCURACY} = {'diff': [3.649999999999834e-05, 2.687500000000259e-05, 2.3083999999999605e-05, 2.218099999999959e-05, 2.5000000000000716e-05, 2.20969999999987e-05, 2.1151999999999976e-05, 2.494499999999844e-05, 2.21...</msg>
<status status="PASS" starttime="20201030 10:58:28.729" endtime="20201030 10:58:28.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.736" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 10:58:28.735" endtime="20201030 10:58:28.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.739" level="INFO">VALUE: [3.649999999999834e-05, 2.687500000000259e-05, 2.3083999999999605e-05, 2.218099999999959e-05, 2.5000000000000716e-05, 2.20969999999987e-05, 2.1151999999999976e-05, 2.494499999999844e-05, 2.212500000000131e-05, 2.493099999999887e-05, 2.495900000000148e-05, 2.5972000000002576e-05, 2.3082999999996662e-05, 2.209700000000217e-05, 2.4958000000002006e-05, 2.20969999999987e-05, 2.3999999999999716e-05, 2.4028000000002325e-05, 2.3042000000000895e-05, 2.593099999999987e-05, 2.016699999999802e-05, 2.593099999999987e-05, 2.1151999999999976e-05, 2.20969999999987e-05, 2.206899999999956e-05, 2.119500000000163e-05, 2.5082999999998662e-05, 2.3999999999999716e-05, 2.1137999999996937e-05, 2.311099999999927e-05, 2.1138000000000406e-05, 2.688900000000216e-05, 2.4958000000002006e-05, 2.6846999999999982e-05, 2.115299999999945e-05, 2.4013999999999286e-05, 2.3028000000001325e-05, 2.3986000000000146e-05, 2.593099999999987e-05, 2.112500000000031e-05, 2.306900000000056e-05, 2.212500000000131e-05, 2.315300000000145e-05, 2.4943999999998967e-05, 2.3999999999999716e-05, 2.3042000000000895e-05, 2.3986000000000146e-05, 2.590299999999726e-05, 2.5957999999999537e-05, 2.211099999999827e-05]</msg>
<status status="PASS" starttime="20201030 10:58:28.737" endtime="20201030 10:58:28.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.733" endtime="20201030 10:58:28.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.744" endtime="20201030 10:58:28.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.742" endtime="20201030 10:58:28.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.741" endtime="20201030 10:58:28.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.378" endtime="20201030 10:58:28.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.377" endtime="20201030 10:58:28.765"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.773" endtime="20201030 10:58:28.793"></status>
</kw>
<msg timestamp="20201030 10:58:28.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.772" endtime="20201030 10:58:28.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.794" endtime="20201030 10:58:28.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.796" endtime="20201030 10:58:28.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.769" endtime="20201030 10:58:28.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.767" endtime="20201030 10:58:28.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.806" endtime="20201030 10:58:29.091"></status>
</kw>
<msg timestamp="20201030 10:58:29.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.804" endtime="20201030 10:58:29.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.096" endtime="20201030 10:58:29.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.104" endtime="20201030 10:58:29.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.802" endtime="20201030 10:58:29.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.800" endtime="20201030 10:58:29.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.111" level="INFO">${RESULT} = [{'diff': 1.3555999999997903e-05}, {'diff': 2.115299999999945e-05}, {'diff': 2.302700000000185e-05}, {'diff': 2.3028000000001325e-05}, {'diff': 2.212500000000131e-05}, {'diff': 2.5971999999999107e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:29.108" endtime="20201030 10:58:29.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.115" level="INFO">${ACCURACY} = {'diff': [1.3555999999997903e-05, 2.115299999999945e-05, 2.302700000000185e-05, 2.3028000000001325e-05, 2.212500000000131e-05, 2.5971999999999107e-05, 2.4028000000002325e-05, 2.211100000000174e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:29.112" endtime="20201030 10:58:29.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.119" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.118" endtime="20201030 10:58:29.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.122" level="INFO">VALUE: [1.3555999999997903e-05, 2.115299999999945e-05, 2.302700000000185e-05, 2.3028000000001325e-05, 2.212500000000131e-05, 2.5971999999999107e-05, 2.4028000000002325e-05, 2.211100000000174e-05, 2.2014000000000755e-05, 2.3972000000000576e-05, 2.118099999999859e-05, 2.5957999999999537e-05, 2.119499999999816e-05, 2.5887999999998218e-05, 2.5000000000000716e-05, 2.5014000000000286e-05, 2.113899999999988e-05, 2.50970000000017e-05, 2.3056000000000465e-05, 2.3999999999999716e-05, 2.5985999999998677e-05, 2.215300000000045e-05, 2.308300000000013e-05, 2.112499999999684e-05, 2.4013999999999286e-05, 2.215299999999698e-05, 2.213899999999741e-05, 2.5027999999999856e-05, 2.112500000000031e-05, 2.019500000000063e-05, 2.691699999999783e-05, 2.02769999999991e-05, 2.412500000000331e-05, 2.0194000000001155e-05, 2.590300000000073e-05, 2.5916000000000827e-05, 2.5014000000000286e-05, 2.1193999999998686e-05, 2.593099999999987e-05, 2.215300000000045e-05, 2.4027999999998856e-05, 2.1193999999998686e-05, 2.0222000000000295e-05, 2.4042000000001895e-05, 2.3055999999996996e-05, 2.5930000000000397e-05, 2.5041999999999426e-05, 2.5027999999999856e-05, 2.5985999999998677e-05, 2.1208000000001725e-05]</msg>
<status status="PASS" starttime="20201030 10:58:29.120" endtime="20201030 10:58:29.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.116" endtime="20201030 10:58:29.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.128" endtime="20201030 10:58:29.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.126" endtime="20201030 10:58:29.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.125" endtime="20201030 10:58:29.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.766" endtime="20201030 10:58:29.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.765" endtime="20201030 10:58:29.149"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.157" endtime="20201030 10:58:29.179"></status>
</kw>
<msg timestamp="20201030 10:58:29.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.156" endtime="20201030 10:58:29.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.181" endtime="20201030 10:58:29.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.183" endtime="20201030 10:58:29.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.153" endtime="20201030 10:58:29.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.151" endtime="20201030 10:58:29.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.192" endtime="20201030 10:58:29.479"></status>
</kw>
<msg timestamp="20201030 10:58:29.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024906222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024930264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.191" endtime="20201030 10:58:29.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024906222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024930264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.483" endtime="20201030 10:58:29.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.492" endtime="20201030 10:58:29.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.188" endtime="20201030 10:58:29.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.186" endtime="20201030 10:58:29.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.498" level="INFO">${RESULT} = [{'diff': 2.4042000000001895e-05}, {'diff': 2.0222000000000295e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.4986000000001146e-05}, {'diff': 2.5013999999996817e-05}, {'diff': 2.308300000000013e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:29.495" endtime="20201030 10:58:29.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.503" level="INFO">${ACCURACY} = {'diff': [2.4042000000001895e-05, 2.0222000000000295e-05, 2.59170000000003e-05, 2.4986000000001146e-05, 2.5013999999996817e-05, 2.308300000000013e-05, 2.590300000000073e-05, 2.4040999999998952e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:29.499" endtime="20201030 10:58:29.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.508" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.507" endtime="20201030 10:58:29.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.510" level="INFO">VALUE: [2.4042000000001895e-05, 2.0222000000000295e-05, 2.59170000000003e-05, 2.4986000000001146e-05, 2.5013999999996817e-05, 2.308300000000013e-05, 2.590300000000073e-05, 2.4040999999998952e-05, 2.3083999999999605e-05, 2.5985999999998677e-05, 2.593099999999987e-05, 2.4958000000002006e-05, 2.5971999999999107e-05, 2.598700000000162e-05, 2.494500000000191e-05, 2.212500000000131e-05, 2.215299999999698e-05, 2.4068999999998092e-05, 2.4026999999999382e-05, 2.5930000000000397e-05, 2.1179999999999116e-05, 2.0222000000000295e-05, 2.2084000000002074e-05, 2.3999999999999716e-05, 2.5957999999999537e-05, 2.5958000000003006e-05, 2.3056000000000465e-05, 2.3070000000000035e-05, 2.111099999999727e-05, 2.594499999999944e-05, 2.495899999999801e-05, 2.5027000000000382e-05, 2.20969999999987e-05, 2.405500000000199e-05, 2.1193999999998686e-05, 2.3042000000000895e-05, 2.306900000000056e-05, 2.5985999999998677e-05, 2.215300000000045e-05, 2.1179999999999116e-05, 2.6874999999999122e-05, 2.497299999999758e-05, 2.20969999999987e-05, 2.6014000000001286e-05, 2.019500000000063e-05, 2.019500000000063e-05, 2.1222000000001295e-05, 2.5986000000002146e-05, 2.5943999999999967e-05, 2.1165999999999546e-05]</msg>
<status status="PASS" starttime="20201030 10:58:29.509" endtime="20201030 10:58:29.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.504" endtime="20201030 10:58:29.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.515" endtime="20201030 10:58:29.534"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.514" endtime="20201030 10:58:29.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.512" endtime="20201030 10:58:29.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.149" endtime="20201030 10:58:29.536"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.149" endtime="20201030 10:58:29.536"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.544" endtime="20201030 10:58:29.566"></status>
</kw>
<msg timestamp="20201030 10:58:29.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.543" endtime="20201030 10:58:29.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.567" endtime="20201030 10:58:29.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.570" endtime="20201030 10:58:29.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.540" endtime="20201030 10:58:29.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.538" endtime="20201030 10:58:29.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.579" endtime="20201030 10:58:29.864"></status>
</kw>
<msg timestamp="20201030 10:58:29.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024467306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024478889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.577" endtime="20201030 10:58:29.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024467306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024478889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.869" endtime="20201030 10:58:29.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.877" endtime="20201030 10:58:29.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.575" endtime="20201030 10:58:29.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.573" endtime="20201030 10:58:29.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.884" level="INFO">${RESULT} = [{'diff': 1.1582999999999039e-05}, {'diff': 2.119499999999816e-05}, {'diff': 2.215300000000045e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.3056000000000465e-05}, {'diff': 2.5027999999999856e-05...</msg>
<status status="PASS" starttime="20201030 10:58:29.880" endtime="20201030 10:58:29.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:29.888" level="INFO">${ACCURACY} = {'diff': [1.1582999999999039e-05, 2.119499999999816e-05, 2.215300000000045e-05, 2.3042000000000895e-05, 2.3056000000000465e-05, 2.5027999999999856e-05, 2.0249999999999435e-05, 2.5930000000000397e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:29.885" endtime="20201030 10:58:29.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.892" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 10:58:29.891" endtime="20201030 10:58:29.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.895" level="INFO">VALUE: [1.1582999999999039e-05, 2.119499999999816e-05, 2.215300000000045e-05, 2.3042000000000895e-05, 2.3056000000000465e-05, 2.5027999999999856e-05, 2.0249999999999435e-05, 2.5930000000000397e-05, 2.305500000000099e-05, 2.5042000000002895e-05, 2.30969999999997e-05, 2.3999999999999716e-05, 2.0180000000001586e-05, 2.591699999999683e-05, 2.593099999999987e-05, 2.6944000000000967e-05, 2.411100000000027e-05, 2.312500000000231e-05, 2.5943999999999967e-05, 2.3040999999997952e-05, 2.4929999999999397e-05, 2.312499999999884e-05, 2.5014000000000286e-05, 2.3999999999999716e-05, 2.4027999999998856e-05, 2.215300000000045e-05, 2.1194000000002156e-05, 2.402700000000285e-05, 2.211099999999827e-05, 2.5013000000000812e-05, 2.1193999999998686e-05, 2.1111999999996744e-05, 2.590300000000073e-05, 2.0208000000000725e-05, 2.10830000000016e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 2.5014000000000286e-05, 2.3040999999997952e-05, 2.019500000000063e-05, 2.494499999999844e-05, 2.0222000000000295e-05, 2.5000000000000716e-05, 2.594500000000291e-05, 2.308300000000013e-05, 2.4069999999997566e-05, 2.69170000000013e-05, 2.5902000000001257e-05, 2.018099999999759e-05, 2.4041999999998426e-05]</msg>
<status status="PASS" starttime="20201030 10:58:29.893" endtime="20201030 10:58:29.895"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.888" endtime="20201030 10:58:29.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.899" endtime="20201030 10:58:29.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.898" endtime="20201030 10:58:29.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.897" endtime="20201030 10:58:29.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.537" endtime="20201030 10:58:29.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.536" endtime="20201030 10:58:29.920"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.929" endtime="20201030 10:58:29.949"></status>
</kw>
<msg timestamp="20201030 10:58:29.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.927" endtime="20201030 10:58:29.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.950" endtime="20201030 10:58:29.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.953" endtime="20201030 10:58:29.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.925" endtime="20201030 10:58:29.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.923" endtime="20201030 10:58:29.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.962" endtime="20201030 10:58:30.248"></status>
</kw>
<msg timestamp="20201030 10:58:30.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.960" endtime="20201030 10:58:30.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.252" endtime="20201030 10:58:30.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.260" endtime="20201030 10:58:30.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.958" endtime="20201030 10:58:30.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.956" endtime="20201030 10:58:30.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.267" level="INFO">${RESULT} = [{'diff': 3.8347000000001075e-05}, {'diff': 2.4943999999998967e-05}, {'diff': 2.4971999999998107e-05}, {'diff': 2.115300000000292e-05}, {'diff': 2.311099999999927e-05}, {'diff': 2.1151999999999976e-05...</msg>
<status status="PASS" starttime="20201030 10:58:30.264" endtime="20201030 10:58:30.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:30.271" level="INFO">${ACCURACY} = {'diff': [3.8347000000001075e-05, 2.4943999999998967e-05, 2.4971999999998107e-05, 2.115300000000292e-05, 2.311099999999927e-05, 2.1151999999999976e-05, 2.5957999999999537e-05, 2.590300000000073e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:30.268" endtime="20201030 10:58:30.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.276" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 10:58:30.275" endtime="20201030 10:58:30.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.279" level="INFO">VALUE: [3.8347000000001075e-05, 2.4943999999998967e-05, 2.4971999999998107e-05, 2.115300000000292e-05, 2.311099999999927e-05, 2.1151999999999976e-05, 2.5957999999999537e-05, 2.590300000000073e-05, 2.3986000000000146e-05, 2.209700000000217e-05, 2.20969999999987e-05, 2.5027000000000382e-05, 2.69170000000013e-05, 2.018100000000106e-05, 2.4986000000001146e-05, 2.212500000000131e-05, 2.4957999999998537e-05, 2.4070000000001035e-05, 2.2180000000000116e-05, 2.211100000000174e-05, 2.208299999999913e-05, 2.688900000000216e-05, 2.20969999999987e-05, 2.588899999999769e-05, 2.20969999999987e-05, 2.4084000000000605e-05, 2.5943999999999967e-05, 2.3068999999997092e-05, 2.686100000000302e-05, 2.4971999999998107e-05, 2.2098000000001644e-05, 2.590300000000073e-05, 2.211099999999827e-05, 2.59170000000003e-05, 2.2084000000002074e-05, 2.59170000000003e-05, 2.2151999999997507e-05, 2.3958000000001006e-05, 2.3027999999997856e-05, 2.311099999999927e-05, 2.5000000000000716e-05, 2.1208000000001725e-05, 2.112500000000031e-05, 2.3986000000000146e-05, 2.3070000000000035e-05, 2.018100000000106e-05, 2.4028000000002325e-05, 2.5972000000002576e-05, 2.4041999999998426e-05, 2.211100000000174e-05]</msg>
<status status="PASS" starttime="20201030 10:58:30.277" endtime="20201030 10:58:30.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.272" endtime="20201030 10:58:30.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.284" endtime="20201030 10:58:30.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.282" endtime="20201030 10:58:30.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.281" endtime="20201030 10:58:30.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.921" endtime="20201030 10:58:30.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.921" endtime="20201030 10:58:30.305"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.313" endtime="20201030 10:58:30.336"></status>
</kw>
<msg timestamp="20201030 10:58:30.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.312" endtime="20201030 10:58:30.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.337" endtime="20201030 10:58:30.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.340" endtime="20201030 10:58:30.341"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.309" endtime="20201030 10:58:30.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.307" endtime="20201030 10:58:30.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.349" endtime="20201030 10:58:30.634"></status>
</kw>
<msg timestamp="20201030 10:58:30.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024302403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024311181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.347" endtime="20201030 10:58:30.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024302403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024311181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.638" endtime="20201030 10:58:30.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.646" endtime="20201030 10:58:30.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.345" endtime="20201030 10:58:30.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.343" endtime="20201030 10:58:30.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.653" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 2.5999999999998247e-05}, {'diff': 2.3097999999999175e-05}, {'diff': 2.5943999999999967e-05}, {'diff': 2.308300000000013e-05}, {'diff': 2.3083999999999605e-05...</msg>
<status status="PASS" starttime="20201030 10:58:30.650" endtime="20201030 10:58:30.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:30.658" level="INFO">${ACCURACY} = {'diff': [8.778000000000952e-06, 2.5999999999998247e-05, 2.3097999999999175e-05, 2.5943999999999967e-05, 2.308300000000013e-05, 2.3083999999999605e-05, 2.311099999999927e-05, 2.3068999999997092e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:30.654" endtime="20201030 10:58:30.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.663" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 10:58:30.661" endtime="20201030 10:58:30.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.665" level="INFO">VALUE: [8.778000000000952e-06, 2.5999999999998247e-05, 2.3097999999999175e-05, 2.5943999999999967e-05, 2.308300000000013e-05, 2.3083999999999605e-05, 2.311099999999927e-05, 2.3068999999997092e-05, 2.3972000000000576e-05, 2.4054999999998522e-05, 2.215300000000045e-05, 2.5041999999999426e-05, 2.312499999999884e-05, 2.022300000000324e-05, 2.112500000000031e-05, 2.2056000000002934e-05, 2.1165999999999546e-05, 2.4028000000002325e-05, 2.5014000000000286e-05, 2.0222000000000295e-05, 2.115299999999945e-05, 2.5014000000000286e-05, 2.4041999999998426e-05, 2.312500000000231e-05, 2.2098000000001644e-05, 2.1179999999999116e-05, 2.0179999999998116e-05, 2.5000000000000716e-05, 2.305500000000099e-05, 2.3042000000000895e-05, 2.3040999999997952e-05, 2.597299999999858e-05, 2.119500000000163e-05, 2.4985999999997677e-05, 2.209700000000217e-05, 2.593099999999987e-05, 2.5000000000000716e-05, 2.493100000000234e-05, 2.1138000000000406e-05, 2.212500000000131e-05, 2.4041999999998426e-05, 2.211099999999827e-05, 2.6860999999999552e-05, 2.4041999999998426e-05, 2.6014000000001286e-05, 2.305500000000099e-05, 2.4944000000002436e-05, 2.4042000000001895e-05, 2.2207999999999256e-05, 2.115299999999945e-05]</msg>
<status status="PASS" starttime="20201030 10:58:30.664" endtime="20201030 10:58:30.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.659" endtime="20201030 10:58:30.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.670" endtime="20201030 10:58:30.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.668" endtime="20201030 10:58:30.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.667" endtime="20201030 10:58:30.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.306" endtime="20201030 10:58:30.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.305" endtime="20201030 10:58:30.691"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.699" endtime="20201030 10:58:30.717"></status>
</kw>
<msg timestamp="20201030 10:58:30.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.698" endtime="20201030 10:58:30.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.719" endtime="20201030 10:58:30.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.721" endtime="20201030 10:58:30.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.695" endtime="20201030 10:58:30.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.693" endtime="20201030 10:58:30.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.730" endtime="20201030 10:58:31.019"></status>
</kw>
<msg timestamp="20201030 10:58:31.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.729" endtime="20201030 10:58:31.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.024" endtime="20201030 10:58:31.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.032" endtime="20201030 10:58:31.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.726" endtime="20201030 10:58:31.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.724" endtime="20201030 10:58:31.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.039" level="INFO">${RESULT} = [{'diff': 2.6860999999999552e-05}, {'diff': 2.4028000000002325e-05}, {'diff': 2.3986000000000146e-05}, {'diff': 2.213900000000088e-05}, {'diff': 2.1193999999998686e-05}, {'diff': 2.305500000000099e-05...</msg>
<status status="PASS" starttime="20201030 10:58:31.036" endtime="20201030 10:58:31.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:31.043" level="INFO">${ACCURACY} = {'diff': [2.6860999999999552e-05, 2.4028000000002325e-05, 2.3986000000000146e-05, 2.213900000000088e-05, 2.1193999999998686e-05, 2.305500000000099e-05, 2.4944000000002436e-05, 2.4013999999999286e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:31.040" endtime="20201030 10:58:31.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.047" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 10:58:31.046" endtime="20201030 10:58:31.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.050" level="INFO">VALUE: [2.6860999999999552e-05, 2.4028000000002325e-05, 2.3986000000000146e-05, 2.213900000000088e-05, 2.1193999999998686e-05, 2.305500000000099e-05, 2.4944000000002436e-05, 2.4013999999999286e-05, 2.2180000000000116e-05, 2.3040999999997952e-05, 2.1151999999999976e-05, 2.1236000000000865e-05, 2.113899999999988e-05, 2.211100000000174e-05, 2.109700000000117e-05, 2.5041999999999426e-05, 2.211100000000174e-05, 2.208299999999913e-05, 2.4971999999998107e-05, 2.3070000000000035e-05, 2.4013999999999286e-05, 2.5027999999999856e-05, 2.3999999999999716e-05, 2.112500000000031e-05, 2.115299999999945e-05, 2.3042000000000895e-05, 2.2084000000002074e-05, 2.0180000000001586e-05, 2.308300000000013e-05, 2.411100000000027e-05, 2.4027999999998856e-05, 2.3070000000000035e-05, 2.4027999999998856e-05, 2.019500000000063e-05, 2.016699999999802e-05, 2.5014000000000286e-05, 2.3056000000000465e-05, 2.2985999999999146e-05, 2.4986000000001146e-05, 2.6972000000000107e-05, 2.4985999999997677e-05, 2.0180000000001586e-05, 2.211099999999827e-05, 2.115300000000292e-05, 2.690299999999826e-05, 2.022299999999977e-05, 2.113899999999988e-05, 2.5902000000001257e-05, 2.0249999999999435e-05, 2.0180000000001586e-05]</msg>
<status status="PASS" starttime="20201030 10:58:31.048" endtime="20201030 10:58:31.050"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.044" endtime="20201030 10:58:31.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.055" endtime="20201030 10:58:31.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.053" endtime="20201030 10:58:31.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.052" endtime="20201030 10:58:31.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.692" endtime="20201030 10:58:31.076"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.691" endtime="20201030 10:58:31.076"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.084" endtime="20201030 10:58:31.104"></status>
</kw>
<msg timestamp="20201030 10:58:31.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.083" endtime="20201030 10:58:31.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.105" endtime="20201030 10:58:31.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.108" endtime="20201030 10:58:31.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.080" endtime="20201030 10:58:31.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.078" endtime="20201030 10:58:31.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.117" endtime="20201030 10:58:31.403"></status>
</kw>
<msg timestamp="20201030 10:58:31.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.116" endtime="20201030 10:58:31.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.407" endtime="20201030 10:58:31.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.415" endtime="20201030 10:58:31.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.113" endtime="20201030 10:58:31.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.111" endtime="20201030 10:58:31.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.422" level="INFO">${RESULT} = [{'diff': 1.8320000000002223e-05}, {'diff': 2.113899999999988e-05}, {'diff': 2.4028000000002325e-05}, {'diff': 2.30969999999997e-05}, {'diff': 2.4971999999998107e-05}, {'diff': 2.4013999999999286e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:31.419" endtime="20201030 10:58:31.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:31.426" level="INFO">${ACCURACY} = {'diff': [1.8320000000002223e-05, 2.113899999999988e-05, 2.4028000000002325e-05, 2.30969999999997e-05, 2.4971999999998107e-05, 2.4013999999999286e-05, 2.0208000000000725e-05, 2.3070000000000035e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:31.423" endtime="20201030 10:58:31.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.430" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 10:58:31.429" endtime="20201030 10:58:31.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.433" level="INFO">VALUE: [1.8320000000002223e-05, 2.113899999999988e-05, 2.4028000000002325e-05, 2.30969999999997e-05, 2.4971999999998107e-05, 2.4013999999999286e-05, 2.0208000000000725e-05, 2.3070000000000035e-05, 2.215300000000045e-05, 2.2138000000001407e-05, 2.1151999999999976e-05, 2.111099999999727e-05, 2.5027999999999856e-05, 2.30969999999997e-05, 2.211099999999827e-05, 2.3056000000000465e-05, 2.0222000000000295e-05, 2.494499999999844e-05, 2.118099999999859e-05, 2.4098000000000175e-05, 2.5930000000000397e-05, 2.115299999999945e-05, 2.3999999999999716e-05, 2.5000000000000716e-05, 2.308300000000013e-05, 2.119500000000163e-05, 2.018100000000106e-05, 2.115299999999945e-05, 2.590300000000073e-05, 2.4014000000002755e-05, 2.595900000000248e-05, 2.316700000000102e-05, 2.4972000000001576e-05, 2.2971999999999576e-05, 2.590300000000073e-05, 2.4056000000001465e-05, 2.495899999999801e-05, 2.6915999999998358e-05, 2.4972000000001576e-05, 2.593099999999987e-05, 2.208299999999913e-05, 2.213899999999741e-05, 2.4055999999997996e-05, 2.5040999999999952e-05, 2.113899999999988e-05, 2.211099999999827e-05, 2.5000000000000716e-05, 2.5014000000000286e-05, 2.4958000000002006e-05, 2.3070000000000035e-05]</msg>
<status status="PASS" starttime="20201030 10:58:31.431" endtime="20201030 10:58:31.434"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.427" endtime="20201030 10:58:31.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.439" endtime="20201030 10:58:31.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.437" endtime="20201030 10:58:31.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.436" endtime="20201030 10:58:31.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.077" endtime="20201030 10:58:31.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.076" endtime="20201030 10:58:31.459"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.468" endtime="20201030 10:58:31.487"></status>
</kw>
<msg timestamp="20201030 10:58:31.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.466" endtime="20201030 10:58:31.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.488" endtime="20201030 10:58:31.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.491" endtime="20201030 10:58:31.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.464" endtime="20201030 10:58:31.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.462" endtime="20201030 10:58:31.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.500" endtime="20201030 10:58:31.785"></status>
</kw>
<msg timestamp="20201030 10:58:31.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.498" endtime="20201030 10:58:31.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.789" endtime="20201030 10:58:31.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.798" endtime="20201030 10:58:31.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.496" endtime="20201030 10:58:31.800"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.494" endtime="20201030 10:58:31.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:31.804" level="INFO">${RESULT} = [{'diff': 3.452799999999895e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.4027999999998856e-05}, {'diff': 2.6901999999998788e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.5957999999999537e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:31.801" endtime="20201030 10:58:31.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:31.809" level="INFO">${ACCURACY} = {'diff': [3.452799999999895e-05, 2.2055999999999465e-05, 2.4027999999998856e-05, 2.6901999999998788e-05, 2.59170000000003e-05, 2.5957999999999537e-05, 2.4027999999998856e-05, 2.1207999999998256e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:31.805" endtime="20201030 10:58:31.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.814" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 10:58:31.813" endtime="20201030 10:58:31.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.816" level="INFO">VALUE: [3.452799999999895e-05, 2.2055999999999465e-05, 2.4027999999998856e-05, 2.6901999999998788e-05, 2.59170000000003e-05, 2.5957999999999537e-05, 2.4027999999998856e-05, 2.1207999999998256e-05, 2.30969999999997e-05, 2.2151999999997507e-05, 2.20969999999987e-05, 2.4957999999998537e-05, 2.5014000000000286e-05, 2.0277999999998575e-05, 2.305500000000099e-05, 2.0166000000002016e-05, 2.3084000000003074e-05, 2.5000000000000716e-05, 2.4054999999998522e-05, 2.5014000000000286e-05, 2.10969999999977e-05, 2.4986000000001146e-05, 2.312499999999884e-05, 2.119500000000163e-05, 2.2999999999998716e-05, 2.3056000000000465e-05, 2.2112000000001214e-05, 2.4040999999998952e-05, 2.0222000000000295e-05, 2.208299999999913e-05, 2.4054999999998522e-05, 2.4986000000001146e-05, 2.594499999999944e-05, 2.211100000000174e-05, 2.1194000000002156e-05, 2.308300000000013e-05, 2.4972000000001576e-05, 2.218099999999959e-05, 2.5916000000000827e-05, 2.304100000000142e-05, 2.408300000000113e-05, 2.0250000000002905e-05, 2.3999999999999716e-05, 2.6901999999998788e-05, 2.408300000000113e-05, 2.4999999999997247e-05, 2.023699999999934e-05, 2.118099999999859e-05, 2.5915999999997358e-05, 2.3027999999997856e-05]</msg>
<status status="PASS" starttime="20201030 10:58:31.815" endtime="20201030 10:58:31.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.810" endtime="20201030 10:58:31.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:31.821" endtime="20201030 10:58:31.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.820" endtime="20201030 10:58:31.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.819" endtime="20201030 10:58:31.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.460" endtime="20201030 10:58:31.842"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.460" endtime="20201030 10:58:31.842"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.851" endtime="20201030 10:58:31.872"></status>
</kw>
<msg timestamp="20201030 10:58:31.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.849" endtime="20201030 10:58:31.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:31.873" endtime="20201030 10:58:31.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.876" endtime="20201030 10:58:31.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.847" endtime="20201030 10:58:31.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.845" endtime="20201030 10:58:31.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:31.885" endtime="20201030 10:58:32.172"></status>
</kw>
<msg timestamp="20201030 10:58:32.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024176625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024187236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:31.883" endtime="20201030 10:58:32.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024176625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024187236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.176" endtime="20201030 10:58:32.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.185" endtime="20201030 10:58:32.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.881" endtime="20201030 10:58:32.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.879" endtime="20201030 10:58:32.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.191" level="INFO">${RESULT} = [{'diff': 1.0611000000000648e-05}, {'diff': 2.02090000000002e-05}, {'diff': 2.3055999999996996e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.211099999999827e-05}, {'diff': 2.5861999999998025e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:32.188" endtime="20201030 10:58:32.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.195" level="INFO">${ACCURACY} = {'diff': [1.0611000000000648e-05, 2.02090000000002e-05, 2.3055999999996996e-05, 2.488900000000016e-05, 2.211099999999827e-05, 2.5861999999998025e-05, 2.118100000000206e-05, 2.5014000000000286e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 10:58:32.192" endtime="20201030 10:58:32.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.200" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.199" endtime="20201030 10:58:32.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.202" level="INFO">VALUE: [1.0611000000000648e-05, 2.02090000000002e-05, 2.3055999999996996e-05, 2.488900000000016e-05, 2.211099999999827e-05, 2.5861999999998025e-05, 2.118100000000206e-05, 2.5014000000000286e-05, 2.20830000000026e-05, 2.5929999999996928e-05, 2.593099999999987e-05, 2.594499999999944e-05, 2.4013999999999286e-05, 2.4012999999999812e-05, 2.3083999999999605e-05, 2.0166000000002016e-05, 2.590300000000073e-05, 2.312499999999884e-05, 2.687500000000259e-05, 2.211099999999827e-05, 2.3999999999999716e-05, 2.116699999999902e-05, 2.216700000000002e-05, 2.3999999999999716e-05, 2.4943999999998967e-05, 2.2097999999998175e-05, 2.20969999999987e-05, 2.118100000000206e-05, 2.311099999999927e-05, 2.4040999999998952e-05, 2.493099999999887e-05, 2.590299999999726e-05, 2.306900000000056e-05, 2.59170000000003e-05, 2.4028000000002325e-05, 2.1194000000002156e-05, 2.016700000000149e-05, 2.4013999999999286e-05, 2.2999999999998716e-05, 2.6888999999998692e-05, 2.593099999999987e-05, 2.115299999999945e-05, 2.2193999999999686e-05, 2.2180000000000116e-05, 2.593099999999987e-05, 2.109700000000117e-05, 2.3056000000000465e-05, 2.3054999999997522e-05, 2.311099999999927e-05, 2.308300000000013e-05]</msg>
<status status="PASS" starttime="20201030 10:58:32.201" endtime="20201030 10:58:32.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.196" endtime="20201030 10:58:32.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.207" endtime="20201030 10:58:32.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.206" endtime="20201030 10:58:32.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.205" endtime="20201030 10:58:32.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.843" endtime="20201030 10:58:32.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.842" endtime="20201030 10:58:32.228"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.237" endtime="20201030 10:58:32.260"></status>
</kw>
<msg timestamp="20201030 10:58:32.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.235" endtime="20201030 10:58:32.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.261" endtime="20201030 10:58:32.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.264" endtime="20201030 10:58:32.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.233" endtime="20201030 10:58:32.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.230" endtime="20201030 10:58:32.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.273" endtime="20201030 10:58:32.559"></status>
</kw>
<msg timestamp="20201030 10:58:32.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025079458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.271" endtime="20201030 10:58:32.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025079458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.564" endtime="20201030 10:58:32.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.572" endtime="20201030 10:58:32.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.269" endtime="20201030 10:58:32.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.267" endtime="20201030 10:58:32.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.578" level="INFO">${RESULT} = [{'diff': 2.9790999999997764e-05}, {'diff': 2.015299999999845e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.4013999999999286e-05}, {'diff': 2.597299999999858e-05}, {'diff': 2.113899999999988e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:32.575" endtime="20201030 10:58:32.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.583" level="INFO">${ACCURACY} = {'diff': [2.9790999999997764e-05, 2.015299999999845e-05, 2.2069999999999035e-05, 2.4013999999999286e-05, 2.597299999999858e-05, 2.113899999999988e-05, 2.2040999999996952e-05, 2.208299999999913e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:32.579" endtime="20201030 10:58:32.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.587" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.586" endtime="20201030 10:58:32.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.589" level="INFO">VALUE: [2.9790999999997764e-05, 2.015299999999845e-05, 2.2069999999999035e-05, 2.4013999999999286e-05, 2.597299999999858e-05, 2.113899999999988e-05, 2.2040999999996952e-05, 2.208299999999913e-05, 2.0165999999998546e-05, 2.215299999999698e-05, 2.2083999999998605e-05, 2.1166000000003016e-05, 2.3958000000001006e-05, 2.593099999999987e-05, 2.312500000000231e-05, 2.3056000000000465e-05, 2.0194000000001155e-05, 2.590300000000073e-05, 2.398699999999962e-05, 2.10969999999977e-05, 2.4027999999998856e-05, 2.497299999999758e-05, 2.113899999999988e-05, 2.4985999999997677e-05, 2.4986000000001146e-05, 2.5943999999999967e-05, 2.112500000000031e-05, 2.209700000000217e-05, 2.115299999999945e-05, 2.208299999999913e-05, 2.4027999999998856e-05, 2.0207999999997256e-05, 2.015299999999845e-05, 2.3027999999997856e-05, 2.595899999999901e-05, 2.690300000000173e-05, 2.112500000000031e-05, 2.3999999999999716e-05, 2.111100000000074e-05, 2.4082999999997662e-05, 2.0222000000000295e-05, 2.494500000000191e-05, 2.213900000000088e-05, 2.113899999999988e-05, 2.398699999999962e-05, 2.5915999999997358e-05, 2.5000000000000716e-05, 2.3098000000002644e-05, 2.1179999999999116e-05, 2.4957999999998537e-05]</msg>
<status status="PASS" starttime="20201030 10:58:32.588" endtime="20201030 10:58:32.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.583" endtime="20201030 10:58:32.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.595" endtime="20201030 10:58:32.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.594" endtime="20201030 10:58:32.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.593" endtime="20201030 10:58:32.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.229" endtime="20201030 10:58:32.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.228" endtime="20201030 10:58:32.616"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.625" endtime="20201030 10:58:32.646"></status>
</kw>
<msg timestamp="20201030 10:58:32.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.623" endtime="20201030 10:58:32.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.648" endtime="20201030 10:58:32.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.650" endtime="20201030 10:58:32.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.621" endtime="20201030 10:58:32.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.619" endtime="20201030 10:58:32.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.659" endtime="20201030 10:58:32.945"></status>
</kw>
<msg timestamp="20201030 10:58:32.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023917861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023926611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.658" endtime="20201030 10:58:32.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023917861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023926611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:32.949" endtime="20201030 10:58:32.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.957" endtime="20201030 10:58:32.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.655" endtime="20201030 10:58:32.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.654" endtime="20201030 10:58:32.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:32.964" level="INFO">${RESULT} = [{'diff': 8.750000000001812e-06}, {'diff': 2.215300000000045e-05}, {'diff': 2.5930000000000397e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.594499999999944e-05}, {'diff': 2.5000000000000716e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:32.961" endtime="20201030 10:58:32.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:32.969" level="INFO">${ACCURACY} = {'diff': [8.750000000001812e-06, 2.215300000000045e-05, 2.5930000000000397e-05, 2.3972000000000576e-05, 2.594499999999944e-05, 2.5000000000000716e-05, 2.6055000000000522e-05, 2.30969999999997e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 10:58:32.965" endtime="20201030 10:58:32.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.974" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 10:58:32.973" endtime="20201030 10:58:32.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.976" level="INFO">VALUE: [8.750000000001812e-06, 2.215300000000045e-05, 2.5930000000000397e-05, 2.3972000000000576e-05, 2.594499999999944e-05, 2.5000000000000716e-05, 2.6055000000000522e-05, 2.30969999999997e-05, 2.404100000000242e-05, 2.302700000000185e-05, 2.3999999999999716e-05, 2.6806000000000746e-05, 2.4042000000001895e-05, 2.3097999999999175e-05, 2.4084000000000605e-05, 2.1151999999999976e-05, 2.406900000000156e-05, 2.213900000000088e-05, 2.5930000000000397e-05, 2.0235999999999865e-05, 2.0194000000001155e-05, 2.4069999999997566e-05, 2.5000000000000716e-05, 2.3056000000000465e-05, 2.0194000000001155e-05, 2.013899999999888e-05, 2.3070000000000035e-05, 2.4013999999999286e-05, 2.3999999999999716e-05, 2.5000000000000716e-05, 2.0249999999999435e-05, 2.4054999999998522e-05, 2.308300000000013e-05, 2.5915999999997358e-05, 2.4985999999997677e-05, 2.593099999999987e-05, 2.4971999999998107e-05, 2.495900000000148e-05, 2.3957999999997537e-05, 2.6000000000001716e-05, 2.211100000000174e-05, 2.2958000000000006e-05, 2.4999999999997247e-05, 2.218099999999959e-05, 2.690300000000173e-05, 2.3056000000000465e-05, 2.116700000000249e-05, 2.311099999999927e-05, 2.1236000000000865e-05, 2.4027999999998856e-05]</msg>
<status status="PASS" starttime="20201030 10:58:32.975" endtime="20201030 10:58:32.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.970" endtime="20201030 10:58:32.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.981" endtime="20201030 10:58:33.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.980" endtime="20201030 10:58:33.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.978" endtime="20201030 10:58:33.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.617" endtime="20201030 10:58:33.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.616" endtime="20201030 10:58:33.002"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.011" endtime="20201030 10:58:33.033"></status>
</kw>
<msg timestamp="20201030 10:58:33.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.009" endtime="20201030 10:58:33.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.035" endtime="20201030 10:58:33.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.037" endtime="20201030 10:58:33.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.006" endtime="20201030 10:58:33.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.004" endtime="20201030 10:58:33.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.046" endtime="20201030 10:58:33.333"></status>
</kw>
<msg timestamp="20201030 10:58:33.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.045" endtime="20201030 10:58:33.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.338" endtime="20201030 10:58:33.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.347" endtime="20201030 10:58:33.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.042" endtime="20201030 10:58:33.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.040" endtime="20201030 10:58:33.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:33.353" level="INFO">${RESULT} = [{'diff': 2.5971999999999107e-05}, {'diff': 2.1236000000000865e-05}, {'diff': 2.4040999999998952e-05}, {'diff': 2.5971999999999107e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.018100000000106e-0...</msg>
<status status="PASS" starttime="20201030 10:58:33.350" endtime="20201030 10:58:33.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:33.357" level="INFO">${ACCURACY} = {'diff': [2.5971999999999107e-05, 2.1236000000000865e-05, 2.4040999999998952e-05, 2.5971999999999107e-05, 2.3999999999999716e-05, 2.018100000000106e-05, 2.6944000000000967e-05, 2.5971999999999107e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:33.354" endtime="20201030 10:58:33.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.362" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 10:58:33.361" endtime="20201030 10:58:33.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.364" level="INFO">VALUE: [2.5971999999999107e-05, 2.1236000000000865e-05, 2.4040999999998952e-05, 2.5971999999999107e-05, 2.3999999999999716e-05, 2.018100000000106e-05, 2.6944000000000967e-05, 2.5971999999999107e-05, 2.308300000000013e-05, 2.211099999999827e-05, 2.5930000000000397e-05, 2.116700000000249e-05, 2.0222000000000295e-05, 2.597300000000205e-05, 2.112500000000031e-05, 2.3027999999997856e-05, 2.2083999999998605e-05, 2.4971999999998107e-05, 2.308300000000013e-05, 2.115300000000292e-05, 2.5916000000000827e-05, 2.3999999999999716e-05, 2.119499999999816e-05, 2.406900000000156e-05, 2.3014000000001755e-05, 2.588900000000116e-05, 2.2070000000002504e-05, 2.115299999999945e-05, 2.212499999999784e-05, 2.116699999999902e-05, 2.1208000000001725e-05, 2.3070000000000035e-05, 2.2097999999998175e-05, 2.4028000000002325e-05, 2.4971999999998107e-05, 2.115299999999945e-05, 2.6958000000000537e-05, 2.213900000000088e-05, 2.2069999999999035e-05, 2.018100000000106e-05, 2.12090000000012e-05, 2.5874999999998122e-05, 2.4027999999998856e-05, 2.494499999999844e-05, 2.119500000000163e-05, 2.4027999999998856e-05, 2.20969999999987e-05, 2.211099999999827e-05, 2.115299999999945e-05, 2.2193999999999686e-05]</msg>
<status status="PASS" starttime="20201030 10:58:33.363" endtime="20201030 10:58:33.365"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.358" endtime="20201030 10:58:33.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:33.369" endtime="20201030 10:58:33.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.368" endtime="20201030 10:58:33.389"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.367" endtime="20201030 10:58:33.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.003" endtime="20201030 10:58:33.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.002" endtime="20201030 10:58:33.390"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.400" endtime="20201030 10:58:33.420"></status>
</kw>
<msg timestamp="20201030 10:58:33.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.399" endtime="20201030 10:58:33.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.421" endtime="20201030 10:58:33.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.424" endtime="20201030 10:58:33.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.396" endtime="20201030 10:58:33.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.394" endtime="20201030 10:58:33.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.433" endtime="20201030 10:58:33.717"></status>
</kw>
<msg timestamp="20201030 10:58:33.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023634889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.431" endtime="20201030 10:58:33.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023634889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.722" endtime="20201030 10:58:33.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.730" endtime="20201030 10:58:33.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.429" endtime="20201030 10:58:33.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.427" endtime="20201030 10:58:33.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:33.737" level="INFO">${RESULT} = [{'diff': 3.8375000000000214e-05}, {'diff': 2.4027999999998856e-05}, {'diff': 2.1098000000000644e-05}, {'diff': 2.595899999999901e-05}, {'diff': 2.309700000000317e-05}, {'diff': 2.493099999999887e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:33.733" endtime="20201030 10:58:33.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:33.741" level="INFO">${ACCURACY} = {'diff': [3.8375000000000214e-05, 2.4027999999998856e-05, 2.1098000000000644e-05, 2.595899999999901e-05, 2.309700000000317e-05, 2.493099999999887e-05, 2.2112000000001214e-05, 2.5014000000000286e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:33.738" endtime="20201030 10:58:33.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.745" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 10:58:33.744" endtime="20201030 10:58:33.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.748" level="INFO">VALUE: [3.8375000000000214e-05, 2.4027999999998856e-05, 2.1098000000000644e-05, 2.595899999999901e-05, 2.309700000000317e-05, 2.493099999999887e-05, 2.2112000000001214e-05, 2.5014000000000286e-05, 2.0179999999998116e-05, 2.3013999999998286e-05, 2.4026999999999382e-05, 2.311099999999927e-05, 2.5957999999999537e-05, 2.0208000000000725e-05, 2.5000000000000716e-05, 2.0208000000000725e-05, 2.5943999999999967e-05, 2.215300000000045e-05, 2.6915999999998358e-05, 2.5929999999996928e-05, 2.305500000000099e-05, 2.3070000000000035e-05, 2.219500000000263e-05, 2.4971999999998107e-05, 2.3027999999997856e-05, 2.4055999999997996e-05, 2.308300000000013e-05, 2.022299999999977e-05, 2.5027999999999856e-05, 2.1236000000000865e-05, 2.211100000000174e-05, 2.0208000000000725e-05, 2.5916000000000827e-05, 2.0222000000000295e-05, 2.211099999999827e-05, 2.3971999999997107e-05, 2.590300000000073e-05, 2.4041999999998426e-05, 2.20969999999987e-05, 2.3056000000000465e-05, 2.211099999999827e-05, 2.115299999999945e-05, 2.406900000000156e-05, 2.0221999999996826e-05, 2.5957999999999537e-05, 2.3041999999997426e-05, 2.20969999999987e-05, 2.312500000000231e-05, 2.0221999999996826e-05, 2.4013999999999286e-05]</msg>
<status status="PASS" starttime="20201030 10:58:33.746" endtime="20201030 10:58:33.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.742" endtime="20201030 10:58:33.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:33.754" endtime="20201030 10:58:33.773"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.752" endtime="20201030 10:58:33.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.751" endtime="20201030 10:58:33.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.391" endtime="20201030 10:58:33.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.391" endtime="20201030 10:58:33.774"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.783" endtime="20201030 10:58:33.801"></status>
</kw>
<msg timestamp="20201030 10:58:33.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.781" endtime="20201030 10:58:33.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:33.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:33.803" endtime="20201030 10:58:33.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.805" endtime="20201030 10:58:33.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.779" endtime="20201030 10:58:33.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.777" endtime="20201030 10:58:33.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:33.815" endtime="20201030 10:58:34.101"></status>
</kw>
<msg timestamp="20201030 10:58:34.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021277694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021293139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:33.813" endtime="20201030 10:58:34.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021277694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021293139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.105" endtime="20201030 10:58:34.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.114" endtime="20201030 10:58:34.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.810" endtime="20201030 10:58:34.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.808" endtime="20201030 10:58:34.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.120" level="INFO">${RESULT} = [{'diff': 1.5444999999999348e-05}, {'diff': 2.2083999999998605e-05}, {'diff': 2.4028000000002325e-05}, {'diff': 2.119499999999816e-05}, {'diff': 2.5069999999998566e-05}, {'diff': 2.4041999999998426e-0...</msg>
<status status="PASS" starttime="20201030 10:58:34.117" endtime="20201030 10:58:34.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.125" level="INFO">${ACCURACY} = {'diff': [1.5444999999999348e-05, 2.2083999999998605e-05, 2.4028000000002325e-05, 2.119499999999816e-05, 2.5069999999998566e-05, 2.4041999999998426e-05, 2.209700000000217e-05, 2.5916000000000827e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:34.121" endtime="20201030 10:58:34.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.130" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.129" endtime="20201030 10:58:34.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.132" level="INFO">VALUE: [1.5444999999999348e-05, 2.2083999999998605e-05, 2.4028000000002325e-05, 2.119499999999816e-05, 2.5069999999998566e-05, 2.4041999999998426e-05, 2.209700000000217e-05, 2.5916000000000827e-05, 2.3056000000000465e-05, 2.405500000000199e-05, 2.012499999999931e-05, 2.3056000000000465e-05, 2.2083999999998605e-05, 2.6972000000000107e-05, 2.4069999999997566e-05, 2.213900000000088e-05, 2.4986000000001146e-05, 2.0235999999999865e-05, 2.69170000000013e-05, 2.3999999999999716e-05, 2.1165999999999546e-05, 2.5014000000000286e-05, 2.5013000000000812e-05, 2.3028000000001325e-05, 2.1208000000001725e-05, 2.113899999999988e-05, 2.022299999999977e-05, 2.4056000000001465e-05, 2.0193999999997686e-05, 2.59170000000003e-05, 2.6846999999999982e-05, 2.0235999999999865e-05, 2.4042000000001895e-05, 2.118099999999859e-05, 2.1151999999999976e-05, 2.3056000000000465e-05, 2.212500000000131e-05, 2.4054999999998522e-05, 2.4111999999999745e-05, 2.590300000000073e-05, 2.2041999999999895e-05, 2.5014000000000286e-05, 2.113899999999988e-05, 2.594499999999944e-05, 2.2207999999999256e-05, 2.4028000000002325e-05, 2.212499999999784e-05, 2.311099999999927e-05, 2.0194000000001155e-05, 2.1193999999998686e-05]</msg>
<status status="PASS" starttime="20201030 10:58:34.131" endtime="20201030 10:58:34.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.126" endtime="20201030 10:58:34.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.137" endtime="20201030 10:58:34.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.136" endtime="20201030 10:58:34.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.134" endtime="20201030 10:58:34.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.775" endtime="20201030 10:58:34.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:33.775" endtime="20201030 10:58:34.158"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.168" endtime="20201030 10:58:34.188"></status>
</kw>
<msg timestamp="20201030 10:58:34.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.166" endtime="20201030 10:58:34.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.190" endtime="20201030 10:58:34.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.192" endtime="20201030 10:58:34.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.163" endtime="20201030 10:58:34.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.161" endtime="20201030 10:58:34.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.201" endtime="20201030 10:58:34.490"></status>
</kw>
<msg timestamp="20201030 10:58:34.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024657333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.199" endtime="20201030 10:58:34.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024639014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024657333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.494" endtime="20201030 10:58:34.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.503" endtime="20201030 10:58:34.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.197" endtime="20201030 10:58:34.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.195" endtime="20201030 10:58:34.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.509" level="INFO">${RESULT} = [{'diff': 1.831899999999928e-05}, {'diff': 2.4070000000001035e-05}, {'diff': 2.395899999999701e-05}, {'diff': 2.4986000000001146e-05}, {'diff': 2.5013999999996817e-05}, {'diff': 2.5971999999999107e-05...</msg>
<status status="PASS" starttime="20201030 10:58:34.506" endtime="20201030 10:58:34.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.514" level="INFO">${ACCURACY} = {'diff': [1.831899999999928e-05, 2.4070000000001035e-05, 2.395899999999701e-05, 2.4986000000001146e-05, 2.5013999999996817e-05, 2.5971999999999107e-05, 2.4958000000002006e-05, 2.115299999999945e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:34.510" endtime="20201030 10:58:34.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.518" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.517" endtime="20201030 10:58:34.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.520" level="INFO">VALUE: [1.831899999999928e-05, 2.4070000000001035e-05, 2.395899999999701e-05, 2.4986000000001146e-05, 2.5013999999996817e-05, 2.5971999999999107e-05, 2.4958000000002006e-05, 2.115299999999945e-05, 2.5042000000002895e-05, 2.406900000000156e-05, 2.3999999999999716e-05, 2.3972000000000576e-05, 2.5985999999998677e-05, 2.02090000000002e-05, 2.305500000000099e-05, 2.593099999999987e-05, 2.5971999999999107e-05, 2.6929999999997928e-05, 2.209700000000217e-05, 2.5916000000000827e-05, 2.4070000000001035e-05, 2.4929999999999397e-05, 2.0194000000001155e-05, 2.02090000000002e-05, 2.5000000000000716e-05, 2.5027999999999856e-05, 2.4972000000001576e-05, 2.113899999999988e-05, 1.9221999999999295e-05, 2.115299999999945e-05, 2.4054999999998522e-05, 2.597299999999858e-05, 2.112500000000031e-05, 2.4971999999998107e-05, 2.395900000000048e-05, 2.6860999999999552e-05, 2.59170000000003e-05, 2.112500000000031e-05, 2.4028000000002325e-05, 2.4056000000001465e-05, 2.1221999999997826e-05, 2.3042000000000895e-05, 2.0194000000001155e-05, 2.208299999999913e-05, 2.412499999999984e-05, 2.0207999999997256e-05, 2.4985999999997677e-05, 2.306900000000056e-05, 2.595899999999901e-05, 2.0208000000000725e-05]</msg>
<status status="PASS" starttime="20201030 10:58:34.519" endtime="20201030 10:58:34.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.514" endtime="20201030 10:58:34.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.525" endtime="20201030 10:58:34.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.524" endtime="20201030 10:58:34.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.523" endtime="20201030 10:58:34.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.159" endtime="20201030 10:58:34.546"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.158" endtime="20201030 10:58:34.546"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.555" endtime="20201030 10:58:34.576"></status>
</kw>
<msg timestamp="20201030 10:58:34.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.553" endtime="20201030 10:58:34.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.578" endtime="20201030 10:58:34.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.580" endtime="20201030 10:58:34.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.551" endtime="20201030 10:58:34.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.548" endtime="20201030 10:58:34.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.589" endtime="20201030 10:58:34.876"></status>
</kw>
<msg timestamp="20201030 10:58:34.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023093111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.588" endtime="20201030 10:58:34.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023093111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.880" endtime="20201030 10:58:34.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.888" endtime="20201030 10:58:34.890"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.585" endtime="20201030 10:58:34.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.584" endtime="20201030 10:58:34.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:34.895" level="INFO">${RESULT} = [{'diff': 1.4458000000001914e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.213900000000088e-05}, {'diff': 2.213900000000088e-05}, {'diff': 2.116700000000249e-05}, {'diff': 2.211099999999827e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:34.892" endtime="20201030 10:58:34.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:34.899" level="INFO">${ACCURACY} = {'diff': [1.4458000000001914e-05, 2.112500000000031e-05, 2.213900000000088e-05, 2.213900000000088e-05, 2.116700000000249e-05, 2.211099999999827e-05, 2.695900000000001e-05, 2.5068999999999092e-05, 2.21...</msg>
<status status="PASS" starttime="20201030 10:58:34.896" endtime="20201030 10:58:34.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.904" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 10:58:34.903" endtime="20201030 10:58:34.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.906" level="INFO">VALUE: [1.4458000000001914e-05, 2.112500000000031e-05, 2.213900000000088e-05, 2.213900000000088e-05, 2.116700000000249e-05, 2.211099999999827e-05, 2.695900000000001e-05, 2.5068999999999092e-05, 2.211100000000174e-05, 2.1151999999999976e-05, 2.3056000000000465e-05, 2.3083999999999605e-05, 2.5943999999999967e-05, 2.311099999999927e-05, 2.1222000000001295e-05, 2.016700000000149e-05, 2.59170000000003e-05, 2.3042000000000895e-05, 2.0194000000001155e-05, 2.213900000000088e-05, 2.113899999999988e-05, 2.0180000000001586e-05, 2.3083999999999605e-05, 2.5972000000002576e-05, 2.5957999999999537e-05, 2.59170000000003e-05, 2.4028000000002325e-05, 2.693100000000087e-05, 2.1180000000002586e-05, 2.3056000000000465e-05, 2.593099999999987e-05, 2.1165999999999546e-05, 2.2137999999997937e-05, 2.694500000000044e-05, 2.1179999999999116e-05, 2.5971999999999107e-05, 2.5930000000000397e-05, 2.4958000000002006e-05, 2.1180000000002586e-05, 2.5014000000000286e-05, 2.211099999999827e-05, 2.2098000000001644e-05, 2.4041999999998426e-05, 2.3083999999999605e-05, 2.4985999999997677e-05, 2.116699999999902e-05, 2.5971999999999107e-05, 2.312499999999884e-05, 2.20969999999987e-05, 2.016700000000149e-05]</msg>
<status status="PASS" starttime="20201030 10:58:34.905" endtime="20201030 10:58:34.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.900" endtime="20201030 10:58:34.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:34.912" endtime="20201030 10:58:34.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.910" endtime="20201030 10:58:34.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.909" endtime="20201030 10:58:34.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.547" endtime="20201030 10:58:34.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.546" endtime="20201030 10:58:34.933"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.941" endtime="20201030 10:58:34.963"></status>
</kw>
<msg timestamp="20201030 10:58:34.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.940" endtime="20201030 10:58:34.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:34.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:34.964" endtime="20201030 10:58:34.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.966" endtime="20201030 10:58:34.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.937" endtime="20201030 10:58:34.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.935" endtime="20201030 10:58:34.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:34.975" endtime="20201030 10:58:35.260"></status>
</kw>
<msg timestamp="20201030 10:58:35.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023320917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023358292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:34.974" endtime="20201030 10:58:35.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023320917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023358292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.264" endtime="20201030 10:58:35.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.273" endtime="20201030 10:58:35.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.971" endtime="20201030 10:58:35.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.970" endtime="20201030 10:58:35.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:35.279" level="INFO">${RESULT} = [{'diff': 3.7374999999999214e-05}, {'diff': 2.018100000000106e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.4971999999998107e-05}, {'diff': 2.312499999999884e-05}, {'diff': 2.690299999999826e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:35.276" endtime="20201030 10:58:35.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:35.284" level="INFO">${ACCURACY} = {'diff': [3.7374999999999214e-05, 2.018100000000106e-05, 2.112500000000031e-05, 2.4971999999998107e-05, 2.312499999999884e-05, 2.690299999999826e-05, 2.113899999999988e-05, 2.20969999999987e-05, 2.209...</msg>
<status status="PASS" starttime="20201030 10:58:35.280" endtime="20201030 10:58:35.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.289" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 10:58:35.288" endtime="20201030 10:58:35.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.291" level="INFO">VALUE: [3.7374999999999214e-05, 2.018100000000106e-05, 2.112500000000031e-05, 2.4971999999998107e-05, 2.312499999999884e-05, 2.690299999999826e-05, 2.113899999999988e-05, 2.20969999999987e-05, 2.2097999999998175e-05, 2.4944000000002436e-05, 2.20830000000026e-05, 2.4042000000001895e-05, 2.115299999999945e-05, 2.113899999999988e-05, 2.02090000000002e-05, 2.5014000000000286e-05, 2.59170000000003e-05, 2.6860999999999552e-05, 2.018100000000106e-05, 2.4013999999999286e-05, 2.1208000000001725e-05, 2.4028000000002325e-05, 2.4957999999998537e-05, 2.212500000000131e-05, 2.213900000000088e-05, 2.0222000000000295e-05, 2.3999999999999716e-05, 2.2084000000002074e-05, 2.013900000000235e-05, 2.5000000000000716e-05, 2.3042000000000895e-05, 2.6846999999999982e-05, 2.212500000000131e-05, 2.0235999999999865e-05, 2.5916000000000827e-05, 2.3999999999999716e-05, 2.5041999999999426e-05, 2.1193999999998686e-05, 2.2999999999998716e-05, 2.4929999999999397e-05, 2.015300000000192e-05, 2.308300000000013e-05, 2.3084000000003074e-05, 2.4986000000001146e-05, 2.113899999999988e-05, 2.593099999999987e-05, 2.3056000000000465e-05, 2.595900000000248e-05, 2.213899999999741e-05, 2.4069999999997566e-05]</msg>
<status status="PASS" starttime="20201030 10:58:35.290" endtime="20201030 10:58:35.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.285" endtime="20201030 10:58:35.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:35.296" endtime="20201030 10:58:35.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.294" endtime="20201030 10:58:35.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.293" endtime="20201030 10:58:35.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.934" endtime="20201030 10:58:35.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:34.933" endtime="20201030 10:58:35.317"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.325" endtime="20201030 10:58:35.344"></status>
</kw>
<msg timestamp="20201030 10:58:35.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.324" endtime="20201030 10:58:35.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.346" endtime="20201030 10:58:35.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.348" endtime="20201030 10:58:35.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.321" endtime="20201030 10:58:35.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.319" endtime="20201030 10:58:35.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.357" endtime="20201030 10:58:35.645"></status>
</kw>
<msg timestamp="20201030 10:58:35.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021243431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021259875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.356" endtime="20201030 10:58:35.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021243431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021259875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.649" endtime="20201030 10:58:35.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.658" endtime="20201030 10:58:35.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.353" endtime="20201030 10:58:35.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.351" endtime="20201030 10:58:35.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:35.664" level="INFO">${RESULT} = [{'diff': 1.6444000000000875e-05}, {'diff': 2.019500000000063e-05}, {'diff': 2.115299999999945e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.3027999999997856e-05}, {'diff': 2.208299999999913e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:35.661" endtime="20201030 10:58:35.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:35.669" level="INFO">${ACCURACY} = {'diff': [1.6444000000000875e-05, 2.019500000000063e-05, 2.115299999999945e-05, 2.205499999999999e-05, 2.3027999999997856e-05, 2.208299999999913e-05, 2.211099999999827e-05, 2.1165999999999546e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 10:58:35.665" endtime="20201030 10:58:35.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.673" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 10:58:35.672" endtime="20201030 10:58:35.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.676" level="INFO">VALUE: [1.6444000000000875e-05, 2.019500000000063e-05, 2.115299999999945e-05, 2.205499999999999e-05, 2.3027999999997856e-05, 2.208299999999913e-05, 2.211099999999827e-05, 2.1165999999999546e-05, 2.587500000000159e-05, 2.304100000000142e-05, 2.112500000000031e-05, 2.4972000000001576e-05, 2.0235999999999865e-05, 2.118100000000206e-05, 2.311099999999927e-05, 2.594499999999944e-05, 2.5027999999999856e-05, 2.5957999999999537e-05, 2.590300000000073e-05, 2.5985999999998677e-05, 2.213899999999741e-05, 2.6874999999999122e-05, 2.4929999999999397e-05, 2.2985999999999146e-05, 2.5833999999998886e-05, 2.4000000000003185e-05, 2.5014000000000286e-05, 2.3070000000000035e-05, 2.590300000000073e-05, 2.4943999999998967e-05, 2.215300000000045e-05, 2.018100000000106e-05, 2.118099999999859e-05, 2.590300000000073e-05, 2.215299999999698e-05, 2.308300000000013e-05, 2.3999999999999716e-05, 2.5943999999999967e-05, 2.4056000000001465e-05, 2.4098000000000175e-05, 2.4028000000002325e-05, 2.0235999999999865e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.0208000000000725e-05, 2.49169999999993e-05, 2.5901999999997788e-05, 2.0222000000000295e-05, 2.4013999999999286e-05, 2.4971999999998107e-05]</msg>
<status status="PASS" starttime="20201030 10:58:35.674" endtime="20201030 10:58:35.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.669" endtime="20201030 10:58:35.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:35.681" endtime="20201030 10:58:35.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.679" endtime="20201030 10:58:35.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.678" endtime="20201030 10:58:35.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.318" endtime="20201030 10:58:35.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.317" endtime="20201030 10:58:35.701"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.710" endtime="20201030 10:58:35.732"></status>
</kw>
<msg timestamp="20201030 10:58:35.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.708" endtime="20201030 10:58:35.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.734" endtime="20201030 10:58:35.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.736" endtime="20201030 10:58:35.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.706" endtime="20201030 10:58:35.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.704" endtime="20201030 10:58:35.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.745" endtime="20201030 10:58:36.031"></status>
</kw>
<msg timestamp="20201030 10:58:36.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023365306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023403681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:35.744" endtime="20201030 10:58:36.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023365306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023403681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.035" endtime="20201030 10:58:36.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.043" endtime="20201030 10:58:36.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.741" endtime="20201030 10:58:36.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.740" endtime="20201030 10:58:36.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.050" level="INFO">${RESULT} = [{'diff': 3.8375000000000214e-05}, {'diff': 2.213899999999741e-05}, {'diff': 2.0194000000001155e-05}, {'diff': 2.588900000000116e-05}, {'diff': 2.5846999999998982e-05}, {'diff': 2.112500000000031e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:36.047" endtime="20201030 10:58:36.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.054" level="INFO">${ACCURACY} = {'diff': [3.8375000000000214e-05, 2.213899999999741e-05, 2.0194000000001155e-05, 2.588900000000116e-05, 2.5846999999998982e-05, 2.112500000000031e-05, 2.308300000000013e-05, 2.213900000000088e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 10:58:36.051" endtime="20201030 10:58:36.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.058" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.057" endtime="20201030 10:58:36.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.061" level="INFO">VALUE: [3.8375000000000214e-05, 2.213899999999741e-05, 2.0194000000001155e-05, 2.588900000000116e-05, 2.5846999999998982e-05, 2.112500000000031e-05, 2.308300000000013e-05, 2.213900000000088e-05, 2.3056000000000465e-05, 2.4985999999997677e-05, 2.4986000000001146e-05, 2.212500000000131e-05, 2.4041999999998426e-05, 2.5027999999999856e-05, 2.4042000000001895e-05, 2.302700000000185e-05, 2.4999999999997247e-05, 2.213899999999741e-05, 2.5930000000000397e-05, 2.3999999999999716e-05, 2.113899999999988e-05, 2.3041999999997426e-05, 2.4070000000001035e-05, 2.019500000000063e-05, 2.5901999999997788e-05, 2.408300000000113e-05, 2.594499999999944e-05, 2.205499999999999e-05, 2.5930000000000397e-05, 2.5915999999997358e-05, 2.3041999999997426e-05, 2.3070000000000035e-05, 2.113899999999988e-05, 2.1098000000000644e-05, 2.116699999999902e-05, 2.218099999999959e-05, 2.5916000000000827e-05, 2.015299999999845e-05, 2.3083999999999605e-05, 2.211099999999827e-05, 2.405500000000199e-05, 2.1179999999999116e-05, 2.3042000000000895e-05, 2.590300000000073e-05, 2.5943999999999967e-05, 2.113899999999988e-05, 2.6944000000000967e-05, 2.20969999999987e-05, 2.212500000000131e-05, 2.5971999999999107e-05]</msg>
<status status="PASS" starttime="20201030 10:58:36.060" endtime="20201030 10:58:36.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.055" endtime="20201030 10:58:36.063"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.067" endtime="20201030 10:58:36.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.065" endtime="20201030 10:58:36.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.064" endtime="20201030 10:58:36.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.702" endtime="20201030 10:58:36.087"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.702" endtime="20201030 10:58:36.088"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.096" endtime="20201030 10:58:36.117"></status>
</kw>
<msg timestamp="20201030 10:58:36.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.095" endtime="20201030 10:58:36.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.119" endtime="20201030 10:58:36.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.121" endtime="20201030 10:58:36.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.092" endtime="20201030 10:58:36.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.090" endtime="20201030 10:58:36.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.130" endtime="20201030 10:58:36.417"></status>
</kw>
<msg timestamp="20201030 10:58:36.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023998056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024021097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.129" endtime="20201030 10:58:36.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023998056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024021097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.422" endtime="20201030 10:58:36.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.430" endtime="20201030 10:58:36.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.126" endtime="20201030 10:58:36.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.125" endtime="20201030 10:58:36.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.437" level="INFO">${RESULT} = [{'diff': 2.304100000000142e-05}, {'diff': 2.5930000000000397e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.2138000000001407e-05}, {'diff': 2.116699999999902e-05}, {'diff': 2.5930000000000397e-05...</msg>
<status status="PASS" starttime="20201030 10:58:36.433" endtime="20201030 10:58:36.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.442" level="INFO">${ACCURACY} = {'diff': [2.304100000000142e-05, 2.5930000000000397e-05, 2.3042000000000895e-05, 2.2138000000001407e-05, 2.116699999999902e-05, 2.5930000000000397e-05, 2.4027999999998856e-05, 2.590300000000073e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:58:36.437" endtime="20201030 10:58:36.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.446" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.445" endtime="20201030 10:58:36.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.448" level="INFO">VALUE: [2.304100000000142e-05, 2.5930000000000397e-05, 2.3042000000000895e-05, 2.2138000000001407e-05, 2.116699999999902e-05, 2.5930000000000397e-05, 2.4027999999998856e-05, 2.590300000000073e-05, 2.5000000000000716e-05, 2.0193999999997686e-05, 2.3999999999999716e-05, 1.9278000000001044e-05, 2.02090000000002e-05, 2.694500000000044e-05, 2.4943999999998967e-05, 2.3999999999999716e-05, 2.588900000000116e-05, 2.3971999999997107e-05, 2.594499999999944e-05, 2.493100000000234e-05, 2.5943999999999967e-05, 2.119500000000163e-05, 2.4042000000001895e-05, 2.593099999999987e-05, 2.1084000000001074e-05, 2.6847999999999456e-05, 2.5957999999999537e-05, 2.4040999999998952e-05, 2.593099999999987e-05, 2.4971999999998107e-05, 2.3083999999999605e-05, 2.404100000000242e-05, 2.5014000000000286e-05, 2.6888999999998692e-05, 2.019500000000063e-05, 2.112500000000031e-05, 2.112500000000031e-05, 2.02090000000002e-05, 2.5943999999999967e-05, 2.3097999999999175e-05, 2.209700000000217e-05, 2.59170000000003e-05, 2.0208000000000725e-05, 2.4971999999998107e-05, 2.311099999999927e-05, 2.115299999999945e-05, 2.213900000000088e-05, 2.5013999999996817e-05, 2.115299999999945e-05, 2.59170000000003e-05]</msg>
<status status="PASS" starttime="20201030 10:58:36.447" endtime="20201030 10:58:36.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.442" endtime="20201030 10:58:36.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.453" endtime="20201030 10:58:36.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.452" endtime="20201030 10:58:36.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.451" endtime="20201030 10:58:36.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.088" endtime="20201030 10:58:36.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.088" endtime="20201030 10:58:36.474"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.483" endtime="20201030 10:58:36.504"></status>
</kw>
<msg timestamp="20201030 10:58:36.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.481" endtime="20201030 10:58:36.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.506" endtime="20201030 10:58:36.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.508" endtime="20201030 10:58:36.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.479" endtime="20201030 10:58:36.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.476" endtime="20201030 10:58:36.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.517" endtime="20201030 10:58:36.803"></status>
</kw>
<msg timestamp="20201030 10:58:36.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024338736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.516" endtime="20201030 10:58:36.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024338736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024363778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.807" endtime="20201030 10:58:36.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.815" endtime="20201030 10:58:36.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.513" endtime="20201030 10:58:36.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.511" endtime="20201030 10:58:36.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:36.822" level="INFO">${RESULT} = [{'diff': 2.5041999999999426e-05}, {'diff': 2.4026999999999382e-05}, {'diff': 2.6888999999998692e-05}, {'diff': 2.4040999999998952e-05}, {'diff': 2.5986000000002146e-05}, {'diff': 2.113899999999988e-0...</msg>
<status status="PASS" starttime="20201030 10:58:36.819" endtime="20201030 10:58:36.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:36.826" level="INFO">${ACCURACY} = {'diff': [2.5041999999999426e-05, 2.4026999999999382e-05, 2.6888999999998692e-05, 2.4040999999998952e-05, 2.5986000000002146e-05, 2.113899999999988e-05, 2.4000000000003185e-05, 2.0249999999999435e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:36.823" endtime="20201030 10:58:36.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.831" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 10:58:36.830" endtime="20201030 10:58:36.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.833" level="INFO">VALUE: [2.5041999999999426e-05, 2.4026999999999382e-05, 2.6888999999998692e-05, 2.4040999999998952e-05, 2.5986000000002146e-05, 2.113899999999988e-05, 2.4000000000003185e-05, 2.0249999999999435e-05, 2.218099999999959e-05, 2.5027999999999856e-05, 2.5000000000000716e-05, 2.4972000000001576e-05, 2.20969999999987e-05, 2.1194000000002156e-05, 2.5041999999999426e-05, 2.1138000000000406e-05, 2.0194000000001155e-05, 2.5014000000000286e-05, 2.40970000000007e-05, 2.0194000000001155e-05, 2.213900000000088e-05, 2.690300000000173e-05, 2.5916000000000827e-05, 2.213899999999741e-05, 2.4027999999998856e-05, 2.4014000000002755e-05, 2.5860999999998552e-05, 2.2152000000000976e-05, 2.212500000000131e-05, 2.113899999999988e-05, 2.5042000000002895e-05, 2.6013999999997817e-05, 2.1179999999999116e-05, 2.311099999999927e-05, 2.113899999999988e-05, 2.597300000000205e-05, 2.4041999999998426e-05, 2.0221999999996826e-05, 2.5014000000000286e-05, 2.20830000000026e-05, 2.115300000000292e-05, 2.5957999999999537e-05, 2.0291999999998145e-05, 2.5971999999999107e-05, 2.0208000000000725e-05, 2.688900000000216e-05, 2.02090000000002e-05, 2.0208000000000725e-05, 2.1236000000000865e-05, 2.20830000000026e-05]</msg>
<status status="PASS" starttime="20201030 10:58:36.832" endtime="20201030 10:58:36.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.827" endtime="20201030 10:58:36.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:36.838" endtime="20201030 10:58:36.857"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.836" endtime="20201030 10:58:36.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.835" endtime="20201030 10:58:36.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.475" endtime="20201030 10:58:36.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.474" endtime="20201030 10:58:36.859"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.868" endtime="20201030 10:58:36.887"></status>
</kw>
<msg timestamp="20201030 10:58:36.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.866" endtime="20201030 10:58:36.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:36.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:36.888" endtime="20201030 10:58:36.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.891" endtime="20201030 10:58:36.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.863" endtime="20201030 10:58:36.893"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.861" endtime="20201030 10:58:36.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:36.900" endtime="20201030 10:58:37.185"></status>
</kw>
<msg timestamp="20201030 10:58:37.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021486958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021502361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:36.898" endtime="20201030 10:58:37.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021486958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021502361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.189" endtime="20201030 10:58:37.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.198" endtime="20201030 10:58:37.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.896" endtime="20201030 10:58:37.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.894" endtime="20201030 10:58:37.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.205" level="INFO">${RESULT} = [{'diff': 1.540300000000064e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.4986000000001146e-05}, {'diff': 2.5930000000000397e-05}, {'diff': 2.4985999999997677e-05}, {'diff': 2.0180000000001586e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:37.201" endtime="20201030 10:58:37.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:37.209" level="INFO">${ACCURACY} = {'diff': [1.540300000000064e-05, 2.20969999999987e-05, 2.4986000000001146e-05, 2.5930000000000397e-05, 2.4985999999997677e-05, 2.0180000000001586e-05, 2.6013999999997817e-05, 2.590300000000073e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:37.206" endtime="20201030 10:58:37.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.214" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 10:58:37.213" endtime="20201030 10:58:37.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.218" level="INFO">VALUE: [1.540300000000064e-05, 2.20969999999987e-05, 2.4986000000001146e-05, 2.5930000000000397e-05, 2.4985999999997677e-05, 2.0180000000001586e-05, 2.6013999999997817e-05, 2.590300000000073e-05, 2.5000000000000716e-05, 2.02090000000002e-05, 2.595899999999901e-05, 2.311100000000274e-05, 2.4040999999998952e-05, 2.308300000000013e-05, 2.3056000000000465e-05, 2.02090000000002e-05, 2.20969999999987e-05, 2.405500000000199e-05, 2.111100000000074e-05, 2.0193999999997686e-05, 2.593099999999987e-05, 2.693100000000087e-05, 2.5943999999999967e-05, 2.1180000000002586e-05, 2.4026999999999382e-05, 2.209700000000217e-05, 2.212500000000131e-05, 2.118100000000206e-05, 2.3986000000000146e-05, 2.113899999999988e-05, 2.20969999999987e-05, 2.3056000000000465e-05, 2.308300000000013e-05, 2.6958000000000537e-05, 2.018099999999759e-05, 2.111099999999727e-05, 2.208299999999913e-05, 2.018100000000106e-05, 2.593099999999987e-05, 2.4098000000000175e-05, 2.690300000000173e-05, 2.4027999999998856e-05, 2.116700000000249e-05, 2.3056000000000465e-05, 2.2986000000002615e-05, 2.20830000000026e-05, 2.5957999999999537e-05, 2.0222000000000295e-05, 2.495899999999801e-05, 2.3972000000000576e-05]</msg>
<status status="PASS" starttime="20201030 10:58:37.215" endtime="20201030 10:58:37.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.210" endtime="20201030 10:58:37.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.223" endtime="20201030 10:58:37.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.221" endtime="20201030 10:58:37.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.220" endtime="20201030 10:58:37.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.860" endtime="20201030 10:58:37.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:36.859" endtime="20201030 10:58:37.244"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.252" endtime="20201030 10:58:37.274"></status>
</kw>
<msg timestamp="20201030 10:58:37.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.251" endtime="20201030 10:58:37.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.275" endtime="20201030 10:58:37.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.277" endtime="20201030 10:58:37.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.248" endtime="20201030 10:58:37.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.246" endtime="20201030 10:58:37.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.286" endtime="20201030 10:58:37.571"></status>
</kw>
<msg timestamp="20201030 10:58:37.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023401847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.285" endtime="20201030 10:58:37.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023401847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.576" endtime="20201030 10:58:37.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.584" endtime="20201030 10:58:37.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.282" endtime="20201030 10:58:37.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.281" endtime="20201030 10:58:37.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.591" level="INFO">${RESULT} = [{'diff': 3.8333000000001505e-05}, {'diff': 2.5014000000000286e-05}, {'diff': 2.3014000000001755e-05}, {'diff': 2.3054999999997522e-05}, {'diff': 2.0235999999999865e-05}, {'diff': 2.0221999999996826e-...</msg>
<status status="PASS" starttime="20201030 10:58:37.587" endtime="20201030 10:58:37.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:37.596" level="INFO">${ACCURACY} = {'diff': [3.8333000000001505e-05, 2.5014000000000286e-05, 2.3014000000001755e-05, 2.3054999999997522e-05, 2.0235999999999865e-05, 2.0221999999996826e-05, 2.3986000000000146e-05, 2.4013999999999286e-05...</msg>
<status status="PASS" starttime="20201030 10:58:37.592" endtime="20201030 10:58:37.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.600" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 10:58:37.599" endtime="20201030 10:58:37.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.603" level="INFO">VALUE: [3.8333000000001505e-05, 2.5014000000000286e-05, 2.3014000000001755e-05, 2.3054999999997522e-05, 2.0235999999999865e-05, 2.0221999999996826e-05, 2.3986000000000146e-05, 2.4013999999999286e-05, 2.3042000000000895e-05, 2.590299999999726e-05, 2.4040999999998952e-05, 2.0249999999999435e-05, 2.115300000000292e-05, 2.5916000000000827e-05, 2.019500000000063e-05, 2.3083999999999605e-05, 2.115299999999945e-05, 2.4027999999998856e-05, 2.113899999999988e-05, 2.209700000000217e-05, 2.2069999999999035e-05, 2.69170000000013e-05, 2.3042000000000895e-05, 2.4971999999998107e-05, 2.3999999999999716e-05, 2.4971999999998107e-05, 2.5930000000000397e-05, 2.590300000000073e-05, 2.59170000000003e-05, 2.59170000000003e-05, 2.5985999999998677e-05, 2.4054999999998522e-05, 2.5014000000000286e-05, 2.4986000000001146e-05, 2.20969999999987e-05, 2.211100000000174e-05, 2.1194000000002156e-05, 2.0222000000000295e-05, 2.6014000000001286e-05, 2.4957999999998537e-05, 2.2112000000001214e-05, 2.5887999999998218e-05, 2.4958000000002006e-05, 2.5930000000000397e-05, 2.213900000000088e-05, 2.5014000000000286e-05, 2.20969999999987e-05, 2.3986000000000146e-05, 2.213900000000088e-05, 2.0277999999998575e-05]</msg>
<status status="PASS" starttime="20201030 10:58:37.601" endtime="20201030 10:58:37.603"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.596" endtime="20201030 10:58:37.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.608" endtime="20201030 10:58:37.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.606" endtime="20201030 10:58:37.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.605" endtime="20201030 10:58:37.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.245" endtime="20201030 10:58:37.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.244" endtime="20201030 10:58:37.628"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.637" endtime="20201030 10:58:37.656"></status>
</kw>
<msg timestamp="20201030 10:58:37.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.635" endtime="20201030 10:58:37.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:37.657" endtime="20201030 10:58:37.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.660" endtime="20201030 10:58:37.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.633" endtime="20201030 10:58:37.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.631" endtime="20201030 10:58:37.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.669" endtime="20201030 10:58:37.957"></status>
</kw>
<msg timestamp="20201030 10:58:37.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020701583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.667" endtime="20201030 10:58:37.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020701583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:37.961" endtime="20201030 10:58:37.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:37.969" endtime="20201030 10:58:37.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.665" endtime="20201030 10:58:37.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.663" endtime="20201030 10:58:37.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:37.976" level="INFO">${RESULT} = [{'diff': 5.174999999999971e-05}, {'diff': 5.7514000000001564e-05}, {'diff': 5.176399999999928e-05}, {'diff': 5.269499999999844e-05}, {'diff': 5.269500000000191e-05}, {'diff': 5.172300000000005e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:37.973" endtime="20201030 10:58:37.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:37.980" level="INFO">${ACCURACY} = {'diff': [5.174999999999971e-05, 5.7514000000001564e-05, 5.176399999999928e-05, 5.269499999999844e-05, 5.269500000000191e-05, 5.172300000000005e-05, 5.261099999999755e-05, 5.558299999999794e-05, 5.654...</msg>
<status status="PASS" starttime="20201030 10:58:37.977" endtime="20201030 10:58:37.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.985" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 10:58:37.984" endtime="20201030 10:58:37.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:37.987" level="INFO">VALUE: [5.174999999999971e-05, 5.7514000000001564e-05, 5.176399999999928e-05, 5.269499999999844e-05, 5.269500000000191e-05, 5.172300000000005e-05, 5.261099999999755e-05, 5.558299999999794e-05, 5.6541999999999704e-05, 5.073600000000261e-05, 5.273600000000114e-05, 5.079200000000089e-05, 5.0708e-05, 5.555500000000227e-05, 5.362499999999812e-05, 5.6485999999997955e-05, 5.5527999999999134e-05, 5.6527999999996664e-05, 5.463900000000216e-05, 5.272200000000157e-05, 5.743100000000015e-05, 5.558300000000141e-05, 5.458300000000041e-05, 5.462500000000259e-05, 5.556900000000184e-05, 5.2735999999997674e-05, 5.554099999999923e-05, 5.6472000000001854e-05, 5.3680000000000394e-05, 5.459699999999998e-05, 5.7430000000000675e-05, 5.654100000000023e-05, 5.077800000000132e-05, 5.7485999999998955e-05, 5.2693999999998964e-05, 5.6569999999998843e-05, 5.554200000000217e-05, 5.654100000000023e-05, 5.086099999999927e-05, 5.6555999999999274e-05, 5.559700000000098e-05, 5.2665999999999824e-05, 5.276400000000028e-05, 5.554099999999923e-05, 5.658299999999894e-05, 5.558299999999794e-05, 5.561100000000055e-05, 5.466699999999783e-05, 5.6472000000001854e-05, 5.273600000000114e-05]</msg>
<status status="PASS" starttime="20201030 10:58:37.986" endtime="20201030 10:58:37.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.981" endtime="20201030 10:58:37.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:37.992" endtime="20201030 10:58:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.991" endtime="20201030 10:58:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.989" endtime="20201030 10:58:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.629" endtime="20201030 10:58:38.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:37.629" endtime="20201030 10:58:38.013"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.022" endtime="20201030 10:58:38.043"></status>
</kw>
<msg timestamp="20201030 10:58:38.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.020" endtime="20201030 10:58:38.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.044" endtime="20201030 10:58:38.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.047" endtime="20201030 10:58:38.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.017" endtime="20201030 10:58:38.049"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.015" endtime="20201030 10:58:38.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.056" endtime="20201030 10:58:38.341"></status>
</kw>
<msg timestamp="20201030 10:58:38.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023001375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023049292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.054" endtime="20201030 10:58:38.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023001375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023049292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.345" endtime="20201030 10:58:38.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.354" endtime="20201030 10:58:38.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.051" endtime="20201030 10:58:38.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.050" endtime="20201030 10:58:38.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:38.360" level="INFO">${RESULT} = [{'diff': 4.791699999999802e-05}, {'diff': 5.657000000000231e-05}, {'diff': 5.558299999999794e-05}, {'diff': 5.562500000000012e-05}, {'diff': 5.361100000000202e-05}, {'diff': 5.177699999999938e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:38.357" endtime="20201030 10:58:38.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:38.364" level="INFO">${ACCURACY} = {'diff': [4.791699999999802e-05, 5.657000000000231e-05, 5.558299999999794e-05, 5.562500000000012e-05, 5.361100000000202e-05, 5.177699999999938e-05, 5.6528000000000134e-05, 5.558299999999794e-05, 5.459...</msg>
<status status="PASS" starttime="20201030 10:58:38.361" endtime="20201030 10:58:38.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.369" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 10:58:38.368" endtime="20201030 10:58:38.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.371" level="INFO">VALUE: [4.791699999999802e-05, 5.657000000000231e-05, 5.558299999999794e-05, 5.562500000000012e-05, 5.361100000000202e-05, 5.177699999999938e-05, 5.6528000000000134e-05, 5.558299999999794e-05, 5.459800000000292e-05, 5.461099999999955e-05, 5.558300000000141e-05, 5.461099999999955e-05, 5.46670000000013e-05, 5.658399999999841e-05, 5.4651999999998785e-05, 5.2708000000002e-05, 5.463899999999869e-05, 5.462499999999912e-05, 5.079100000000142e-05, 5.2693999999998964e-05, 5.7513999999998094e-05, 5.086100000000274e-05, 5.272200000000157e-05, 5.26669999999993e-05, 4.988900000000088e-05, 5.3693999999999964e-05, 5.559700000000098e-05, 5.6528000000000134e-05, 5.561100000000055e-05, 5.173600000000014e-05, 5.1708000000001e-05, 5.468100000000087e-05, 5.173600000000014e-05, 5.468100000000087e-05, 5.458300000000041e-05, 5.272200000000157e-05, 5.565299999999926e-05, 5.6528000000000134e-05, 5.558300000000141e-05, 5.365300000000073e-05, 5.4652000000002254e-05, 5.461199999999902e-05, 5.262500000000059e-05, 5.3721999999999104e-05, 5.180600000000146e-05, 5.3666000000000824e-05, 5.179199999999842e-05, 5.5541999999998704e-05, 5.3666000000000824e-05, 5.562500000000012e-05]</msg>
<status status="PASS" starttime="20201030 10:58:38.370" endtime="20201030 10:58:38.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.365" endtime="20201030 10:58:38.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:38.381" endtime="20201030 10:58:38.401"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.380" endtime="20201030 10:58:38.401"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.379" endtime="20201030 10:58:38.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.014" endtime="20201030 10:58:38.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.013" endtime="20201030 10:58:38.402"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.411" endtime="20201030 10:58:38.429"></status>
</kw>
<msg timestamp="20201030 10:58:38.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.409" endtime="20201030 10:58:38.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.431" endtime="20201030 10:58:38.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.433" endtime="20201030 10:58:38.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.407" endtime="20201030 10:58:38.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.405" endtime="20201030 10:58:38.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.442" endtime="20201030 10:58:38.729"></status>
</kw>
<msg timestamp="20201030 10:58:38.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020567542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020615417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.441" endtime="20201030 10:58:38.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020567542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020615417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.733" endtime="20201030 10:58:38.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.742" endtime="20201030 10:58:38.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.438" endtime="20201030 10:58:38.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.436" endtime="20201030 10:58:38.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:38.748" level="INFO">${RESULT} = [{'diff': 4.787499999999931e-05}, {'diff': 5.3693999999999964e-05}, {'diff': 5.55549999999988e-05}, {'diff': 5.081900000000056e-05}, {'diff': 5.561100000000055e-05}, {'diff': 5.6472000000001854e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:38.745" endtime="20201030 10:58:38.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:38.753" level="INFO">${ACCURACY} = {'diff': [4.787499999999931e-05, 5.3693999999999964e-05, 5.55549999999988e-05, 5.081900000000056e-05, 5.561100000000055e-05, 5.6472000000001854e-05, 5.358299999999941e-05, 5.181900000000156e-05, 5.649...</msg>
<status status="PASS" starttime="20201030 10:58:38.749" endtime="20201030 10:58:38.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.758" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 10:58:38.757" endtime="20201030 10:58:38.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.760" level="INFO">VALUE: [4.787499999999931e-05, 5.3693999999999964e-05, 5.55549999999988e-05, 5.081900000000056e-05, 5.561100000000055e-05, 5.6472000000001854e-05, 5.358299999999941e-05, 5.181900000000156e-05, 5.6499999999997524e-05, 5.082000000000003e-05, 5.661099999999808e-05, 5.4666000000001824e-05, 5.1693999999997964e-05, 5.465299999999826e-05, 5.6499999999997524e-05, 5.655500000000327e-05, 5.552699999999966e-05, 5.16669999999983e-05, 5.370899999999901e-05, 5.181900000000156e-05, 5.544500000000119e-05, 5.273600000000114e-05, 5.457000000000031e-05, 5.276299999999734e-05, 5.469499999999697e-05, 5.169400000000143e-05, 5.6541999999999704e-05, 5.359699999999898e-05, 5.084700000000317e-05, 5.7416000000001105e-05, 5.662499999999765e-05, 5.562500000000012e-05, 5.4471999999999854e-05, 5.65549999999998e-05, 5.561100000000055e-05, 5.080600000000046e-05, 5.2652000000000254e-05, 5.469500000000044e-05, 5.263900000000016e-05, 5.3721999999999104e-05, 5.744499999999972e-05, 5.169499999999744e-05, 5.468100000000087e-05, 5.263900000000016e-05, 5.180499999999852e-05, 5.455600000000074e-05, 5.086099999999927e-05, 5.6471999999998385e-05, 5.176399999999928e-05, 5.179200000000189e-05]</msg>
<status status="PASS" starttime="20201030 10:58:38.759" endtime="20201030 10:58:38.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.754" endtime="20201030 10:58:38.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:38.765" endtime="20201030 10:58:38.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.763" endtime="20201030 10:58:38.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.762" endtime="20201030 10:58:38.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.403" endtime="20201030 10:58:38.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.402" endtime="20201030 10:58:38.786"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.794" endtime="20201030 10:58:38.816"></status>
</kw>
<msg timestamp="20201030 10:58:38.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.793" endtime="20201030 10:58:38.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.817" endtime="20201030 10:58:38.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.820" endtime="20201030 10:58:38.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.790" endtime="20201030 10:58:38.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.788" endtime="20201030 10:58:38.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.829" endtime="20201030 10:58:39.115"></status>
</kw>
<msg timestamp="20201030 10:58:39.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023804833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023857583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.828" endtime="20201030 10:58:39.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023804833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023857583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.120" endtime="20201030 10:58:39.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.128" endtime="20201030 10:58:39.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.825" endtime="20201030 10:58:39.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.823" endtime="20201030 10:58:39.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.135" level="INFO">${RESULT} = [{'diff': 5.275000000000071e-05}, {'diff': 5.36670000000003e-05}, {'diff': 5.740300000000101e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.076300000000228e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:39.132" endtime="20201030 10:58:39.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.139" level="INFO">${ACCURACY} = {'diff': [5.275000000000071e-05, 5.36670000000003e-05, 5.740300000000101e-05, 5.5499999999999994e-05, 5.6500000000000994e-05, 5.076300000000228e-05, 5.6472000000001854e-05, 5.079099999999795e-05, 5.65...</msg>
<status status="PASS" starttime="20201030 10:58:39.136" endtime="20201030 10:58:39.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.143" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.142" endtime="20201030 10:58:39.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.146" level="INFO">VALUE: [5.275000000000071e-05, 5.36670000000003e-05, 5.740300000000101e-05, 5.5499999999999994e-05, 5.6500000000000994e-05, 5.076300000000228e-05, 5.6472000000001854e-05, 5.079099999999795e-05, 5.65549999999998e-05, 5.359699999999898e-05, 5.6528000000000134e-05, 5.086099999999927e-05, 5.068000000000086e-05, 5.36670000000003e-05, 5.363900000000116e-05, 5.077800000000132e-05, 5.6500000000000994e-05, 5.556900000000184e-05, 5.362499999999812e-05, 5.5513999999999564e-05, 5.083300000000013e-05, 5.458399999999988e-05, 5.265299999999973e-05, 5.076400000000175e-05, 5.6514000000000564e-05, 5.081900000000056e-05, 5.745899999999929e-05, 5.5513999999999564e-05, 5.373600000000214e-05, 5.169499999999744e-05, 5.456900000000084e-05, 5.270899999999801e-05, 5.26669999999993e-05, 5.458299999999694e-05, 5.269499999999844e-05, 5.45410000000017e-05, 5.176399999999928e-05, 5.559700000000098e-05, 5.2665999999999824e-05, 5.558399999999741e-05, 5.172200000000057e-05, 5.081900000000056e-05, 5.6486000000001424e-05, 5.086099999999927e-05, 5.26669999999993e-05, 5.3707999999999534e-05, 5.076399999999828e-05, 5.262500000000059e-05, 5.273600000000114e-05, 5.1708000000001e-05]</msg>
<status status="PASS" starttime="20201030 10:58:39.144" endtime="20201030 10:58:39.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.140" endtime="20201030 10:58:39.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.151" endtime="20201030 10:58:39.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.149" endtime="20201030 10:58:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.148" endtime="20201030 10:58:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.787" endtime="20201030 10:58:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.786" endtime="20201030 10:58:39.171"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.180" endtime="20201030 10:58:39.204"></status>
</kw>
<msg timestamp="20201030 10:58:39.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.179" endtime="20201030 10:58:39.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.205" endtime="20201030 10:58:39.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.208" endtime="20201030 10:58:39.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.176" endtime="20201030 10:58:39.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.174" endtime="20201030 10:58:39.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.217" endtime="20201030 10:58:39.503"></status>
</kw>
<msg timestamp="20201030 10:58:39.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024987639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025054694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.215" endtime="20201030 10:58:39.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024987639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025054694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.507" endtime="20201030 10:58:39.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.516" endtime="20201030 10:58:39.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.213" endtime="20201030 10:58:39.518"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.211" endtime="20201030 10:58:39.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.522" level="INFO">${RESULT} = [{'diff': 6.705499999999989e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.079200000000089e-05}, {'diff': 5.655600000000274e-05}, {'diff': 5.2665999999999824e-05}, {'diff': 5.2707999999998534e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:39.519" endtime="20201030 10:58:39.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.526" level="INFO">${ACCURACY} = {'diff': [6.705499999999989e-05, 5.076400000000175e-05, 5.079200000000089e-05, 5.655600000000274e-05, 5.2665999999999824e-05, 5.2707999999998534e-05, 5.3652000000001254e-05, 5.4651999999998785e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:58:39.523" endtime="20201030 10:58:39.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.531" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.530" endtime="20201030 10:58:39.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.533" level="INFO">VALUE: [6.705499999999989e-05, 5.076400000000175e-05, 5.079200000000089e-05, 5.655600000000274e-05, 5.2665999999999824e-05, 5.2707999999998534e-05, 5.3652000000001254e-05, 5.4651999999998785e-05, 5.3721999999999104e-05, 5.555600000000174e-05, 5.177799999999885e-05, 5.377800000000085e-05, 5.269499999999844e-05, 5.6528000000000134e-05, 5.656899999999937e-05, 5.168000000000186e-05, 5.662499999999765e-05, 5.3679999999996925e-05, 5.36670000000003e-05, 5.169400000000143e-05, 5.465300000000173e-05, 5.177800000000232e-05, 5.2693999999998964e-05, 5.36670000000003e-05, 5.656900000000284e-05, 5.2665999999999824e-05, 5.6569999999998843e-05, 5.459699999999998e-05, 5.559699999999751e-05, 5.174999999999971e-05, 5.180599999999799e-05, 5.556899999999837e-05, 5.6555999999999274e-05, 5.2708000000002e-05, 5.180499999999852e-05, 5.173600000000014e-05, 5.176399999999928e-05, 5.555600000000174e-05, 5.7528000000001134e-05, 5.177800000000232e-05, 5.369500000000291e-05, 5.080499999999752e-05, 5.563899999999969e-05, 5.170900000000048e-05, 5.659699999999851e-05, 5.380599999999999e-05, 5.458300000000041e-05, 5.658299999999894e-05, 5.554099999999923e-05, 5.2735999999997674e-05]</msg>
<status status="PASS" starttime="20201030 10:58:39.532" endtime="20201030 10:58:39.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.527" endtime="20201030 10:58:39.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.539" endtime="20201030 10:58:39.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.538" endtime="20201030 10:58:39.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.537" endtime="20201030 10:58:39.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.172" endtime="20201030 10:58:39.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.172" endtime="20201030 10:58:39.560"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.569" endtime="20201030 10:58:39.590"></status>
</kw>
<msg timestamp="20201030 10:58:39.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.567" endtime="20201030 10:58:39.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.592" endtime="20201030 10:58:39.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.594" endtime="20201030 10:58:39.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.564" endtime="20201030 10:58:39.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.562" endtime="20201030 10:58:39.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.603" endtime="20201030 10:58:39.890"></status>
</kw>
<msg timestamp="20201030 10:58:39.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023304903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023351917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.602" endtime="20201030 10:58:39.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023304903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023351917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.894" endtime="20201030 10:58:39.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.902" endtime="20201030 10:58:39.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.599" endtime="20201030 10:58:39.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.597" endtime="20201030 10:58:39.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.909" level="INFO">${RESULT} = [{'diff': 4.701400000000147e-05}, {'diff': 5.2707999999998534e-05}, {'diff': 5.081900000000056e-05}, {'diff': 5.7514000000001564e-05}, {'diff': 5.2693999999998964e-05}, {'diff': 5.5513999999999564e-05...</msg>
<status status="PASS" starttime="20201030 10:58:39.905" endtime="20201030 10:58:39.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.914" level="INFO">${ACCURACY} = {'diff': [4.701400000000147e-05, 5.2707999999998534e-05, 5.081900000000056e-05, 5.7514000000001564e-05, 5.2693999999998964e-05, 5.5513999999999564e-05, 5.461099999999955e-05, 5.177800000000232e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:58:39.910" endtime="20201030 10:58:39.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.918" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.917" endtime="20201030 10:58:39.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.921" level="INFO">VALUE: [4.701400000000147e-05, 5.2707999999998534e-05, 5.081900000000056e-05, 5.7514000000001564e-05, 5.2693999999998964e-05, 5.5513999999999564e-05, 5.461099999999955e-05, 5.177800000000232e-05, 5.362500000000159e-05, 5.1693999999997964e-05, 5.741700000000058e-05, 5.172300000000005e-05, 5.2707999999998534e-05, 5.36670000000003e-05, 5.26669999999993e-05, 5.352699999999766e-05, 5.461100000000302e-05, 5.6541999999999704e-05, 5.066700000000077e-05, 5.462499999999912e-05, 5.558299999999794e-05, 5.1721999999997104e-05, 4.981899999999956e-05, 5.272200000000157e-05, 5.5541999999998704e-05, 5.263900000000016e-05, 5.558299999999794e-05, 5.272200000000157e-05, 5.077799999999785e-05, 5.174999999999971e-05, 5.556899999999837e-05, 5.46670000000013e-05, 5.265299999999973e-05, 5.179199999999842e-05, 5.558299999999794e-05, 5.080600000000046e-05, 5.561100000000055e-05, 5.2652000000000254e-05, 5.559699999999751e-05, 5.552699999999966e-05, 5.361099999999855e-05, 5.2665999999999824e-05, 5.558300000000141e-05, 5.465299999999826e-05, 5.2693999999998964e-05, 5.361099999999855e-05, 5.080500000000099e-05, 5.3665999999997355e-05, 5.5472000000000854e-05, 5.36670000000003e-05]</msg>
<status status="PASS" starttime="20201030 10:58:39.919" endtime="20201030 10:58:39.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.914" endtime="20201030 10:58:39.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.926" endtime="20201030 10:58:39.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.924" endtime="20201030 10:58:39.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.923" endtime="20201030 10:58:39.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.561" endtime="20201030 10:58:39.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.560" endtime="20201030 10:58:39.946"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.955" endtime="20201030 10:58:39.978"></status>
</kw>
<msg timestamp="20201030 10:58:39.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.954" endtime="20201030 10:58:39.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.980" endtime="20201030 10:58:39.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.982" endtime="20201030 10:58:39.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.951" endtime="20201030 10:58:39.984"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.949" endtime="20201030 10:58:39.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.991" endtime="20201030 10:58:40.277"></status>
</kw>
<msg timestamp="20201030 10:58:40.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023664042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.990" endtime="20201030 10:58:40.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023664042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.282" endtime="20201030 10:58:40.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.290" endtime="20201030 10:58:40.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.987" endtime="20201030 10:58:40.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.985" endtime="20201030 10:58:40.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.296" level="INFO">${RESULT} = [{'diff': 6.795899999999938e-05}, {'diff': 5.2749999999997244e-05}, {'diff': 5.174999999999971e-05}, {'diff': 5.361100000000202e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.5513999999999564e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:40.293" endtime="20201030 10:58:40.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.301" level="INFO">${ACCURACY} = {'diff': [6.795899999999938e-05, 5.2749999999997244e-05, 5.174999999999971e-05, 5.361100000000202e-05, 5.363900000000116e-05, 5.5513999999999564e-05, 5.1708000000001e-05, 5.369500000000291e-05, 5.5582...</msg>
<status status="PASS" starttime="20201030 10:58:40.297" endtime="20201030 10:58:40.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.305" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.304" endtime="20201030 10:58:40.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.308" level="INFO">VALUE: [6.795899999999938e-05, 5.2749999999997244e-05, 5.174999999999971e-05, 5.361100000000202e-05, 5.363900000000116e-05, 5.5513999999999564e-05, 5.1708000000001e-05, 5.369500000000291e-05, 5.558299999999794e-05, 4.979199999999989e-05, 5.656899999999937e-05, 5.3666000000000824e-05, 5.076399999999828e-05, 5.458300000000041e-05, 5.363900000000116e-05, 5.172200000000057e-05, 5.6514000000000564e-05, 5.074999999999871e-05, 5.276400000000028e-05, 5.558400000000088e-05, 5.175000000000318e-05, 5.656899999999937e-05, 5.362500000000159e-05, 5.268099999999887e-05, 5.563899999999969e-05, 5.458300000000041e-05, 5.265299999999973e-05, 5.5513999999999564e-05, 5.6444000000002714e-05, 5.652700000000066e-05, 5.5541999999998704e-05, 5.6500000000000994e-05, 5.263900000000016e-05, 5.7528000000001134e-05, 5.26669999999993e-05, 5.265299999999973e-05, 5.3735999999998674e-05, 5.258299999999841e-05, 5.077799999999785e-05, 5.456900000000084e-05, 5.08469999999997e-05, 5.6499999999997524e-05, 5.552699999999966e-05, 5.459699999999998e-05, 5.2693999999998964e-05, 5.356999999999931e-05, 5.275000000000071e-05, 5.459699999999998e-05, 5.0708e-05, 5.459699999999998e-05]</msg>
<status status="PASS" starttime="20201030 10:58:40.306" endtime="20201030 10:58:40.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.302" endtime="20201030 10:58:40.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.313" endtime="20201030 10:58:40.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.311" endtime="20201030 10:58:40.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.310" endtime="20201030 10:58:40.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.947" endtime="20201030 10:58:40.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.947" endtime="20201030 10:58:40.333"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.342" endtime="20201030 10:58:40.364"></status>
</kw>
<msg timestamp="20201030 10:58:40.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.340" endtime="20201030 10:58:40.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.365" endtime="20201030 10:58:40.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.368" endtime="20201030 10:58:40.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.338" endtime="20201030 10:58:40.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.336" endtime="20201030 10:58:40.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.377" endtime="20201030 10:58:40.662"></status>
</kw>
<msg timestamp="20201030 10:58:40.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023656889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023701944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.375" endtime="20201030 10:58:40.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023656889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023701944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.667" endtime="20201030 10:58:40.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.675" endtime="20201030 10:58:40.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.373" endtime="20201030 10:58:40.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.371" endtime="20201030 10:58:40.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.682" level="INFO">${RESULT} = [{'diff': 4.505499999999871e-05}, {'diff': 5.075000000000218e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.745899999999929e-05}, {'diff': 5.3707999999999534e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:40.679" endtime="20201030 10:58:40.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.686" level="INFO">${ACCURACY} = {'diff': [4.505499999999871e-05, 5.075000000000218e-05, 5.265299999999973e-05, 5.361099999999855e-05, 5.745899999999929e-05, 5.3707999999999534e-05, 5.461099999999955e-05, 5.6513999999997094e-05, 5.18...</msg>
<status status="PASS" starttime="20201030 10:58:40.683" endtime="20201030 10:58:40.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.690" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.689" endtime="20201030 10:58:40.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.694" level="INFO">VALUE: [4.505499999999871e-05, 5.075000000000218e-05, 5.265299999999973e-05, 5.361099999999855e-05, 5.745899999999929e-05, 5.3707999999999534e-05, 5.461099999999955e-05, 5.6513999999997094e-05, 5.180500000000199e-05, 5.45280000000016e-05, 5.5527999999999134e-05, 5.2735999999997674e-05, 5.6528000000000134e-05, 5.561099999999708e-05, 5.463900000000216e-05, 5.179200000000189e-05, 5.2707999999998534e-05, 5.458300000000041e-05, 5.5527999999999134e-05, 5.086099999999927e-05, 5.170900000000048e-05, 5.2665999999999824e-05, 5.458399999999988e-05, 5.077799999999785e-05, 5.6486000000001424e-05, 5.080600000000046e-05, 5.4513999999998564e-05, 5.5486000000000424e-05, 5.5541999999998704e-05, 5.1708000000001e-05, 5.372299999999858e-05, 5.465300000000173e-05, 5.6499999999997524e-05, 5.174999999999971e-05, 5.65549999999998e-05, 5.2708000000002e-05, 5.5527999999999134e-05, 5.4693999999997495e-05, 5.263900000000016e-05, 5.457000000000031e-05, 5.457000000000031e-05, 5.1707999999997534e-05, 5.087500000000231e-05, 5.173600000000014e-05, 5.263900000000016e-05, 5.076400000000175e-05, 5.563899999999969e-05, 5.1708000000001e-05, 5.1721999999997104e-05, 5.565299999999926e-05]</msg>
<status status="PASS" starttime="20201030 10:58:40.691" endtime="20201030 10:58:40.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.687" endtime="20201030 10:58:40.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.699" endtime="20201030 10:58:40.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.697" endtime="20201030 10:58:40.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.696" endtime="20201030 10:58:40.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.334" endtime="20201030 10:58:40.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.334" endtime="20201030 10:58:40.719"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.728" endtime="20201030 10:58:40.750"></status>
</kw>
<msg timestamp="20201030 10:58:40.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.727" endtime="20201030 10:58:40.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.752" endtime="20201030 10:58:40.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.754" endtime="20201030 10:58:40.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.724" endtime="20201030 10:58:40.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.722" endtime="20201030 10:58:40.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.763" endtime="20201030 10:58:41.049"></status>
</kw>
<msg timestamp="20201030 10:58:41.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024498403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024563611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.762" endtime="20201030 10:58:41.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024498403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024563611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.053" endtime="20201030 10:58:41.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.061" endtime="20201030 10:58:41.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.759" endtime="20201030 10:58:41.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.757" endtime="20201030 10:58:41.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.068" level="INFO">${RESULT} = [{'diff': 6.520800000000063e-05}, {'diff': 4.980599999999946e-05}, {'diff': 5.5527999999999134e-05}, {'diff': 5.279199999999942e-05}, {'diff': 5.172300000000005e-05}, {'diff': 5.075000000000218e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:41.065" endtime="20201030 10:58:41.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.073" level="INFO">${ACCURACY} = {'diff': [6.520800000000063e-05, 4.980599999999946e-05, 5.5527999999999134e-05, 5.279199999999942e-05, 5.172300000000005e-05, 5.075000000000218e-05, 5.173600000000014e-05, 5.3735999999998674e-05, 5.55...</msg>
<status status="PASS" starttime="20201030 10:58:41.069" endtime="20201030 10:58:41.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.078" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.077" endtime="20201030 10:58:41.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.080" level="INFO">VALUE: [6.520800000000063e-05, 4.980599999999946e-05, 5.5527999999999134e-05, 5.279199999999942e-05, 5.172300000000005e-05, 5.075000000000218e-05, 5.173600000000014e-05, 5.3735999999998674e-05, 5.5527999999999134e-05, 5.64870000000009e-05, 5.268100000000234e-05, 5.562500000000012e-05, 5.5555999999998273e-05, 5.172200000000057e-05, 5.087500000000231e-05, 5.170900000000048e-05, 5.465300000000173e-05, 5.5665999999999355e-05, 5.172200000000057e-05, 5.265299999999973e-05, 5.362499999999812e-05, 5.276400000000028e-05, 5.645900000000176e-05, 5.26669999999993e-05, 5.4708000000000534e-05, 5.458300000000041e-05, 5.359699999999898e-05, 5.4694000000000964e-05, 5.170900000000048e-05, 5.563899999999969e-05, 5.362499999999812e-05, 5.172200000000057e-05, 5.469500000000044e-05, 5.365300000000073e-05, 5.26669999999993e-05, 5.177800000000232e-05, 5.368099999999987e-05, 5.359700000000245e-05, 5.359699999999898e-05, 5.181900000000156e-05, 5.455600000000074e-05, 5.170900000000048e-05, 5.6486000000001424e-05, 5.456900000000084e-05, 5.2665999999999824e-05, 5.565299999999926e-05, 5.265299999999973e-05, 5.458399999999988e-05, 5.277700000000038e-05, 5.4541999999997703e-05]</msg>
<status status="PASS" starttime="20201030 10:58:41.079" endtime="20201030 10:58:41.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.074" endtime="20201030 10:58:41.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.085" endtime="20201030 10:58:41.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.084" endtime="20201030 10:58:41.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.082" endtime="20201030 10:58:41.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.720" endtime="20201030 10:58:41.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.720" endtime="20201030 10:58:41.106"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.114" endtime="20201030 10:58:41.137"></status>
</kw>
<msg timestamp="20201030 10:58:41.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.113" endtime="20201030 10:58:41.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.138" endtime="20201030 10:58:41.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.141" endtime="20201030 10:58:41.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.110" endtime="20201030 10:58:41.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.108" endtime="20201030 10:58:41.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.150" endtime="20201030 10:58:41.439"></status>
</kw>
<msg timestamp="20201030 10:58:41.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024875056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.148" endtime="20201030 10:58:41.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024810819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024875056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.443" endtime="20201030 10:58:41.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.452" endtime="20201030 10:58:41.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.146" endtime="20201030 10:58:41.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.144" endtime="20201030 10:58:41.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.458" level="INFO">${RESULT} = [{'diff': 6.423699999999824e-05}, {'diff': 5.462499999999912e-05}, {'diff': 5.465300000000173e-05}, {'diff': 5.268099999999887e-05}, {'diff': 5.180600000000146e-05}, {'diff': 5.075000000000218e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:41.455" endtime="20201030 10:58:41.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.462" level="INFO">${ACCURACY} = {'diff': [6.423699999999824e-05, 5.462499999999912e-05, 5.465300000000173e-05, 5.268099999999887e-05, 5.180600000000146e-05, 5.075000000000218e-05, 5.462499999999912e-05, 5.1721999999997104e-05, 5.275...</msg>
<status status="PASS" starttime="20201030 10:58:41.459" endtime="20201030 10:58:41.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.467" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.466" endtime="20201030 10:58:41.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.469" level="INFO">VALUE: [6.423699999999824e-05, 5.462499999999912e-05, 5.465300000000173e-05, 5.268099999999887e-05, 5.180600000000146e-05, 5.075000000000218e-05, 5.462499999999912e-05, 5.1721999999997104e-05, 5.275000000000071e-05, 5.179100000000242e-05, 5.365300000000073e-05, 5.559700000000098e-05, 5.463900000000216e-05, 4.988899999999741e-05, 5.36670000000003e-05, 5.18470000000007e-05, 5.458399999999988e-05, 5.468100000000087e-05, 5.370899999999901e-05, 5.559700000000098e-05, 5.3707999999999534e-05, 5.361099999999855e-05, 5.658400000000188e-05, 5.555500000000227e-05, 5.275000000000071e-05, 5.565299999999926e-05, 5.656900000000284e-05, 5.561200000000002e-05, 5.461099999999955e-05, 5.563899999999969e-05, 5.562500000000012e-05, 5.173600000000014e-05, 5.354200000000017e-05, 5.3693999999999964e-05, 5.568100000000187e-05, 5.2652000000000254e-05, 5.3707999999999534e-05, 5.174999999999971e-05, 5.093000000000111e-05, 5.3708000000003e-05, 5.170900000000048e-05, 5.179199999999842e-05, 5.361100000000202e-05, 5.180500000000199e-05, 5.179200000000189e-05, 5.2707999999998534e-05, 5.3707999999999534e-05, 5.172200000000057e-05, 5.369499999999944e-05, 5.076299999999881e-05]</msg>
<status status="PASS" starttime="20201030 10:58:41.468" endtime="20201030 10:58:41.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.463" endtime="20201030 10:58:41.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.474" endtime="20201030 10:58:41.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.473" endtime="20201030 10:58:41.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.472" endtime="20201030 10:58:41.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.107" endtime="20201030 10:58:41.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.106" endtime="20201030 10:58:41.495"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.504" endtime="20201030 10:58:41.525"></status>
</kw>
<msg timestamp="20201030 10:58:41.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.502" endtime="20201030 10:58:41.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.526" endtime="20201030 10:58:41.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.529" endtime="20201030 10:58:41.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.500" endtime="20201030 10:58:41.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.497" endtime="20201030 10:58:41.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.538" endtime="20201030 10:58:41.824"></status>
</kw>
<msg timestamp="20201030 10:58:41.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:41.536" endtime="20201030 10:58:41.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:41.828" endtime="20201030 10:58:41.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.836" endtime="20201030 10:58:41.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.534" endtime="20201030 10:58:41.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.532" endtime="20201030 10:58:41.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.843" level="INFO">${RESULT} = [{'diff': 6.416700000000039e-05}, {'diff': 5.079200000000089e-05}, {'diff': 5.08469999999997e-05}, {'diff': 5.365300000000073e-05}, {'diff': 5.273600000000114e-05}, {'diff': 5.562500000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:41.840" endtime="20201030 10:58:41.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.847" level="INFO">${ACCURACY} = {'diff': [6.416700000000039e-05, 5.079200000000089e-05, 5.08469999999997e-05, 5.365300000000073e-05, 5.273600000000114e-05, 5.562500000000012e-05, 5.081900000000056e-05, 5.359800000000192e-05, 5.36250...</msg>
<status status="PASS" starttime="20201030 10:58:41.844" endtime="20201030 10:58:41.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.851" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.850" endtime="20201030 10:58:41.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.854" level="INFO">VALUE: [6.416700000000039e-05, 5.079200000000089e-05, 5.08469999999997e-05, 5.365300000000073e-05, 5.273600000000114e-05, 5.562500000000012e-05, 5.081900000000056e-05, 5.359800000000192e-05, 5.362500000000159e-05, 5.465299999999826e-05, 5.265299999999973e-05, 5.561100000000055e-05, 5.557000000000131e-05, 5.265299999999973e-05, 5.3693999999999964e-05, 5.076399999999828e-05, 5.361100000000202e-05, 5.179099999999895e-05, 5.174999999999971e-05, 5.180600000000146e-05, 5.363900000000116e-05, 5.176399999999928e-05, 5.556899999999837e-05, 5.465300000000173e-05, 5.175000000000318e-05, 5.4666000000001824e-05, 5.177800000000232e-05, 5.269400000000243e-05, 5.463899999999869e-05, 5.263899999999669e-05, 5.658300000000241e-05, 5.6486000000001424e-05, 5.558400000000088e-05, 5.458300000000041e-05, 5.3693999999999964e-05, 5.7569999999999844e-05, 5.269500000000191e-05, 5.455600000000074e-05, 5.088899999999841e-05, 5.074999999999871e-05, 5.3749999999998244e-05, 5.0737000000002086e-05, 5.468100000000087e-05, 5.074999999999871e-05, 5.177699999999938e-05, 5.462499999999912e-05, 5.083300000000013e-05, 5.465300000000173e-05, 5.554099999999923e-05, 5.5499999999999994e-05]</msg>
<status status="PASS" starttime="20201030 10:58:41.852" endtime="20201030 10:58:41.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.848" endtime="20201030 10:58:41.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.860" endtime="20201030 10:58:41.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.858" endtime="20201030 10:58:41.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.857" endtime="20201030 10:58:41.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.496" endtime="20201030 10:58:41.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.495" endtime="20201030 10:58:41.880"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.889" endtime="20201030 10:58:41.911"></status>
</kw>
<msg timestamp="20201030 10:58:41.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.887" endtime="20201030 10:58:41.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.913" endtime="20201030 10:58:41.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.915" endtime="20201030 10:58:41.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.885" endtime="20201030 10:58:41.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.883" endtime="20201030 10:58:41.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.924" endtime="20201030 10:58:42.211"></status>
</kw>
<msg timestamp="20201030 10:58:42.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023936389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024004333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.923" endtime="20201030 10:58:42.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023936389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024004333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.215" endtime="20201030 10:58:42.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.223" endtime="20201030 10:58:42.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.920" endtime="20201030 10:58:42.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.918" endtime="20201030 10:58:42.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.230" level="INFO">${RESULT} = [{'diff': 6.794400000000034e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.6541999999999704e-05}, {'diff': 5.172300000000005e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.08469999999997e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:42.227" endtime="20201030 10:58:42.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.235" level="INFO">${ACCURACY} = {'diff': [6.794400000000034e-05, 5.3707999999999534e-05, 5.6541999999999704e-05, 5.172300000000005e-05, 5.265299999999973e-05, 5.08469999999997e-05, 5.172200000000057e-05, 5.169500000000091e-05, 5.084...</msg>
<status status="PASS" starttime="20201030 10:58:42.231" endtime="20201030 10:58:42.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.239" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.238" endtime="20201030 10:58:42.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.242" level="INFO">VALUE: [6.794400000000034e-05, 5.3707999999999534e-05, 5.6541999999999704e-05, 5.172300000000005e-05, 5.265299999999973e-05, 5.08469999999997e-05, 5.172200000000057e-05, 5.169500000000091e-05, 5.08469999999997e-05, 5.6485999999997955e-05, 5.08469999999997e-05, 5.561100000000055e-05, 5.361100000000202e-05, 5.2679999999999394e-05, 5.562500000000012e-05, 5.076400000000175e-05, 5.362499999999812e-05, 5.173600000000014e-05, 5.083300000000013e-05, 5.074999999999871e-05, 5.163899999999916e-05, 5.179200000000189e-05, 5.5541999999998704e-05, 5.077800000000132e-05, 5.552699999999966e-05, 5.565299999999926e-05, 5.6500000000000994e-05, 5.6472000000001854e-05, 5.46670000000013e-05, 5.077800000000132e-05, 5.6472000000001854e-05, 5.559700000000098e-05, 5.26669999999993e-05, 5.7556000000000274e-05, 5.554099999999923e-05, 5.2679999999999394e-05, 5.170900000000048e-05, 5.3707999999999534e-05, 5.643099999999915e-05, 5.658299999999894e-05, 5.463899999999869e-05, 5.743100000000015e-05, 5.3721999999999104e-05, 5.359699999999898e-05, 5.743100000000015e-05, 5.6514000000000564e-05, 5.5513999999999564e-05, 5.172200000000057e-05, 5.075000000000218e-05, 5.2763999999996813e-05]</msg>
<status status="PASS" starttime="20201030 10:58:42.240" endtime="20201030 10:58:42.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.236" endtime="20201030 10:58:42.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.247" endtime="20201030 10:58:42.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.245" endtime="20201030 10:58:42.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.244" endtime="20201030 10:58:42.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.881" endtime="20201030 10:58:42.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.881" endtime="20201030 10:58:42.268"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.276" endtime="20201030 10:58:42.298"></status>
</kw>
<msg timestamp="20201030 10:58:42.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.275" endtime="20201030 10:58:42.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.300" endtime="20201030 10:58:42.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.302" endtime="20201030 10:58:42.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.272" endtime="20201030 10:58:42.304"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.270" endtime="20201030 10:58:42.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.311" endtime="20201030 10:58:42.597"></status>
</kw>
<msg timestamp="20201030 10:58:42.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023616139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023675583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.310" endtime="20201030 10:58:42.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023616139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023675583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.601" endtime="20201030 10:58:42.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.610" endtime="20201030 10:58:42.611"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.307" endtime="20201030 10:58:42.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.305" endtime="20201030 10:58:42.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.616" level="INFO">${RESULT} = [{'diff': 5.9443999999998776e-05}, {'diff': 5.362500000000159e-05}, {'diff': 5.743100000000015e-05}, {'diff': 5.561100000000055e-05}, {'diff': 5.6485999999997955e-05}, {'diff': 5.6486000000001424e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:42.613" endtime="20201030 10:58:42.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.620" level="INFO">${ACCURACY} = {'diff': [5.9443999999998776e-05, 5.362500000000159e-05, 5.743100000000015e-05, 5.561100000000055e-05, 5.6485999999997955e-05, 5.6486000000001424e-05, 5.4694000000000964e-05, 5.263900000000016e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:58:42.617" endtime="20201030 10:58:42.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.625" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.624" endtime="20201030 10:58:42.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.627" level="INFO">VALUE: [5.9443999999998776e-05, 5.362500000000159e-05, 5.743100000000015e-05, 5.561100000000055e-05, 5.6485999999997955e-05, 5.6486000000001424e-05, 5.4694000000000964e-05, 5.263900000000016e-05, 5.361100000000202e-05, 5.562500000000012e-05, 5.363900000000116e-05, 5.555600000000174e-05, 4.995799999999925e-05, 5.265299999999973e-05, 5.172300000000005e-05, 5.55280000000026e-05, 5.5651999999999785e-05, 5.262500000000059e-05, 5.468100000000087e-05, 5.463899999999869e-05, 5.080500000000099e-05, 5.46670000000013e-05, 5.077799999999785e-05, 5.558300000000141e-05, 5.263900000000016e-05, 5.662500000000112e-05, 5.5472000000000854e-05, 5.470900000000001e-05, 5.075000000000218e-05, 5.355599999999974e-05, 5.272300000000105e-05, 5.263900000000016e-05, 5.265299999999973e-05, 5.170900000000048e-05, 5.469500000000044e-05, 5.6486000000001424e-05, 5.563899999999969e-05, 5.359699999999898e-05, 5.26669999999993e-05, 5.269499999999844e-05, 5.469500000000044e-05, 5.744499999999972e-05, 5.1708000000001e-05, 5.172200000000057e-05, 5.6541999999999704e-05, 5.182000000000103e-05, 5.265299999999973e-05, 5.654100000000023e-05, 5.2680000000002863e-05, 5.2693999999998964e-05]</msg>
<status status="PASS" starttime="20201030 10:58:42.626" endtime="20201030 10:58:42.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.621" endtime="20201030 10:58:42.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.632" endtime="20201030 10:58:42.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.631" endtime="20201030 10:58:42.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.630" endtime="20201030 10:58:42.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.268" endtime="20201030 10:58:42.653"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.268" endtime="20201030 10:58:42.653"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.662" endtime="20201030 10:58:42.685"></status>
</kw>
<msg timestamp="20201030 10:58:42.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.660" endtime="20201030 10:58:42.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.686" endtime="20201030 10:58:42.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.689" endtime="20201030 10:58:42.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.657" endtime="20201030 10:58:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.655" endtime="20201030 10:58:42.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.698" endtime="20201030 10:58:42.982"></status>
</kw>
<msg timestamp="20201030 10:58:42.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0249255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024964806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:42.696" endtime="20201030 10:58:42.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0249255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024964806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:42.986" endtime="20201030 10:58:42.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.995" endtime="20201030 10:58:42.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.694" endtime="20201030 10:58:42.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.692" endtime="20201030 10:58:42.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.001" level="INFO">${RESULT} = [{'diff': 3.930599999999937e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.751299999999862e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.552699999999966e-05}, {'diff': 5.752699999999819e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:42.998" endtime="20201030 10:58:43.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.006" level="INFO">${ACCURACY} = {'diff': [3.930599999999937e-05, 5.5499999999999994e-05, 5.751299999999862e-05, 5.265299999999973e-05, 5.552699999999966e-05, 5.752699999999819e-05, 5.363900000000116e-05, 5.554200000000217e-05, 5.076...</msg>
<status status="PASS" starttime="20201030 10:58:43.002" endtime="20201030 10:58:43.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.010" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.009" endtime="20201030 10:58:43.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.012" level="INFO">VALUE: [3.930599999999937e-05, 5.5499999999999994e-05, 5.751299999999862e-05, 5.265299999999973e-05, 5.552699999999966e-05, 5.752699999999819e-05, 5.363900000000116e-05, 5.554200000000217e-05, 5.076399999999828e-05, 5.562500000000012e-05, 5.365300000000073e-05, 5.7457999999999815e-05, 5.462499999999912e-05, 5.361099999999855e-05, 5.076399999999828e-05, 5.269400000000243e-05, 5.184800000000017e-05, 5.7444000000000245e-05, 4.977800000000032e-05, 5.455600000000074e-05, 5.086100000000274e-05, 5.5541999999998704e-05, 5.26669999999993e-05, 5.661099999999808e-05, 5.1708000000001e-05, 5.455500000000127e-05, 5.458399999999988e-05, 5.6514000000000564e-05, 5.277799999999985e-05, 5.6485999999997955e-05, 5.551300000000009e-05, 5.173600000000014e-05, 5.365300000000073e-05, 5.7542000000000704e-05, 5.5513999999999564e-05, 5.361099999999855e-05, 5.3637999999998215e-05, 5.658299999999894e-05, 5.5513999999999564e-05, 5.7500000000001994e-05, 5.170900000000048e-05, 5.1693999999997964e-05, 5.361099999999855e-05, 5.745899999999929e-05, 5.565300000000273e-05, 5.366699999999683e-05, 5.551400000000303e-05, 5.6472000000001854e-05, 5.370899999999901e-05, 5.6485999999997955e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.011" endtime="20201030 10:58:43.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.006" endtime="20201030 10:58:43.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.018" endtime="20201030 10:58:43.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.017" endtime="20201030 10:58:43.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.015" endtime="20201030 10:58:43.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.654" endtime="20201030 10:58:43.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.653" endtime="20201030 10:58:43.039"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.047" endtime="20201030 10:58:43.067"></status>
</kw>
<msg timestamp="20201030 10:58:43.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.046" endtime="20201030 10:58:43.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.068" endtime="20201030 10:58:43.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.071" endtime="20201030 10:58:43.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.043" endtime="20201030 10:58:43.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.041" endtime="20201030 10:58:43.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.080" endtime="20201030 10:58:43.366"></status>
</kw>
<msg timestamp="20201030 10:58:43.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021096069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.078" endtime="20201030 10:58:43.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021096069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.370" endtime="20201030 10:58:43.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.379" endtime="20201030 10:58:43.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.076" endtime="20201030 10:58:43.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.074" endtime="20201030 10:58:43.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.385" level="INFO">${RESULT} = [{'diff': 5.3637999999998215e-05}, {'diff': 5.561100000000055e-05}, {'diff': 5.076399999999828e-05}, {'diff': 5.456900000000084e-05}, {'diff': 5.654099999999676e-05}, {'diff': 5.269499999999844e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:43.382" endtime="20201030 10:58:43.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.390" level="INFO">${ACCURACY} = {'diff': [5.3637999999998215e-05, 5.561100000000055e-05, 5.076399999999828e-05, 5.456900000000084e-05, 5.654099999999676e-05, 5.269499999999844e-05, 5.263900000000016e-05, 5.465299999999826e-05, 5.269...</msg>
<status status="PASS" starttime="20201030 10:58:43.386" endtime="20201030 10:58:43.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.395" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.394" endtime="20201030 10:58:43.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.397" level="INFO">VALUE: [5.3637999999998215e-05, 5.561100000000055e-05, 5.076399999999828e-05, 5.456900000000084e-05, 5.654099999999676e-05, 5.269499999999844e-05, 5.263900000000016e-05, 5.465299999999826e-05, 5.2693999999998964e-05, 5.177699999999938e-05, 5.076400000000175e-05, 5.176299999999981e-05, 5.273699999999715e-05, 5.459699999999998e-05, 5.370899999999901e-05, 5.077700000000185e-05, 5.358299999999941e-05, 5.36670000000003e-05, 5.36670000000003e-05, 5.177800000000232e-05, 5.462499999999912e-05, 5.081900000000056e-05, 5.3652000000001254e-05, 5.275000000000071e-05, 5.276300000000081e-05, 5.262500000000059e-05, 5.3693999999999964e-05, 5.2665999999999824e-05, 5.65549999999998e-05, 5.276299999999734e-05, 5.459799999999945e-05, 5.65549999999998e-05, 5.7457999999999815e-05, 5.086099999999927e-05, 5.46670000000013e-05, 5.6555999999999274e-05, 5.2679999999999394e-05, 4.995799999999925e-05, 5.3721999999999104e-05, 5.648699999999743e-05, 5.562500000000012e-05, 4.987499999999784e-05, 5.651300000000109e-05, 5.3707999999999534e-05, 5.562500000000012e-05, 5.275000000000071e-05, 5.6513999999997094e-05, 5.558299999999794e-05, 5.180600000000146e-05, 5.265299999999973e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.396" endtime="20201030 10:58:43.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.391" endtime="20201030 10:58:43.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.407" endtime="20201030 10:58:43.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.405" endtime="20201030 10:58:43.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.404" endtime="20201030 10:58:43.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.040" endtime="20201030 10:58:43.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.039" endtime="20201030 10:58:43.427"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.436" endtime="20201030 10:58:43.458"></status>
</kw>
<msg timestamp="20201030 10:58:43.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.435" endtime="20201030 10:58:43.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.459" endtime="20201030 10:58:43.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.462" endtime="20201030 10:58:43.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.432" endtime="20201030 10:58:43.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.430" endtime="20201030 10:58:43.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.471" endtime="20201030 10:58:43.757"></status>
</kw>
<msg timestamp="20201030 10:58:43.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024340708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024398167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.469" endtime="20201030 10:58:43.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024340708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024398167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.761" endtime="20201030 10:58:43.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.769" endtime="20201030 10:58:43.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.467" endtime="20201030 10:58:43.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.465" endtime="20201030 10:58:43.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.776" level="INFO">${RESULT} = [{'diff': 5.745899999999929e-05}, {'diff': 5.3652000000001254e-05}, {'diff': 5.556999999999784e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.272300000000105e-05}, {'diff': 5.559700000000098e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:43.773" endtime="20201030 10:58:43.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.780" level="INFO">${ACCURACY} = {'diff': [5.745899999999929e-05, 5.3652000000001254e-05, 5.556999999999784e-05, 5.459699999999998e-05, 5.272300000000105e-05, 5.559700000000098e-05, 5.5513999999999564e-05, 5.645899999999829e-05, 5.46...</msg>
<status status="PASS" starttime="20201030 10:58:43.777" endtime="20201030 10:58:43.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.785" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.784" endtime="20201030 10:58:43.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.787" level="INFO">VALUE: [5.745899999999929e-05, 5.3652000000001254e-05, 5.556999999999784e-05, 5.459699999999998e-05, 5.272300000000105e-05, 5.559700000000098e-05, 5.5513999999999564e-05, 5.645899999999829e-05, 5.465299999999826e-05, 5.743100000000015e-05, 5.465300000000173e-05, 5.180600000000146e-05, 5.362499999999812e-05, 5.173600000000014e-05, 5.26669999999993e-05, 5.368099999999987e-05, 5.074999999999871e-05, 5.756900000000037e-05, 5.08469999999997e-05, 5.5513999999999564e-05, 5.275000000000071e-05, 5.265299999999973e-05, 5.179199999999842e-05, 5.3707999999999534e-05, 5.361100000000202e-05, 5.561100000000055e-05, 5.3680000000000394e-05, 5.562500000000012e-05, 5.361200000000149e-05, 5.7542000000000704e-05, 5.562500000000012e-05, 5.26669999999993e-05, 5.372299999999858e-05, 5.5486000000000424e-05, 5.3707999999999534e-05, 5.276400000000028e-05, 5.168100000000134e-05, 5.3680000000000394e-05, 5.276400000000028e-05, 5.455600000000074e-05, 5.08469999999997e-05, 5.658299999999894e-05, 5.266700000000277e-05, 5.456900000000084e-05, 5.463900000000216e-05, 5.559700000000098e-05, 5.462500000000259e-05, 5.26669999999993e-05, 5.177699999999938e-05, 5.563900000000316e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.786" endtime="20201030 10:58:43.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.781" endtime="20201030 10:58:43.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.792" endtime="20201030 10:58:43.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.791" endtime="20201030 10:58:43.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.789" endtime="20201030 10:58:43.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.428" endtime="20201030 10:58:43.813"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.428" endtime="20201030 10:58:43.813"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.821" endtime="20201030 10:58:43.846"></status>
</kw>
<msg timestamp="20201030 10:58:43.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.820" endtime="20201030 10:58:43.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.847" endtime="20201030 10:58:43.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.850" endtime="20201030 10:58:43.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.817" endtime="20201030 10:58:43.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.815" endtime="20201030 10:58:43.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.859" endtime="20201030 10:58:44.144"></status>
</kw>
<msg timestamp="20201030 10:58:44.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025661931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025717458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.857" endtime="20201030 10:58:44.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025661931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025717458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.148" endtime="20201030 10:58:44.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.156" endtime="20201030 10:58:44.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.855" endtime="20201030 10:58:44.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.853" endtime="20201030 10:58:44.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.163" level="INFO">${RESULT} = [{'diff': 5.552699999999966e-05}, {'diff': 5.6555999999999274e-05}, {'diff': 5.173600000000014e-05}, {'diff': 5.45280000000016e-05}, {'diff': 5.075000000000218e-05}, {'diff': 5.270900000000148e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:44.159" endtime="20201030 10:58:44.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.167" level="INFO">${ACCURACY} = {'diff': [5.552699999999966e-05, 5.6555999999999274e-05, 5.173600000000014e-05, 5.45280000000016e-05, 5.075000000000218e-05, 5.270900000000148e-05, 5.462499999999912e-05, 5.076399999999828e-05, 5.1680...</msg>
<status status="PASS" starttime="20201030 10:58:44.164" endtime="20201030 10:58:44.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.171" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.170" endtime="20201030 10:58:44.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.175" level="INFO">VALUE: [5.552699999999966e-05, 5.6555999999999274e-05, 5.173600000000014e-05, 5.45280000000016e-05, 5.075000000000218e-05, 5.270900000000148e-05, 5.462499999999912e-05, 5.076399999999828e-05, 5.168099999999787e-05, 5.5527999999999134e-05, 5.1693999999997964e-05, 5.266700000000277e-05, 5.272200000000157e-05, 5.3693999999999964e-05, 5.6541999999999704e-05, 5.645899999999829e-05, 5.36670000000003e-05, 5.458399999999988e-05, 5.168099999999787e-05, 5.265299999999973e-05, 5.461099999999955e-05, 5.3666000000000824e-05, 5.462499999999912e-05, 5.3666000000000824e-05, 5.459699999999998e-05, 5.558300000000141e-05, 5.077800000000132e-05, 5.456899999999737e-05, 5.176399999999928e-05, 5.081900000000056e-05, 5.7499999999998525e-05, 5.173600000000014e-05, 5.5513999999999564e-05, 5.086099999999927e-05, 5.6527999999996664e-05, 5.4541999999997703e-05, 5.6486000000001424e-05, 5.170900000000048e-05, 5.273600000000114e-05, 5.7513999999998094e-05, 5.5513999999999564e-05, 5.561100000000055e-05, 5.363900000000116e-05, 5.362499999999812e-05, 5.55280000000026e-05, 5.459699999999998e-05, 5.174999999999971e-05, 5.4666000000001824e-05, 5.459699999999998e-05, 5.6541999999999704e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.172" endtime="20201030 10:58:44.175"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.168" endtime="20201030 10:58:44.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.180" endtime="20201030 10:58:44.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.178" endtime="20201030 10:58:44.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.177" endtime="20201030 10:58:44.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.814" endtime="20201030 10:58:44.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.813" endtime="20201030 10:58:44.200"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.209" endtime="20201030 10:58:44.234"></status>
</kw>
<msg timestamp="20201030 10:58:44.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.207" endtime="20201030 10:58:44.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.235" endtime="20201030 10:58:44.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.238" endtime="20201030 10:58:44.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.205" endtime="20201030 10:58:44.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.203" endtime="20201030 10:58:44.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.247" endtime="20201030 10:58:44.533"></status>
</kw>
<msg timestamp="20201030 10:58:44.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024961431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025022667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.245" endtime="20201030 10:58:44.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024961431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025022667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.537" endtime="20201030 10:58:44.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.545" endtime="20201030 10:58:44.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.243" endtime="20201030 10:58:44.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.241" endtime="20201030 10:58:44.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.552" level="INFO">${RESULT} = [{'diff': 6.123599999999924e-05}, {'diff': 5.073599999999914e-05}, {'diff': 5.6472000000001854e-05}, {'diff': 5.456899999999737e-05}, {'diff': 5.461099999999955e-05}, {'diff': 5.273600000000114e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:44.548" endtime="20201030 10:58:44.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.557" level="INFO">${ACCURACY} = {'diff': [6.123599999999924e-05, 5.073599999999914e-05, 5.6472000000001854e-05, 5.456899999999737e-05, 5.461099999999955e-05, 5.273600000000114e-05, 5.461099999999955e-05, 5.074999999999871e-05, 5.072...</msg>
<status status="PASS" starttime="20201030 10:58:44.553" endtime="20201030 10:58:44.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.561" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.560" endtime="20201030 10:58:44.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.564" level="INFO">VALUE: [6.123599999999924e-05, 5.073599999999914e-05, 5.6472000000001854e-05, 5.456899999999737e-05, 5.461099999999955e-05, 5.273600000000114e-05, 5.461099999999955e-05, 5.074999999999871e-05, 5.0723000000002516e-05, 5.079199999999742e-05, 5.4694000000000964e-05, 5.459799999999945e-05, 5.362500000000159e-05, 5.46670000000013e-05, 5.176399999999928e-05, 5.265299999999973e-05, 5.169500000000091e-05, 5.36670000000003e-05, 5.368099999999987e-05, 5.459799999999945e-05, 5.5499999999999994e-05, 5.462499999999912e-05, 5.462499999999912e-05, 5.068100000000034e-05, 5.741700000000058e-05, 5.555600000000174e-05, 5.173600000000014e-05, 5.080500000000099e-05, 5.169500000000091e-05, 5.556899999999837e-05, 5.273600000000114e-05, 5.176399999999928e-05, 5.5513999999999564e-05, 5.6471999999998385e-05, 5.3666000000000824e-05, 5.3666000000000824e-05, 5.361099999999855e-05, 5.559699999999751e-05, 5.081900000000056e-05, 5.36670000000003e-05, 5.5472000000000854e-05, 5.263900000000016e-05, 5.462500000000259e-05, 5.554099999999923e-05, 5.6514000000000564e-05, 5.1679999999998394e-05, 5.6443999999999245e-05, 5.168000000000186e-05, 5.462499999999912e-05, 5.561100000000055e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.562" endtime="20201030 10:58:44.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.557" endtime="20201030 10:58:44.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.568" endtime="20201030 10:58:44.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.567" endtime="20201030 10:58:44.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.566" endtime="20201030 10:58:44.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.201" endtime="20201030 10:58:44.589"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.201" endtime="20201030 10:58:44.589"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.598" endtime="20201030 10:58:44.619"></status>
</kw>
<msg timestamp="20201030 10:58:44.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.596" endtime="20201030 10:58:44.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.621" endtime="20201030 10:58:44.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.623" endtime="20201030 10:58:44.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.594" endtime="20201030 10:58:44.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.592" endtime="20201030 10:58:44.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.632" endtime="20201030 10:58:44.922"></status>
</kw>
<msg timestamp="20201030 10:58:44.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023119903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023167806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.630" endtime="20201030 10:58:44.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023119903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023167806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.926" endtime="20201030 10:58:44.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.934" endtime="20201030 10:58:44.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.628" endtime="20201030 10:58:44.936"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.626" endtime="20201030 10:58:44.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.941" level="INFO">${RESULT} = [{'diff': 4.790299999999845e-05}, {'diff': 5.080500000000099e-05}, {'diff': 5.559700000000098e-05}, {'diff': 5.176399999999928e-05}, {'diff': 5.656899999999937e-05}, {'diff': 5.6500000000000994e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:44.938" endtime="20201030 10:58:44.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.945" level="INFO">${ACCURACY} = {'diff': [4.790299999999845e-05, 5.080500000000099e-05, 5.559700000000098e-05, 5.176399999999928e-05, 5.656899999999937e-05, 5.6500000000000994e-05, 5.55549999999988e-05, 5.461099999999955e-05, 5.5583...</msg>
<status status="PASS" starttime="20201030 10:58:44.942" endtime="20201030 10:58:44.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.949" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.948" endtime="20201030 10:58:44.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.952" level="INFO">VALUE: [4.790299999999845e-05, 5.080500000000099e-05, 5.559700000000098e-05, 5.176399999999928e-05, 5.656899999999937e-05, 5.6500000000000994e-05, 5.55549999999988e-05, 5.461099999999955e-05, 5.558300000000141e-05, 5.373600000000214e-05, 5.3666000000000824e-05, 5.561099999999708e-05, 5.463899999999869e-05, 5.459699999999998e-05, 5.2693999999998964e-05, 5.462499999999912e-05, 5.5499999999999994e-05, 5.463899999999869e-05, 5.173600000000014e-05, 5.080500000000099e-05, 5.2693999999998964e-05, 5.558299999999794e-05, 5.658299999999894e-05, 5.559700000000098e-05, 5.3665999999997355e-05, 5.174999999999971e-05, 5.7513999999998094e-05, 5.173699999999962e-05, 5.365300000000073e-05, 5.2708000000002e-05, 5.173600000000014e-05, 5.276400000000028e-05, 5.173600000000014e-05, 5.272300000000105e-05, 5.6527999999996664e-05, 5.177799999999885e-05, 5.558300000000141e-05, 5.654100000000023e-05, 5.368099999999987e-05, 5.077799999999785e-05, 5.273600000000114e-05, 5.5555999999998273e-05, 5.5555999999998273e-05, 5.086099999999927e-05, 5.2665999999999824e-05, 5.179099999999895e-05, 5.6528000000000134e-05, 5.6485999999997955e-05, 5.275000000000071e-05, 5.276400000000028e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.950" endtime="20201030 10:58:44.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.946" endtime="20201030 10:58:44.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.957" endtime="20201030 10:58:44.976"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.955" endtime="20201030 10:58:44.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.954" endtime="20201030 10:58:44.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.590" endtime="20201030 10:58:44.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.589" endtime="20201030 10:58:44.977"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.986" endtime="20201030 10:58:45.006"></status>
</kw>
<msg timestamp="20201030 10:58:45.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.985" endtime="20201030 10:58:45.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.007" endtime="20201030 10:58:45.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.010" endtime="20201030 10:58:45.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.982" endtime="20201030 10:58:45.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.980" endtime="20201030 10:58:45.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.019" endtime="20201030 10:58:45.304"></status>
</kw>
<msg timestamp="20201030 10:58:45.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.017" endtime="20201030 10:58:45.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.308" endtime="20201030 10:58:45.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.316" endtime="20201030 10:58:45.318"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.015" endtime="20201030 10:58:45.318"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.013" endtime="20201030 10:58:45.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.323" level="INFO">${RESULT} = [{'diff': 5.2665999999999824e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.470900000000001e-05}, {'diff': 5.458399999999988e-05}, {'diff': 5.075000000000218e-05}, {'diff': 5.169400000000143e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:45.319" endtime="20201030 10:58:45.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.327" level="INFO">${ACCURACY} = {'diff': [5.2665999999999824e-05, 5.459699999999998e-05, 5.470900000000001e-05, 5.458399999999988e-05, 5.075000000000218e-05, 5.169400000000143e-05, 5.1693999999997964e-05, 5.459699999999998e-05, 5.45...</msg>
<status status="PASS" starttime="20201030 10:58:45.324" endtime="20201030 10:58:45.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.332" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.331" endtime="20201030 10:58:45.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.335" level="INFO">VALUE: [5.2665999999999824e-05, 5.459699999999998e-05, 5.470900000000001e-05, 5.458399999999988e-05, 5.075000000000218e-05, 5.169400000000143e-05, 5.1693999999997964e-05, 5.459699999999998e-05, 5.4513999999998564e-05, 5.452699999999866e-05, 5.172200000000057e-05, 5.174999999999971e-05, 4.987500000000131e-05, 5.7444000000000245e-05, 5.5513999999999564e-05, 5.073600000000261e-05, 5.554200000000217e-05, 5.456900000000084e-05, 5.272200000000157e-05, 5.3693999999999964e-05, 5.6429999999999675e-05, 5.647300000000133e-05, 5.2721999999998104e-05, 5.362499999999812e-05, 5.457000000000031e-05, 5.26669999999993e-05, 5.461099999999955e-05, 5.562500000000012e-05, 5.645900000000176e-05, 5.6485999999997955e-05, 5.744499999999972e-05, 5.456900000000084e-05, 5.741700000000058e-05, 5.2665999999999824e-05, 5.180499999999852e-05, 5.45410000000017e-05, 5.556999999999784e-05, 5.0737000000002086e-05, 5.450000000000246e-05, 5.174999999999971e-05, 5.08339999999996e-05, 5.44869999999989e-05, 5.265299999999973e-05, 5.557000000000131e-05, 5.3693999999999964e-05, 5.6471999999998385e-05, 5.6499999999997524e-05, 5.074999999999871e-05, 5.269499999999844e-05, 5.36670000000003e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.333" endtime="20201030 10:58:45.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.328" endtime="20201030 10:58:45.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.341" endtime="20201030 10:58:45.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.339" endtime="20201030 10:58:45.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.338" endtime="20201030 10:58:45.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.978" endtime="20201030 10:58:45.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.978" endtime="20201030 10:58:45.362"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.370" endtime="20201030 10:58:45.392"></status>
</kw>
<msg timestamp="20201030 10:58:45.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.369" endtime="20201030 10:58:45.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.394" endtime="20201030 10:58:45.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.396" endtime="20201030 10:58:45.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.366" endtime="20201030 10:58:45.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.364" endtime="20201030 10:58:45.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.405" endtime="20201030 10:58:45.691"></status>
</kw>
<msg timestamp="20201030 10:58:45.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024237903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:45.404" endtime="20201030 10:58:45.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024237903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024281, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:45.695" endtime="20201030 10:58:45.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.703" endtime="20201030 10:58:45.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.401" endtime="20201030 10:58:45.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.399" endtime="20201030 10:58:45.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.710" level="INFO">${RESULT} = [{'diff': 4.3096999999998886e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.458399999999988e-05}, {'diff': 5.461100000000302e-05}, {'diff': 5.082000000000003e-05}, {'diff': 5.263900000000016e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:45.707" endtime="20201030 10:58:45.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.715" level="INFO">${ACCURACY} = {'diff': [4.3096999999998886e-05, 5.26669999999993e-05, 5.458399999999988e-05, 5.461100000000302e-05, 5.082000000000003e-05, 5.263900000000016e-05, 5.076399999999828e-05, 5.359799999999845e-05, 5.5598...</msg>
<status status="PASS" starttime="20201030 10:58:45.711" endtime="20201030 10:58:45.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.719" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.718" endtime="20201030 10:58:45.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.722" level="INFO">VALUE: [4.3096999999998886e-05, 5.26669999999993e-05, 5.458399999999988e-05, 5.461100000000302e-05, 5.082000000000003e-05, 5.263900000000016e-05, 5.076399999999828e-05, 5.359799999999845e-05, 5.559800000000045e-05, 5.263900000000016e-05, 5.169500000000091e-05, 5.647300000000133e-05, 5.076399999999828e-05, 5.362499999999812e-05, 5.461099999999955e-05, 5.36670000000003e-05, 5.1708000000001e-05, 5.4527999999998134e-05, 5.365300000000073e-05, 5.08469999999997e-05, 5.5513999999999564e-05, 5.559699999999751e-05, 5.6499999999997524e-05, 5.176400000000275e-05, 5.169500000000091e-05, 5.6500000000000994e-05, 5.457000000000031e-05, 5.176399999999928e-05, 5.662500000000112e-05, 5.26669999999993e-05, 5.173600000000014e-05, 5.176400000000275e-05, 5.174999999999971e-05, 5.554099999999923e-05, 5.558300000000141e-05, 5.3666000000000824e-05, 5.169500000000091e-05, 5.26669999999993e-05, 5.365300000000073e-05, 5.169499999999744e-05, 5.461099999999955e-05, 5.176399999999928e-05, 5.074999999999871e-05, 5.455600000000074e-05, 5.2651999999996785e-05, 5.087499999999884e-05, 5.08469999999997e-05, 5.26669999999993e-05, 5.6541999999999704e-05, 5.463900000000216e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.720" endtime="20201030 10:58:45.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.716" endtime="20201030 10:58:45.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.727" endtime="20201030 10:58:45.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.725" endtime="20201030 10:58:45.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.724" endtime="20201030 10:58:45.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.363" endtime="20201030 10:58:45.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.362" endtime="20201030 10:58:45.747"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.756" endtime="20201030 10:58:45.775"></status>
</kw>
<msg timestamp="20201030 10:58:45.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.754" endtime="20201030 10:58:45.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.777" endtime="20201030 10:58:45.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.779" endtime="20201030 10:58:45.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.752" endtime="20201030 10:58:45.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.750" endtime="20201030 10:58:45.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.788" endtime="20201030 10:58:46.075"></status>
</kw>
<msg timestamp="20201030 10:58:46.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020376097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.787" endtime="20201030 10:58:46.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020376097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.079" endtime="20201030 10:58:46.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.088" endtime="20201030 10:58:46.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.784" endtime="20201030 10:58:46.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.782" endtime="20201030 10:58:46.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.094" level="INFO">${RESULT} = [{'diff': 6.618100000000196e-05}, {'diff': 5.5541999999998704e-05}, {'diff': 5.46670000000013e-05}, {'diff': 5.6499999999997524e-05}, {'diff': 5.081899999999709e-05}, {'diff': 5.5513999999999564e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:46.091" endtime="20201030 10:58:46.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.098" level="INFO">${ACCURACY} = {'diff': [6.618100000000196e-05, 5.5541999999998704e-05, 5.46670000000013e-05, 5.6499999999997524e-05, 5.081899999999709e-05, 5.5513999999999564e-05, 5.55280000000026e-05, 5.081900000000056e-05, 5.074...</msg>
<status status="PASS" starttime="20201030 10:58:46.095" endtime="20201030 10:58:46.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.103" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.102" endtime="20201030 10:58:46.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.105" level="INFO">VALUE: [6.618100000000196e-05, 5.5541999999998704e-05, 5.46670000000013e-05, 5.6499999999997524e-05, 5.081899999999709e-05, 5.5513999999999564e-05, 5.55280000000026e-05, 5.081900000000056e-05, 5.074999999999871e-05, 5.562500000000012e-05, 5.3707999999999534e-05, 5.458300000000041e-05, 5.3693999999999964e-05, 5.0736999999998617e-05, 5.7528000000001134e-05, 5.1707999999997534e-05, 5.373600000000214e-05, 5.5541999999998704e-05, 5.4665999999998355e-05, 5.2680000000002863e-05, 5.276400000000028e-05, 5.362500000000159e-05, 5.458399999999988e-05, 5.273600000000114e-05, 5.0708e-05, 5.4680000000001394e-05, 5.5486000000000424e-05, 5.181899999999809e-05, 5.2693999999998964e-05, 5.08469999999997e-05, 5.7443999999996775e-05, 5.6569999999998843e-05, 5.554099999999923e-05, 5.180500000000199e-05, 5.6500000000000994e-05, 5.469500000000044e-05, 5.169500000000091e-05, 5.468100000000087e-05, 5.2665999999999824e-05, 5.08469999999997e-05, 5.359699999999898e-05, 5.363900000000116e-05, 5.091699999999755e-05, 5.457000000000031e-05, 5.179199999999842e-05, 5.6471999999998385e-05, 5.086099999999927e-05, 5.7457999999999815e-05, 5.6569999999998843e-05, 5.641699999999958e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.104" endtime="20201030 10:58:46.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.099" endtime="20201030 10:58:46.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.110" endtime="20201030 10:58:46.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.108" endtime="20201030 10:58:46.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.107" endtime="20201030 10:58:46.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.748" endtime="20201030 10:58:46.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.748" endtime="20201030 10:58:46.131"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.139" endtime="20201030 10:58:46.166"></status>
</kw>
<msg timestamp="20201030 10:58:46.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.138" endtime="20201030 10:58:46.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.168" endtime="20201030 10:58:46.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.170" endtime="20201030 10:58:46.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.135" endtime="20201030 10:58:46.173"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.133" endtime="20201030 10:58:46.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.179" endtime="20201030 10:58:46.466"></status>
</kw>
<msg timestamp="20201030 10:58:46.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023980236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024020528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.178" endtime="20201030 10:58:46.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023980236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024020528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.470" endtime="20201030 10:58:46.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.478" endtime="20201030 10:58:46.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.175" endtime="20201030 10:58:46.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.174" endtime="20201030 10:58:46.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.485" level="INFO">${RESULT} = [{'diff': 4.02920000000008e-05}, {'diff': 5.35280000000006e-05}, {'diff': 5.740300000000101e-05}, {'diff': 5.086099999999927e-05}, {'diff': 5.643099999999915e-05}, {'diff': 5.2665999999999824e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:46.482" endtime="20201030 10:58:46.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.489" level="INFO">${ACCURACY} = {'diff': [4.02920000000008e-05, 5.35280000000006e-05, 5.740300000000101e-05, 5.086099999999927e-05, 5.643099999999915e-05, 5.2665999999999824e-05, 5.368099999999987e-05, 5.272200000000157e-05, 5.07639...</msg>
<status status="PASS" starttime="20201030 10:58:46.486" endtime="20201030 10:58:46.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.494" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.493" endtime="20201030 10:58:46.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.496" level="INFO">VALUE: [4.02920000000008e-05, 5.35280000000006e-05, 5.740300000000101e-05, 5.086099999999927e-05, 5.643099999999915e-05, 5.2665999999999824e-05, 5.368099999999987e-05, 5.272200000000157e-05, 5.076399999999828e-05, 5.180600000000146e-05, 5.361099999999855e-05, 5.365299999999726e-05, 5.272299999999758e-05, 5.173600000000014e-05, 5.361099999999855e-05, 5.177800000000232e-05, 5.176399999999928e-05, 5.5513999999999564e-05, 5.173600000000014e-05, 5.0708e-05, 5.359699999999898e-05, 5.174999999999971e-05, 5.269499999999844e-05, 5.263900000000016e-05, 5.363900000000116e-05, 5.462499999999912e-05, 5.7457999999999815e-05, 5.174999999999971e-05, 5.081900000000056e-05, 5.168000000000186e-05, 5.359699999999898e-05, 5.6500000000000994e-05, 5.077800000000132e-05, 5.559700000000098e-05, 5.362499999999812e-05, 5.5513999999999564e-05, 5.55549999999988e-05, 5.656900000000284e-05, 5.5499999999999994e-05, 5.368099999999987e-05, 5.462499999999912e-05, 5.555600000000174e-05, 5.557000000000131e-05, 5.169400000000143e-05, 5.6514000000000564e-05, 5.168099999999787e-05, 5.175000000000318e-05, 5.559800000000045e-05, 5.6500000000000994e-05, 5.359699999999898e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.495" endtime="20201030 10:58:46.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.490" endtime="20201030 10:58:46.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.502" endtime="20201030 10:58:46.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.500" endtime="20201030 10:58:46.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.499" endtime="20201030 10:58:46.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.132" endtime="20201030 10:58:46.522"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.131" endtime="20201030 10:58:46.523"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.531" endtime="20201030 10:58:46.554"></status>
</kw>
<msg timestamp="20201030 10:58:46.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.530" endtime="20201030 10:58:46.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.555" endtime="20201030 10:58:46.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.558" endtime="20201030 10:58:46.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.527" endtime="20201030 10:58:46.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.525" endtime="20201030 10:58:46.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.567" endtime="20201030 10:58:46.852"></status>
</kw>
<msg timestamp="20201030 10:58:46.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023996056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.565" endtime="20201030 10:58:46.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023953917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023996056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.856" endtime="20201030 10:58:46.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.864" endtime="20201030 10:58:46.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.563" endtime="20201030 10:58:46.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.561" endtime="20201030 10:58:46.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.871" level="INFO">${RESULT} = [{'diff': 4.2139000000000065e-05}, {'diff': 5.462499999999912e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.270900000000148e-05}, {'diff': 5.457000000000031e-05}, {'diff': 5.079100000000142e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:46.868" endtime="20201030 10:58:46.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.876" level="INFO">${ACCURACY} = {'diff': [4.2139000000000065e-05, 5.462499999999912e-05, 5.361099999999855e-05, 5.270900000000148e-05, 5.457000000000031e-05, 5.079100000000142e-05, 5.647300000000133e-05, 5.558300000000141e-05, 5.651...</msg>
<status status="PASS" starttime="20201030 10:58:46.872" endtime="20201030 10:58:46.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.880" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.879" endtime="20201030 10:58:46.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.883" level="INFO">VALUE: [4.2139000000000065e-05, 5.462499999999912e-05, 5.361099999999855e-05, 5.270900000000148e-05, 5.457000000000031e-05, 5.079100000000142e-05, 5.647300000000133e-05, 5.558300000000141e-05, 5.6514000000000564e-05, 5.6472000000001854e-05, 5.3637999999998215e-05, 5.361100000000202e-05, 5.165299999999873e-05, 5.18470000000007e-05, 5.073600000000261e-05, 5.169400000000143e-05, 5.561200000000002e-05, 5.55280000000026e-05, 5.086099999999927e-05, 5.361099999999855e-05, 5.179100000000242e-05, 5.552699999999966e-05, 5.26669999999993e-05, 5.168099999999787e-05, 5.280499999999952e-05, 5.265299999999973e-05, 5.457000000000031e-05, 5.3735999999998674e-05, 5.458399999999988e-05, 5.170900000000048e-05, 5.6457999999998815e-05, 5.4694000000000964e-05, 5.1721999999997104e-05, 5.082000000000003e-05, 5.459699999999998e-05, 5.7430000000000675e-05, 5.561100000000055e-05, 5.459699999999998e-05, 5.457000000000031e-05, 5.565299999999926e-05, 5.6444000000002714e-05, 5.1693999999997964e-05, 5.265299999999973e-05, 5.465299999999826e-05, 5.169500000000091e-05, 5.5541999999998704e-05, 5.170900000000048e-05, 5.752699999999819e-05, 5.55280000000026e-05, 5.169500000000091e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.881" endtime="20201030 10:58:46.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.877" endtime="20201030 10:58:46.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.888" endtime="20201030 10:58:46.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.886" endtime="20201030 10:58:46.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.885" endtime="20201030 10:58:46.908"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.523" endtime="20201030 10:58:46.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.523" endtime="20201030 10:58:46.909"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.917" endtime="20201030 10:58:46.940"></status>
</kw>
<msg timestamp="20201030 10:58:46.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.916" endtime="20201030 10:58:46.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.942" endtime="20201030 10:58:46.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.944" endtime="20201030 10:58:46.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.913" endtime="20201030 10:58:46.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.911" endtime="20201030 10:58:46.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.953" endtime="20201030 10:58:47.239"></status>
</kw>
<msg timestamp="20201030 10:58:47.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024664833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024705139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.952" endtime="20201030 10:58:47.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024664833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024705139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.244" endtime="20201030 10:58:47.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.252" endtime="20201030 10:58:47.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.949" endtime="20201030 10:58:47.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.947" endtime="20201030 10:58:47.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:47.258" level="INFO">${RESULT} = [{'diff': 4.030600000000037e-05}, {'diff': 5.1708000000001e-05}, {'diff': 5.082000000000003e-05}, {'diff': 5.362499999999812e-05}, {'diff': 5.7500000000001994e-05}, {'diff': 5.2679999999999394e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:47.255" endtime="20201030 10:58:47.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:47.263" level="INFO">${ACCURACY} = {'diff': [4.030600000000037e-05, 5.1708000000001e-05, 5.082000000000003e-05, 5.362499999999812e-05, 5.7500000000001994e-05, 5.2679999999999394e-05, 5.463899999999869e-05, 5.455599999999727e-05, 5.1776...</msg>
<status status="PASS" starttime="20201030 10:58:47.259" endtime="20201030 10:58:47.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.267" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 10:58:47.266" endtime="20201030 10:58:47.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.269" level="INFO">VALUE: [4.030600000000037e-05, 5.1708000000001e-05, 5.082000000000003e-05, 5.362499999999812e-05, 5.7500000000001994e-05, 5.2679999999999394e-05, 5.463899999999869e-05, 5.455599999999727e-05, 5.177699999999938e-05, 5.456900000000084e-05, 5.654100000000023e-05, 5.259700000000145e-05, 5.179200000000189e-05, 5.363899999999769e-05, 5.275000000000071e-05, 5.172300000000005e-05, 5.08469999999997e-05, 5.6569999999998843e-05, 5.265299999999973e-05, 5.369499999999944e-05, 5.369499999999944e-05, 5.362500000000159e-05, 5.559699999999751e-05, 5.2708000000002e-05, 5.463899999999869e-05, 5.1679999999998394e-05, 5.08339999999996e-05, 5.362499999999812e-05, 5.263900000000016e-05, 5.080600000000046e-05, 5.459699999999998e-05, 5.558400000000088e-05, 5.077699999999838e-05, 5.559800000000045e-05, 5.462500000000259e-05, 5.3735999999998674e-05, 5.26669999999993e-05, 5.5527999999999134e-05, 5.562500000000012e-05, 5.651300000000109e-05, 5.656899999999937e-05, 5.268100000000234e-05, 5.26669999999993e-05, 5.180599999999799e-05, 5.6528000000000134e-05, 5.2652000000000254e-05, 5.365300000000073e-05, 5.565299999999926e-05, 5.172200000000057e-05, 5.465300000000173e-05]</msg>
<status status="PASS" starttime="20201030 10:58:47.268" endtime="20201030 10:58:47.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.263" endtime="20201030 10:58:47.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:47.274" endtime="20201030 10:58:47.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.273" endtime="20201030 10:58:47.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.272" endtime="20201030 10:58:47.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.910" endtime="20201030 10:58:47.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.909" endtime="20201030 10:58:47.295"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.304" endtime="20201030 10:58:47.327"></status>
</kw>
<msg timestamp="20201030 10:58:47.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.302" endtime="20201030 10:58:47.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.329" endtime="20201030 10:58:47.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.331" endtime="20201030 10:58:47.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.300" endtime="20201030 10:58:47.334"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.297" endtime="20201030 10:58:47.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.341" endtime="20201030 10:58:47.626"></status>
</kw>
<msg timestamp="20201030 10:58:47.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025124056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02517, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:58:47.339" endtime="20201030 10:58:47.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025124056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02517, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:58:47.630" endtime="20201030 10:58:47.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.639" endtime="20201030 10:58:47.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.336" endtime="20201030 10:58:47.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.335" endtime="20201030 10:58:47.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:47.646" level="INFO">${RESULT} = [{'diff': 4.594400000000262e-05}, {'diff': 5.458399999999988e-05}, {'diff': 5.658300000000241e-05}, {'diff': 5.458300000000041e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.277700000000038e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:47.642" endtime="20201030 10:58:47.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:47.650" level="INFO">${ACCURACY} = {'diff': [4.594400000000262e-05, 5.458399999999988e-05, 5.658300000000241e-05, 5.458300000000041e-05, 5.5458000000001284e-05, 5.277700000000038e-05, 5.172200000000057e-05, 5.647300000000133e-05, 5.369...</msg>
<status status="PASS" starttime="20201030 10:58:47.647" endtime="20201030 10:58:47.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.654" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 10:58:47.653" endtime="20201030 10:58:47.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.657" level="INFO">VALUE: [4.594400000000262e-05, 5.458399999999988e-05, 5.658300000000241e-05, 5.458300000000041e-05, 5.5458000000001284e-05, 5.277700000000038e-05, 5.172200000000057e-05, 5.647300000000133e-05, 5.369499999999944e-05, 5.5541999999998704e-05, 5.265299999999973e-05, 5.4680000000001394e-05, 5.54869999999999e-05, 5.454099999999823e-05, 5.362500000000159e-05, 5.086099999999927e-05, 5.6499999999997524e-05, 5.26669999999993e-05, 5.661100000000155e-05, 5.16530000000022e-05, 5.559700000000098e-05, 5.073599999999914e-05, 5.6472000000001854e-05, 5.180600000000146e-05, 5.645900000000176e-05, 5.074999999999871e-05, 5.180600000000146e-05, 5.6499999999997524e-05, 5.272200000000157e-05, 5.558299999999794e-05, 5.072299999999905e-05, 5.081900000000056e-05, 5.551300000000009e-05, 5.074999999999871e-05, 5.456900000000084e-05, 5.2708000000002e-05, 5.6457999999998815e-05, 5.4735999999999674e-05, 5.6485999999997955e-05, 5.4680000000001394e-05, 5.173600000000014e-05, 5.64870000000009e-05, 5.468100000000087e-05, 5.5527999999999134e-05, 5.361099999999855e-05, 5.645899999999829e-05, 5.459699999999998e-05, 5.1679999999998394e-05, 5.083299999999666e-05, 5.5527999999999134e-05]</msg>
<status status="PASS" starttime="20201030 10:58:47.655" endtime="20201030 10:58:47.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.651" endtime="20201030 10:58:47.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:47.662" endtime="20201030 10:58:47.682"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.661" endtime="20201030 10:58:47.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.660" endtime="20201030 10:58:47.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.296" endtime="20201030 10:58:47.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.295" endtime="20201030 10:58:47.683"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.692" endtime="20201030 10:58:47.713"></status>
</kw>
<msg timestamp="20201030 10:58:47.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.690" endtime="20201030 10:58:47.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.715" endtime="20201030 10:58:47.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.717" endtime="20201030 10:58:47.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.688" endtime="20201030 10:58:47.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.686" endtime="20201030 10:58:47.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.726" endtime="20201030 10:58:48.012"></status>
</kw>
<msg timestamp="20201030 10:58:48.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023798653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023864667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.725" endtime="20201030 10:58:48.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023798653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023864667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.016" endtime="20201030 10:58:48.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.025" endtime="20201030 10:58:48.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.722" endtime="20201030 10:58:48.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.721" endtime="20201030 10:58:48.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.031" level="INFO">${RESULT} = [{'diff': 6.601399999999966e-05}, {'diff': 5.65549999999998e-05}, {'diff': 5.547300000000033e-05}, {'diff': 5.273600000000114e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.262499999999712e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:48.028" endtime="20201030 10:58:48.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.036" level="INFO">${ACCURACY} = {'diff': [6.601399999999966e-05, 5.65549999999998e-05, 5.547300000000033e-05, 5.273600000000114e-05, 5.261100000000102e-05, 5.262499999999712e-05, 5.658299999999894e-05, 5.26669999999993e-05, 5.565299...</msg>
<status status="PASS" starttime="20201030 10:58:48.032" endtime="20201030 10:58:48.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.041" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.040" endtime="20201030 10:58:48.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.043" level="INFO">VALUE: [6.601399999999966e-05, 5.65549999999998e-05, 5.547300000000033e-05, 5.273600000000114e-05, 5.261100000000102e-05, 5.262499999999712e-05, 5.658299999999894e-05, 5.26669999999993e-05, 5.565299999999926e-05, 5.073600000000261e-05, 5.362500000000159e-05, 5.263900000000016e-05, 5.461099999999955e-05, 5.457000000000031e-05, 5.070899999999948e-05, 5.275000000000071e-05, 5.744499999999972e-05, 5.370899999999901e-05, 5.6486000000001424e-05, 5.6500000000000994e-05, 5.086099999999927e-05, 5.169400000000143e-05, 5.180600000000146e-05, 5.359699999999898e-05, 5.658299999999894e-05, 5.0723000000002516e-05, 5.4735999999999674e-05, 5.6443999999999245e-05, 5.5527999999999134e-05, 5.373600000000214e-05, 5.263900000000016e-05, 5.181899999999809e-05, 5.361100000000202e-05, 5.273600000000114e-05, 4.979099999999695e-05, 5.168099999999787e-05, 5.081899999999709e-05, 5.1665999999998824e-05, 5.081900000000056e-05, 5.263900000000016e-05, 5.165299999999873e-05, 5.658400000000188e-05, 5.072199999999957e-05, 5.359800000000192e-05, 5.562500000000012e-05, 5.6485999999997955e-05, 5.180499999999852e-05, 5.161199999999949e-05, 5.076400000000175e-05, 5.6541999999999704e-05]</msg>
<status status="PASS" starttime="20201030 10:58:48.042" endtime="20201030 10:58:48.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.037" endtime="20201030 10:58:48.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.048" endtime="20201030 10:58:48.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.047" endtime="20201030 10:58:48.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.046" endtime="20201030 10:58:48.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.684" endtime="20201030 10:58:48.069"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.684" endtime="20201030 10:58:48.069"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.078" endtime="20201030 10:58:48.101"></status>
</kw>
<msg timestamp="20201030 10:58:48.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.076" endtime="20201030 10:58:48.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.103" endtime="20201030 10:58:48.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.105" endtime="20201030 10:58:48.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.074" endtime="20201030 10:58:48.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.071" endtime="20201030 10:58:48.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.114" endtime="20201030 10:58:48.403"></status>
</kw>
<msg timestamp="20201030 10:58:48.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024961014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02500125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:48.113" endtime="20201030 10:58:48.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024961014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02500125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:48.407" endtime="20201030 10:58:48.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.415" endtime="20201030 10:58:48.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.110" endtime="20201030 10:58:48.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.108" endtime="20201030 10:58:48.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.422" level="INFO">${RESULT} = [{'diff': 4.023599999999905e-05}, {'diff': 5.359799999999845e-05}, {'diff': 5.562500000000012e-05}, {'diff': 5.074999999999871e-05}, {'diff': 5.463899999999869e-05}, {'diff': 5.5513999999999564e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:48.419" endtime="20201030 10:58:48.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.426" level="INFO">${ACCURACY} = {'diff': [4.023599999999905e-05, 5.359799999999845e-05, 5.562500000000012e-05, 5.074999999999871e-05, 5.463899999999869e-05, 5.5513999999999564e-05, 5.08339999999996e-05, 5.455500000000127e-05, 5.2666...</msg>
<status status="PASS" starttime="20201030 10:58:48.423" endtime="20201030 10:58:48.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.430" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.429" endtime="20201030 10:58:48.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.433" level="INFO">VALUE: [4.023599999999905e-05, 5.359799999999845e-05, 5.562500000000012e-05, 5.074999999999871e-05, 5.463899999999869e-05, 5.5513999999999564e-05, 5.08339999999996e-05, 5.455500000000127e-05, 5.26669999999993e-05, 5.4651999999998785e-05, 5.2665999999999824e-05, 5.647299999999786e-05, 5.363900000000116e-05, 5.06530000000012e-05, 5.362500000000159e-05, 5.6541999999999704e-05, 5.359799999999845e-05, 5.5541999999998704e-05, 5.556900000000184e-05, 5.5513999999999564e-05, 5.4665999999998355e-05, 5.263900000000016e-05, 5.4652000000002254e-05, 5.0736999999998617e-05, 5.6415999999996636e-05, 5.184800000000017e-05, 5.5527999999999134e-05, 5.6528000000000134e-05, 5.074999999999871e-05, 5.266700000000277e-05, 5.562500000000012e-05, 5.457000000000031e-05, 5.177699999999938e-05, 5.368099999999987e-05, 5.3652000000001254e-05, 5.079199999999742e-05, 5.363899999999769e-05, 5.2735999999997674e-05, 5.6472000000001854e-05, 5.4651999999998785e-05, 5.355599999999974e-05, 5.079199999999742e-05, 5.076400000000175e-05, 5.6569999999998843e-05, 5.459699999999998e-05, 5.263900000000016e-05, 5.563899999999969e-05, 5.458300000000041e-05, 5.4651999999998785e-05, 5.461099999999955e-05]</msg>
<status status="PASS" starttime="20201030 10:58:48.431" endtime="20201030 10:58:48.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.427" endtime="20201030 10:58:48.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.495" endtime="20201030 10:58:48.514"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.493" endtime="20201030 10:58:48.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.492" endtime="20201030 10:58:48.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.070" endtime="20201030 10:58:48.515"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.069" endtime="20201030 10:58:48.516"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.524" endtime="20201030 10:58:48.553"></status>
</kw>
<msg timestamp="20201030 10:58:48.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.523" endtime="20201030 10:58:48.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.556" endtime="20201030 10:58:48.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.561" endtime="20201030 10:58:48.565"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.520" endtime="20201030 10:58:48.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.518" endtime="20201030 10:58:48.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.580" endtime="20201030 10:58:48.872"></status>
</kw>
<msg timestamp="20201030 10:58:48.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025452569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025518597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.577" endtime="20201030 10:58:48.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025452569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025518597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.877" endtime="20201030 10:58:48.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.885" endtime="20201030 10:58:48.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.572" endtime="20201030 10:58:48.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.568" endtime="20201030 10:58:48.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.892" level="INFO">${RESULT} = [{'diff': 6.602799999999923e-05}, {'diff': 5.465300000000173e-05}, {'diff': 5.558300000000141e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.565299999999926e-05}, {'diff': 5.6500000000000994e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:48.888" endtime="20201030 10:58:48.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.896" level="INFO">${ACCURACY} = {'diff': [6.602799999999923e-05, 5.465300000000173e-05, 5.558300000000141e-05, 5.265299999999973e-05, 5.565299999999926e-05, 5.6500000000000994e-05, 5.459699999999998e-05, 5.4666000000001824e-05, 5.08...</msg>
<status status="PASS" starttime="20201030 10:58:48.893" endtime="20201030 10:58:48.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.900" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.899" endtime="20201030 10:58:48.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.903" level="INFO">VALUE: [6.602799999999923e-05, 5.465300000000173e-05, 5.558300000000141e-05, 5.265299999999973e-05, 5.565299999999926e-05, 5.6500000000000994e-05, 5.459699999999998e-05, 5.4666000000001824e-05, 5.081900000000056e-05, 5.6472000000001854e-05, 5.5527999999999134e-05, 5.475000000000271e-05, 5.180599999999799e-05, 5.361099999999855e-05, 5.655600000000274e-05, 5.6500000000000994e-05, 5.3665999999997355e-05, 5.077799999999785e-05, 5.561100000000055e-05, 5.458399999999988e-05, 5.562500000000012e-05, 5.6499999999997524e-05, 5.379200000000042e-05, 5.180600000000146e-05, 5.368099999999987e-05, 5.173699999999962e-05, 5.080600000000046e-05, 5.179199999999842e-05, 5.6499999999997524e-05, 5.7528000000001134e-05, 4.987500000000131e-05, 5.2680000000002863e-05, 5.563899999999969e-05, 4.987499999999784e-05, 5.079100000000142e-05, 5.559700000000098e-05, 5.362499999999812e-05, 5.459699999999998e-05, 5.558300000000141e-05, 5.175000000000318e-05, 5.475000000000271e-05, 5.36670000000003e-05, 5.268099999999887e-05, 5.359700000000245e-05, 5.176399999999928e-05, 5.36670000000003e-05, 5.273600000000114e-05, 5.36670000000003e-05, 5.091699999999755e-05, 5.559700000000098e-05]</msg>
<status status="PASS" starttime="20201030 10:58:48.901" endtime="20201030 10:58:48.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.896" endtime="20201030 10:58:48.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.908" endtime="20201030 10:58:48.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.907" endtime="20201030 10:58:48.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.906" endtime="20201030 10:58:48.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.516" endtime="20201030 10:58:48.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.516" endtime="20201030 10:58:48.929"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.938" endtime="20201030 10:58:48.960"></status>
</kw>
<msg timestamp="20201030 10:58:48.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.936" endtime="20201030 10:58:48.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.961" endtime="20201030 10:58:48.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.964" endtime="20201030 10:58:48.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.934" endtime="20201030 10:58:48.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.931" endtime="20201030 10:58:48.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.973" endtime="20201030 10:58:49.260"></status>
</kw>
<msg timestamp="20201030 10:58:49.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023967514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024025986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.971" endtime="20201030 10:58:49.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023967514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024025986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.264" endtime="20201030 10:58:49.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.272" endtime="20201030 10:58:49.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.968" endtime="20201030 10:58:49.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.967" endtime="20201030 10:58:49.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:49.279" level="INFO">${RESULT} = [{'diff': 5.8472000000000385e-05}, {'diff': 5.65549999999998e-05}, {'diff': 5.6555999999999274e-05}, {'diff': 5.1693999999997964e-05}, {'diff': 5.080599999999699e-05}, {'diff': 5.180499999999852e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:49.276" endtime="20201030 10:58:49.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:49.284" level="INFO">${ACCURACY} = {'diff': [5.8472000000000385e-05, 5.65549999999998e-05, 5.6555999999999274e-05, 5.1693999999997964e-05, 5.080599999999699e-05, 5.180499999999852e-05, 5.172200000000057e-05, 5.177799999999885e-05, 5.08...</msg>
<status status="PASS" starttime="20201030 10:58:49.280" endtime="20201030 10:58:49.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.288" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 10:58:49.287" endtime="20201030 10:58:49.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.291" level="INFO">VALUE: [5.8472000000000385e-05, 5.65549999999998e-05, 5.6555999999999274e-05, 5.1693999999997964e-05, 5.080599999999699e-05, 5.180499999999852e-05, 5.172200000000057e-05, 5.177799999999885e-05, 5.084799999999917e-05, 5.174999999999971e-05, 5.076399999999828e-05, 5.176299999999981e-05, 5.074999999999871e-05, 5.652700000000066e-05, 5.083300000000013e-05, 5.461099999999955e-05, 5.177799999999885e-05, 5.365299999999726e-05, 5.6499999999997524e-05, 5.3693999999999964e-05, 5.459699999999998e-05, 5.275000000000071e-05, 5.2693999999998964e-05, 5.273600000000114e-05, 5.6500000000000994e-05, 5.457000000000031e-05, 5.6528000000000134e-05, 5.3666000000000824e-05, 5.465300000000173e-05, 5.5527999999999134e-05, 5.083300000000013e-05, 5.270899999999801e-05, 5.361100000000202e-05, 5.083300000000013e-05, 5.362500000000159e-05, 5.080600000000046e-05, 5.458399999999988e-05, 5.079199999999742e-05, 5.7457999999999815e-05, 5.273700000000062e-05, 5.6541999999999704e-05, 5.46809999999974e-05, 5.55280000000026e-05, 5.370899999999901e-05, 5.6514000000000564e-05, 5.459699999999998e-05, 5.170900000000048e-05, 5.554099999999923e-05, 5.561100000000055e-05, 5.176399999999928e-05]</msg>
<status status="PASS" starttime="20201030 10:58:49.289" endtime="20201030 10:58:49.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.285" endtime="20201030 10:58:49.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.296" endtime="20201030 10:58:49.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.294" endtime="20201030 10:58:49.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.293" endtime="20201030 10:58:49.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.930" endtime="20201030 10:58:49.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.929" endtime="20201030 10:58:49.316"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.325" endtime="20201030 10:58:49.347"></status>
</kw>
<msg timestamp="20201030 10:58:49.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.324" endtime="20201030 10:58:49.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.349" endtime="20201030 10:58:49.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.351" endtime="20201030 10:58:49.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.321" endtime="20201030 10:58:49.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.319" endtime="20201030 10:58:49.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.360" endtime="20201030 10:58:49.647"></status>
</kw>
<msg timestamp="20201030 10:58:49.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023295319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023391972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.358" endtime="20201030 10:58:49.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023295319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023391972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.651" endtime="20201030 10:58:49.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.660" endtime="20201030 10:58:49.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.356" endtime="20201030 10:58:49.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.354" endtime="20201030 10:58:49.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:49.667" level="INFO">${RESULT} = [{'diff': 9.66530000000021e-05}, {'diff': 8.611099999999983e-05}, {'diff': 8.518000000000067e-05}, {'diff': 8.713800000000049e-05}, {'diff': 8.427800000000013e-05}, {'diff': 8.13329999999994e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:49.664" endtime="20201030 10:58:49.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:49.671" level="INFO">${ACCURACY} = {'diff': [9.66530000000021e-05, 8.611099999999983e-05, 8.518000000000067e-05, 8.713800000000049e-05, 8.427800000000013e-05, 8.13329999999994e-05, 8.423599999999795e-05, 8.322300000000032e-05, 8.229099...</msg>
<status status="PASS" starttime="20201030 10:58:49.668" endtime="20201030 10:58:49.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.676" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 10:58:49.675" endtime="20201030 10:58:49.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.679" level="INFO">VALUE: [9.66530000000021e-05, 8.611099999999983e-05, 8.518000000000067e-05, 8.713800000000049e-05, 8.427800000000013e-05, 8.13329999999994e-05, 8.423599999999795e-05, 8.322300000000032e-05, 8.229099999999823e-05, 8.715299999999954e-05, 8.425000000000099e-05, 8.705500000000255e-05, 8.608400000000016e-05, 8.620800000000081e-05, 8.518000000000067e-05, 8.511099999999883e-05, 8.426400000000056e-05, 8.619399999999777e-05, 8.140300000000072e-05, 8.706899999999865e-05, 8.136200000000149e-05, 8.515199999999806e-05, 8.236099999999955e-05, 8.420799999999881e-05, 8.51119999999983e-05, 8.611099999999983e-05, 8.425000000000099e-05, 8.61249999999994e-05, 8.616599999999863e-05, 8.611099999999983e-05, 8.229200000000117e-05, 8.324999999999999e-05, 8.706900000000212e-05, 8.327799999999913e-05, 8.420800000000228e-05, 8.522199999999938e-05, 8.702799999999941e-05, 8.6153000000002e-05, 8.606899999999765e-05, 8.14170000000003e-05, 8.238900000000215e-05, 8.426400000000056e-05, 8.513899999999797e-05, 8.51669999999971e-05, 8.71120000000003e-05, 8.137500000000158e-05, 8.616700000000158e-05, 8.230600000000074e-05, 8.427700000000066e-05, 8.137500000000158e-05]</msg>
<status status="PASS" starttime="20201030 10:58:49.677" endtime="20201030 10:58:49.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.672" endtime="20201030 10:58:49.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.684" endtime="20201030 10:58:49.703"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.682" endtime="20201030 10:58:49.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.681" endtime="20201030 10:58:49.704"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.317" endtime="20201030 10:58:49.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.317" endtime="20201030 10:58:49.705"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.714" endtime="20201030 10:58:49.735"></status>
</kw>
<msg timestamp="20201030 10:58:49.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.712" endtime="20201030 10:58:49.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.736" endtime="20201030 10:58:49.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.739" endtime="20201030 10:58:49.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.710" endtime="20201030 10:58:49.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.707" endtime="20201030 10:58:49.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.749" endtime="20201030 10:58:50.035"></status>
</kw>
<msg timestamp="20201030 10:58:50.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.747" endtime="20201030 10:58:50.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.039" endtime="20201030 10:58:50.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.057" endtime="20201030 10:58:50.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.744" endtime="20201030 10:58:50.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.743" endtime="20201030 10:58:50.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.071" level="INFO">${RESULT} = [{'diff': 7.858400000000307e-05}, {'diff': 8.426299999999762e-05}, {'diff': 8.424999999999752e-05}, {'diff': 8.613800000000296e-05}, {'diff': 8.523699999999843e-05}, {'diff': 8.61660000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:50.064" endtime="20201030 10:58:50.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.081" level="INFO">${ACCURACY} = {'diff': [7.858400000000307e-05, 8.426299999999762e-05, 8.424999999999752e-05, 8.613800000000296e-05, 8.523699999999843e-05, 8.61660000000021e-05, 8.332000000000131e-05, 8.701399999999984e-05, 8.41949...</msg>
<status status="PASS" starttime="20201030 10:58:50.074" endtime="20201030 10:58:50.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.091" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.089" endtime="20201030 10:58:50.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.097" level="INFO">VALUE: [7.858400000000307e-05, 8.426299999999762e-05, 8.424999999999752e-05, 8.613800000000296e-05, 8.523699999999843e-05, 8.61660000000021e-05, 8.332000000000131e-05, 8.701399999999984e-05, 8.419499999999872e-05, 8.337500000000012e-05, 8.143099999999986e-05, 8.416699999999958e-05, 8.430600000000274e-05, 8.71250000000004e-05, 8.516700000000058e-05, 8.423600000000142e-05, 8.230600000000074e-05, 8.800000000000127e-05, 8.419400000000271e-05, 8.237499999999912e-05, 8.42919999999997e-05, 8.12910000000007e-05, 8.802700000000094e-05, 8.61669999999981e-05, 8.705499999999908e-05, 8.331899999999837e-05, 8.131899999999984e-05, 8.425000000000099e-05, 8.326399999999956e-05, 8.324999999999999e-05, 8.338899999999969e-05, 8.615299999999854e-05, 8.708299999999822e-05, 8.433299999999894e-05, 8.513899999999797e-05, 8.237500000000259e-05, 8.609700000000026e-05, 8.231900000000084e-05, 8.52920000000007e-05, 8.231900000000084e-05, 8.242999999999792e-05, 8.326399999999956e-05, 8.138899999999769e-05, 8.518100000000015e-05, 8.426399999999709e-05, 8.140300000000072e-05, 8.141600000000082e-05, 8.708300000000169e-05, 8.616700000000158e-05, 8.431899999999937e-05]</msg>
<status status="PASS" starttime="20201030 10:58:50.093" endtime="20201030 10:58:50.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.083" endtime="20201030 10:58:50.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.109" endtime="20201030 10:58:50.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.106" endtime="20201030 10:58:50.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.103" endtime="20201030 10:58:50.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.706" endtime="20201030 10:58:50.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.705" endtime="20201030 10:58:50.135"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.148" endtime="20201030 10:58:50.172"></status>
</kw>
<msg timestamp="20201030 10:58:50.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.147" endtime="20201030 10:58:50.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.173" endtime="20201030 10:58:50.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.176" endtime="20201030 10:58:50.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.144" endtime="20201030 10:58:50.178"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.140" endtime="20201030 10:58:50.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.185" endtime="20201030 10:58:50.472"></status>
</kw>
<msg timestamp="20201030 10:58:50.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032938458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033013097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.184" endtime="20201030 10:58:50.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032938458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033013097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.476" endtime="20201030 10:58:50.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.485" endtime="20201030 10:58:50.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.181" endtime="20201030 10:58:50.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.179" endtime="20201030 10:58:50.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.492" level="INFO">${RESULT} = [{'diff': 7.463900000000134e-05}, {'diff': 8.419400000000271e-05}, {'diff': 8.61799999999982e-05}, {'diff': 8.224999999999899e-05}, {'diff': 8.61249999999994e-05}, {'diff': 8.518000000000414e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:50.488" endtime="20201030 10:58:50.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.497" level="INFO">${ACCURACY} = {'diff': [7.463900000000134e-05, 8.419400000000271e-05, 8.61799999999982e-05, 8.224999999999899e-05, 8.61249999999994e-05, 8.518000000000414e-05, 8.423699999999396e-05, 8.13469999999955e-05, 8.3263999...</msg>
<status status="PASS" starttime="20201030 10:58:50.493" endtime="20201030 10:58:50.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.502" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.500" endtime="20201030 10:58:50.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.504" level="INFO">VALUE: [7.463900000000134e-05, 8.419400000000271e-05, 8.61799999999982e-05, 8.224999999999899e-05, 8.61249999999994e-05, 8.518000000000414e-05, 8.423699999999396e-05, 8.13469999999955e-05, 8.326399999999956e-05, 8.61249999999994e-05, 8.327799999999913e-05, 8.515299999999754e-05, 8.422200000000185e-05, 8.229099999999823e-05, 8.327799999999913e-05, 8.61249999999994e-05, 8.223599999999942e-05, 8.330600000000521e-05, 8.605600000000102e-05, 8.331899999999837e-05, 8.608300000000069e-05, 8.034800000000092e-05, 8.231899999999737e-05, 8.802800000000388e-05, 8.418100000000261e-05, 8.144399999999996e-05, 8.423599999999448e-05, 8.418099999999568e-05, 8.133300000000288e-05, 8.608300000000069e-05, 8.140300000000072e-05, 8.523600000000242e-05, 8.513899999999797e-05, 8.61799999999982e-05, 8.234700000000345e-05, 8.608299999999375e-05, 8.136200000000149e-05, 8.704099999999604e-05, 8.71250000000004e-05, 8.13469999999955e-05, 8.522199999999591e-05, 8.129200000000364e-05, 8.227799999999813e-05, 8.711100000000083e-05, 8.618099999999768e-05, 8.51249999999984e-05, 8.23469999999965e-05, 8.416700000000304e-05, 8.425000000000099e-05, 8.322200000000085e-05]</msg>
<status status="PASS" starttime="20201030 10:58:50.503" endtime="20201030 10:58:50.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.498" endtime="20201030 10:58:50.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.509" endtime="20201030 10:58:50.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.508" endtime="20201030 10:58:50.529"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.507" endtime="20201030 10:58:50.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.137" endtime="20201030 10:58:50.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.135" endtime="20201030 10:58:50.530"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.539" endtime="20201030 10:58:50.567"></status>
</kw>
<msg timestamp="20201030 10:58:50.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.538" endtime="20201030 10:58:50.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.569" endtime="20201030 10:58:50.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.571" endtime="20201030 10:58:50.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.535" endtime="20201030 10:58:50.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.533" endtime="20201030 10:58:50.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.581" endtime="20201030 10:58:50.868"></status>
</kw>
<msg timestamp="20201030 10:58:50.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025550431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025633722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.579" endtime="20201030 10:58:50.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025550431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025633722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.873" endtime="20201030 10:58:50.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.881" endtime="20201030 10:58:50.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.577" endtime="20201030 10:58:50.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.575" endtime="20201030 10:58:50.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.888" level="INFO">${RESULT} = [{'diff': 8.32910000000027e-05}, {'diff': 8.6153000000002e-05}, {'diff': 8.136099999999855e-05}, {'diff': 8.71250000000004e-05}, {'diff': 8.522299999999886e-05}, {'diff': 8.22919999999977e-05}, {'diff...</msg>
<status status="PASS" starttime="20201030 10:58:50.885" endtime="20201030 10:58:50.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.893" level="INFO">${ACCURACY} = {'diff': [8.32910000000027e-05, 8.6153000000002e-05, 8.136099999999855e-05, 8.71250000000004e-05, 8.522299999999886e-05, 8.22919999999977e-05, 8.326399999999956e-05, 8.23330000000004e-05, 8.5207999999...</msg>
<status status="PASS" starttime="20201030 10:58:50.889" endtime="20201030 10:58:50.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.897" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.896" endtime="20201030 10:58:50.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.900" level="INFO">VALUE: [8.32910000000027e-05, 8.6153000000002e-05, 8.136099999999855e-05, 8.71250000000004e-05, 8.522299999999886e-05, 8.22919999999977e-05, 8.326399999999956e-05, 8.23330000000004e-05, 8.520799999999981e-05, 8.33049999999988e-05, 8.61249999999994e-05, 8.609700000000026e-05, 8.61249999999994e-05, 8.51110000000023e-05, 8.336100000000055e-05, 8.41660000000001e-05, 8.240300000000172e-05, 8.412500000000087e-05, 8.32919999999987e-05, 8.133399999999888e-05, 8.231900000000084e-05, 8.430599999999927e-05, 8.319500000000118e-05, 8.230600000000074e-05, 8.134699999999898e-05, 8.619500000000072e-05, 8.51249999999984e-05, 8.599999999999927e-05, 8.131899999999984e-05, 8.332000000000131e-05, 8.51110000000023e-05, 8.134699999999898e-05, 8.413900000000044e-05, 8.140299999999726e-05, 8.334800000000045e-05, 8.611099999999983e-05, 8.227799999999813e-05, 8.426400000000056e-05, 8.508299999999969e-05, 8.329200000000217e-05, 8.22369999999989e-05, 8.424999999999752e-05, 8.322200000000085e-05, 8.519499999999972e-05, 8.71250000000004e-05, 8.797200000000213e-05, 8.520900000000275e-05, 8.319500000000118e-05, 8.425000000000099e-05, 8.318099999999815e-05]</msg>
<status status="PASS" starttime="20201030 10:58:50.898" endtime="20201030 10:58:50.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.894" endtime="20201030 10:58:50.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.905" endtime="20201030 10:58:50.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.904" endtime="20201030 10:58:50.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.902" endtime="20201030 10:58:50.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.531" endtime="20201030 10:58:50.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.531" endtime="20201030 10:58:50.926"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.935" endtime="20201030 10:58:50.955"></status>
</kw>
<msg timestamp="20201030 10:58:50.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.933" endtime="20201030 10:58:50.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.956" endtime="20201030 10:58:50.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.959" endtime="20201030 10:58:50.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.931" endtime="20201030 10:58:50.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.928" endtime="20201030 10:58:50.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.969" endtime="20201030 10:58:51.255"></status>
</kw>
<msg timestamp="20201030 10:58:51.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021641222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.967" endtime="20201030 10:58:51.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021641222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.259" endtime="20201030 10:58:51.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.268" endtime="20201030 10:58:51.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.964" endtime="20201030 10:58:51.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.963" endtime="20201030 10:58:51.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:51.275" level="INFO">${RESULT} = [{'diff': 9.188899999999778e-05}, {'diff': 8.704099999999951e-05}, {'diff': 8.334800000000045e-05}, {'diff': 8.320900000000075e-05}, {'diff': 8.140300000000072e-05}, {'diff': 8.125000000000146e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:51.272" endtime="20201030 10:58:51.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:51.279" level="INFO">${ACCURACY} = {'diff': [9.188899999999778e-05, 8.704099999999951e-05, 8.334800000000045e-05, 8.320900000000075e-05, 8.140300000000072e-05, 8.125000000000146e-05, 8.426400000000056e-05, 8.606899999999765e-05, 8.5235...</msg>
<status status="PASS" starttime="20201030 10:58:51.276" endtime="20201030 10:58:51.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.284" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 10:58:51.283" endtime="20201030 10:58:51.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.287" level="INFO">VALUE: [9.188899999999778e-05, 8.704099999999951e-05, 8.334800000000045e-05, 8.320900000000075e-05, 8.140300000000072e-05, 8.125000000000146e-05, 8.426400000000056e-05, 8.606899999999765e-05, 8.523599999999895e-05, 8.418099999999915e-05, 8.609699999999679e-05, 8.430600000000274e-05, 8.333400000000088e-05, 8.320800000000128e-05, 8.43049999999998e-05, 8.319399999999824e-05, 8.420799999999881e-05, 8.51110000000023e-05, 8.420899999999829e-05, 8.509699999999926e-05, 8.5153000000001e-05, 8.425000000000099e-05, 8.234699999999998e-05, 8.138900000000115e-05, 8.143000000000039e-05, 8.236099999999955e-05, 8.240200000000225e-05, 8.612500000000287e-05, 8.324999999999999e-05, 8.324999999999999e-05, 8.423600000000142e-05, 8.523599999999895e-05, 8.326399999999956e-05, 8.51799999999972e-05, 8.804100000000051e-05, 8.709700000000126e-05, 8.229200000000117e-05, 8.715299999999954e-05, 8.222199999999985e-05, 8.522200000000285e-05, 8.036199999999702e-05, 8.42370000000009e-05, 8.60980000000032e-05, 8.31659999999991e-05, 8.619400000000124e-05, 8.232000000000031e-05, 8.419499999999872e-05, 8.234699999999998e-05, 8.705499999999908e-05, 8.329200000000217e-05]</msg>
<status status="PASS" starttime="20201030 10:58:51.285" endtime="20201030 10:58:51.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.280" endtime="20201030 10:58:51.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:51.293" endtime="20201030 10:58:51.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.291" endtime="20201030 10:58:51.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.290" endtime="20201030 10:58:51.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.927" endtime="20201030 10:58:51.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.926" endtime="20201030 10:58:51.314"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.323" endtime="20201030 10:58:51.342"></status>
</kw>
<msg timestamp="20201030 10:58:51.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.321" endtime="20201030 10:58:51.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.343" endtime="20201030 10:58:51.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.346" endtime="20201030 10:58:51.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.318" endtime="20201030 10:58:51.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.316" endtime="20201030 10:58:51.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.355" endtime="20201030 10:58:51.641"></status>
</kw>
<msg timestamp="20201030 10:58:51.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020965597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021037431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.354" endtime="20201030 10:58:51.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020965597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021037431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.646" endtime="20201030 10:58:51.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.654" endtime="20201030 10:58:51.656"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.351" endtime="20201030 10:58:51.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.349" endtime="20201030 10:58:51.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:51.661" level="INFO">${RESULT} = [{'diff': 7.183399999999979e-05}, {'diff': 8.705599999999855e-05}, {'diff': 8.619500000000072e-05}, {'diff': 8.51249999999984e-05}, {'diff': 8.237500000000259e-05}, {'diff': 8.605499999999808e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:51.658" endtime="20201030 10:58:51.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:51.666" level="INFO">${ACCURACY} = {'diff': [7.183399999999979e-05, 8.705599999999855e-05, 8.619500000000072e-05, 8.51249999999984e-05, 8.237500000000259e-05, 8.605499999999808e-05, 8.701300000000037e-05, 8.802800000000041e-05, 8.61109...</msg>
<status status="PASS" starttime="20201030 10:58:51.662" endtime="20201030 10:58:51.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.671" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 10:58:51.670" endtime="20201030 10:58:51.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.674" level="INFO">VALUE: [7.183399999999979e-05, 8.705599999999855e-05, 8.619500000000072e-05, 8.51249999999984e-05, 8.237500000000259e-05, 8.605499999999808e-05, 8.701300000000037e-05, 8.802800000000041e-05, 8.611099999999983e-05, 8.225000000000246e-05, 8.236099999999955e-05, 8.606900000000112e-05, 8.713899999999997e-05, 8.224999999999899e-05, 8.520900000000275e-05, 8.226400000000203e-05, 8.33330000000014e-05, 8.4153e-05, 8.426400000000056e-05, 8.140200000000125e-05, 8.71250000000004e-05, 8.42919999999997e-05, 8.809700000000226e-05, 8.709700000000126e-05, 8.23330000000004e-05, 8.336100000000055e-05, 8.51249999999984e-05, 8.523599999999895e-05, 8.618099999999768e-05, 8.137499999999812e-05, 8.133300000000288e-05, 8.136099999999855e-05, 8.51660000000011e-05, 8.322200000000085e-05, 8.523600000000242e-05, 8.322200000000085e-05, 8.333299999999794e-05, 8.224999999999899e-05, 8.140300000000072e-05, 8.518000000000067e-05, 8.5153000000001e-05, 8.518100000000015e-05, 8.230500000000127e-05, 8.513900000000144e-05, 8.333299999999794e-05, 8.322199999999738e-05, 8.226400000000203e-05, 8.713899999999997e-05, 8.622200000000038e-05, 8.706899999999865e-05]</msg>
<status status="PASS" starttime="20201030 10:58:51.672" endtime="20201030 10:58:51.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.667" endtime="20201030 10:58:51.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:51.679" endtime="20201030 10:58:51.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.677" endtime="20201030 10:58:51.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.676" endtime="20201030 10:58:51.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.314" endtime="20201030 10:58:51.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.314" endtime="20201030 10:58:51.700"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.709" endtime="20201030 10:58:51.729"></status>
</kw>
<msg timestamp="20201030 10:58:51.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.707" endtime="20201030 10:58:51.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.731" endtime="20201030 10:58:51.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.734" endtime="20201030 10:58:51.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.705" endtime="20201030 10:58:51.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.702" endtime="20201030 10:58:51.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.743" endtime="20201030 10:58:52.034"></status>
</kw>
<msg timestamp="20201030 10:58:52.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021533056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.742" endtime="20201030 10:58:52.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021533056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:52.038" endtime="20201030 10:58:52.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.047" endtime="20201030 10:58:52.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.739" endtime="20201030 10:58:52.049"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.737" endtime="20201030 10:58:52.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:52.053" level="INFO">${RESULT} = [{'diff': 9.186199999999811e-05}, {'diff': 8.616700000000158e-05}, {'diff': 8.330600000000174e-05}, {'diff': 8.143000000000039e-05}, {'diff': 8.32780000000026e-05}, {'diff': 8.622200000000038e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:52.050" endtime="20201030 10:58:52.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:52.058" level="INFO">${ACCURACY} = {'diff': [9.186199999999811e-05, 8.616700000000158e-05, 8.330600000000174e-05, 8.143000000000039e-05, 8.32780000000026e-05, 8.622200000000038e-05, 8.33049999999988e-05, 8.13329999999994e-05, 8.3304999...</msg>
<status status="PASS" starttime="20201030 10:58:52.054" endtime="20201030 10:58:52.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.063" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 10:58:52.061" endtime="20201030 10:58:52.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.065" level="INFO">VALUE: [9.186199999999811e-05, 8.616700000000158e-05, 8.330600000000174e-05, 8.143000000000039e-05, 8.32780000000026e-05, 8.622200000000038e-05, 8.33049999999988e-05, 8.13329999999994e-05, 8.33049999999988e-05, 8.523600000000242e-05, 8.138799999999821e-05, 8.719399999999877e-05, 8.329200000000217e-05, 8.324999999999999e-05, 8.613899999999897e-05, 8.716599999999963e-05, 8.424999999999752e-05, 8.140300000000072e-05, 8.423600000000142e-05, 8.226399999999856e-05, 8.424999999999752e-05, 8.527800000000113e-05, 8.425000000000099e-05, 8.237499999999912e-05, 8.137499999999812e-05, 8.524999999999852e-05, 8.704200000000245e-05, 8.14170000000003e-05, 8.806999999999912e-05, 8.130599999999974e-05, 8.423600000000142e-05, 8.522199999999938e-05, 8.711100000000083e-05, 8.237499999999912e-05, 8.234700000000345e-05, 8.324999999999999e-05, 8.137500000000158e-05, 8.719500000000172e-05, 8.23330000000004e-05, 8.713899999999997e-05, 8.23330000000004e-05, 8.611099999999983e-05, 8.624999999999952e-05, 8.704199999999898e-05, 8.43469999999985e-05, 8.711100000000083e-05, 8.433399999999841e-05, 8.609700000000026e-05, 8.326399999999956e-05, 8.147299999999857e-05]</msg>
<status status="PASS" starttime="20201030 10:58:52.064" endtime="20201030 10:58:52.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.059" endtime="20201030 10:58:52.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.070" endtime="20201030 10:58:52.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.069" endtime="20201030 10:58:52.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.067" endtime="20201030 10:58:52.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.701" endtime="20201030 10:58:52.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.700" endtime="20201030 10:58:52.091"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.100" endtime="20201030 10:58:52.121"></status>
</kw>
<msg timestamp="20201030 10:58:52.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.099" endtime="20201030 10:58:52.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.123" endtime="20201030 10:58:52.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.125" endtime="20201030 10:58:52.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.096" endtime="20201030 10:58:52.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.094" endtime="20201030 10:58:52.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.135" endtime="20201030 10:58:52.422"></status>
</kw>
<msg timestamp="20201030 10:58:52.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:52.133" endtime="20201030 10:58:52.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:52.426" endtime="20201030 10:58:52.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.435" endtime="20201030 10:58:52.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.130" endtime="20201030 10:58:52.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.129" endtime="20201030 10:58:52.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:52.443" level="INFO">${RESULT} = [{'diff': 7.368099999999905e-05}, {'diff': 8.134699999999898e-05}, {'diff': 8.238900000000215e-05}, {'diff': 8.523599999999895e-05}, {'diff': 8.22910000000017e-05}, {'diff': 8.427800000000013e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:52.439" endtime="20201030 10:58:52.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:52.447" level="INFO">${ACCURACY} = {'diff': [7.368099999999905e-05, 8.134699999999898e-05, 8.238900000000215e-05, 8.523599999999895e-05, 8.22910000000017e-05, 8.427800000000013e-05, 8.331999999999784e-05, 8.329099999999923e-05, 8.42500...</msg>
<status status="PASS" starttime="20201030 10:58:52.444" endtime="20201030 10:58:52.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.452" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 10:58:52.451" endtime="20201030 10:58:52.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.455" level="INFO">VALUE: [7.368099999999905e-05, 8.134699999999898e-05, 8.238900000000215e-05, 8.523599999999895e-05, 8.22910000000017e-05, 8.427800000000013e-05, 8.331999999999784e-05, 8.329099999999923e-05, 8.425000000000099e-05, 8.327799999999913e-05, 8.51799999999972e-05, 8.234699999999998e-05, 8.798599999999823e-05, 8.138900000000115e-05, 8.616700000000158e-05, 8.327799999999913e-05, 8.716700000000258e-05, 8.143000000000039e-05, 8.320799999999781e-05, 8.426399999999709e-05, 8.340199999999978e-05, 8.522199999999938e-05, 8.22780000000016e-05, 8.434700000000198e-05, 8.320900000000075e-05, 8.143000000000039e-05, 8.136100000000202e-05, 8.134800000000192e-05, 8.240300000000172e-05, 8.130500000000027e-05, 8.719500000000172e-05, 8.518100000000015e-05, 8.147300000000204e-05, 8.32919999999987e-05, 8.526400000000156e-05, 8.427800000000013e-05, 8.425000000000099e-05, 8.230500000000127e-05, 8.333400000000088e-05, 8.238899999999869e-05, 8.511099999999883e-05, 8.613799999999949e-05, 8.1458000000003e-05, 8.71250000000004e-05, 8.423600000000142e-05, 8.708299999999822e-05, 8.722199999999791e-05, 8.423600000000142e-05, 8.141600000000082e-05, 8.71669999999991e-05]</msg>
<status status="PASS" starttime="20201030 10:58:52.453" endtime="20201030 10:58:52.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.448" endtime="20201030 10:58:52.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.461" endtime="20201030 10:58:52.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.459" endtime="20201030 10:58:52.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.458" endtime="20201030 10:58:52.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.092" endtime="20201030 10:58:52.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.092" endtime="20201030 10:58:52.481"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.491" endtime="20201030 10:58:52.513"></status>
</kw>
<msg timestamp="20201030 10:58:52.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.489" endtime="20201030 10:58:52.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.514" endtime="20201030 10:58:52.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.517" endtime="20201030 10:58:52.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.486" endtime="20201030 10:58:52.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.484" endtime="20201030 10:58:52.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.526" endtime="20201030 10:58:52.813"></status>
</kw>
<msg timestamp="20201030 10:58:52.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023774097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:52.525" endtime="20201030 10:58:52.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023675528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023774097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:52.817" endtime="20201030 10:58:52.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.826" endtime="20201030 10:58:52.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.522" endtime="20201030 10:58:52.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.520" endtime="20201030 10:58:52.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:52.832" level="INFO">${RESULT} = [{'diff': 9.856899999999974e-05}, {'diff': 8.329099999999923e-05}, {'diff': 8.237499999999912e-05}, {'diff': 8.230500000000127e-05}, {'diff': 8.520799999999981e-05}, {'diff': 8.420799999999881e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:52.829" endtime="20201030 10:58:52.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:52.838" level="INFO">${ACCURACY} = {'diff': [9.856899999999974e-05, 8.329099999999923e-05, 8.237499999999912e-05, 8.230500000000127e-05, 8.520799999999981e-05, 8.420799999999881e-05, 8.611099999999983e-05, 8.61799999999982e-05, 8.33330...</msg>
<status status="PASS" starttime="20201030 10:58:52.833" endtime="20201030 10:58:52.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.842" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 10:58:52.841" endtime="20201030 10:58:52.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.845" level="INFO">VALUE: [9.856899999999974e-05, 8.329099999999923e-05, 8.237499999999912e-05, 8.230500000000127e-05, 8.520799999999981e-05, 8.420799999999881e-05, 8.611099999999983e-05, 8.61799999999982e-05, 8.33330000000014e-05, 8.230600000000074e-05, 8.130500000000027e-05, 8.43469999999985e-05, 8.127799999999713e-05, 8.240299999999826e-05, 8.237499999999912e-05, 8.616700000000158e-05, 8.527800000000113e-05, 8.050000000000071e-05, 8.718100000000215e-05, 8.329099999999923e-05, 8.42919999999997e-05, 8.71799999999992e-05, 8.12910000000007e-05, 8.715299999999954e-05, 8.420800000000228e-05, 8.233399999999988e-05, 8.624999999999952e-05, 8.233399999999988e-05, 8.41660000000001e-05, 8.719499999999825e-05, 8.237499999999912e-05, 8.605600000000102e-05, 8.618100000000115e-05, 8.423599999999795e-05, 8.804099999999704e-05, 8.137500000000158e-05, 8.231900000000084e-05, 8.611099999999983e-05, 8.429100000000023e-05, 8.61669999999981e-05, 8.320900000000075e-05, 8.520799999999981e-05, 8.524999999999852e-05, 8.425000000000099e-05, 8.048599999999767e-05, 8.519499999999972e-05, 8.420800000000228e-05, 8.520800000000328e-05, 8.418099999999915e-05, 8.61669999999981e-05]</msg>
<status status="PASS" starttime="20201030 10:58:52.843" endtime="20201030 10:58:52.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.838" endtime="20201030 10:58:52.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.850" endtime="20201030 10:58:52.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.849" endtime="20201030 10:58:52.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.847" endtime="20201030 10:58:52.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.482" endtime="20201030 10:58:52.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.482" endtime="20201030 10:58:52.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.130" endtime="20201030 10:58:52.871"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:14.050" endtime="20201030 10:58:52.872" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:57:33.690" endtime="20201030 10:58:52.878"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.932" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:58:52.941" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:58:54.030" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:58:52.931" endtime="20201030 10:58:54.031"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.033" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:58:54.032" endtime="20201030 10:58:54.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.930" endtime="20201030 10:58:54.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:54.036" endtime="20201030 10:58:54.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.035" endtime="20201030 10:58:54.224"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.236" endtime="20201030 10:58:54.259"></status>
</kw>
<msg timestamp="20201030 10:58:54.260" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.235" endtime="20201030 10:58:54.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.261" endtime="20201030 10:58:54.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.266" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:54.264" endtime="20201030 10:58:54.266"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:54.232" endtime="20201030 10:58:54.267"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:54.230" endtime="20201030 10:58:54.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.229" endtime="20201030 10:58:54.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:54.272" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:54.271" endtime="20201030 10:58:54.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.269" endtime="20201030 10:58:54.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.228" endtime="20201030 10:58:54.273"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.227" endtime="20201030 10:58:54.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.273" endtime="20201030 10:58:54.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.226" endtime="20201030 10:58:54.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.276" endtime="20201030 10:58:54.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.225" endtime="20201030 10:58:54.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.928" endtime="20201030 10:58:54.279"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:54.285" endtime="20201030 10:58:54.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.284" endtime="20201030 10:58:54.306"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.319" endtime="20201030 10:58:54.341"></status>
</kw>
<msg timestamp="20201030 10:58:54.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.318" endtime="20201030 10:58:54.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.344" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.342" endtime="20201030 10:58:54.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.348" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:54.345" endtime="20201030 10:58:54.348"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:54.315" endtime="20201030 10:58:54.349"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:54.312" endtime="20201030 10:58:54.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.311" endtime="20201030 10:58:54.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:54.354" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:54.353" endtime="20201030 10:58:54.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.351" endtime="20201030 10:58:54.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.310" endtime="20201030 10:58:54.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.309" endtime="20201030 10:58:54.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.356" endtime="20201030 10:58:54.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.308" endtime="20201030 10:58:54.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.306" endtime="20201030 10:58:54.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.282" endtime="20201030 10:58:54.358"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.368" endtime="20201030 10:59:00.496"></status>
</kw>
<msg timestamp="20201030 10:59:00.497" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.366" endtime="20201030 10:59:00.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.503" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.499" endtime="20201030 10:59:00.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.505" endtime="20201030 10:59:00.508"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.363" endtime="20201030 10:59:00.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.361" endtime="20201030 10:59:00.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:00.516" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 10:59:00.512" endtime="20201030 10:59:00.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.526" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:00.524" endtime="20201030 10:59:00.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.531" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:00.529" endtime="20201030 10:59:00.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.518" endtime="20201030 10:59:00.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.541" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:00.539" endtime="20201030 10:59:00.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.546" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:00.544" endtime="20201030 10:59:00.547"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.534" endtime="20201030 10:59:00.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.556" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:00.554" endtime="20201030 10:59:00.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.561" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 10:59:00.559" endtime="20201030 10:59:00.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.549" endtime="20201030 10:59:00.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.578" endtime="20201030 10:59:00.888"></status>
</kw>
<msg timestamp="20201030 10:59:00.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076513472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.176518014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.574" endtime="20201030 10:59:00.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076513472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.176518014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.892" endtime="20201030 10:59:00.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.901" endtime="20201030 10:59:00.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.568" endtime="20201030 10:59:00.903"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.564" endtime="20201030 10:59:00.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:00.907" level="INFO">${FILTERED} = [{'diff': 0.100004542}, {'diff': 0.09999868}, {'diff': 0.099941361}, {'diff': 0.099971916}, {'diff': 0.09997193100000001}, {'diff': 0.09997199999999995}, {'diff': 0.09997181899999996}, {'diff': 0.0999...</msg>
<status status="PASS" starttime="20201030 10:59:00.904" endtime="20201030 10:59:00.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:00.912" level="INFO">${RESULT} = {'diff': [0.100004542, 0.09999868, 0.099941361, 0.099971916, 0.09997193100000001, 0.09997199999999995, 0.09997181899999996, 0.09997191699999997, 0.09997190300000003, 0.09997180499999991, 0.09997194399...</msg>
<status status="PASS" starttime="20201030 10:59:00.908" endtime="20201030 10:59:00.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.916" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:00.915" endtime="20201030 10:59:00.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.918" level="INFO">VALUE: [0.100004542, 0.09999868, 0.099941361, 0.099971916, 0.09997193100000001, 0.09997199999999995, 0.09997181899999996, 0.09997191699999997, 0.09997190300000003, 0.09997180499999991, 0.09997194399999998, 0.0999719160000001, 0.099971861, 0.09997192999999993, 0.09997192999999993, 0.099971861, 0.099971861, 0.09997194399999998, 0.099971861, 0.09997197200000008, 0.09997183299999968, 0.09997194399999998, 0.09997186100000022, 0.09997191699999997, 0.09997193000000015, 0.09997183300000012, 0.09997188899999987, 0.09997180500000002, 0.09997193000000015, 0.09997188899999987, 0.0999719859999999, 0.09997187500000004, 0.09997200000000017, 0.09997184699999995, 0.09997187500000004, 0.0999719579999998, 0.09997180500000002, 0.09997190300000014, 0.09997187500000004, 0.09997186099999977, 0.0999718749999996, 0.09997194500000006, 0.09997187500000049, 0.09997187500000049, 0.09997187500000049, 0.09997190300000014, 0.09997188899999987, 0.09997193099999979, 0.09997187500000049, 0.09997187500000049, 0.09997198700000087]</msg>
<status status="PASS" starttime="20201030 10:59:00.917" endtime="20201030 10:59:00.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.912" endtime="20201030 10:59:00.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.359" endtime="20201030 10:59:00.920"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:54.280" endtime="20201030 10:59:00.921" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:00.929" endtime="20201030 10:59:00.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.927" endtime="20201030 10:59:00.949"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.964" endtime="20201030 10:59:00.989"></status>
</kw>
<msg timestamp="20201030 10:59:00.989" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.962" endtime="20201030 10:59:00.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.992" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.990" endtime="20201030 10:59:00.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.995" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:00.993" endtime="20201030 10:59:00.995"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:00.959" endtime="20201030 10:59:00.996"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:00.957" endtime="20201030 10:59:00.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.955" endtime="20201030 10:59:00.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:01.001" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:01.000" endtime="20201030 10:59:01.001"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.998" endtime="20201030 10:59:01.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.954" endtime="20201030 10:59:01.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.953" endtime="20201030 10:59:01.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.003" endtime="20201030 10:59:01.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.952" endtime="20201030 10:59:01.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.950" endtime="20201030 10:59:01.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.926" endtime="20201030 10:59:01.006"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.015" endtime="20201030 10:59:07.142"></status>
</kw>
<msg timestamp="20201030 10:59:07.143" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.013" endtime="20201030 10:59:07.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.148" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.145" endtime="20201030 10:59:07.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.151" endtime="20201030 10:59:07.154"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.010" endtime="20201030 10:59:07.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.008" endtime="20201030 10:59:07.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:07.163" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 10:59:07.158" endtime="20201030 10:59:07.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.172" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:07.170" endtime="20201030 10:59:07.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.177" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:07.174" endtime="20201030 10:59:07.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.165" endtime="20201030 10:59:07.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.183" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:07.181" endtime="20201030 10:59:07.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.185" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:07.184" endtime="20201030 10:59:07.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.178" endtime="20201030 10:59:07.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.190" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:07.189" endtime="20201030 10:59:07.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.192" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 10:59:07.191" endtime="20201030 10:59:07.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.187" endtime="20201030 10:59:07.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.200" endtime="20201030 10:59:07.495"></status>
</kw>
<msg timestamp="20201030 10:59:07.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079908722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.180023333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.198" endtime="20201030 10:59:07.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079908722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.180023333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.499" endtime="20201030 10:59:07.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.508" endtime="20201030 10:59:07.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.196" endtime="20201030 10:59:07.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.194" endtime="20201030 10:59:07.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:07.515" level="INFO">${FILTERED} = [{'diff': 0.100114611}, {'diff': 0.10006104199999999}, {'diff': 0.09978188900000001}, {'diff': 0.10000238899999997}, {'diff': 0.09997186200000002}, {'diff': 0.09997191699999997}, {'diff': 0.099971861}...</msg>
<status status="PASS" starttime="20201030 10:59:07.511" endtime="20201030 10:59:07.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:07.519" level="INFO">${RESULT} = {'diff': [0.100114611, 0.10006104199999999, 0.09978188900000001, 0.10000238899999997, 0.09997186200000002, 0.09997191699999997, 0.099971861, 0.09997190300000003, 0.099971916, 0.09997186099999988, 0.09...</msg>
<status status="PASS" starttime="20201030 10:59:07.516" endtime="20201030 10:59:07.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.524" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:07.523" endtime="20201030 10:59:07.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.526" level="INFO">VALUE: [0.100114611, 0.10006104199999999, 0.09978188900000001, 0.10000238899999997, 0.09997186200000002, 0.09997191699999997, 0.099971861, 0.09997190300000003, 0.099971916, 0.09997186099999988, 0.09997187500000004, 0.09997190200000006, 0.09997194500000006, 0.09997181899999985, 0.09997202700000019, 0.09997183300000012, 0.09997192999999993, 0.09997190299999992, 0.09997188899999987, 0.09997186099999977, 0.09997183300000012, 0.09997191599999988, 0.09997187500000004, 0.09997191600000033, 0.09997191699999997, 0.09997186099999977, 0.09997184699999995, 0.09997186100000022, 0.09997190300000014, 0.09997191699999997, 0.09997190200000006, 0.09997188899999987, 0.09997197200000008, 0.09997180600000011, 0.09997190300000014, 0.09997188899999987, 0.09997187500000004, 0.09997184699999995, 0.09997190300000014, 0.0999719029999997, 0.09997186100000022, 0.09997191700000041, 0.09997193099999979, 0.09997190300000014, 0.0999718749999996, 0.0999718189999994, 0.0999720970000002, 0.09997179199999984, 0.09997183400000065, 0.09997188899999987, 0.09997188899999987]</msg>
<status status="PASS" starttime="20201030 10:59:07.525" endtime="20201030 10:59:07.527"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.519" endtime="20201030 10:59:07.528"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.006" endtime="20201030 10:59:07.528"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:00.923" endtime="20201030 10:59:07.529" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:07.538" endtime="20201030 10:59:07.557"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.536" endtime="20201030 10:59:07.558"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.572" endtime="20201030 10:59:07.594"></status>
</kw>
<msg timestamp="20201030 10:59:07.594" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.570" endtime="20201030 10:59:07.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.597" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.596" endtime="20201030 10:59:07.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.600" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:07.598" endtime="20201030 10:59:07.601"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:07.567" endtime="20201030 10:59:07.601"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:07.565" endtime="20201030 10:59:07.602"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.564" endtime="20201030 10:59:07.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:07.606" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:07.605" endtime="20201030 10:59:07.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.603" endtime="20201030 10:59:07.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.563" endtime="20201030 10:59:07.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.562" endtime="20201030 10:59:07.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.608" endtime="20201030 10:59:07.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.561" endtime="20201030 10:59:07.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.559" endtime="20201030 10:59:07.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.535" endtime="20201030 10:59:07.611"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.623" endtime="20201030 10:59:13.750"></status>
</kw>
<msg timestamp="20201030 10:59:13.751" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.618" endtime="20201030 10:59:13.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.757" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.753" endtime="20201030 10:59:13.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.759" endtime="20201030 10:59:13.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.616" endtime="20201030 10:59:13.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.613" endtime="20201030 10:59:13.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:13.771" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 10:59:13.767" endtime="20201030 10:59:13.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.780" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:13.778" endtime="20201030 10:59:13.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.785" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:13.783" endtime="20201030 10:59:13.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.773" endtime="20201030 10:59:13.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.795" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:13.793" endtime="20201030 10:59:13.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.800" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:13.798" endtime="20201030 10:59:13.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.788" endtime="20201030 10:59:13.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.810" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:13.808" endtime="20201030 10:59:13.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.815" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 10:59:13.813" endtime="20201030 10:59:13.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.803" endtime="20201030 10:59:13.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.831" endtime="20201030 10:59:14.131"></status>
</kw>
<msg timestamp="20201030 10:59:14.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077516875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.177733542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.828" endtime="20201030 10:59:14.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077516875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.177733542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.135" endtime="20201030 10:59:14.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.144" endtime="20201030 10:59:14.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.822" endtime="20201030 10:59:14.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.818" endtime="20201030 10:59:14.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:14.150" level="INFO">${FILTERED} = [{'diff': 0.100216667}, {'diff': 0.10006112500000003}, {'diff': 0.099686208}, {'diff': 0.10000234699999999}, {'diff': 0.09997190300000003}, {'diff': 0.09997183300000001}, {'diff': 0.09997191699999997}...</msg>
<status status="PASS" starttime="20201030 10:59:14.147" endtime="20201030 10:59:14.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:14.155" level="INFO">${RESULT} = {'diff': [0.100216667, 0.10006112500000003, 0.099686208, 0.10000234699999999, 0.09997190300000003, 0.09997183300000001, 0.09997191699999997, 0.09997191699999997, 0.099971861, 0.09997187499999993, 0.09...</msg>
<status status="PASS" starttime="20201030 10:59:14.151" endtime="20201030 10:59:14.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.160" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:14.159" endtime="20201030 10:59:14.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.162" level="INFO">VALUE: [0.100216667, 0.10006112500000003, 0.099686208, 0.10000234699999999, 0.09997190300000003, 0.09997183300000001, 0.09997191699999997, 0.09997191699999997, 0.099971861, 0.09997187499999993, 0.09997193100000001, 0.09997190299999992, 0.09997187500000004, 0.09997188899999987, 0.09997183399999998, 0.09997194500000006, 0.09997190300000014, 0.0999718329999999, 0.09997184700000017, 0.09997187499999982, 0.09997194500000006, 0.09997193000000015, 0.09997191699999997, 0.09997187500000004, 0.09997187500000004, 0.09997197200000008, 0.09997179199999984, 0.09997190300000014, 0.09997195900000033, 0.09997186099999977, 0.09997190300000014, 0.09997186199999986, 0.09997186099999977, 0.09997187500000004, 0.09997188899999987, 0.09997194399999998, 0.09997184699999995, 0.09997190200000006, 0.09997184699999995, 0.09997197200000008, 0.0999718620000003, 0.09997197200000052, 0.09997188899999987, 0.09997188899999987, 0.09997192999999971, 0.09997180600000011, 0.09997187500000049, 0.09997194399999998, 0.09997190300000014, 0.09997187500000049, 0.09997180600000011]</msg>
<status status="PASS" starttime="20201030 10:59:14.161" endtime="20201030 10:59:14.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.156" endtime="20201030 10:59:14.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.612" endtime="20201030 10:59:14.164"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:07.532" endtime="20201030 10:59:14.165" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:14.174" endtime="20201030 10:59:14.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.173" endtime="20201030 10:59:14.194"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.208" endtime="20201030 10:59:14.230"></status>
</kw>
<msg timestamp="20201030 10:59:14.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.206" endtime="20201030 10:59:14.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.233" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.232" endtime="20201030 10:59:14.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.237" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:14.234" endtime="20201030 10:59:14.237"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:14.204" endtime="20201030 10:59:14.238"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:14.201" endtime="20201030 10:59:14.239"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.200" endtime="20201030 10:59:14.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:14.243" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:14.242" endtime="20201030 10:59:14.243"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.240" endtime="20201030 10:59:14.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.199" endtime="20201030 10:59:14.244"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.198" endtime="20201030 10:59:14.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.245" endtime="20201030 10:59:14.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.197" endtime="20201030 10:59:14.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.195" endtime="20201030 10:59:14.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.171" endtime="20201030 10:59:14.248"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.257" endtime="20201030 10:59:20.381"></status>
</kw>
<msg timestamp="20201030 10:59:20.382" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.255" endtime="20201030 10:59:20.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.388" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.385" endtime="20201030 10:59:20.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.390" endtime="20201030 10:59:20.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.253" endtime="20201030 10:59:20.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.250" endtime="20201030 10:59:20.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:20.402" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 10:59:20.398" endtime="20201030 10:59:20.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.411" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:20.409" endtime="20201030 10:59:20.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.416" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:20.414" endtime="20201030 10:59:20.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.404" endtime="20201030 10:59:20.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.426" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:20.424" endtime="20201030 10:59:20.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.431" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:20.429" endtime="20201030 10:59:20.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.419" endtime="20201030 10:59:20.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.442" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:20.439" endtime="20201030 10:59:20.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.446" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 10:59:20.444" endtime="20201030 10:59:20.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.434" endtime="20201030 10:59:20.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.462" endtime="20201030 10:59:20.769"></status>
</kw>
<msg timestamp="20201030 10:59:20.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072992292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173356611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.459" endtime="20201030 10:59:20.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072992292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173356611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.774" endtime="20201030 10:59:20.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.782" endtime="20201030 10:59:20.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.453" endtime="20201030 10:59:20.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.449" endtime="20201030 10:59:20.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:20.789" level="INFO">${FILTERED} = [{'diff': 0.100364319}, {'diff': 0.100069139}, {'diff': 0.09952982000000005}, {'diff': 0.09997194399999998}, {'diff': 0.09997188899999998}, {'diff': 0.09997180500000002}, {'diff': 0.099971916}, {'diff...</msg>
<status status="PASS" starttime="20201030 10:59:20.786" endtime="20201030 10:59:20.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:20.793" level="INFO">${RESULT} = {'diff': [0.100364319, 0.100069139, 0.09952982000000005, 0.09997194399999998, 0.09997188899999998, 0.09997180500000002, 0.099971916, 0.09997198600000001, 0.09997181899999996, 0.09997184700000006, 0.09...</msg>
<status status="PASS" starttime="20201030 10:59:20.790" endtime="20201030 10:59:20.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.797" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:20.796" endtime="20201030 10:59:20.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.800" level="INFO">VALUE: [0.100364319, 0.100069139, 0.09952982000000005, 0.09997194399999998, 0.09997188899999998, 0.09997180500000002, 0.099971916, 0.09997198600000001, 0.09997181899999996, 0.09997184700000006, 0.09997190299999992, 0.09997197299999994, 0.09997190300000014, 0.099971861, 0.09997191699999997, 0.09997193099999979, 0.099971861, 0.09997195800000003, 0.09997181900000007, 0.09997190300000014, 0.09997197200000008, 0.09997191699999997, 0.09997192999999971, 0.09997177800000001, 0.0999719859999999, 0.09997183300000012, 0.09997187500000004, 0.09997186099999977, 0.09997188800000023, 0.0999718749999996, 0.09997198600000035, 0.09997190200000006, 0.09997191600000033, 0.09997193099999979, 0.09997187500000004, 0.09997188900000031, 0.09997191699999997, 0.09997184699999995, 0.09997187500000004, 0.09997188899999987, 0.09997188899999987, 0.09997200000000017, 0.09997177699999948, 0.09997188899999987, 0.09997187500000049, 0.09997191699999952, 0.09997183299999968, 0.09997188800000067, 0.09997193099999979, 0.09997188799999979, 0.09997188899999987]</msg>
<status status="PASS" starttime="20201030 10:59:20.798" endtime="20201030 10:59:20.800"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.794" endtime="20201030 10:59:20.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.249" endtime="20201030 10:59:20.802"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:14.168" endtime="20201030 10:59:20.803" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:20.812" endtime="20201030 10:59:20.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.810" endtime="20201030 10:59:20.832"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.846" endtime="20201030 10:59:20.867"></status>
</kw>
<msg timestamp="20201030 10:59:20.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.845" endtime="20201030 10:59:20.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.870" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.869" endtime="20201030 10:59:20.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.873" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:20.871" endtime="20201030 10:59:20.874"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:20.842" endtime="20201030 10:59:20.874"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:20.839" endtime="20201030 10:59:20.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.837" endtime="20201030 10:59:20.875"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:20.879" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:20.878" endtime="20201030 10:59:20.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.876" endtime="20201030 10:59:20.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.836" endtime="20201030 10:59:20.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.836" endtime="20201030 10:59:20.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.881" endtime="20201030 10:59:20.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.834" endtime="20201030 10:59:20.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.833" endtime="20201030 10:59:20.884"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.808" endtime="20201030 10:59:20.884"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.893" endtime="20201030 10:59:27.017"></status>
</kw>
<msg timestamp="20201030 10:59:27.018" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.891" endtime="20201030 10:59:27.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.024" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.021" endtime="20201030 10:59:27.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.026" endtime="20201030 10:59:27.030"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.889" endtime="20201030 10:59:27.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.887" endtime="20201030 10:59:27.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:27.038" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 10:59:27.035" endtime="20201030 10:59:27.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.047" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:27.045" endtime="20201030 10:59:27.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.052" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:27.050" endtime="20201030 10:59:27.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.040" endtime="20201030 10:59:27.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.063" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:27.060" endtime="20201030 10:59:27.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.067" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:27.065" endtime="20201030 10:59:27.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.055" endtime="20201030 10:59:27.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.072" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:27.070" endtime="20201030 10:59:27.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.075" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 10:59:27.073" endtime="20201030 10:59:27.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.068" endtime="20201030 10:59:27.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.083" endtime="20201030 10:59:27.380"></status>
</kw>
<msg timestamp="20201030 10:59:27.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07228225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172816042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:27.081" endtime="20201030 10:59:27.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07228225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172816042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:27.385" endtime="20201030 10:59:27.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.393" endtime="20201030 10:59:27.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.078" endtime="20201030 10:59:27.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.077" endtime="20201030 10:59:27.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:27.400" level="INFO">${FILTERED} = [{'diff': 0.100533792}, {'diff': 0.10007512500000001}, {'diff': 0.09935368099999997}, {'diff': 0.09997183399999998}, {'diff': 0.099971847}, {'diff': 0.09997191699999997}, {'diff': 0.09997188899999998}...</msg>
<status status="PASS" starttime="20201030 10:59:27.397" endtime="20201030 10:59:27.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:27.404" level="INFO">${RESULT} = {'diff': [0.100533792, 0.10007512500000001, 0.09935368099999997, 0.09997183399999998, 0.099971847, 0.09997191699999997, 0.09997188899999998, 0.09997187500000004, 0.09997193000000004, 0.099971861, 0.09...</msg>
<status status="PASS" starttime="20201030 10:59:27.401" endtime="20201030 10:59:27.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.408" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:27.407" endtime="20201030 10:59:27.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.412" level="INFO">VALUE: [0.100533792, 0.10007512500000001, 0.09935368099999997, 0.09997183399999998, 0.099971847, 0.09997191699999997, 0.09997188899999998, 0.09997187500000004, 0.09997193000000004, 0.099971861, 0.09997188900000009, 0.09997190299999992, 0.09997184700000017, 0.09997191599999988, 0.09997188900000009, 0.09997199999999995, 0.09997177699999993, 0.09997190300000014, 0.09997195900000011, 0.09997177800000001, 0.09997188899999987, 0.09997190300000014, 0.09997193000000015, 0.09997186099999977, 0.09997188900000031, 0.09997187500000004, 0.09997183300000012, 0.09997194499999962, 0.0999719029999997, 0.09997186100000022, 0.09997194500000006, 0.09997180500000002, 0.0999719579999998, 0.0999718190000003, 0.09997184699999995, 0.0999719859999999, 0.09997190300000014, 0.09997194399999998, 0.09997180500000002, 0.09997194399999998, 0.09997184699999995, 0.09997190300000014, 0.09997190300000014, 0.09997187500000049, 0.09997188799999979, 0.09997186100000022, 0.09997192999999971, 0.09997194500000006, 0.09997186100000022, 0.09997183299999968, 0.09997194399999998]</msg>
<status status="PASS" starttime="20201030 10:59:27.409" endtime="20201030 10:59:27.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.405" endtime="20201030 10:59:27.413"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.885" endtime="20201030 10:59:27.414"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:20.805" endtime="20201030 10:59:27.415" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:27.424" endtime="20201030 10:59:27.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.422" endtime="20201030 10:59:27.444"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.457" endtime="20201030 10:59:27.478"></status>
</kw>
<msg timestamp="20201030 10:59:27.479" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.456" endtime="20201030 10:59:27.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.481" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.480" endtime="20201030 10:59:27.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.484" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:27.482" endtime="20201030 10:59:27.485"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:27.453" endtime="20201030 10:59:27.485"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:27.450" endtime="20201030 10:59:27.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.449" endtime="20201030 10:59:27.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:27.490" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:27.489" endtime="20201030 10:59:27.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.487" endtime="20201030 10:59:27.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.448" endtime="20201030 10:59:27.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.448" endtime="20201030 10:59:27.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.492" endtime="20201030 10:59:27.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.446" endtime="20201030 10:59:27.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.444" endtime="20201030 10:59:27.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.420" endtime="20201030 10:59:27.495"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.506" endtime="20201030 10:59:33.635"></status>
</kw>
<msg timestamp="20201030 10:59:33.636" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.503" endtime="20201030 10:59:33.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.642" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.638" endtime="20201030 10:59:33.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.644" endtime="20201030 10:59:33.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.500" endtime="20201030 10:59:33.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.498" endtime="20201030 10:59:33.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:33.656" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 10:59:33.652" endtime="20201030 10:59:33.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.665" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:33.663" endtime="20201030 10:59:33.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.670" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 10:59:33.668" endtime="20201030 10:59:33.671"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.658" endtime="20201030 10:59:33.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.680" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 10:59:33.678" endtime="20201030 10:59:33.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.685" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 10:59:33.683" endtime="20201030 10:59:33.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.673" endtime="20201030 10:59:33.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.696" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 10:59:33.694" endtime="20201030 10:59:33.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.701" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 10:59:33.699" endtime="20201030 10:59:33.702"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.688" endtime="20201030 10:59:33.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.719" endtime="20201030 10:59:34.016"></status>
</kw>
<msg timestamp="20201030 10:59:34.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077031778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.177783694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:33.715" endtime="20201030 10:59:34.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077031778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.177783694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.020" endtime="20201030 10:59:34.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.029" endtime="20201030 10:59:34.030"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.709" endtime="20201030 10:59:34.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.705" endtime="20201030 10:59:34.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 10:59:34.035" level="INFO">${FILTERED} = [{'diff': 0.100751916}, {'diff': 0.10007155599999998}, {'diff': 0.10006495900000001}, {'diff': 0.09905194500000003}, {'diff': 0.099971806}, {'diff': 0.09997187500000004}, {'diff': 0.09997193100000001}...</msg>
<status status="PASS" starttime="20201030 10:59:34.032" endtime="20201030 10:59:34.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:34.041" level="INFO">${RESULT} = {'diff': [0.100751916, 0.10007155599999998, 0.10006495900000001, 0.09905194500000003, 0.099971806, 0.09997187500000004, 0.09997193100000001, 0.099971916, 0.09997184699999995, 0.09997193000000004, 0.09...</msg>
<status status="PASS" starttime="20201030 10:59:34.036" endtime="20201030 10:59:34.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.045" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 10:59:34.044" endtime="20201030 10:59:34.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.047" level="INFO">VALUE: [0.100751916, 0.10007155599999998, 0.10006495900000001, 0.09905194500000003, 0.099971806, 0.09997187500000004, 0.09997193100000001, 0.099971916, 0.09997184699999995, 0.09997193000000004, 0.09997179200000006, 0.09997199999999995, 0.09997183300000012, 0.0999718329999999, 0.09997198600000012, 0.09997176399999996, 0.09997194500000006, 0.09997187499999982, 0.09997182000000016, 0.09997194499999984, 0.09997194499999962, 0.09997186199999986, 0.09997191600000033, 0.0999719029999997, 0.09997188899999987, 0.09997191699999997, 0.09997197200000008, 0.09997180500000002, 0.09997183300000012, 0.09997191699999997, 0.09997191699999997, 0.09997186100000022, 0.09997197300000016, 0.0999718340000002, 0.09997195899999989, 0.09997187500000004, 0.09997194399999998, 0.09997183300000012, 0.09997186099999977, 0.09997187500000049, 0.0999719859999999, 0.09997192999999971, 0.09997179199999984, 0.09997200000000017, 0.0999718749999996, 0.09997194499999917, 0.09997187500000049, 0.09997184800000003, 0.09997191699999952, 0.09997188799999979, 0.09997191699999952]</msg>
<status status="PASS" starttime="20201030 10:59:34.046" endtime="20201030 10:59:34.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.041" endtime="20201030 10:59:34.049"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.496" endtime="20201030 10:59:34.049"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:27.418" endtime="20201030 10:59:34.050" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:58:52.888" endtime="20201030 10:59:34.059"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201030 10:56:49.064" endtime="20201030 10:59:34.092"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
